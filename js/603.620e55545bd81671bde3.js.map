{"version":3,"sources":["webpack://insights-inventory-frontend/./src/App.scss","webpack://insights-inventory-frontend/./src/App.js","webpack://insights-inventory-frontend/./src/Routes.js","webpack://insights-inventory-frontend/./src/components/PermissionsLoader.js","webpack://insights-inventory-frontend/./src/components/inventory/Advisor.js","webpack://insights-inventory-frontend/./src/components/inventory/Compliance.js","webpack://insights-inventory-frontend/./src/components/inventory/GeneralInfo.js","webpack://insights-inventory-frontend/./src/components/inventory/Vulnerability.js","webpack://insights-inventory-frontend/./src/config.js","webpack://insights-inventory-frontend/./src/constants.js","webpack://insights-inventory-frontend/./src/hooks/useInventoryWritePermissions.js","webpack://insights-inventory-frontend/./src/store/index.js","webpack://insights-inventory-frontend/./src/store/permissions/reducer.js","webpack://insights-inventory-frontend/./src/store/reducers.js","webpack://insights-inventory-frontend/./src/App.scss?75e2"],"names":["___CSS_LOADER_EXPORT___","i","push","module","id","history","useHistory","useEffect","insights","chrome","init","identifyApp","INVENTORY_ROOT","on","event","navId","location","search","hash","className","InventoryTable","lazy","InventoryDetail","routes","table","detail","Routes","getRegistry","useContext","RegistryContext","register","reducers","technology","app","pathName","window","pathname","split","searchParams","URLSearchParams","shift","Object","values","some","route","matchPath","href","path","document","baseURI","Suspense","fallback","Switch","Route","exact","render","status","getAll","source","filterbyName","tagsFilter","reduce","tagsMapper","page","perPage","rootClass","component","useInventoryWritePermissions","isLoading","hasAccess","dispatch","useDispatch","type","ACTION_TYPES","payload","writePermissions","Advisor","store","useStore","Compliance","params","useRouteMatch","customItnl","intlProps","locale","navigator","language","inventoryId","GeneralInformation","useSelector","permissionsReducer","useState","Fragment","Component","setComponent","React","Vulnerabilities","SystemCvesStore","customItnlProvider","entity","INVENTORY_API_BASE","asyncActions","flatMap","a","keyBy","k","CLEAR_NOTIFICATIONS","SELECT_ENTITY","SET_INVENTORY_FILTER","SET_PAGINATION","acc","curr","namespace","keyValue","key","value","currTagKey","findIndex","category","currTag","name","tagKey","group","label","usePermissions","middlewareListener","createContext","MiddlewareListener","middleware","ReducerRegistry","getMiddleware","promise","notificationsMiddleware","errorDescriptionKey","applyReducerHash","state","loadingFailed","loading","undefined","defaultState","loaded","selected","Map","isEntitled","service","sessionStorage","getItem","is_entitled","entitiesLoaded","rows","mergeArraysByKey","results","entities","entityLoaded","entitlements","activeApps","title","GeneralInformationTab","AdvisorTab","VulnerabilityTab","ComplianceTab","PatchMan","filter","Boolean","entitySelected","forEach","row","set","selectedRow","find","delete","clear","entityDeleted","meta","systems","onEntitiesLoaded","map","result","has","onSetFilter","activeFilters","filtersList","onSetPagination","parseInt","isNaN","notifications","notificationsReducer","systemProfileStore","SystemPackageListStore","SystemAdvisoryListStore","entitiesReducer","LOAD_ENTITIES_FULFILLED","entitesDetailReducer","update","hot","invalidate","oldLocals","accept","b","isNamedExport","p","isEqualLocals","dispose"],"mappings":"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","file":"js/603.620e55545bd81671bde3.js","sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_AT_RULE_IMPORT_0___ from \"-!../node_modules/css-loader/dist/cjs.js!../node_modules/@redhat-cloud-services/frontend-components/index.css\";\nimport ___CSS_LOADER_AT_RULE_IMPORT_1___ from \"-!../node_modules/css-loader/dist/cjs.js!../node_modules/@redhat-cloud-services/frontend-components-notifications/index.css\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_0___);\n___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_1___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".inventory{}.inventory button:focus{outline:none}.inventory table.ins-entity-table th{padding:1rem;padding-left:2rem}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/App.scss\"],\"names\":[],\"mappings\":\"AAAA,WAAU,CAAV,wBACiK,YAAY,CAD7K,qCACwM,YAAY,CAAC,iBAAiB\",\"sourcesContent\":[\".inventory{\\n@import url(~@redhat-cloud-services/frontend-components/index.css);@import url(~@redhat-cloud-services/frontend-components-notifications/index.css);button:focus{outline:none}table.ins-entity-table th{padding:1rem;padding-left:2rem}\\n\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import React, { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Routes } from './Routes';\nimport './App.scss';\nimport { INVENTORY_ROOT } from './config';\nimport { NotificationsPortal } from '@redhat-cloud-services/frontend-components-notifications/';\nimport PermissionLoader from './components/PermissionsLoader';\n\nconst App = () => {\n    const history = useHistory();\n    useEffect(() => {\n        insights.chrome.init();\n        insights.chrome.identifyApp(INVENTORY_ROOT);\n        return insights.chrome.on(\n            'APP_NAVIGATION',\n            event => history.push(`/${event.navId}${location.search}${location.hash}`)\n        );\n    }, []);\n\n    return (\n        <div className=\"inventory\">\n            <NotificationsPortal />\n            <PermissionLoader />\n            <Routes />\n        </div>\n    );\n};\n\nexport default App;\n","import { Route, Switch, matchPath, useHistory } from 'react-router-dom';\nimport React, { lazy, Suspense, useContext, useEffect } from 'react';\nimport { tagsMapper } from './constants';\nimport { reducers, RegistryContext } from './store';\n\nconst InventoryTable = lazy(() => import('./routes/InventoryTable'));\nconst InventoryDetail = lazy(() => import('./routes/InventoryDetail'));\n\nexport const routes = {\n    table: '/',\n    detail: '/:inventoryId'\n};\n\nfunction checkPaths(technology, app) {\n    return Object\n    .values(routes)\n    .some(\n        route => {\n            return matchPath(location.href, { path: `${document.baseURI}${technology}/${app}${route}` });\n        }\n    );\n}\n\nexport const Routes = () => {\n    const { getRegistry } = useContext(RegistryContext);\n    useEffect(() => {\n        getRegistry().register(reducers);\n    }, [getRegistry]);\n    const history = useHistory();\n    const pathName = window.location.pathname.split('/');\n    const searchParams = new URLSearchParams(location.search);\n    pathName.shift();\n\n    if (pathName[0] === 'beta') {\n        pathName.shift();\n    }\n\n    if (!checkPaths(pathName[0], pathName[1])) {\n        history.push(`${routes.table}${location.search}${location.hash}`);\n    }\n\n    return (\n        <Suspense fallback=\"\">\n            <Switch>\n                <Route\n                    exact\n                    path={routes.table}\n                    render={() => <InventoryTable\n                        status={searchParams.getAll('status')}\n                        source={searchParams.getAll('source')}\n                        filterbyName={searchParams.getAll('hostname_or_id')}\n                        tagsFilter={searchParams.getAll('tags')?.[0]?.split?.(',').reduce?.(tagsMapper, [])}\n                        page={searchParams.getAll('page')}\n                        perPage={searchParams.getAll('per_page')}\n                    />}\n                    rootClass='inventory'\n                />\n                <Route path={routes.detail} component={InventoryDetail} rootClass='inventory' />\n            </Switch>\n        </Suspense>\n    );\n};\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport useInventoryWritePermissions from '../hooks/useInventoryWritePermissions';\nimport { ACTION_TYPES } from '../constants';\n\nconst PermissionLoader = () => {\n    const { isLoading, hasAccess } = useInventoryWritePermissions();\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch({ type: `${ACTION_TYPES.LOAD_WRITE_PERMISSIONS}_PENDING` });\n    }, []);\n\n    useEffect(() => {\n        if (!isLoading) {\n            dispatch({ type: `${ACTION_TYPES.LOAD_WRITE_PERMISSIONS}_FULFILLED`, payload: { writePermissions: hasAccess } });\n        }\n    }, [isLoading]);\n\n    return null;\n};\n\nexport default PermissionLoader;\n","import React, { Suspense, lazy } from 'react';\nimport { useStore } from 'react-redux';\n\nconst Advisor = lazy(() => import('@redhat-cloud-services/frontend-components-inventory-insights/esm'));\n\nconst AdvisorTab = () => {\n    return <Suspense fallback=\"\">\n        <Advisor store={useStore()} />\n    </Suspense>;\n};\n\nexport default AdvisorTab;\n","import React, { lazy, Suspense } from 'react';\nimport { useRouteMatch } from 'react-router-dom';\n\nconst Compliance = lazy(() => import('@redhat-cloud-services/frontend-components-inventory-compliance/Compliance'));\n\nconst ComplianceTab = () => {\n    const { params } = useRouteMatch('/:inventoryId');\n\n    return (\n        <Suspense fallback=\"\">\n            <Compliance customItnl intlProps={{\n                locale: navigator.language\n            }} inventoryId={ params.inventoryId } />\n        </Suspense>\n    );\n};\n\nexport default ComplianceTab;\n","import React, { Suspense, lazy } from 'react';\nimport { useStore, useSelector } from 'react-redux';\n\nconst GeneralInformation = lazy(\n    () => import('@redhat-cloud-services/frontend-components-inventory-general-info/GeneralInformation')\n);\n\nconst GeneralInformationTab = () => {\n    const writePermissions = useSelector(\n        ({ permissionsReducer }) => permissionsReducer?.writePermissions\n    );\n\n    return <Suspense fallback=\"\">\n        <GeneralInformation store={useStore()} writePermissions={writePermissions} />\n    </Suspense>;\n};\n\nexport default GeneralInformationTab;\n","import React, { Suspense, useState, useEffect, Fragment, useContext } from 'react';\nimport '@redhat-cloud-services/frontend-components-inventory-vulnerabilities/dist/esm/index.css';\nimport { useRouteMatch } from 'react-router-dom';\nimport { RegistryContext } from '../../store';\n\nconst VulnerabilityTab = () => {\n    const [Component, setComponent] = useState(Fragment);\n    const { params } = useRouteMatch('/:inventoryId');\n\n    const { getRegistry } = useContext(RegistryContext);\n    useEffect(() => {\n        setComponent(() => React.lazy((async () => {\n            const Vulnerabilities = await import('@redhat-cloud-services/frontend-components-inventory-vulnerabilities/dist/esm');\n            const { SystemCvesStore } = Vulnerabilities;\n            getRegistry().register({ SystemCvesStore });\n            return Vulnerabilities;\n        })));\n    }, []);\n\n    return <Suspense>\n        <Component customItnlProvider entity={ { id: params.inventoryId } }/>\n    </Suspense>;\n};\n\nexport default VulnerabilityTab;\n","\nexport const INVENTORY_API_BASE = '/api/inventory/v1';\nexport const INVENTORY_ROOT = 'inventory';\n","import keyBy from 'lodash/keyBy';\nimport flatMap from 'lodash/flatMap';\n\nconst actions = [\n    'ALERT_ADD',\n    'ALERT_DISMISS',\n    'REMOVE_ENTITY'\n];\n\nconst asyncActions = flatMap([\n    'GET_ENTITIES',\n    'GET_ENTITY',\n    'UPDATE_DISPLAY_NAME',\n    'LOAD_WRITE_PERMISSIONS'\n], a => [a, `${a}_PENDING`, `${a}_FULFILLED`, `${a}_REJECTED`]);\n\nexport const ACTION_TYPES = keyBy([...actions, ...asyncActions], k => k);\nexport const CLEAR_NOTIFICATIONS = '@@INSIGHTS-CORE/NOTIFICATIONS/CLEAR_NOTIFICATIONS';\nexport const SELECT_ENTITY = 'SELECT_ENTITY';\nexport const SET_INVENTORY_FILTER = 'SET_INVENTORY_FILTER';\nexport const SET_PAGINATION = 'SET_PAGINATION';\n\nexport const tagsMapper = (acc, curr) => {\n    let [namespace, keyValue] = curr.split('/');\n    if (!keyValue) {\n        keyValue = namespace;\n        namespace = null;\n    }\n\n    const [key, value = null] = keyValue.split('=');\n    const currTagKey = acc.findIndex(({ category }) => category === namespace);\n    const currTag = acc[currTagKey] || {\n        category: namespace,\n        key: namespace,\n        type: 'tags',\n        values: []\n    };\n    currTag.values.push({\n        name: `${key}${value ? `=${value}` : ''}`,\n        key: `${key}${value ? `=${value}` : ''}`,\n        tagKey: key,\n        value,\n        group: {\n            label: namespace,\n            value: namespace,\n            type: 'checkbox'\n        }\n    });\n    if (!acc[currTagKey]) {\n        acc.push(currTag);\n    }\n\n    return acc;\n};\n","import { usePermissions } from '@redhat-cloud-services/frontend-components-utilities/RBACHook';\n\nconst useInventoryWritePermissions = () => {\n    const { hasAccess, ...rest } = usePermissions('inventory', [\n        'inventory:*:*',\n        'inventory:hosts:write',\n        'inventory:*:write'\n    ]);\n\n    return { ...rest, hasAccess };\n};\n\nexport default useInventoryWritePermissions;\n","\nimport { createContext } from 'react';\nimport MiddlewareListener from '@redhat-cloud-services/frontend-components-utilities/MiddlewareListener';\nimport { ReducerRegistry } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport notificationsMiddleware from '@redhat-cloud-services/frontend-components-notifications/notificationsMiddleware';\nimport promise  from 'redux-promise-middleware';\nexport { default as reducers, entitiesReducer, entitesDetailReducer } from './reducers';\n\nexport const RegistryContext = createContext({\n    getRegistry: () => {}\n});\n\nlet middlewareListener;\n\nexport function init (...middleware) {\n    middlewareListener = new MiddlewareListener();\n    return new ReducerRegistry(\n        {},\n        [\n            middlewareListener.getMiddleware(),\n            promise,\n            notificationsMiddleware({\n                errorDescriptionKey: ['detail', 'stack']\n            }),\n            ...middleware\n        ]\n    );\n}\n\nexport function addNewListener ({ actionType, callback }) {\n    return middlewareListener.addNew({\n        on: actionType,\n        callback\n    });\n}\n","import { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport { ACTION_TYPES } from '../../constants';\n\nconst loadWritePermissionsPending = (state) => ({\n    ...state,\n    loadingFailed: false,\n    loading: true,\n    writePermissions: undefined\n});\n\nconst loadWritePermissionsFulfilled = (state, { payload }) => ({\n    ...state,\n    loading: false,\n    loadingFailed: false,\n    writePermissions: payload.writePermissions\n});\n\nconst loadWritePermissionsFailed = (state) => ({\n    ...state,\n    loading: false,\n    loadingFailed: true\n});\n\nconst defaultPermissionState = {\n    loading: true,\n    writePermissions: false,\n    loadingFailed: false\n};\n\nconst permissionsReducer = applyReducerHash(\n    {\n        [`${ACTION_TYPES.LOAD_WRITE_PERMISSIONS}_PENDING`]: loadWritePermissionsPending,\n        [`${ACTION_TYPES.LOAD_WRITE_PERMISSIONS}_FULFILLED`]: loadWritePermissionsFulfilled,\n        [`${ACTION_TYPES.LOAD_WRITE_PERMISSIONS}_FAILED`]: loadWritePermissionsFailed\n    },\n    defaultPermissionState\n);\n\nexport default permissionsReducer;\n","import { ACTION_TYPES, SELECT_ENTITY, SET_INVENTORY_FILTER, SET_PAGINATION } from '../constants';\nimport systemProfileStore from '@redhat-cloud-services/frontend-components-inventory-general-info/redux';\nimport {\n    ComplianceTab,\n    VulnerabilityTab,\n    AdvisorTab,\n    GeneralInformationTab\n} from '../components/inventory';\nimport PatchMan, {\n    SystemPackageListStore,\n    SystemAdvisoryListStore\n} from '@redhat-cloud-services/frontend-components-inventory-patchman/dist/esm';\nimport { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport { mergeArraysByKey } from '@redhat-cloud-services/frontend-components-utilities/helpers';\nimport { notificationsReducer } from '@redhat-cloud-services/frontend-components-notifications/redux';\n\nimport permissionsReducer from './permissions/reducer';\n\nconst defaultState = { loaded: false, selected: new Map() };\n\nconst isEntitled = (service) => {\n    if (window.sessionStorage.getItem('disableEntitlements') === 'true') {\n        return true;\n    }\n\n    return service && service.is_entitled;\n};\n\nfunction entitiesLoaded(state, { payload }) {\n    return {\n        ...state,\n        rows: mergeArraysByKey([state.rows, payload.results]),\n        entities: mergeArraysByKey([state.entities, payload.results])\n    };\n}\n\nfunction entityLoaded(state, { payload: { entitlements } } = { payload: {} }) {\n    return {\n        ...state,\n        loaded: true,\n        activeApps: [\n            { title: 'General information', name: 'general_information', component: GeneralInformationTab },\n            isEntitled(entitlements && entitlements.insights) && { title: 'Advisor', name: 'advisor', component: AdvisorTab },\n            isEntitled(entitlements && entitlements.insights) && {\n                title: 'Vulnerability',\n                name: 'vulnerabilities',\n                component: VulnerabilityTab\n            },\n            isEntitled(entitlements && entitlements.insights) && {\n                title: 'Compliance',\n                name: 'compliance',\n                component: ComplianceTab\n            },\n            isEntitled(entitlements && entitlements.insights) && {\n                title: 'Patch',\n                name: 'patch',\n                component: PatchMan\n            }\n        ].filter(Boolean)\n    };\n}\n\nfunction entitySelected(state, { payload }) {\n    const selected = state.selected || (new Map());\n    if (payload.selected) {\n        if (payload.id === 0) {\n            state.rows.forEach(row => selected.set(row.id, row));\n        } else {\n            const selectedRow = state.rows && state.rows.find(({ id }) => id === payload.id);\n            selected.set(payload.id, { ...selectedRow || {}, id: payload.id });\n        }\n    } else {\n        if (payload.id === 0) {\n            state.rows.forEach(row => selected.delete(row.id));\n        } else if (payload.id === -1) {\n            selected.clear();\n        } else {\n            selected.delete(payload.id);\n        }\n    }\n\n    return {\n        ...state,\n        selected: new Map(selected)\n    };\n}\n\nfunction entityDeleted(state, { meta }) {\n    const selected = state.selected || (new Map());\n    meta.systems.forEach(id => selected.delete(id));\n\n    return {\n        ...state,\n        selected: new Map(selected)\n    };\n}\n\nfunction onEntitiesLoaded(state, { payload }) {\n    return {\n        ...state,\n        rows: mergeArraysByKey([state.rows, payload.results.map(result => {\n            return {\n                ...result,\n                selected: state.selected && state.selected.has(result.id)\n            };\n        })])\n    };\n}\n\nfunction onSetFilter(state, { payload }) {\n    return {\n        ...state,\n        activeFilters: payload.filtersList\n    };\n}\n\nfunction onSetPagination(state, { payload }) {\n    const perPage = parseInt(payload.perPage, 10);\n    const page = parseInt(payload.page, 10);\n    return {\n        ...state,\n        perPage: isNaN(perPage) ? 50 : perPage,\n        page: isNaN(page) ? 1 : page\n    };\n}\n\nlet reducers = {\n    notifications: notificationsReducer,\n    systemProfileStore,\n    permissionsReducer,\n    SystemPackageListStore,\n    SystemAdvisoryListStore\n};\n\nexport const entitiesReducer = ({ LOAD_ENTITIES_FULFILLED }) => applyReducerHash(\n    {\n        [ACTION_TYPES.GET_ENTITIES_FULFILLED]: entitiesLoaded,\n        [LOAD_ENTITIES_FULFILLED]: onEntitiesLoaded,\n        [`${ACTION_TYPES.REMOVE_ENTITY}_FULFILLED`]: entityDeleted,\n        [SELECT_ENTITY]: entitySelected,\n        FILTER_SELECT: (state) => ({ ...state, selected: {} }),\n        [SET_INVENTORY_FILTER]: onSetFilter,\n        [SET_PAGINATION]: onSetPagination\n    },\n    defaultState\n);\n\nexport const entitesDetailReducer = () => applyReducerHash(\n    {\n        [ACTION_TYPES.GET_ENTITY_FULFILLED]: entityLoaded\n    },\n    defaultState\n);\n\nexport default reducers;\n","import api from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../node_modules/css-loader/dist/cjs.js!../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../node_modules/sass-loader/dist/cjs.js!./App.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../node_modules/css-loader/dist/cjs.js!../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../node_modules/sass-loader/dist/cjs.js!./App.scss\",\n      function () {\n        if (!isEqualLocals(oldLocals, content.locals, undefined)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nexport default content.locals || {};"],"sourceRoot":""}