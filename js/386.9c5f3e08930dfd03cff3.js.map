{"version":3,"sources":["webpack://insights-inventory-frontend/./node_modules/marked/lib/marked.js","webpack://insights-inventory-frontend/./node_modules/sanitize-html/index.js"],"names":["module","exports","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_arrayLikeToArray","arr","len","arr2","Array","_createForOfIteratorHelperLoose","o","allowArrayLike","it","Symbol","iterator","isArray","minLen","n","prototype","toString","call","slice","constructor","name","from","test","_unsupportedIterableToArray","done","value","TypeError","next","bind","defaults","fn","createCommonjsModule","getDefaults","baseUrl","breaks","gfm","headerIds","headerPrefix","highlight","langPrefix","mangle","pedantic","renderer","sanitize","sanitizer","silent","smartLists","smartypants","tokenizer","walkTokens","xhtml","changeDefaults","newDefaults","escapeTest","escapeReplace","escapeTestNoEncode","escapeReplaceNoEncode","escapeReplacements","getEscapeReplacement","ch","unescapeTest","unescape","html","replace","_","toLowerCase","charAt","String","fromCharCode","parseInt","substring","caret","nonWordAndColonTest","originIndependentUrl","baseUrls","justDomain","protocol","domain","resolveUrl","base","href","rtrim","relativeBase","indexOf","str","c","invert","l","suffLen","currChar","substr","helpers","encode","regex","opt","source","obj","val","getRegex","RegExp","prot","decodeURIComponent","e","encodeURI","exec","arguments","hasOwnProperty","tableRow","count","cells","match","offset","escaped","curr","split","splice","push","trim","b","level","console","warn","pattern","result","defaults$1","rtrim$1","splitCells$1","_escape","findClosingBracket$1","outputLink","cap","link","raw","title","text","type","Tokenizer_1","Tokenizer","options","this","_proto","space","src","rules","block","newline","code","codeBlockStyle","fences","matchIndentToCode","indentToCode","map","node","matchIndentInNode","join","indentCodeCompensation","lang","heading","trimmed","depth","nptable","item","header","align","hr","blockquote","list","bcurr","bnext","addBack","loose","istask","ischecked","endMatch","bull","isordered","ordered","start","items","itemMatch","listItemStart","index","undefined","task","checked","pre","def","tag","table","lheading","paragraph","escape","inline","inLink","inRawBlock","trimmedUrl","rtrimSlash","lastParenIndex","linkLen","_escapes","reflink","links","nolink","emStrong","maskedSrc","prevChar","lDelim","nextChar","punctuation","rDelim","rLength","lLength","delimTotal","midDelimTotal","endReg","rDelimAst","rDelimUnd","lastIndex","Math","min","codespan","hasNonSpaceChars","hasSpaceCharsOnBothEnds","br","del","autolink","tokens","url","prevCapZero","_backpedal","inlineText","noopTest$1","edit$1","merge$1","_paragraph","_label","_title","bullet","_tag","_comment","normal","reflinkSearch","_punctuation","blockSkip","escapedEmSt","_scheme","_email","_attribute","_href","strong","middle","endAst","endUnd","em","_extended_email","defaults$2","block$1","inline$1","repeatString$1","out","charCodeAt","random","Lexer_1","Lexer","create","lex","lexInline","inlineTokens","Constructor","protoProps","staticProps","blockTokens","top","token","lastToken","errMsg","error","Error","j","k","l2","row","keepPrevChar","keys","includes","lastIndexOf","_lastToken","_lastToken2","get","defaults$3","cleanUrl$1","escape$1","Renderer_1","Renderer","_code","infostring","quote","_html","slugger","slug","body","listitem","checkbox","tablerow","content","tablecell","flags","image","_text","TextRenderer_1","TextRenderer","Slugger_1","Slugger","seen","serialize","getNextSafeSlug","originalSlug","isDryRun","occurenceAccumulator","dryrun","defaults$4","unescape$1","Parser_1","Parser","textRenderer","parse","parseInline","l3","cell","itemBody","unshift","merge$2","checkSanitizeDeprecation$1","escape$2","defaults$5","marked","callback","err","pending","setTimeout","_tokens","message","setOptions","use","extension","opts","_loop","prop","prevRenderer","_len","args","_key","ret","apply","_loop2","prevTokenizer","_len2","_key2","_step","_iterator","_step2","_iterator2","_step3","_iterator3","_step4","_iterator4","_cell","parser","lexer","factory","htmlparser","escapeStringRegexp","klona","isPlainObject","deepmerge","parseSrcset","postcssParse","mediaTags","vulnerableTags","each","cb","forEach","has","filter","a","v","sanitizeHtml","VALID_HTML_ATTRIBUTE_NAME","_recursing","tempResult","Frame","attribs","that","tagPosition","mediaChildren","updateParentNodeText","stack","updateParentNodeMediaChildren","assign","htmlParserDefaults","allowedTags","allowVulnerableTags","nonTextTagsArray","nonTextTags","allowedAttributesMap","allowedAttributesGlobMap","allowedAttributes","attributes","globRegex","allowedClassesMap","allowedClasses","classes","transformTagsMap","transformTagsAll","skipMap","transformMap","skipText","skipTextDepth","transformTags","transform","transFun","simpleTransform","addedText","initializeState","onopentag","enforceHtmlBoundary","frame","skip","hasText","transformedTag","innerText","tagName","disallowedTagsMode","isEmptyObject","nestingLimit","parsed","passedAllowedAttributesMapCheck","newValue","multiple","splitStrArray","s","values","allowedSchemesAppliedToAttributes","naughtyHref","allowed","startsWith","URL","hostname","allowIframeRelativeUrls","allowedIframeHostnames","allowedIframeDomains","allowedHostname","find","allowedDomain","endsWith","evil","part","w","h","d","allowedSpecificClasses","allowedWildcardClasses","clss","abstractSyntaxTree","filteredAST","allowedStyles","astRules","nodes","selectedRule","selector","reduce","allowedDeclarationsList","attributeObject","some","regularExpression","filterDeclarations","filterCss","extractedAttributes","escapeHtml","selfClosing","textFilter","ontext","lastFrame","onclosetag","pop","exclusiveFilter","write","end","decodeEntities","matches","allowProtocolRelative","scheme","allowedSchemesByTag","allowedSchemes","img","newTagName","newAttribs","merge","attrib"],"mappings":"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","file":"js/386.9c5f3e08930dfd03cff3.js","sourcesContent":["/**\n * marked - a markdown parser\n * Copyright (c) 2011-2021, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.marked = factory());\n}(this, (function () { 'use strict';\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n\n  function _createForOfIteratorHelperLoose(o, allowArrayLike) {\n    var it;\n\n    if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n      if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n        if (it) o = it;\n        var i = 0;\n        return function () {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        };\n      }\n\n      throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n    }\n\n    it = o[Symbol.iterator]();\n    return it.next.bind(it);\n  }\n\n  function createCommonjsModule(fn) {\n    var module = { exports: {} };\n  \treturn fn(module, module.exports), module.exports;\n  }\n\n  var defaults = createCommonjsModule(function (module) {\n    function getDefaults() {\n      return {\n        baseUrl: null,\n        breaks: false,\n        gfm: true,\n        headerIds: true,\n        headerPrefix: '',\n        highlight: null,\n        langPrefix: 'language-',\n        mangle: true,\n        pedantic: false,\n        renderer: null,\n        sanitize: false,\n        sanitizer: null,\n        silent: false,\n        smartLists: false,\n        smartypants: false,\n        tokenizer: null,\n        walkTokens: null,\n        xhtml: false\n      };\n    }\n\n    function changeDefaults(newDefaults) {\n      module.exports.defaults = newDefaults;\n    }\n\n    module.exports = {\n      defaults: getDefaults(),\n      getDefaults: getDefaults,\n      changeDefaults: changeDefaults\n    };\n  });\n\n  /**\n   * Helpers\n   */\n  var escapeTest = /[&<>\"']/;\n  var escapeReplace = /[&<>\"']/g;\n  var escapeTestNoEncode = /[<>\"']|&(?!#?\\w+;)/;\n  var escapeReplaceNoEncode = /[<>\"']|&(?!#?\\w+;)/g;\n  var escapeReplacements = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  var getEscapeReplacement = function getEscapeReplacement(ch) {\n    return escapeReplacements[ch];\n  };\n\n  function escape(html, encode) {\n    if (encode) {\n      if (escapeTest.test(html)) {\n        return html.replace(escapeReplace, getEscapeReplacement);\n      }\n    } else {\n      if (escapeTestNoEncode.test(html)) {\n        return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n      }\n    }\n\n    return html;\n  }\n\n  var unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\n\n  function unescape(html) {\n    // explicitly match decimal, hex, and named HTML entities\n    return html.replace(unescapeTest, function (_, n) {\n      n = n.toLowerCase();\n      if (n === 'colon') return ':';\n\n      if (n.charAt(0) === '#') {\n        return n.charAt(1) === 'x' ? String.fromCharCode(parseInt(n.substring(2), 16)) : String.fromCharCode(+n.substring(1));\n      }\n\n      return '';\n    });\n  }\n\n  var caret = /(^|[^\\[])\\^/g;\n\n  function edit(regex, opt) {\n    regex = regex.source || regex;\n    opt = opt || '';\n    var obj = {\n      replace: function replace(name, val) {\n        val = val.source || val;\n        val = val.replace(caret, '$1');\n        regex = regex.replace(name, val);\n        return obj;\n      },\n      getRegex: function getRegex() {\n        return new RegExp(regex, opt);\n      }\n    };\n    return obj;\n  }\n\n  var nonWordAndColonTest = /[^\\w:]/g;\n  var originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n\n  function cleanUrl(sanitize, base, href) {\n    if (sanitize) {\n      var prot;\n\n      try {\n        prot = decodeURIComponent(unescape(href)).replace(nonWordAndColonTest, '').toLowerCase();\n      } catch (e) {\n        return null;\n      }\n\n      if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n        return null;\n      }\n    }\n\n    if (base && !originIndependentUrl.test(href)) {\n      href = resolveUrl(base, href);\n    }\n\n    try {\n      href = encodeURI(href).replace(/%25/g, '%');\n    } catch (e) {\n      return null;\n    }\n\n    return href;\n  }\n\n  var baseUrls = {};\n  var justDomain = /^[^:]+:\\/*[^/]*$/;\n  var protocol = /^([^:]+:)[\\s\\S]*$/;\n  var domain = /^([^:]+:\\/*[^/]*)[\\s\\S]*$/;\n\n  function resolveUrl(base, href) {\n    if (!baseUrls[' ' + base]) {\n      // we can ignore everything in base after the last slash of its path component,\n      // but we might need to add _that_\n      // https://tools.ietf.org/html/rfc3986#section-3\n      if (justDomain.test(base)) {\n        baseUrls[' ' + base] = base + '/';\n      } else {\n        baseUrls[' ' + base] = rtrim(base, '/', true);\n      }\n    }\n\n    base = baseUrls[' ' + base];\n    var relativeBase = base.indexOf(':') === -1;\n\n    if (href.substring(0, 2) === '//') {\n      if (relativeBase) {\n        return href;\n      }\n\n      return base.replace(protocol, '$1') + href;\n    } else if (href.charAt(0) === '/') {\n      if (relativeBase) {\n        return href;\n      }\n\n      return base.replace(domain, '$1') + href;\n    } else {\n      return base + href;\n    }\n  }\n\n  var noopTest = {\n    exec: function noopTest() {}\n  };\n\n  function merge(obj) {\n    var i = 1,\n        target,\n        key;\n\n    for (; i < arguments.length; i++) {\n      target = arguments[i];\n\n      for (key in target) {\n        if (Object.prototype.hasOwnProperty.call(target, key)) {\n          obj[key] = target[key];\n        }\n      }\n    }\n\n    return obj;\n  }\n\n  function splitCells(tableRow, count) {\n    // ensure that every cell-delimiting pipe has a space\n    // before it to distinguish it from an escaped pipe\n    var row = tableRow.replace(/\\|/g, function (match, offset, str) {\n      var escaped = false,\n          curr = offset;\n\n      while (--curr >= 0 && str[curr] === '\\\\') {\n        escaped = !escaped;\n      }\n\n      if (escaped) {\n        // odd number of slashes means | is escaped\n        // so we leave it alone\n        return '|';\n      } else {\n        // add space before unescaped |\n        return ' |';\n      }\n    }),\n        cells = row.split(/ \\|/);\n    var i = 0;\n\n    if (cells.length > count) {\n      cells.splice(count);\n    } else {\n      while (cells.length < count) {\n        cells.push('');\n      }\n    }\n\n    for (; i < cells.length; i++) {\n      // leading or trailing whitespace is ignored per the gfm spec\n      cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n    }\n\n    return cells;\n  } // Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n  // /c*$/ is vulnerable to REDOS.\n  // invert: Remove suffix of non-c chars instead. Default falsey.\n\n\n  function rtrim(str, c, invert) {\n    var l = str.length;\n\n    if (l === 0) {\n      return '';\n    } // Length of suffix matching the invert condition.\n\n\n    var suffLen = 0; // Step left until we fail to match the invert condition.\n\n    while (suffLen < l) {\n      var currChar = str.charAt(l - suffLen - 1);\n\n      if (currChar === c && !invert) {\n        suffLen++;\n      } else if (currChar !== c && invert) {\n        suffLen++;\n      } else {\n        break;\n      }\n    }\n\n    return str.substr(0, l - suffLen);\n  }\n\n  function findClosingBracket(str, b) {\n    if (str.indexOf(b[1]) === -1) {\n      return -1;\n    }\n\n    var l = str.length;\n    var level = 0,\n        i = 0;\n\n    for (; i < l; i++) {\n      if (str[i] === '\\\\') {\n        i++;\n      } else if (str[i] === b[0]) {\n        level++;\n      } else if (str[i] === b[1]) {\n        level--;\n\n        if (level < 0) {\n          return i;\n        }\n      }\n    }\n\n    return -1;\n  }\n\n  function checkSanitizeDeprecation(opt) {\n    if (opt && opt.sanitize && !opt.silent) {\n      console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\n    }\n  } // copied from https://stackoverflow.com/a/5450113/806777\n\n\n  function repeatString(pattern, count) {\n    if (count < 1) {\n      return '';\n    }\n\n    var result = '';\n\n    while (count > 1) {\n      if (count & 1) {\n        result += pattern;\n      }\n\n      count >>= 1;\n      pattern += pattern;\n    }\n\n    return result + pattern;\n  }\n\n  var helpers = {\n    escape: escape,\n    unescape: unescape,\n    edit: edit,\n    cleanUrl: cleanUrl,\n    resolveUrl: resolveUrl,\n    noopTest: noopTest,\n    merge: merge,\n    splitCells: splitCells,\n    rtrim: rtrim,\n    findClosingBracket: findClosingBracket,\n    checkSanitizeDeprecation: checkSanitizeDeprecation,\n    repeatString: repeatString\n  };\n\n  var defaults$1 = defaults.defaults;\n  var rtrim$1 = helpers.rtrim,\n      splitCells$1 = helpers.splitCells,\n      _escape = helpers.escape,\n      findClosingBracket$1 = helpers.findClosingBracket;\n\n  function outputLink(cap, link, raw) {\n    var href = link.href;\n    var title = link.title ? _escape(link.title) : null;\n    var text = cap[1].replace(/\\\\([\\[\\]])/g, '$1');\n\n    if (cap[0].charAt(0) !== '!') {\n      return {\n        type: 'link',\n        raw: raw,\n        href: href,\n        title: title,\n        text: text\n      };\n    } else {\n      return {\n        type: 'image',\n        raw: raw,\n        href: href,\n        title: title,\n        text: _escape(text)\n      };\n    }\n  }\n\n  function indentCodeCompensation(raw, text) {\n    var matchIndentToCode = raw.match(/^(\\s+)(?:```)/);\n\n    if (matchIndentToCode === null) {\n      return text;\n    }\n\n    var indentToCode = matchIndentToCode[1];\n    return text.split('\\n').map(function (node) {\n      var matchIndentInNode = node.match(/^\\s+/);\n\n      if (matchIndentInNode === null) {\n        return node;\n      }\n\n      var indentInNode = matchIndentInNode[0];\n\n      if (indentInNode.length >= indentToCode.length) {\n        return node.slice(indentToCode.length);\n      }\n\n      return node;\n    }).join('\\n');\n  }\n  /**\n   * Tokenizer\n   */\n\n\n  var Tokenizer_1 = /*#__PURE__*/function () {\n    function Tokenizer(options) {\n      this.options = options || defaults$1;\n    }\n\n    var _proto = Tokenizer.prototype;\n\n    _proto.space = function space(src) {\n      var cap = this.rules.block.newline.exec(src);\n\n      if (cap) {\n        if (cap[0].length > 1) {\n          return {\n            type: 'space',\n            raw: cap[0]\n          };\n        }\n\n        return {\n          raw: '\\n'\n        };\n      }\n    };\n\n    _proto.code = function code(src) {\n      var cap = this.rules.block.code.exec(src);\n\n      if (cap) {\n        var text = cap[0].replace(/^ {1,4}/gm, '');\n        return {\n          type: 'code',\n          raw: cap[0],\n          codeBlockStyle: 'indented',\n          text: !this.options.pedantic ? rtrim$1(text, '\\n') : text\n        };\n      }\n    };\n\n    _proto.fences = function fences(src) {\n      var cap = this.rules.block.fences.exec(src);\n\n      if (cap) {\n        var raw = cap[0];\n        var text = indentCodeCompensation(raw, cap[3] || '');\n        return {\n          type: 'code',\n          raw: raw,\n          lang: cap[2] ? cap[2].trim() : cap[2],\n          text: text\n        };\n      }\n    };\n\n    _proto.heading = function heading(src) {\n      var cap = this.rules.block.heading.exec(src);\n\n      if (cap) {\n        var text = cap[2].trim(); // remove trailing #s\n\n        if (/#$/.test(text)) {\n          var trimmed = rtrim$1(text, '#');\n\n          if (this.options.pedantic) {\n            text = trimmed.trim();\n          } else if (!trimmed || / $/.test(trimmed)) {\n            // CommonMark requires space before trailing #s\n            text = trimmed.trim();\n          }\n        }\n\n        return {\n          type: 'heading',\n          raw: cap[0],\n          depth: cap[1].length,\n          text: text\n        };\n      }\n    };\n\n    _proto.nptable = function nptable(src) {\n      var cap = this.rules.block.nptable.exec(src);\n\n      if (cap) {\n        var item = {\n          type: 'table',\n          header: splitCells$1(cap[1].replace(/^ *| *\\| *$/g, '')),\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n          cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : [],\n          raw: cap[0]\n        };\n\n        if (item.header.length === item.align.length) {\n          var l = item.align.length;\n          var i;\n\n          for (i = 0; i < l; i++) {\n            if (/^ *-+: *$/.test(item.align[i])) {\n              item.align[i] = 'right';\n            } else if (/^ *:-+: *$/.test(item.align[i])) {\n              item.align[i] = 'center';\n            } else if (/^ *:-+ *$/.test(item.align[i])) {\n              item.align[i] = 'left';\n            } else {\n              item.align[i] = null;\n            }\n          }\n\n          l = item.cells.length;\n\n          for (i = 0; i < l; i++) {\n            item.cells[i] = splitCells$1(item.cells[i], item.header.length);\n          }\n\n          return item;\n        }\n      }\n    };\n\n    _proto.hr = function hr(src) {\n      var cap = this.rules.block.hr.exec(src);\n\n      if (cap) {\n        return {\n          type: 'hr',\n          raw: cap[0]\n        };\n      }\n    };\n\n    _proto.blockquote = function blockquote(src) {\n      var cap = this.rules.block.blockquote.exec(src);\n\n      if (cap) {\n        var text = cap[0].replace(/^ *> ?/gm, '');\n        return {\n          type: 'blockquote',\n          raw: cap[0],\n          text: text\n        };\n      }\n    };\n\n    _proto.list = function list(src) {\n      var cap = this.rules.block.list.exec(src);\n\n      if (cap) {\n        var raw = cap[0];\n        var bull = cap[2];\n        var isordered = bull.length > 1;\n        var list = {\n          type: 'list',\n          raw: raw,\n          ordered: isordered,\n          start: isordered ? +bull.slice(0, -1) : '',\n          loose: false,\n          items: []\n        }; // Get each top-level item.\n\n        var itemMatch = cap[0].match(this.rules.block.item);\n        var next = false,\n            item,\n            space,\n            bcurr,\n            bnext,\n            addBack,\n            loose,\n            istask,\n            ischecked,\n            endMatch;\n        var l = itemMatch.length;\n        bcurr = this.rules.block.listItemStart.exec(itemMatch[0]);\n\n        for (var i = 0; i < l; i++) {\n          item = itemMatch[i];\n          raw = item;\n\n          if (!this.options.pedantic) {\n            // Determine if current item contains the end of the list\n            endMatch = item.match(new RegExp('\\\\n\\\\s*\\\\n {0,' + (bcurr[0].length - 1) + '}\\\\S'));\n\n            if (endMatch) {\n              addBack = item.length - endMatch.index + itemMatch.slice(i + 1).join('\\n').length;\n              list.raw = list.raw.substring(0, list.raw.length - addBack);\n              item = item.substring(0, endMatch.index);\n              raw = item;\n              l = i + 1;\n            }\n          } // Determine whether the next list item belongs here.\n          // Backpedal if it does not belong in this list.\n\n\n          if (i !== l - 1) {\n            bnext = this.rules.block.listItemStart.exec(itemMatch[i + 1]);\n\n            if (!this.options.pedantic ? bnext[1].length >= bcurr[0].length || bnext[1].length > 3 : bnext[1].length > bcurr[1].length) {\n              // nested list or continuation\n              itemMatch.splice(i, 2, itemMatch[i] + (!this.options.pedantic && bnext[1].length < bcurr[0].length && !itemMatch[i].match(/\\n$/) ? '' : '\\n') + itemMatch[i + 1]);\n              i--;\n              l--;\n              continue;\n            } else if ( // different bullet style\n            !this.options.pedantic || this.options.smartLists ? bnext[2][bnext[2].length - 1] !== bull[bull.length - 1] : isordered === (bnext[2].length === 1)) {\n              addBack = itemMatch.slice(i + 1).join('\\n').length;\n              list.raw = list.raw.substring(0, list.raw.length - addBack);\n              i = l - 1;\n            }\n\n            bcurr = bnext;\n          } // Remove the list item's bullet\n          // so it is seen as the next token.\n\n\n          space = item.length;\n          item = item.replace(/^ *([*+-]|\\d+[.)]) ?/, ''); // Outdent whatever the\n          // list item contains. Hacky.\n\n          if (~item.indexOf('\\n ')) {\n            space -= item.length;\n            item = !this.options.pedantic ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '') : item.replace(/^ {1,4}/gm, '');\n          } // trim item newlines at end\n\n\n          item = rtrim$1(item, '\\n');\n\n          if (i !== l - 1) {\n            raw = raw + '\\n';\n          } // Determine whether item is loose or not.\n          // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n          // for discount behavior.\n\n\n          loose = next || /\\n\\n(?!\\s*$)/.test(raw);\n\n          if (i !== l - 1) {\n            next = raw.slice(-2) === '\\n\\n';\n            if (!loose) loose = next;\n          }\n\n          if (loose) {\n            list.loose = true;\n          } // Check for task list items\n\n\n          if (this.options.gfm) {\n            istask = /^\\[[ xX]\\] /.test(item);\n            ischecked = undefined;\n\n            if (istask) {\n              ischecked = item[1] !== ' ';\n              item = item.replace(/^\\[[ xX]\\] +/, '');\n            }\n          }\n\n          list.items.push({\n            type: 'list_item',\n            raw: raw,\n            task: istask,\n            checked: ischecked,\n            loose: loose,\n            text: item\n          });\n        }\n\n        return list;\n      }\n    };\n\n    _proto.html = function html(src) {\n      var cap = this.rules.block.html.exec(src);\n\n      if (cap) {\n        return {\n          type: this.options.sanitize ? 'paragraph' : 'html',\n          raw: cap[0],\n          pre: !this.options.sanitizer && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n          text: this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : _escape(cap[0]) : cap[0]\n        };\n      }\n    };\n\n    _proto.def = function def(src) {\n      var cap = this.rules.block.def.exec(src);\n\n      if (cap) {\n        if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n        var tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n        return {\n          tag: tag,\n          raw: cap[0],\n          href: cap[2],\n          title: cap[3]\n        };\n      }\n    };\n\n    _proto.table = function table(src) {\n      var cap = this.rules.block.table.exec(src);\n\n      if (cap) {\n        var item = {\n          type: 'table',\n          header: splitCells$1(cap[1].replace(/^ *| *\\| *$/g, '')),\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n          cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : []\n        };\n\n        if (item.header.length === item.align.length) {\n          item.raw = cap[0];\n          var l = item.align.length;\n          var i;\n\n          for (i = 0; i < l; i++) {\n            if (/^ *-+: *$/.test(item.align[i])) {\n              item.align[i] = 'right';\n            } else if (/^ *:-+: *$/.test(item.align[i])) {\n              item.align[i] = 'center';\n            } else if (/^ *:-+ *$/.test(item.align[i])) {\n              item.align[i] = 'left';\n            } else {\n              item.align[i] = null;\n            }\n          }\n\n          l = item.cells.length;\n\n          for (i = 0; i < l; i++) {\n            item.cells[i] = splitCells$1(item.cells[i].replace(/^ *\\| *| *\\| *$/g, ''), item.header.length);\n          }\n\n          return item;\n        }\n      }\n    };\n\n    _proto.lheading = function lheading(src) {\n      var cap = this.rules.block.lheading.exec(src);\n\n      if (cap) {\n        return {\n          type: 'heading',\n          raw: cap[0],\n          depth: cap[2].charAt(0) === '=' ? 1 : 2,\n          text: cap[1]\n        };\n      }\n    };\n\n    _proto.paragraph = function paragraph(src) {\n      var cap = this.rules.block.paragraph.exec(src);\n\n      if (cap) {\n        return {\n          type: 'paragraph',\n          raw: cap[0],\n          text: cap[1].charAt(cap[1].length - 1) === '\\n' ? cap[1].slice(0, -1) : cap[1]\n        };\n      }\n    };\n\n    _proto.text = function text(src) {\n      var cap = this.rules.block.text.exec(src);\n\n      if (cap) {\n        return {\n          type: 'text',\n          raw: cap[0],\n          text: cap[0]\n        };\n      }\n    };\n\n    _proto.escape = function escape(src) {\n      var cap = this.rules.inline.escape.exec(src);\n\n      if (cap) {\n        return {\n          type: 'escape',\n          raw: cap[0],\n          text: _escape(cap[1])\n        };\n      }\n    };\n\n    _proto.tag = function tag(src, inLink, inRawBlock) {\n      var cap = this.rules.inline.tag.exec(src);\n\n      if (cap) {\n        if (!inLink && /^<a /i.test(cap[0])) {\n          inLink = true;\n        } else if (inLink && /^<\\/a>/i.test(cap[0])) {\n          inLink = false;\n        }\n\n        if (!inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          inRawBlock = true;\n        } else if (inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          inRawBlock = false;\n        }\n\n        return {\n          type: this.options.sanitize ? 'text' : 'html',\n          raw: cap[0],\n          inLink: inLink,\n          inRawBlock: inRawBlock,\n          text: this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : _escape(cap[0]) : cap[0]\n        };\n      }\n    };\n\n    _proto.link = function link(src) {\n      var cap = this.rules.inline.link.exec(src);\n\n      if (cap) {\n        var trimmedUrl = cap[2].trim();\n\n        if (!this.options.pedantic && /^</.test(trimmedUrl)) {\n          // commonmark requires matching angle brackets\n          if (!/>$/.test(trimmedUrl)) {\n            return;\n          } // ending angle bracket cannot be escaped\n\n\n          var rtrimSlash = rtrim$1(trimmedUrl.slice(0, -1), '\\\\');\n\n          if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n            return;\n          }\n        } else {\n          // find closing parenthesis\n          var lastParenIndex = findClosingBracket$1(cap[2], '()');\n\n          if (lastParenIndex > -1) {\n            var start = cap[0].indexOf('!') === 0 ? 5 : 4;\n            var linkLen = start + cap[1].length + lastParenIndex;\n            cap[2] = cap[2].substring(0, lastParenIndex);\n            cap[0] = cap[0].substring(0, linkLen).trim();\n            cap[3] = '';\n          }\n        }\n\n        var href = cap[2];\n        var title = '';\n\n        if (this.options.pedantic) {\n          // split pedantic href and title\n          var link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n          if (link) {\n            href = link[1];\n            title = link[3];\n          }\n        } else {\n          title = cap[3] ? cap[3].slice(1, -1) : '';\n        }\n\n        href = href.trim();\n\n        if (/^</.test(href)) {\n          if (this.options.pedantic && !/>$/.test(trimmedUrl)) {\n            // pedantic allows starting angle bracket without ending angle bracket\n            href = href.slice(1);\n          } else {\n            href = href.slice(1, -1);\n          }\n        }\n\n        return outputLink(cap, {\n          href: href ? href.replace(this.rules.inline._escapes, '$1') : href,\n          title: title ? title.replace(this.rules.inline._escapes, '$1') : title\n        }, cap[0]);\n      }\n    };\n\n    _proto.reflink = function reflink(src, links) {\n      var cap;\n\n      if ((cap = this.rules.inline.reflink.exec(src)) || (cap = this.rules.inline.nolink.exec(src))) {\n        var link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n        link = links[link.toLowerCase()];\n\n        if (!link || !link.href) {\n          var text = cap[0].charAt(0);\n          return {\n            type: 'text',\n            raw: text,\n            text: text\n          };\n        }\n\n        return outputLink(cap, link, cap[0]);\n      }\n    };\n\n    _proto.emStrong = function emStrong(src, maskedSrc, prevChar) {\n      if (prevChar === void 0) {\n        prevChar = '';\n      }\n\n      var match = this.rules.inline.emStrong.lDelim.exec(src);\n      if (!match) return;\n      if (match[3] && prevChar.match(/(?:[0-9A-Za-z\\xAA\\xB2\\xB3\\xB5\\xB9\\xBA\\xBC-\\xBE\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0620-\\u064A\\u0660-\\u0669\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07C0-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08C7\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0966-\\u096F\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09E6-\\u09F1\\u09F4-\\u09F9\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A6F\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AE6-\\u0AEF\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B66-\\u0B6F\\u0B71-\\u0B77\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0BE6-\\u0BF2\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C66-\\u0C6F\\u0C78-\\u0C7E\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D04-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D58-\\u0D61\\u0D66-\\u0D78\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DE6-\\u0DEF\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F20-\\u0F33\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F-\\u1049\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u1090-\\u1099\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1369-\\u137C\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u17E0-\\u17E9\\u17F0-\\u17F9\\u1810-\\u1819\\u1820-\\u1878\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B50-\\u1B59\\u1B83-\\u1BA0\\u1BAE-\\u1BE5\\u1C00-\\u1C23\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5\\u1CF6\\u1CFA\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2070\\u2071\\u2074-\\u2079\\u207F-\\u2089\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2150-\\u2189\\u2460-\\u249B\\u24EA-\\u24FF\\u2776-\\u2793\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2CFD\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u3192-\\u3195\\u31A0-\\u31BF\\u31F0-\\u31FF\\u3220-\\u3229\\u3248-\\u324F\\u3251-\\u325F\\u3280-\\u3289\\u32B1-\\u32BF\\u3400-\\u4DBF\\u4E00-\\u9FFC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7BF\\uA7C2-\\uA7CA\\uA7F5-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA830-\\uA835\\uA840-\\uA873\\uA882-\\uA8B3\\uA8D0-\\uA8D9\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA8FE\\uA900-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF-\\uA9D9\\uA9E0-\\uA9E4\\uA9E6-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB69\\uAB70-\\uABE2\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD07-\\uDD33\\uDD40-\\uDD78\\uDD8A\\uDD8B\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE1-\\uDEFB\\uDF00-\\uDF23\\uDF2D-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC58-\\uDC76\\uDC79-\\uDC9E\\uDCA7-\\uDCAF\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDCFB-\\uDD1B\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBC-\\uDDCF\\uDDD2-\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE35\\uDE40-\\uDE48\\uDE60-\\uDE7E\\uDE80-\\uDE9F\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDEEB-\\uDEEF\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF58-\\uDF72\\uDF78-\\uDF91\\uDFA9-\\uDFAF]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2\\uDCFA-\\uDD23\\uDD30-\\uDD39\\uDE60-\\uDE7E\\uDE80-\\uDEA9\\uDEB0\\uDEB1\\uDF00-\\uDF27\\uDF30-\\uDF45\\uDF51-\\uDF54\\uDFB0-\\uDFCB\\uDFE0-\\uDFF6]|\\uD804[\\uDC03-\\uDC37\\uDC52-\\uDC6F\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD03-\\uDD26\\uDD36-\\uDD3F\\uDD44\\uDD47\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDD0-\\uDDDA\\uDDDC\\uDDE1-\\uDDF4\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDEF0-\\uDEF9\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC50-\\uDC59\\uDC5F-\\uDC61\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEAA\\uDEB8\\uDEC0-\\uDEC9\\uDF00-\\uDF1A\\uDF30-\\uDF3B]|\\uD806[\\uDC00-\\uDC2B\\uDCA0-\\uDCF2\\uDCFF-\\uDD06\\uDD09\\uDD0C-\\uDD13\\uDD15\\uDD16\\uDD18-\\uDD2F\\uDD3F\\uDD41\\uDD50-\\uDD59\\uDDA0-\\uDDA7\\uDDAA-\\uDDD0\\uDDE1\\uDDE3\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE89\\uDE9D\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC50-\\uDC6C\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46\\uDD50-\\uDD59\\uDD60-\\uDD65\\uDD67\\uDD68\\uDD6A-\\uDD89\\uDD98\\uDDA0-\\uDDA9\\uDEE0-\\uDEF2\\uDFB0\\uDFC0-\\uDFD4]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD822\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879\\uD880-\\uD883][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF5B-\\uDF61\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDE40-\\uDE96\\uDF00-\\uDF4A\\uDF50\\uDF93-\\uDF9F\\uDFE0\\uDFE1\\uDFE3]|\\uD821[\\uDC00-\\uDFF7]|\\uD823[\\uDC00-\\uDCD5\\uDD00-\\uDD08]|\\uD82C[\\uDC00-\\uDD1E\\uDD50-\\uDD52\\uDD64-\\uDD67\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD834[\\uDEE0-\\uDEF3\\uDF60-\\uDF78]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD838[\\uDD00-\\uDD2C\\uDD37-\\uDD3D\\uDD40-\\uDD49\\uDD4E\\uDEC0-\\uDEEB\\uDEF0-\\uDEF9]|\\uD83A[\\uDC00-\\uDCC4\\uDCC7-\\uDCCF\\uDD00-\\uDD43\\uDD4B\\uDD50-\\uDD59]|\\uD83B[\\uDC71-\\uDCAB\\uDCAD-\\uDCAF\\uDCB1-\\uDCB4\\uDD01-\\uDD2D\\uDD2F-\\uDD3D\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD83C[\\uDD00-\\uDD0C]|\\uD83E[\\uDFF0-\\uDFF9]|\\uD869[\\uDC00-\\uDEDD\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]|\\uD884[\\uDC00-\\uDF4A])/)) return; // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n\n      var nextChar = match[1] || match[2] || '';\n\n      if (!nextChar || nextChar && (prevChar === '' || this.rules.inline.punctuation.exec(prevChar))) {\n        var lLength = match[0].length - 1;\n        var rDelim,\n            rLength,\n            delimTotal = lLength,\n            midDelimTotal = 0;\n        var endReg = match[0][0] === '*' ? this.rules.inline.emStrong.rDelimAst : this.rules.inline.emStrong.rDelimUnd;\n        endReg.lastIndex = 0;\n        maskedSrc = maskedSrc.slice(-1 * src.length + lLength); // Bump maskedSrc to same section of string as src (move to lexer?)\n\n        while ((match = endReg.exec(maskedSrc)) != null) {\n          rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n          if (!rDelim) continue; // matched the first alternative in rules.js (skip the * in __abc*abc__)\n\n          rLength = rDelim.length;\n\n          if (match[3] || match[4]) {\n            // found another Left Delim\n            delimTotal += rLength;\n            continue;\n          } else if (match[5] || match[6]) {\n            // either Left or Right Delim\n            if (lLength % 3 && !((lLength + rLength) % 3)) {\n              midDelimTotal += rLength;\n              continue; // CommonMark Emphasis Rules 9-10\n            }\n          }\n\n          delimTotal -= rLength;\n          if (delimTotal > 0) continue; // Haven't found enough closing delimiters\n          // If this is the last rDelimiter, remove extra characters. *a*** -> *a*\n\n          if (delimTotal + midDelimTotal - rLength <= 0 && !maskedSrc.slice(endReg.lastIndex).match(endReg)) {\n            rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal);\n          }\n\n          if (Math.min(lLength, rLength) % 2) {\n            return {\n              type: 'em',\n              raw: src.slice(0, lLength + match.index + rLength + 1),\n              text: src.slice(1, lLength + match.index + rLength)\n            };\n          }\n\n          if (Math.min(lLength, rLength) % 2 === 0) {\n            return {\n              type: 'strong',\n              raw: src.slice(0, lLength + match.index + rLength + 1),\n              text: src.slice(2, lLength + match.index + rLength - 1)\n            };\n          }\n        }\n      }\n    };\n\n    _proto.codespan = function codespan(src) {\n      var cap = this.rules.inline.code.exec(src);\n\n      if (cap) {\n        var text = cap[2].replace(/\\n/g, ' ');\n        var hasNonSpaceChars = /[^ ]/.test(text);\n        var hasSpaceCharsOnBothEnds = /^ /.test(text) && / $/.test(text);\n\n        if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n          text = text.substring(1, text.length - 1);\n        }\n\n        text = _escape(text, true);\n        return {\n          type: 'codespan',\n          raw: cap[0],\n          text: text\n        };\n      }\n    };\n\n    _proto.br = function br(src) {\n      var cap = this.rules.inline.br.exec(src);\n\n      if (cap) {\n        return {\n          type: 'br',\n          raw: cap[0]\n        };\n      }\n    };\n\n    _proto.del = function del(src) {\n      var cap = this.rules.inline.del.exec(src);\n\n      if (cap) {\n        return {\n          type: 'del',\n          raw: cap[0],\n          text: cap[2]\n        };\n      }\n    };\n\n    _proto.autolink = function autolink(src, mangle) {\n      var cap = this.rules.inline.autolink.exec(src);\n\n      if (cap) {\n        var text, href;\n\n        if (cap[2] === '@') {\n          text = _escape(this.options.mangle ? mangle(cap[1]) : cap[1]);\n          href = 'mailto:' + text;\n        } else {\n          text = _escape(cap[1]);\n          href = text;\n        }\n\n        return {\n          type: 'link',\n          raw: cap[0],\n          text: text,\n          href: href,\n          tokens: [{\n            type: 'text',\n            raw: text,\n            text: text\n          }]\n        };\n      }\n    };\n\n    _proto.url = function url(src, mangle) {\n      var cap;\n\n      if (cap = this.rules.inline.url.exec(src)) {\n        var text, href;\n\n        if (cap[2] === '@') {\n          text = _escape(this.options.mangle ? mangle(cap[0]) : cap[0]);\n          href = 'mailto:' + text;\n        } else {\n          // do extended autolink path validation\n          var prevCapZero;\n\n          do {\n            prevCapZero = cap[0];\n            cap[0] = this.rules.inline._backpedal.exec(cap[0])[0];\n          } while (prevCapZero !== cap[0]);\n\n          text = _escape(cap[0]);\n\n          if (cap[1] === 'www.') {\n            href = 'http://' + text;\n          } else {\n            href = text;\n          }\n        }\n\n        return {\n          type: 'link',\n          raw: cap[0],\n          text: text,\n          href: href,\n          tokens: [{\n            type: 'text',\n            raw: text,\n            text: text\n          }]\n        };\n      }\n    };\n\n    _proto.inlineText = function inlineText(src, inRawBlock, smartypants) {\n      var cap = this.rules.inline.text.exec(src);\n\n      if (cap) {\n        var text;\n\n        if (inRawBlock) {\n          text = this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : _escape(cap[0]) : cap[0];\n        } else {\n          text = _escape(this.options.smartypants ? smartypants(cap[0]) : cap[0]);\n        }\n\n        return {\n          type: 'text',\n          raw: cap[0],\n          text: text\n        };\n      }\n    };\n\n    return Tokenizer;\n  }();\n\n  var noopTest$1 = helpers.noopTest,\n      edit$1 = helpers.edit,\n      merge$1 = helpers.merge;\n  /**\n   * Block-Level Grammar\n   */\n\n  var block = {\n    newline: /^(?: *(?:\\n|$))+/,\n    code: /^( {4}[^\\n]+(?:\\n(?: *(?:\\n|$))*)?)+/,\n    fences: /^ {0,3}(`{3,}(?=[^`\\n]*\\n)|~{3,})([^\\n]*)\\n(?:|([\\s\\S]*?)\\n)(?: {0,3}\\1[~`]* *(?:\\n+|$)|$)/,\n    hr: /^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)/,\n    heading: /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/,\n    blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n    list: /^( {0,3})(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?! {0,3}bull )\\n*|\\s*$)/,\n    html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (6)\n    + '|<(?!script|pre|style)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) open tag\n    + '|</(?!script|pre|style)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) closing tag\n    + ')',\n    def: /^ {0,3}\\[(label)\\]: *\\n? *<?([^\\s>]+)>?(?:(?: +\\n? *| *\\n *)(title))? *(?:\\n+|$)/,\n    nptable: noopTest$1,\n    table: noopTest$1,\n    lheading: /^([^\\n]+)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n    // regex template, placeholders will be replaced according to different paragraph\n    // interruption rules of commonmark and the original markdown spec:\n    _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html| +\\n)[^\\n]+)*)/,\n    text: /^[^\\n]+/\n  };\n  block._label = /(?!\\s*\\])(?:\\\\[\\[\\]]|[^\\[\\]])+/;\n  block._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\n  block.def = edit$1(block.def).replace('label', block._label).replace('title', block._title).getRegex();\n  block.bullet = /(?:[*+-]|\\d{1,9}[.)])/;\n  block.item = /^( *)(bull) ?[^\\n]*(?:\\n(?! *bull ?)[^\\n]*)*/;\n  block.item = edit$1(block.item, 'gm').replace(/bull/g, block.bullet).getRegex();\n  block.listItemStart = edit$1(/^( *)(bull) */).replace('bull', block.bullet).getRegex();\n  block.list = edit$1(block.list).replace(/bull/g, block.bullet).replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))').replace('def', '\\\\n+(?=' + block.def.source + ')').getRegex();\n  block._tag = 'address|article|aside|base|basefont|blockquote|body|caption' + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption' + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe' + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option' + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr' + '|track|ul';\n  block._comment = /<!--(?!-?>)[\\s\\S]*?(?:-->|$)/;\n  block.html = edit$1(block.html, 'i').replace('comment', block._comment).replace('tag', block._tag).replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/).getRegex();\n  block.paragraph = edit$1(block._paragraph).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('blockquote', ' {0,3}>').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|!--)').replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n  block.blockquote = edit$1(block.blockquote).replace('paragraph', block.paragraph).getRegex();\n  /**\n   * Normal Block Grammar\n   */\n\n  block.normal = merge$1({}, block);\n  /**\n   * GFM Block Grammar\n   */\n\n  block.gfm = merge$1({}, block.normal, {\n    nptable: '^ *([^|\\\\n ].*\\\\|.*)\\\\n' // Header\n    + ' {0,3}([-:]+ *\\\\|[-| :]*)' // Align\n    + '(?:\\\\n((?:(?!\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)',\n    // Cells\n    table: '^ *\\\\|(.+)\\\\n' // Header\n    + ' {0,3}\\\\|?( *[-:]+[-| :]*)' // Align\n    + '(?:\\\\n *((?:(?!\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)' // Cells\n\n  });\n  block.gfm.nptable = edit$1(block.gfm.nptable).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('blockquote', ' {0,3}>').replace('code', ' {4}[^\\\\n]').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|!--)').replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n  block.gfm.table = edit$1(block.gfm.table).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('blockquote', ' {0,3}>').replace('code', ' {4}[^\\\\n]').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|!--)').replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n  /**\n   * Pedantic grammar (original John Gruber's loose markdown specification)\n   */\n\n  block.pedantic = merge$1({}, block.normal, {\n    html: edit$1('^ *(?:comment *(?:\\\\n|\\\\s*$)' + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))').replace('comment', block._comment).replace(/tag/g, '(?!(?:' + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub' + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)' + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b').getRegex(),\n    def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n    heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n    fences: noopTest$1,\n    // fences not supported\n    paragraph: edit$1(block.normal._paragraph).replace('hr', block.hr).replace('heading', ' *#{1,6} *[^\\n]').replace('lheading', block.lheading).replace('blockquote', ' {0,3}>').replace('|fences', '').replace('|list', '').replace('|html', '').getRegex()\n  });\n  /**\n   * Inline-Level Grammar\n   */\n\n  var inline = {\n    escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n    autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n    url: noopTest$1,\n    tag: '^comment' + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>',\n    // CDATA section\n    link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n    reflink: /^!?\\[(label)\\]\\[(?!\\s*\\])((?:\\\\[\\[\\]]?|[^\\[\\]\\\\])+)\\]/,\n    nolink: /^!?\\[(?!\\s*\\])((?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]])*)\\](?:\\[\\])?/,\n    reflinkSearch: 'reflink|nolink(?!\\\\()',\n    emStrong: {\n      lDelim: /^(?:\\*+(?:([punct_])|[^\\s*]))|^_+(?:([punct*])|([^\\s_]))/,\n      //        (1) and (2) can only be a Right Delimiter. (3) and (4) can only be Left.  (5) and (6) can be either Left or Right.\n      //        () Skip other delimiter (1) #***                (2) a***#, a***                   (3) #***a, ***a                 (4) ***#              (5) #***#                 (6) a***a\n      rDelimAst: /\\_\\_[^_]*?\\*[^_]*?\\_\\_|[punct_](\\*+)(?=[\\s]|$)|[^punct*_\\s](\\*+)(?=[punct_\\s]|$)|[punct_\\s](\\*+)(?=[^punct*_\\s])|[\\s](\\*+)(?=[punct_])|[punct_](\\*+)(?=[punct_])|[^punct*_\\s](\\*+)(?=[^punct*_\\s])/,\n      rDelimUnd: /\\*\\*[^*]*?\\_[^*]*?\\*\\*|[punct*](\\_+)(?=[\\s]|$)|[^punct*_\\s](\\_+)(?=[punct*\\s]|$)|[punct*\\s](\\_+)(?=[^punct*_\\s])|[\\s](\\_+)(?=[punct*])|[punct*](\\_+)(?=[punct*])/ // ^- Not allowed for _\n\n    },\n    code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n    br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n    del: noopTest$1,\n    text: /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/,\n    punctuation: /^([\\spunctuation])/\n  }; // list of punctuation marks from CommonMark spec\n  // without * and _ to handle the different emphasis markers * and _\n\n  inline._punctuation = '!\"#$%&\\'()+\\\\-.,/:;<=>?@\\\\[\\\\]`^{|}~';\n  inline.punctuation = edit$1(inline.punctuation).replace(/punctuation/g, inline._punctuation).getRegex(); // sequences em should skip over [title](link), `code`, <html>\n\n  inline.blockSkip = /\\[[^\\]]*?\\]\\([^\\)]*?\\)|`[^`]*?`|<[^>]*?>/g;\n  inline.escapedEmSt = /\\\\\\*|\\\\_/g;\n  inline._comment = edit$1(block._comment).replace('(?:-->|$)', '-->').getRegex();\n  inline.emStrong.lDelim = edit$1(inline.emStrong.lDelim).replace(/punct/g, inline._punctuation).getRegex();\n  inline.emStrong.rDelimAst = edit$1(inline.emStrong.rDelimAst, 'g').replace(/punct/g, inline._punctuation).getRegex();\n  inline.emStrong.rDelimUnd = edit$1(inline.emStrong.rDelimUnd, 'g').replace(/punct/g, inline._punctuation).getRegex();\n  inline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n  inline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\n  inline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\n  inline.autolink = edit$1(inline.autolink).replace('scheme', inline._scheme).replace('email', inline._email).getRegex();\n  inline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n  inline.tag = edit$1(inline.tag).replace('comment', inline._comment).replace('attribute', inline._attribute).getRegex();\n  inline._label = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\n  inline._href = /<(?:\\\\.|[^\\n<>\\\\])+>|[^\\s\\x00-\\x1f]*/;\n  inline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n  inline.link = edit$1(inline.link).replace('label', inline._label).replace('href', inline._href).replace('title', inline._title).getRegex();\n  inline.reflink = edit$1(inline.reflink).replace('label', inline._label).getRegex();\n  inline.reflinkSearch = edit$1(inline.reflinkSearch, 'g').replace('reflink', inline.reflink).replace('nolink', inline.nolink).getRegex();\n  /**\n   * Normal Inline Grammar\n   */\n\n  inline.normal = merge$1({}, inline);\n  /**\n   * Pedantic Inline Grammar\n   */\n\n  inline.pedantic = merge$1({}, inline.normal, {\n    strong: {\n      start: /^__|\\*\\*/,\n      middle: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n      endAst: /\\*\\*(?!\\*)/g,\n      endUnd: /__(?!_)/g\n    },\n    em: {\n      start: /^_|\\*/,\n      middle: /^()\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)|^_(?=\\S)([\\s\\S]*?\\S)_(?!_)/,\n      endAst: /\\*(?!\\*)/g,\n      endUnd: /_(?!_)/g\n    },\n    link: edit$1(/^!?\\[(label)\\]\\((.*?)\\)/).replace('label', inline._label).getRegex(),\n    reflink: edit$1(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/).replace('label', inline._label).getRegex()\n  });\n  /**\n   * GFM Inline Grammar\n   */\n\n  inline.gfm = merge$1({}, inline.normal, {\n    escape: edit$1(inline.escape).replace('])', '~|])').getRegex(),\n    _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n    url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n    _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n    del: /^(~~?)(?=[^\\s~])([\\s\\S]*?[^\\s~])\\1(?=[^~]|$)/,\n    text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@))|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@))/\n  });\n  inline.gfm.url = edit$1(inline.gfm.url, 'i').replace('email', inline.gfm._extended_email).getRegex();\n  /**\n   * GFM + Line Breaks Inline Grammar\n   */\n\n  inline.breaks = merge$1({}, inline.gfm, {\n    br: edit$1(inline.br).replace('{2,}', '*').getRegex(),\n    text: edit$1(inline.gfm.text).replace('\\\\b_', '\\\\b_| {2,}\\\\n').replace(/\\{2,\\}/g, '*').getRegex()\n  });\n  var rules = {\n    block: block,\n    inline: inline\n  };\n\n  var defaults$2 = defaults.defaults;\n  var block$1 = rules.block,\n      inline$1 = rules.inline;\n  var repeatString$1 = helpers.repeatString;\n  /**\n   * smartypants text replacement\n   */\n\n  function smartypants(text) {\n    return text // em-dashes\n    .replace(/---/g, \"\\u2014\") // en-dashes\n    .replace(/--/g, \"\\u2013\") // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, \"$1\\u2018\") // closing singles & apostrophes\n    .replace(/'/g, \"\\u2019\") // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, \"$1\\u201C\") // closing doubles\n    .replace(/\"/g, \"\\u201D\") // ellipses\n    .replace(/\\.{3}/g, \"\\u2026\");\n  }\n  /**\n   * mangle email addresses\n   */\n\n\n  function mangle(text) {\n    var out = '',\n        i,\n        ch;\n    var l = text.length;\n\n    for (i = 0; i < l; i++) {\n      ch = text.charCodeAt(i);\n\n      if (Math.random() > 0.5) {\n        ch = 'x' + ch.toString(16);\n      }\n\n      out += '&#' + ch + ';';\n    }\n\n    return out;\n  }\n  /**\n   * Block Lexer\n   */\n\n\n  var Lexer_1 = /*#__PURE__*/function () {\n    function Lexer(options) {\n      this.tokens = [];\n      this.tokens.links = Object.create(null);\n      this.options = options || defaults$2;\n      this.options.tokenizer = this.options.tokenizer || new Tokenizer_1();\n      this.tokenizer = this.options.tokenizer;\n      this.tokenizer.options = this.options;\n      var rules = {\n        block: block$1.normal,\n        inline: inline$1.normal\n      };\n\n      if (this.options.pedantic) {\n        rules.block = block$1.pedantic;\n        rules.inline = inline$1.pedantic;\n      } else if (this.options.gfm) {\n        rules.block = block$1.gfm;\n\n        if (this.options.breaks) {\n          rules.inline = inline$1.breaks;\n        } else {\n          rules.inline = inline$1.gfm;\n        }\n      }\n\n      this.tokenizer.rules = rules;\n    }\n    /**\n     * Expose Rules\n     */\n\n\n    /**\n     * Static Lex Method\n     */\n    Lexer.lex = function lex(src, options) {\n      var lexer = new Lexer(options);\n      return lexer.lex(src);\n    }\n    /**\n     * Static Lex Inline Method\n     */\n    ;\n\n    Lexer.lexInline = function lexInline(src, options) {\n      var lexer = new Lexer(options);\n      return lexer.inlineTokens(src);\n    }\n    /**\n     * Preprocessing\n     */\n    ;\n\n    var _proto = Lexer.prototype;\n\n    _proto.lex = function lex(src) {\n      src = src.replace(/\\r\\n|\\r/g, '\\n').replace(/\\t/g, '    ');\n      this.blockTokens(src, this.tokens, true);\n      this.inline(this.tokens);\n      return this.tokens;\n    }\n    /**\n     * Lexing\n     */\n    ;\n\n    _proto.blockTokens = function blockTokens(src, tokens, top) {\n      if (tokens === void 0) {\n        tokens = [];\n      }\n\n      if (top === void 0) {\n        top = true;\n      }\n\n      if (this.options.pedantic) {\n        src = src.replace(/^ +$/gm, '');\n      }\n\n      var token, i, l, lastToken;\n\n      while (src) {\n        // newline\n        if (token = this.tokenizer.space(src)) {\n          src = src.substring(token.raw.length);\n\n          if (token.type) {\n            tokens.push(token);\n          }\n\n          continue;\n        } // code\n\n\n        if (token = this.tokenizer.code(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1]; // An indented code block cannot interrupt a paragraph.\n\n          if (lastToken && lastToken.type === 'paragraph') {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // fences\n\n\n        if (token = this.tokenizer.fences(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // heading\n\n\n        if (token = this.tokenizer.heading(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // table no leading pipe (gfm)\n\n\n        if (token = this.tokenizer.nptable(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // hr\n\n\n        if (token = this.tokenizer.hr(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // blockquote\n\n\n        if (token = this.tokenizer.blockquote(src)) {\n          src = src.substring(token.raw.length);\n          token.tokens = this.blockTokens(token.text, [], top);\n          tokens.push(token);\n          continue;\n        } // list\n\n\n        if (token = this.tokenizer.list(src)) {\n          src = src.substring(token.raw.length);\n          l = token.items.length;\n\n          for (i = 0; i < l; i++) {\n            token.items[i].tokens = this.blockTokens(token.items[i].text, [], false);\n          }\n\n          tokens.push(token);\n          continue;\n        } // html\n\n\n        if (token = this.tokenizer.html(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // def\n\n\n        if (top && (token = this.tokenizer.def(src))) {\n          src = src.substring(token.raw.length);\n\n          if (!this.tokens.links[token.tag]) {\n            this.tokens.links[token.tag] = {\n              href: token.href,\n              title: token.title\n            };\n          }\n\n          continue;\n        } // table (gfm)\n\n\n        if (token = this.tokenizer.table(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // lheading\n\n\n        if (token = this.tokenizer.lheading(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // top-level paragraph\n\n\n        if (top && (token = this.tokenizer.paragraph(src))) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // text\n\n\n        if (token = this.tokenizer.text(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && lastToken.type === 'text') {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        }\n\n        if (src) {\n          var errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n\n          if (this.options.silent) {\n            console.error(errMsg);\n            break;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n\n      return tokens;\n    };\n\n    _proto.inline = function inline(tokens) {\n      var i, j, k, l2, row, token;\n      var l = tokens.length;\n\n      for (i = 0; i < l; i++) {\n        token = tokens[i];\n\n        switch (token.type) {\n          case 'paragraph':\n          case 'text':\n          case 'heading':\n            {\n              token.tokens = [];\n              this.inlineTokens(token.text, token.tokens);\n              break;\n            }\n\n          case 'table':\n            {\n              token.tokens = {\n                header: [],\n                cells: []\n              }; // header\n\n              l2 = token.header.length;\n\n              for (j = 0; j < l2; j++) {\n                token.tokens.header[j] = [];\n                this.inlineTokens(token.header[j], token.tokens.header[j]);\n              } // cells\n\n\n              l2 = token.cells.length;\n\n              for (j = 0; j < l2; j++) {\n                row = token.cells[j];\n                token.tokens.cells[j] = [];\n\n                for (k = 0; k < row.length; k++) {\n                  token.tokens.cells[j][k] = [];\n                  this.inlineTokens(row[k], token.tokens.cells[j][k]);\n                }\n              }\n\n              break;\n            }\n\n          case 'blockquote':\n            {\n              this.inline(token.tokens);\n              break;\n            }\n\n          case 'list':\n            {\n              l2 = token.items.length;\n\n              for (j = 0; j < l2; j++) {\n                this.inline(token.items[j].tokens);\n              }\n\n              break;\n            }\n        }\n      }\n\n      return tokens;\n    }\n    /**\n     * Lexing/Compiling\n     */\n    ;\n\n    _proto.inlineTokens = function inlineTokens(src, tokens, inLink, inRawBlock) {\n      if (tokens === void 0) {\n        tokens = [];\n      }\n\n      if (inLink === void 0) {\n        inLink = false;\n      }\n\n      if (inRawBlock === void 0) {\n        inRawBlock = false;\n      }\n\n      var token, lastToken; // String with links masked to avoid interference with em and strong\n\n      var maskedSrc = src;\n      var match;\n      var keepPrevChar, prevChar; // Mask out reflinks\n\n      if (this.tokens.links) {\n        var links = Object.keys(this.tokens.links);\n\n        if (links.length > 0) {\n          while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n            if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n              maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString$1('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n            }\n          }\n        }\n      } // Mask out other blocks\n\n\n      while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n        maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString$1('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n      } // Mask out escaped em & strong delimiters\n\n\n      while ((match = this.tokenizer.rules.inline.escapedEmSt.exec(maskedSrc)) != null) {\n        maskedSrc = maskedSrc.slice(0, match.index) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.escapedEmSt.lastIndex);\n      }\n\n      while (src) {\n        if (!keepPrevChar) {\n          prevChar = '';\n        }\n\n        keepPrevChar = false; // escape\n\n        if (token = this.tokenizer.escape(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // tag\n\n\n        if (token = this.tokenizer.tag(src, inLink, inRawBlock)) {\n          src = src.substring(token.raw.length);\n          inLink = token.inLink;\n          inRawBlock = token.inRawBlock;\n          var _lastToken = tokens[tokens.length - 1];\n\n          if (_lastToken && token.type === 'text' && _lastToken.type === 'text') {\n            _lastToken.raw += token.raw;\n            _lastToken.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // link\n\n\n        if (token = this.tokenizer.link(src)) {\n          src = src.substring(token.raw.length);\n\n          if (token.type === 'link') {\n            token.tokens = this.inlineTokens(token.text, [], true, inRawBlock);\n          }\n\n          tokens.push(token);\n          continue;\n        } // reflink, nolink\n\n\n        if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n          src = src.substring(token.raw.length);\n          var _lastToken2 = tokens[tokens.length - 1];\n\n          if (token.type === 'link') {\n            token.tokens = this.inlineTokens(token.text, [], true, inRawBlock);\n            tokens.push(token);\n          } else if (_lastToken2 && token.type === 'text' && _lastToken2.type === 'text') {\n            _lastToken2.raw += token.raw;\n            _lastToken2.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // em & strong\n\n\n        if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n          src = src.substring(token.raw.length);\n          token.tokens = this.inlineTokens(token.text, [], inLink, inRawBlock);\n          tokens.push(token);\n          continue;\n        } // code\n\n\n        if (token = this.tokenizer.codespan(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // br\n\n\n        if (token = this.tokenizer.br(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // del (gfm)\n\n\n        if (token = this.tokenizer.del(src)) {\n          src = src.substring(token.raw.length);\n          token.tokens = this.inlineTokens(token.text, [], inLink, inRawBlock);\n          tokens.push(token);\n          continue;\n        } // autolink\n\n\n        if (token = this.tokenizer.autolink(src, mangle)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // url (gfm)\n\n\n        if (!inLink && (token = this.tokenizer.url(src, mangle))) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // text\n\n\n        if (token = this.tokenizer.inlineText(src, inRawBlock, smartypants)) {\n          src = src.substring(token.raw.length);\n\n          if (token.raw.slice(-1) !== '_') {\n            // Track prevChar before string of ____ started\n            prevChar = token.raw.slice(-1);\n          }\n\n          keepPrevChar = true;\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && lastToken.type === 'text') {\n            lastToken.raw += token.raw;\n            lastToken.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        }\n\n        if (src) {\n          var errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n\n          if (this.options.silent) {\n            console.error(errMsg);\n            break;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n\n      return tokens;\n    };\n\n    _createClass(Lexer, null, [{\n      key: \"rules\",\n      get: function get() {\n        return {\n          block: block$1,\n          inline: inline$1\n        };\n      }\n    }]);\n\n    return Lexer;\n  }();\n\n  var defaults$3 = defaults.defaults;\n  var cleanUrl$1 = helpers.cleanUrl,\n      escape$1 = helpers.escape;\n  /**\n   * Renderer\n   */\n\n  var Renderer_1 = /*#__PURE__*/function () {\n    function Renderer(options) {\n      this.options = options || defaults$3;\n    }\n\n    var _proto = Renderer.prototype;\n\n    _proto.code = function code(_code, infostring, escaped) {\n      var lang = (infostring || '').match(/\\S*/)[0];\n\n      if (this.options.highlight) {\n        var out = this.options.highlight(_code, lang);\n\n        if (out != null && out !== _code) {\n          escaped = true;\n          _code = out;\n        }\n      }\n\n      _code = _code.replace(/\\n$/, '') + '\\n';\n\n      if (!lang) {\n        return '<pre><code>' + (escaped ? _code : escape$1(_code, true)) + '</code></pre>\\n';\n      }\n\n      return '<pre><code class=\"' + this.options.langPrefix + escape$1(lang, true) + '\">' + (escaped ? _code : escape$1(_code, true)) + '</code></pre>\\n';\n    };\n\n    _proto.blockquote = function blockquote(quote) {\n      return '<blockquote>\\n' + quote + '</blockquote>\\n';\n    };\n\n    _proto.html = function html(_html) {\n      return _html;\n    };\n\n    _proto.heading = function heading(text, level, raw, slugger) {\n      if (this.options.headerIds) {\n        return '<h' + level + ' id=\"' + this.options.headerPrefix + slugger.slug(raw) + '\">' + text + '</h' + level + '>\\n';\n      } // ignore IDs\n\n\n      return '<h' + level + '>' + text + '</h' + level + '>\\n';\n    };\n\n    _proto.hr = function hr() {\n      return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n    };\n\n    _proto.list = function list(body, ordered, start) {\n      var type = ordered ? 'ol' : 'ul',\n          startatt = ordered && start !== 1 ? ' start=\"' + start + '\"' : '';\n      return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n    };\n\n    _proto.listitem = function listitem(text) {\n      return '<li>' + text + '</li>\\n';\n    };\n\n    _proto.checkbox = function checkbox(checked) {\n      return '<input ' + (checked ? 'checked=\"\" ' : '') + 'disabled=\"\" type=\"checkbox\"' + (this.options.xhtml ? ' /' : '') + '> ';\n    };\n\n    _proto.paragraph = function paragraph(text) {\n      return '<p>' + text + '</p>\\n';\n    };\n\n    _proto.table = function table(header, body) {\n      if (body) body = '<tbody>' + body + '</tbody>';\n      return '<table>\\n' + '<thead>\\n' + header + '</thead>\\n' + body + '</table>\\n';\n    };\n\n    _proto.tablerow = function tablerow(content) {\n      return '<tr>\\n' + content + '</tr>\\n';\n    };\n\n    _proto.tablecell = function tablecell(content, flags) {\n      var type = flags.header ? 'th' : 'td';\n      var tag = flags.align ? '<' + type + ' align=\"' + flags.align + '\">' : '<' + type + '>';\n      return tag + content + '</' + type + '>\\n';\n    } // span level renderer\n    ;\n\n    _proto.strong = function strong(text) {\n      return '<strong>' + text + '</strong>';\n    };\n\n    _proto.em = function em(text) {\n      return '<em>' + text + '</em>';\n    };\n\n    _proto.codespan = function codespan(text) {\n      return '<code>' + text + '</code>';\n    };\n\n    _proto.br = function br() {\n      return this.options.xhtml ? '<br/>' : '<br>';\n    };\n\n    _proto.del = function del(text) {\n      return '<del>' + text + '</del>';\n    };\n\n    _proto.link = function link(href, title, text) {\n      href = cleanUrl$1(this.options.sanitize, this.options.baseUrl, href);\n\n      if (href === null) {\n        return text;\n      }\n\n      var out = '<a href=\"' + escape$1(href) + '\"';\n\n      if (title) {\n        out += ' title=\"' + title + '\"';\n      }\n\n      out += '>' + text + '</a>';\n      return out;\n    };\n\n    _proto.image = function image(href, title, text) {\n      href = cleanUrl$1(this.options.sanitize, this.options.baseUrl, href);\n\n      if (href === null) {\n        return text;\n      }\n\n      var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n\n      if (title) {\n        out += ' title=\"' + title + '\"';\n      }\n\n      out += this.options.xhtml ? '/>' : '>';\n      return out;\n    };\n\n    _proto.text = function text(_text) {\n      return _text;\n    };\n\n    return Renderer;\n  }();\n\n  /**\n   * TextRenderer\n   * returns only the textual part of the token\n   */\n  var TextRenderer_1 = /*#__PURE__*/function () {\n    function TextRenderer() {}\n\n    var _proto = TextRenderer.prototype;\n\n    // no need for block level renderers\n    _proto.strong = function strong(text) {\n      return text;\n    };\n\n    _proto.em = function em(text) {\n      return text;\n    };\n\n    _proto.codespan = function codespan(text) {\n      return text;\n    };\n\n    _proto.del = function del(text) {\n      return text;\n    };\n\n    _proto.html = function html(text) {\n      return text;\n    };\n\n    _proto.text = function text(_text) {\n      return _text;\n    };\n\n    _proto.link = function link(href, title, text) {\n      return '' + text;\n    };\n\n    _proto.image = function image(href, title, text) {\n      return '' + text;\n    };\n\n    _proto.br = function br() {\n      return '';\n    };\n\n    return TextRenderer;\n  }();\n\n  /**\n   * Slugger generates header id\n   */\n  var Slugger_1 = /*#__PURE__*/function () {\n    function Slugger() {\n      this.seen = {};\n    }\n\n    var _proto = Slugger.prototype;\n\n    _proto.serialize = function serialize(value) {\n      return value.toLowerCase().trim() // remove html tags\n      .replace(/<[!\\/a-z].*?>/ig, '') // remove unwanted chars\n      .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '').replace(/\\s/g, '-');\n    }\n    /**\n     * Finds the next safe (unique) slug to use\n     */\n    ;\n\n    _proto.getNextSafeSlug = function getNextSafeSlug(originalSlug, isDryRun) {\n      var slug = originalSlug;\n      var occurenceAccumulator = 0;\n\n      if (this.seen.hasOwnProperty(slug)) {\n        occurenceAccumulator = this.seen[originalSlug];\n\n        do {\n          occurenceAccumulator++;\n          slug = originalSlug + '-' + occurenceAccumulator;\n        } while (this.seen.hasOwnProperty(slug));\n      }\n\n      if (!isDryRun) {\n        this.seen[originalSlug] = occurenceAccumulator;\n        this.seen[slug] = 0;\n      }\n\n      return slug;\n    }\n    /**\n     * Convert string to unique id\n     * @param {object} options\n     * @param {boolean} options.dryrun Generates the next unique slug without updating the internal accumulator.\n     */\n    ;\n\n    _proto.slug = function slug(value, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      var slug = this.serialize(value);\n      return this.getNextSafeSlug(slug, options.dryrun);\n    };\n\n    return Slugger;\n  }();\n\n  var defaults$4 = defaults.defaults;\n  var unescape$1 = helpers.unescape;\n  /**\n   * Parsing & Compiling\n   */\n\n  var Parser_1 = /*#__PURE__*/function () {\n    function Parser(options) {\n      this.options = options || defaults$4;\n      this.options.renderer = this.options.renderer || new Renderer_1();\n      this.renderer = this.options.renderer;\n      this.renderer.options = this.options;\n      this.textRenderer = new TextRenderer_1();\n      this.slugger = new Slugger_1();\n    }\n    /**\n     * Static Parse Method\n     */\n\n\n    Parser.parse = function parse(tokens, options) {\n      var parser = new Parser(options);\n      return parser.parse(tokens);\n    }\n    /**\n     * Static Parse Inline Method\n     */\n    ;\n\n    Parser.parseInline = function parseInline(tokens, options) {\n      var parser = new Parser(options);\n      return parser.parseInline(tokens);\n    }\n    /**\n     * Parse Loop\n     */\n    ;\n\n    var _proto = Parser.prototype;\n\n    _proto.parse = function parse(tokens, top) {\n      if (top === void 0) {\n        top = true;\n      }\n\n      var out = '',\n          i,\n          j,\n          k,\n          l2,\n          l3,\n          row,\n          cell,\n          header,\n          body,\n          token,\n          ordered,\n          start,\n          loose,\n          itemBody,\n          item,\n          checked,\n          task,\n          checkbox;\n      var l = tokens.length;\n\n      for (i = 0; i < l; i++) {\n        token = tokens[i];\n\n        switch (token.type) {\n          case 'space':\n            {\n              continue;\n            }\n\n          case 'hr':\n            {\n              out += this.renderer.hr();\n              continue;\n            }\n\n          case 'heading':\n            {\n              out += this.renderer.heading(this.parseInline(token.tokens), token.depth, unescape$1(this.parseInline(token.tokens, this.textRenderer)), this.slugger);\n              continue;\n            }\n\n          case 'code':\n            {\n              out += this.renderer.code(token.text, token.lang, token.escaped);\n              continue;\n            }\n\n          case 'table':\n            {\n              header = ''; // header\n\n              cell = '';\n              l2 = token.header.length;\n\n              for (j = 0; j < l2; j++) {\n                cell += this.renderer.tablecell(this.parseInline(token.tokens.header[j]), {\n                  header: true,\n                  align: token.align[j]\n                });\n              }\n\n              header += this.renderer.tablerow(cell);\n              body = '';\n              l2 = token.cells.length;\n\n              for (j = 0; j < l2; j++) {\n                row = token.tokens.cells[j];\n                cell = '';\n                l3 = row.length;\n\n                for (k = 0; k < l3; k++) {\n                  cell += this.renderer.tablecell(this.parseInline(row[k]), {\n                    header: false,\n                    align: token.align[k]\n                  });\n                }\n\n                body += this.renderer.tablerow(cell);\n              }\n\n              out += this.renderer.table(header, body);\n              continue;\n            }\n\n          case 'blockquote':\n            {\n              body = this.parse(token.tokens);\n              out += this.renderer.blockquote(body);\n              continue;\n            }\n\n          case 'list':\n            {\n              ordered = token.ordered;\n              start = token.start;\n              loose = token.loose;\n              l2 = token.items.length;\n              body = '';\n\n              for (j = 0; j < l2; j++) {\n                item = token.items[j];\n                checked = item.checked;\n                task = item.task;\n                itemBody = '';\n\n                if (item.task) {\n                  checkbox = this.renderer.checkbox(checked);\n\n                  if (loose) {\n                    if (item.tokens.length > 0 && item.tokens[0].type === 'text') {\n                      item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n\n                      if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                        item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;\n                      }\n                    } else {\n                      item.tokens.unshift({\n                        type: 'text',\n                        text: checkbox\n                      });\n                    }\n                  } else {\n                    itemBody += checkbox;\n                  }\n                }\n\n                itemBody += this.parse(item.tokens, loose);\n                body += this.renderer.listitem(itemBody, task, checked);\n              }\n\n              out += this.renderer.list(body, ordered, start);\n              continue;\n            }\n\n          case 'html':\n            {\n              // TODO parse inline content if parameter markdown=1\n              out += this.renderer.html(token.text);\n              continue;\n            }\n\n          case 'paragraph':\n            {\n              out += this.renderer.paragraph(this.parseInline(token.tokens));\n              continue;\n            }\n\n          case 'text':\n            {\n              body = token.tokens ? this.parseInline(token.tokens) : token.text;\n\n              while (i + 1 < l && tokens[i + 1].type === 'text') {\n                token = tokens[++i];\n                body += '\\n' + (token.tokens ? this.parseInline(token.tokens) : token.text);\n              }\n\n              out += top ? this.renderer.paragraph(body) : body;\n              continue;\n            }\n\n          default:\n            {\n              var errMsg = 'Token with \"' + token.type + '\" type was not found.';\n\n              if (this.options.silent) {\n                console.error(errMsg);\n                return;\n              } else {\n                throw new Error(errMsg);\n              }\n            }\n        }\n      }\n\n      return out;\n    }\n    /**\n     * Parse Inline Tokens\n     */\n    ;\n\n    _proto.parseInline = function parseInline(tokens, renderer) {\n      renderer = renderer || this.renderer;\n      var out = '',\n          i,\n          token;\n      var l = tokens.length;\n\n      for (i = 0; i < l; i++) {\n        token = tokens[i];\n\n        switch (token.type) {\n          case 'escape':\n            {\n              out += renderer.text(token.text);\n              break;\n            }\n\n          case 'html':\n            {\n              out += renderer.html(token.text);\n              break;\n            }\n\n          case 'link':\n            {\n              out += renderer.link(token.href, token.title, this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'image':\n            {\n              out += renderer.image(token.href, token.title, token.text);\n              break;\n            }\n\n          case 'strong':\n            {\n              out += renderer.strong(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'em':\n            {\n              out += renderer.em(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'codespan':\n            {\n              out += renderer.codespan(token.text);\n              break;\n            }\n\n          case 'br':\n            {\n              out += renderer.br();\n              break;\n            }\n\n          case 'del':\n            {\n              out += renderer.del(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'text':\n            {\n              out += renderer.text(token.text);\n              break;\n            }\n\n          default:\n            {\n              var errMsg = 'Token with \"' + token.type + '\" type was not found.';\n\n              if (this.options.silent) {\n                console.error(errMsg);\n                return;\n              } else {\n                throw new Error(errMsg);\n              }\n            }\n        }\n      }\n\n      return out;\n    };\n\n    return Parser;\n  }();\n\n  var merge$2 = helpers.merge,\n      checkSanitizeDeprecation$1 = helpers.checkSanitizeDeprecation,\n      escape$2 = helpers.escape;\n  var getDefaults = defaults.getDefaults,\n      changeDefaults = defaults.changeDefaults,\n      defaults$5 = defaults.defaults;\n  /**\n   * Marked\n   */\n\n  function marked(src, opt, callback) {\n    // throw error in case of non string input\n    if (typeof src === 'undefined' || src === null) {\n      throw new Error('marked(): input parameter is undefined or null');\n    }\n\n    if (typeof src !== 'string') {\n      throw new Error('marked(): input parameter is of type ' + Object.prototype.toString.call(src) + ', string expected');\n    }\n\n    if (typeof opt === 'function') {\n      callback = opt;\n      opt = null;\n    }\n\n    opt = merge$2({}, marked.defaults, opt || {});\n    checkSanitizeDeprecation$1(opt);\n\n    if (callback) {\n      var highlight = opt.highlight;\n      var tokens;\n\n      try {\n        tokens = Lexer_1.lex(src, opt);\n      } catch (e) {\n        return callback(e);\n      }\n\n      var done = function done(err) {\n        var out;\n\n        if (!err) {\n          try {\n            out = Parser_1.parse(tokens, opt);\n          } catch (e) {\n            err = e;\n          }\n        }\n\n        opt.highlight = highlight;\n        return err ? callback(err) : callback(null, out);\n      };\n\n      if (!highlight || highlight.length < 3) {\n        return done();\n      }\n\n      delete opt.highlight;\n      if (!tokens.length) return done();\n      var pending = 0;\n      marked.walkTokens(tokens, function (token) {\n        if (token.type === 'code') {\n          pending++;\n          setTimeout(function () {\n            highlight(token.text, token.lang, function (err, code) {\n              if (err) {\n                return done(err);\n              }\n\n              if (code != null && code !== token.text) {\n                token.text = code;\n                token.escaped = true;\n              }\n\n              pending--;\n\n              if (pending === 0) {\n                done();\n              }\n            });\n          }, 0);\n        }\n      });\n\n      if (pending === 0) {\n        done();\n      }\n\n      return;\n    }\n\n    try {\n      var _tokens = Lexer_1.lex(src, opt);\n\n      if (opt.walkTokens) {\n        marked.walkTokens(_tokens, opt.walkTokens);\n      }\n\n      return Parser_1.parse(_tokens, opt);\n    } catch (e) {\n      e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n\n      if (opt.silent) {\n        return '<p>An error occurred:</p><pre>' + escape$2(e.message + '', true) + '</pre>';\n      }\n\n      throw e;\n    }\n  }\n  /**\n   * Options\n   */\n\n\n  marked.options = marked.setOptions = function (opt) {\n    merge$2(marked.defaults, opt);\n    changeDefaults(marked.defaults);\n    return marked;\n  };\n\n  marked.getDefaults = getDefaults;\n  marked.defaults = defaults$5;\n  /**\n   * Use Extension\n   */\n\n  marked.use = function (extension) {\n    var opts = merge$2({}, extension);\n\n    if (extension.renderer) {\n      (function () {\n        var renderer = marked.defaults.renderer || new Renderer_1();\n\n        var _loop = function _loop(prop) {\n          var prevRenderer = renderer[prop];\n\n          renderer[prop] = function () {\n            for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n              args[_key] = arguments[_key];\n            }\n\n            var ret = extension.renderer[prop].apply(renderer, args);\n\n            if (ret === false) {\n              ret = prevRenderer.apply(renderer, args);\n            }\n\n            return ret;\n          };\n        };\n\n        for (var prop in extension.renderer) {\n          _loop(prop);\n        }\n\n        opts.renderer = renderer;\n      })();\n    }\n\n    if (extension.tokenizer) {\n      (function () {\n        var tokenizer = marked.defaults.tokenizer || new Tokenizer_1();\n\n        var _loop2 = function _loop2(prop) {\n          var prevTokenizer = tokenizer[prop];\n\n          tokenizer[prop] = function () {\n            for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n              args[_key2] = arguments[_key2];\n            }\n\n            var ret = extension.tokenizer[prop].apply(tokenizer, args);\n\n            if (ret === false) {\n              ret = prevTokenizer.apply(tokenizer, args);\n            }\n\n            return ret;\n          };\n        };\n\n        for (var prop in extension.tokenizer) {\n          _loop2(prop);\n        }\n\n        opts.tokenizer = tokenizer;\n      })();\n    }\n\n    if (extension.walkTokens) {\n      var walkTokens = marked.defaults.walkTokens;\n\n      opts.walkTokens = function (token) {\n        extension.walkTokens(token);\n\n        if (walkTokens) {\n          walkTokens(token);\n        }\n      };\n    }\n\n    marked.setOptions(opts);\n  };\n  /**\n   * Run callback for every token\n   */\n\n\n  marked.walkTokens = function (tokens, callback) {\n    for (var _iterator = _createForOfIteratorHelperLoose(tokens), _step; !(_step = _iterator()).done;) {\n      var token = _step.value;\n      callback(token);\n\n      switch (token.type) {\n        case 'table':\n          {\n            for (var _iterator2 = _createForOfIteratorHelperLoose(token.tokens.header), _step2; !(_step2 = _iterator2()).done;) {\n              var cell = _step2.value;\n              marked.walkTokens(cell, callback);\n            }\n\n            for (var _iterator3 = _createForOfIteratorHelperLoose(token.tokens.cells), _step3; !(_step3 = _iterator3()).done;) {\n              var row = _step3.value;\n\n              for (var _iterator4 = _createForOfIteratorHelperLoose(row), _step4; !(_step4 = _iterator4()).done;) {\n                var _cell = _step4.value;\n                marked.walkTokens(_cell, callback);\n              }\n            }\n\n            break;\n          }\n\n        case 'list':\n          {\n            marked.walkTokens(token.items, callback);\n            break;\n          }\n\n        default:\n          {\n            if (token.tokens) {\n              marked.walkTokens(token.tokens, callback);\n            }\n          }\n      }\n    }\n  };\n  /**\n   * Parse Inline\n   */\n\n\n  marked.parseInline = function (src, opt) {\n    // throw error in case of non string input\n    if (typeof src === 'undefined' || src === null) {\n      throw new Error('marked.parseInline(): input parameter is undefined or null');\n    }\n\n    if (typeof src !== 'string') {\n      throw new Error('marked.parseInline(): input parameter is of type ' + Object.prototype.toString.call(src) + ', string expected');\n    }\n\n    opt = merge$2({}, marked.defaults, opt || {});\n    checkSanitizeDeprecation$1(opt);\n\n    try {\n      var tokens = Lexer_1.lexInline(src, opt);\n\n      if (opt.walkTokens) {\n        marked.walkTokens(tokens, opt.walkTokens);\n      }\n\n      return Parser_1.parseInline(tokens, opt);\n    } catch (e) {\n      e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n\n      if (opt.silent) {\n        return '<p>An error occurred:</p><pre>' + escape$2(e.message + '', true) + '</pre>';\n      }\n\n      throw e;\n    }\n  };\n  /**\n   * Expose\n   */\n\n\n  marked.Parser = Parser_1;\n  marked.parser = Parser_1.parse;\n  marked.Renderer = Renderer_1;\n  marked.TextRenderer = TextRenderer_1;\n  marked.Lexer = Lexer_1;\n  marked.lexer = Lexer_1.lex;\n  marked.Tokenizer = Tokenizer_1;\n  marked.Slugger = Slugger_1;\n  marked.parse = marked;\n  var marked_1 = marked;\n\n  return marked_1;\n\n})));\n","const htmlparser = require('htmlparser2');\nconst escapeStringRegexp = require('escape-string-regexp');\nconst { klona } = require('klona');\nconst { isPlainObject } = require('is-plain-object');\nconst deepmerge = require('deepmerge');\nconst parseSrcset = require('parse-srcset');\nconst { parse: postcssParse } = require('postcss');\n// Tags that can conceivably represent stand-alone media.\nconst mediaTags = [\n  'img', 'audio', 'video', 'picture', 'svg',\n  'object', 'map', 'iframe', 'embed'\n];\n// Tags that are inherently vulnerable to being used in XSS attacks.\nconst vulnerableTags = [ 'script', 'style' ];\n\nfunction each(obj, cb) {\n  if (obj) {\n    Object.keys(obj).forEach(function (key) {\n      cb(obj[key], key);\n    });\n  }\n}\n\n// Avoid false positives with .__proto__, .hasOwnProperty, etc.\nfunction has(obj, key) {\n  return ({}).hasOwnProperty.call(obj, key);\n}\n\n// Returns those elements of `a` for which `cb(a)` returns truthy\nfunction filter(a, cb) {\n  const n = [];\n  each(a, function(v) {\n    if (cb(v)) {\n      n.push(v);\n    }\n  });\n  return n;\n}\n\nfunction isEmptyObject(obj) {\n  for (const key in obj) {\n    if (has(obj, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction stringifySrcset(parsedSrcset) {\n  return parsedSrcset.map(function(part) {\n    if (!part.url) {\n      throw new Error('URL missing');\n    }\n\n    return (\n      part.url +\n      (part.w ? ` ${part.w}w` : '') +\n      (part.h ? ` ${part.h}h` : '') +\n      (part.d ? ` ${part.d}x` : '')\n    );\n  }).join(', ');\n}\n\nmodule.exports = sanitizeHtml;\n\n// A valid attribute name.\n// We use a tolerant definition based on the set of strings defined by\n// html.spec.whatwg.org/multipage/parsing.html#before-attribute-name-state\n// and html.spec.whatwg.org/multipage/parsing.html#attribute-name-state .\n// The characters accepted are ones which can be appended to the attribute\n// name buffer without triggering a parse error:\n//   * unexpected-equals-sign-before-attribute-name\n//   * unexpected-null-character\n//   * unexpected-character-in-attribute-name\n// We exclude the empty string because it's impossible to get to the after\n// attribute name state with an empty attribute name buffer.\nconst VALID_HTML_ATTRIBUTE_NAME = /^[^\\0\\t\\n\\f\\r /<=>]+$/;\n\n// Ignore the _recursing flag; it's there for recursive\n// invocation as a guard against this exploit:\n// https://github.com/fb55/htmlparser2/issues/105\n\nfunction sanitizeHtml(html, options, _recursing) {\n  let result = '';\n  // Used for hot swapping the result variable with an empty string in order to \"capture\" the text written to it.\n  let tempResult = '';\n\n  function Frame(tag, attribs) {\n    const that = this;\n    this.tag = tag;\n    this.attribs = attribs || {};\n    this.tagPosition = result.length;\n    this.text = ''; // Node inner text\n    this.mediaChildren = [];\n\n    this.updateParentNodeText = function() {\n      if (stack.length) {\n        const parentFrame = stack[stack.length - 1];\n        parentFrame.text += that.text;\n      }\n    };\n\n    this.updateParentNodeMediaChildren = function() {\n      if (stack.length && mediaTags.includes(this.tag)) {\n        const parentFrame = stack[stack.length - 1];\n        parentFrame.mediaChildren.push(this.tag);\n      }\n    };\n  }\n\n  options = Object.assign({}, sanitizeHtml.defaults, options);\n  options.parser = Object.assign({}, htmlParserDefaults, options.parser);\n\n  // vulnerableTags\n  vulnerableTags.forEach(function (tag) {\n    if (\n      options.allowedTags && options.allowedTags.indexOf(tag) > -1 &&\n      !options.allowVulnerableTags\n    ) {\n      console.warn(`\\n\\n⚠️ Your \\`allowedTags\\` option includes, \\`${tag}\\`, which is inherently\\nvulnerable to XSS attacks. Please remove it from \\`allowedTags\\`.\\nOr, to disable this warning, add the \\`allowVulnerableTags\\` option\\nand ensure you are accounting for this risk.\\n\\n`);\n    }\n  });\n\n  // Tags that contain something other than HTML, or where discarding\n  // the text when the tag is disallowed makes sense for other reasons.\n  // If we are not allowing these tags, we should drop their content too.\n  // For other tags you would drop the tag but keep its content.\n  const nonTextTagsArray = options.nonTextTags || [\n    'script',\n    'style',\n    'textarea',\n    'option'\n  ];\n  let allowedAttributesMap;\n  let allowedAttributesGlobMap;\n  if (options.allowedAttributes) {\n    allowedAttributesMap = {};\n    allowedAttributesGlobMap = {};\n    each(options.allowedAttributes, function(attributes, tag) {\n      allowedAttributesMap[tag] = [];\n      const globRegex = [];\n      attributes.forEach(function(obj) {\n        if (typeof obj === 'string' && obj.indexOf('*') >= 0) {\n          globRegex.push(escapeStringRegexp(obj).replace(/\\\\\\*/g, '.*'));\n        } else {\n          allowedAttributesMap[tag].push(obj);\n        }\n      });\n      allowedAttributesGlobMap[tag] = new RegExp('^(' + globRegex.join('|') + ')$');\n    });\n  }\n  const allowedClassesMap = {};\n  each(options.allowedClasses, function(classes, tag) {\n    // Implicitly allows the class attribute\n    if (allowedAttributesMap) {\n      if (!has(allowedAttributesMap, tag)) {\n        allowedAttributesMap[tag] = [];\n      }\n      allowedAttributesMap[tag].push('class');\n    }\n\n    allowedClassesMap[tag] = classes;\n  });\n\n  const transformTagsMap = {};\n  let transformTagsAll;\n  each(options.transformTags, function(transform, tag) {\n    let transFun;\n    if (typeof transform === 'function') {\n      transFun = transform;\n    } else if (typeof transform === 'string') {\n      transFun = sanitizeHtml.simpleTransform(transform);\n    }\n    if (tag === '*') {\n      transformTagsAll = transFun;\n    } else {\n      transformTagsMap[tag] = transFun;\n    }\n  });\n\n  let depth;\n  let stack;\n  let skipMap;\n  let transformMap;\n  let skipText;\n  let skipTextDepth;\n  let addedText = false;\n\n  initializeState();\n\n  const parser = new htmlparser.Parser({\n    onopentag: function(name, attribs) {\n      // If `enforceHtmlBoundary` is `true` and this has found the opening\n      // `html` tag, reset the state.\n      if (options.enforceHtmlBoundary && name === 'html') {\n        initializeState();\n      }\n\n      if (skipText) {\n        skipTextDepth++;\n        return;\n      }\n      const frame = new Frame(name, attribs);\n      stack.push(frame);\n\n      let skip = false;\n      const hasText = !!frame.text;\n      let transformedTag;\n      if (has(transformTagsMap, name)) {\n        transformedTag = transformTagsMap[name](name, attribs);\n\n        frame.attribs = attribs = transformedTag.attribs;\n\n        if (transformedTag.text !== undefined) {\n          frame.innerText = transformedTag.text;\n        }\n\n        if (name !== transformedTag.tagName) {\n          frame.name = name = transformedTag.tagName;\n          transformMap[depth] = transformedTag.tagName;\n        }\n      }\n      if (transformTagsAll) {\n        transformedTag = transformTagsAll(name, attribs);\n\n        frame.attribs = attribs = transformedTag.attribs;\n        if (name !== transformedTag.tagName) {\n          frame.name = name = transformedTag.tagName;\n          transformMap[depth] = transformedTag.tagName;\n        }\n      }\n\n      if ((options.allowedTags && options.allowedTags.indexOf(name) === -1) || (options.disallowedTagsMode === 'recursiveEscape' && !isEmptyObject(skipMap)) || (options.nestingLimit != null && depth >= options.nestingLimit)) {\n        skip = true;\n        skipMap[depth] = true;\n        if (options.disallowedTagsMode === 'discard') {\n          if (nonTextTagsArray.indexOf(name) !== -1) {\n            skipText = true;\n            skipTextDepth = 1;\n          }\n        }\n        skipMap[depth] = true;\n      }\n      depth++;\n      if (skip) {\n        if (options.disallowedTagsMode === 'discard') {\n          // We want the contents but not this tag\n          return;\n        }\n        tempResult = result;\n        result = '';\n      }\n      result += '<' + name;\n      if (!allowedAttributesMap || has(allowedAttributesMap, name) || allowedAttributesMap['*']) {\n        each(attribs, function(value, a) {\n          if (!VALID_HTML_ATTRIBUTE_NAME.test(a)) {\n            // This prevents part of an attribute name in the output from being\n            // interpreted as the end of an attribute, or end of a tag.\n            delete frame.attribs[a];\n            return;\n          }\n          let parsed;\n          // check allowedAttributesMap for the element and attribute and modify the value\n          // as necessary if there are specific values defined.\n          let passedAllowedAttributesMapCheck = false;\n          if (!allowedAttributesMap ||\n            (has(allowedAttributesMap, name) && allowedAttributesMap[name].indexOf(a) !== -1) ||\n            (allowedAttributesMap['*'] && allowedAttributesMap['*'].indexOf(a) !== -1) ||\n            (has(allowedAttributesGlobMap, name) && allowedAttributesGlobMap[name].test(a)) ||\n            (allowedAttributesGlobMap['*'] && allowedAttributesGlobMap['*'].test(a))) {\n            passedAllowedAttributesMapCheck = true;\n          } else if (allowedAttributesMap && allowedAttributesMap[name]) {\n            for (const o of allowedAttributesMap[name]) {\n              if (isPlainObject(o) && o.name && (o.name === a)) {\n                passedAllowedAttributesMapCheck = true;\n                let newValue = '';\n                if (o.multiple === true) {\n                  // verify the values that are allowed\n                  const splitStrArray = value.split(' ');\n                  for (const s of splitStrArray) {\n                    if (o.values.indexOf(s) !== -1) {\n                      if (newValue === '') {\n                        newValue = s;\n                      } else {\n                        newValue += ' ' + s;\n                      }\n                    }\n                  }\n                } else if (o.values.indexOf(value) >= 0) {\n                  // verified an allowed value matches the entire attribute value\n                  newValue = value;\n                }\n                value = newValue;\n              }\n            }\n          }\n          if (passedAllowedAttributesMapCheck) {\n            if (options.allowedSchemesAppliedToAttributes.indexOf(a) !== -1) {\n              if (naughtyHref(name, value)) {\n                delete frame.attribs[a];\n                return;\n              }\n            }\n            if (name === 'iframe' && a === 'src') {\n              let allowed = true;\n              try {\n                // Chrome accepts \\ as a substitute for / in the // at the\n                // start of a URL, so rewrite accordingly to prevent exploit.\n                // Also drop any whitespace at that point in the URL\n                value = value.replace(/^(\\w+:)?\\s*[\\\\/]\\s*[\\\\/]/, '$1//');\n                if (value.startsWith('relative:')) {\n                  // An attempt to exploit our workaround for base URLs being\n                  // mandatory for relative URL validation in the WHATWG\n                  // URL parser, reject it\n                  throw new Error('relative: exploit attempt');\n                }\n                // naughtyHref is in charge of whether protocol relative URLs\n                // are cool. Here we are concerned just with allowed hostnames and\n                // whether to allow relative URLs.\n                //\n                // Build a placeholder \"base URL\" against which any reasonable\n                // relative URL may be parsed successfully\n                let base = 'relative://relative-site';\n                for (let i = 0; (i < 100); i++) {\n                  base += `/${i}`;\n                }\n                const parsed = new URL(value, base);\n                const isRelativeUrl = parsed && parsed.hostname === 'relative-site' && parsed.protocol === 'relative:';\n                if (isRelativeUrl) {\n                  // default value of allowIframeRelativeUrls is true\n                  // unless allowedIframeHostnames or allowedIframeDomains specified\n                  allowed = has(options, 'allowIframeRelativeUrls')\n                    ? options.allowIframeRelativeUrls\n                    : (!options.allowedIframeHostnames && !options.allowedIframeDomains);\n                } else if (options.allowedIframeHostnames || options.allowedIframeDomains) {\n                  const allowedHostname = (options.allowedIframeHostnames || []).find(function (hostname) {\n                    return hostname === parsed.hostname;\n                  });\n                  const allowedDomain = (options.allowedIframeDomains || []).find(function(domain) {\n                    return parsed.hostname === domain || parsed.hostname.endsWith(`.${domain}`);\n                  });\n                  allowed = allowedHostname || allowedDomain;\n                }\n              } catch (e) {\n                // Unparseable iframe src\n                allowed = false;\n              }\n              if (!allowed) {\n                delete frame.attribs[a];\n                return;\n              }\n            }\n            if (a === 'srcset') {\n              try {\n                parsed = parseSrcset(value);\n                parsed.forEach(function(value) {\n                  if (naughtyHref('srcset', value.url)) {\n                    value.evil = true;\n                  }\n                });\n                parsed = filter(parsed, function(v) {\n                  return !v.evil;\n                });\n                if (!parsed.length) {\n                  delete frame.attribs[a];\n                  return;\n                } else {\n                  value = stringifySrcset(filter(parsed, function(v) {\n                    return !v.evil;\n                  }));\n                  frame.attribs[a] = value;\n                }\n              } catch (e) {\n                // Unparseable srcset\n                delete frame.attribs[a];\n                return;\n              }\n            }\n            if (a === 'class') {\n              const allowedSpecificClasses = allowedClassesMap[name];\n              const allowedWildcardClasses = allowedClassesMap['*'];\n              if (allowedSpecificClasses && allowedWildcardClasses) {\n                value = filterClasses(value, deepmerge(allowedSpecificClasses, allowedWildcardClasses));\n              } else {\n                value = filterClasses(value, allowedSpecificClasses || allowedWildcardClasses);\n              }\n              if (!value.length) {\n                delete frame.attribs[a];\n                return;\n              }\n            }\n            if (a === 'style') {\n              try {\n                const abstractSyntaxTree = postcssParse(name + ' {' + value + '}');\n                const filteredAST = filterCss(abstractSyntaxTree, options.allowedStyles);\n\n                value = stringifyStyleAttributes(filteredAST);\n\n                if (value.length === 0) {\n                  delete frame.attribs[a];\n                  return;\n                }\n              } catch (e) {\n                delete frame.attribs[a];\n                return;\n              }\n            }\n            result += ' ' + a;\n            if (value && value.length) {\n              result += '=\"' + escapeHtml(value, true) + '\"';\n            }\n          } else {\n            delete frame.attribs[a];\n          }\n        });\n      }\n      if (options.selfClosing.indexOf(name) !== -1) {\n        result += ' />';\n      } else {\n        result += '>';\n        if (frame.innerText && !hasText && !options.textFilter) {\n          result += escapeHtml(frame.innerText);\n          addedText = true;\n        }\n      }\n      if (skip) {\n        result = tempResult + escapeHtml(result);\n        tempResult = '';\n      }\n    },\n    ontext: function(text) {\n      if (skipText) {\n        return;\n      }\n      const lastFrame = stack[stack.length - 1];\n      let tag;\n\n      if (lastFrame) {\n        tag = lastFrame.tag;\n        // If inner text was set by transform function then let's use it\n        text = lastFrame.innerText !== undefined ? lastFrame.innerText : text;\n      }\n\n      if (options.disallowedTagsMode === 'discard' && ((tag === 'script') || (tag === 'style'))) {\n        // htmlparser2 gives us these as-is. Escaping them ruins the content. Allowing\n        // script tags is, by definition, game over for XSS protection, so if that's\n        // your concern, don't allow them. The same is essentially true for style tags\n        // which have their own collection of XSS vectors.\n        result += text;\n      } else {\n        const escaped = escapeHtml(text, false);\n        if (options.textFilter && !addedText) {\n          result += options.textFilter(escaped, tag);\n        } else if (!addedText) {\n          result += escaped;\n        }\n      }\n      if (stack.length) {\n        const frame = stack[stack.length - 1];\n        frame.text += text;\n      }\n    },\n    onclosetag: function(name) {\n\n      if (skipText) {\n        skipTextDepth--;\n        if (!skipTextDepth) {\n          skipText = false;\n        } else {\n          return;\n        }\n      }\n\n      const frame = stack.pop();\n      if (!frame) {\n        // Do not crash on bad markup\n        return;\n      }\n      skipText = options.enforceHtmlBoundary ? name === 'html' : false;\n      depth--;\n      const skip = skipMap[depth];\n      if (skip) {\n        delete skipMap[depth];\n        if (options.disallowedTagsMode === 'discard') {\n          frame.updateParentNodeText();\n          return;\n        }\n        tempResult = result;\n        result = '';\n      }\n\n      if (transformMap[depth]) {\n        name = transformMap[depth];\n        delete transformMap[depth];\n      }\n\n      if (options.exclusiveFilter && options.exclusiveFilter(frame)) {\n        result = result.substr(0, frame.tagPosition);\n        return;\n      }\n\n      frame.updateParentNodeMediaChildren();\n      frame.updateParentNodeText();\n\n      if (options.selfClosing.indexOf(name) !== -1) {\n        // Already output />\n        if (skip) {\n          result = tempResult;\n          tempResult = '';\n        }\n        return;\n      }\n\n      result += '</' + name + '>';\n      if (skip) {\n        result = tempResult + escapeHtml(result);\n        tempResult = '';\n      }\n    }\n  }, options.parser);\n  parser.write(html);\n  parser.end();\n\n  return result;\n\n  function initializeState() {\n    result = '';\n    depth = 0;\n    stack = [];\n    skipMap = {};\n    transformMap = {};\n    skipText = false;\n    skipTextDepth = 0;\n  }\n\n  function escapeHtml(s, quote) {\n    if (typeof (s) !== 'string') {\n      s = s + '';\n    }\n    if (options.parser.decodeEntities) {\n      s = s.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n      if (quote) {\n        s = s.replace(/\"/g, '&quot;');\n      }\n    }\n    // TODO: this is inadequate because it will pass `&0;`. This approach\n    // will not work, each & must be considered with regard to whether it\n    // is followed by a 100% syntactically valid entity or not, and escaped\n    // if it is not. If this bothers you, don't set parser.decodeEntities\n    // to false. (The default is true.)\n    s = s.replace(/&(?![a-zA-Z0-9#]{1,20};)/g, '&amp;') // Match ampersands not part of existing HTML entity\n      .replace(/</g, '&lt;')\n      .replace(/>/g, '&gt;');\n    if (quote) {\n      s = s.replace(/\"/g, '&quot;');\n    }\n    return s;\n  }\n\n  function naughtyHref(name, href) {\n    // Browsers ignore character codes of 32 (space) and below in a surprising\n    // number of situations. Start reading here:\n    // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet#Embedded_tab\n    // eslint-disable-next-line no-control-regex\n    href = href.replace(/[\\x00-\\x20]+/g, '');\n    // Clobber any comments in URLs, which the browser might\n    // interpret inside an XML data island, allowing\n    // a javascript: URL to be snuck through\n    href = href.replace(/<!--.*?-->/g, '');\n    // Case insensitive so we don't get faked out by JAVASCRIPT #1\n    const matches = href.match(/^([a-zA-Z]+):/);\n    if (!matches) {\n      // Protocol-relative URL starting with any combination of '/' and '\\'\n      if (href.match(/^[/\\\\]{2}/)) {\n        return !options.allowProtocolRelative;\n      }\n\n      // No scheme\n      return false;\n    }\n    const scheme = matches[1].toLowerCase();\n\n    if (has(options.allowedSchemesByTag, name)) {\n      return options.allowedSchemesByTag[name].indexOf(scheme) === -1;\n    }\n\n    return !options.allowedSchemes || options.allowedSchemes.indexOf(scheme) === -1;\n  }\n\n  /**\n   * Filters user input css properties by whitelisted regex attributes.\n   *\n   * @param {object} abstractSyntaxTree  - Object representation of CSS attributes.\n   * @property {array[Declaration]} abstractSyntaxTree.nodes[0] - Each object cointains prop and value key, i.e { prop: 'color', value: 'red' }.\n   * @param {object} allowedStyles       - Keys are properties (i.e color), value is list of permitted regex rules (i.e /green/i).\n   * @return {object}                    - Abstract Syntax Tree with filtered style attributes.\n   */\n  function filterCss(abstractSyntaxTree, allowedStyles) {\n    if (!allowedStyles) {\n      return abstractSyntaxTree;\n    }\n\n    const filteredAST = klona(abstractSyntaxTree);\n    const astRules = abstractSyntaxTree.nodes[0];\n    let selectedRule;\n\n    // Merge global and tag-specific styles into new AST.\n    if (allowedStyles[astRules.selector] && allowedStyles['*']) {\n      selectedRule = deepmerge(\n        allowedStyles[astRules.selector],\n        allowedStyles['*']\n      );\n    } else {\n      selectedRule = allowedStyles[astRules.selector] || allowedStyles['*'];\n    }\n\n    if (selectedRule) {\n      filteredAST.nodes[0].nodes = astRules.nodes.reduce(filterDeclarations(selectedRule), []);\n    }\n\n    return filteredAST;\n  }\n\n  /**\n   * Extracts the style attribues from an AbstractSyntaxTree and formats those\n   * values in the inline style attribute format.\n   *\n   * @param  {AbstractSyntaxTree} filteredAST\n   * @return {string}             - Example: \"color:yellow;text-align:center;font-family:helvetica;\"\n   */\n  function stringifyStyleAttributes(filteredAST) {\n    return filteredAST.nodes[0].nodes\n      .reduce(function(extractedAttributes, attributeObject) {\n        extractedAttributes.push(\n          attributeObject.prop + ':' + attributeObject.value\n        );\n        return extractedAttributes;\n      }, [])\n      .join(';');\n  }\n\n  /**\n    * Filters the existing attributes for the given property. Discards any attributes\n    * which don't match the whitelist.\n    *\n    * @param  {object} selectedRule             - Example: { color: red, font-family: helvetica }\n    * @param  {array} allowedDeclarationsList   - List of declarations which pass whitelisting.\n    * @param  {object} attributeObject          - Object representing the current css property.\n    * @property {string} attributeObject.type   - Typically 'declaration'.\n    * @property {string} attributeObject.prop   - The CSS property, i.e 'color'.\n    * @property {string} attributeObject.value  - The corresponding value to the css property, i.e 'red'.\n    * @return {function}                        - When used in Array.reduce, will return an array of Declaration objects\n    */\n  function filterDeclarations(selectedRule) {\n    return function (allowedDeclarationsList, attributeObject) {\n      // If this property is whitelisted...\n      if (has(selectedRule, attributeObject.prop)) {\n        const matchesRegex = selectedRule[attributeObject.prop].some(function(regularExpression) {\n          return regularExpression.test(attributeObject.value);\n        });\n\n        if (matchesRegex) {\n          allowedDeclarationsList.push(attributeObject);\n        }\n      }\n      return allowedDeclarationsList;\n    };\n  }\n\n  function filterClasses(classes, allowed) {\n    if (!allowed) {\n      // The class attribute is allowed without filtering on this tag\n      return classes;\n    }\n    classes = classes.split(/\\s+/);\n    return classes.filter(function(clss) {\n      return allowed.indexOf(clss) !== -1;\n    }).join(' ');\n  }\n}\n\n// Defaults are accessible to you so that you can use them as a starting point\n// programmatically if you wish\n\nconst htmlParserDefaults = {\n  decodeEntities: true\n};\nsanitizeHtml.defaults = {\n  allowedTags: [\n    // Sections derived from MDN element categories and limited to the more\n    // benign categories.\n    // https://developer.mozilla.org/en-US/docs/Web/HTML/Element\n    // Content sectioning\n    'address', 'article', 'aside', 'footer', 'header',\n    'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'hgroup',\n    'main', 'nav', 'section',\n    // Text content\n    'blockquote', 'dd', 'div', 'dl', 'dt', 'figcaption', 'figure',\n    'hr', 'li', 'main', 'ol', 'p', 'pre', 'ul',\n    // Inline text semantics\n    'a', 'abbr', 'b', 'bdi', 'bdo', 'br', 'cite', 'code', 'data', 'dfn',\n    'em', 'i', 'kbd', 'mark', 'q',\n    'rb', 'rp', 'rt', 'rtc', 'ruby',\n    's', 'samp', 'small', 'span', 'strong', 'sub', 'sup', 'time', 'u', 'var', 'wbr',\n    // Table content\n    'caption', 'col', 'colgroup', 'table', 'tbody', 'td', 'tfoot', 'th',\n    'thead', 'tr'\n  ],\n  disallowedTagsMode: 'discard',\n  allowedAttributes: {\n    a: [ 'href', 'name', 'target' ],\n    // We don't currently allow img itself by default, but this\n    // would make sense if we did. You could add srcset here,\n    // and if you do the URL is checked for safety\n    img: [ 'src' ]\n  },\n  // Lots of these won't come up by default because we don't allow them\n  selfClosing: [ 'img', 'br', 'hr', 'area', 'base', 'basefont', 'input', 'link', 'meta' ],\n  // URL schemes we permit\n  allowedSchemes: [ 'http', 'https', 'ftp', 'mailto', 'tel' ],\n  allowedSchemesByTag: {},\n  allowedSchemesAppliedToAttributes: [ 'href', 'src', 'cite' ],\n  allowProtocolRelative: true,\n  enforceHtmlBoundary: false\n};\n\nsanitizeHtml.simpleTransform = function(newTagName, newAttribs, merge) {\n  merge = (merge === undefined) ? true : merge;\n  newAttribs = newAttribs || {};\n\n  return function(tagName, attribs) {\n    let attrib;\n    if (merge) {\n      for (attrib in newAttribs) {\n        attribs[attrib] = newAttribs[attrib];\n      }\n    } else {\n      attribs = newAttribs;\n    }\n\n    return {\n      tagName: newTagName,\n      attribs: attribs\n    };\n  };\n};\n"],"sourceRoot":""}