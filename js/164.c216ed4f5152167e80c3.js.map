{"version":3,"sources":["webpack://insights-inventory-frontend/./node_modules/lodash/_arrayIncludes.js","webpack://insights-inventory-frontend/./node_modules/lodash/_arrayIncludesWith.js","webpack://insights-inventory-frontend/./node_modules/lodash/_baseIndexOf.js","webpack://insights-inventory-frontend/./node_modules/lodash/_baseIsNaN.js","webpack://insights-inventory-frontend/./node_modules/lodash/_baseUniq.js","webpack://insights-inventory-frontend/./node_modules/lodash/_createSet.js","webpack://insights-inventory-frontend/./node_modules/lodash/_strictIndexOf.js","webpack://insights-inventory-frontend/./node_modules/lodash/last.js","webpack://insights-inventory-frontend/./node_modules/lodash/noop.js","webpack://insights-inventory-frontend/./node_modules/lodash/union.js","webpack://insights-inventory-frontend/./node_modules/lodash/unionWith.js","webpack://insights-inventory-frontend/./node_modules/react-intl/lib/src/components/message.js","webpack://insights-inventory-frontend/./node_modules/seamless-immutable/seamless-immutable.development.js"],"names":["baseIndexOf","module","exports","array","value","length","comparator","index","baseFindIndex","baseIsNaN","strictIndexOf","fromIndex","SetCache","arrayIncludes","arrayIncludesWith","cacheHas","createSet","setToArray","iteratee","includes","isCommon","result","seen","set","outer","computed","seenIndex","push","Set","noop","values","undefined","baseFlatten","baseRest","baseUniq","isArrayLikeObject","union","arrays","last","unionWith","FormattedMessage","props","intl","formatMessage","_a","textComponent","Text","id","description","defaultMessage","children","_b","tagName","Component","nodes","ignoreTag","Array","isArray","prevProps","nextProps","otherProps","nextValues","nextOtherProps","displayName","Immutable","immutableInit","config","data","REACT_ELEMENT_TYPE","Symbol","for","globalConfig","use_static","instantiateEmptyObject","obj","prototype","Object","getPrototypeOf","create","addPropertyTo","target","methodName","defineProperty","enumerable","configurable","writable","banProperty","ImmutableError","Boolean","immutabilityTag","isImmutable","getOwnPropertyDescriptor","isEqual","a","b","isMergableObject","Date","mutatingObjectMethods","mutatingArrayMethods","concat","nonMutatingArrayMethods","mutatingDateMethods","message","this","name","stack","Error","makeImmutable","bannedMethods","hasOwnProperty","freeze","makeMethodReturnImmutable","currentMethod","apply","arguments","arraySet","idx","deep","merge","mode","mutable","asMutableArray","call","makeImmutableArray","constructor","immutableEmptyArray","arraySetIn","pth","head","newValue","tail","slice","thisHead","setIn","nextHead","isFinite","objectSetIn","immutableEmptyObject","flatMap","asObject","update","updateIn","getIn","i","asMutableDate","getTime","iterator","iteratorResult","without","remove","keysToRemoveArray","forEach","el","arr","toString","val","key","indexOf","makeImmutableObject","opts","asDeepMutable","pair","asMutable","quickCopy","src","dest","other","TypeError","JSON","stringify","receivedArray","merger","addToResult","currentObj","otherObj","immutableValue","mergerResult","currentValue","clearDroppedKeys","otherFromArray","objectReplace","fnObject","fnArray","fnDate","path","objectSet","property","updater","restArgs","initialVal","getInPath","l","defaultValue","asMutableObject","instantiatePlainObject","options","stackRemaining","$$typeof","isReactElement","File","isFileObject","Blob","isBlobObject","isError","then","isPromise","date","clone","toStatic","fn","args","self","shift","toStaticObjectOrArray","from","replace","static"],"mappings":"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","file":"js/164.c216ed4f5152167e80c3.js","sourcesContent":["var baseIndexOf = require('./_baseIndexOf');\n\n/**\n * A specialized version of `_.includes` for arrays without support for\n * specifying an index to search from.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludes(array, value) {\n  var length = array == null ? 0 : array.length;\n  return !!length && baseIndexOf(array, value, 0) > -1;\n}\n\nmodule.exports = arrayIncludes;\n","/**\n * This function is like `arrayIncludes` except that it accepts a comparator.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @param {Function} comparator The comparator invoked per element.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludesWith(array, value, comparator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (comparator(value, array[index])) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arrayIncludesWith;\n","var baseFindIndex = require('./_baseFindIndex'),\n    baseIsNaN = require('./_baseIsNaN'),\n    strictIndexOf = require('./_strictIndexOf');\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  return value === value\n    ? strictIndexOf(array, value, fromIndex)\n    : baseFindIndex(array, baseIsNaN, fromIndex);\n}\n\nmodule.exports = baseIndexOf;\n","/**\n * The base implementation of `_.isNaN` without support for number objects.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */\nfunction baseIsNaN(value) {\n  return value !== value;\n}\n\nmodule.exports = baseIsNaN;\n","var SetCache = require('./_SetCache'),\n    arrayIncludes = require('./_arrayIncludes'),\n    arrayIncludesWith = require('./_arrayIncludesWith'),\n    cacheHas = require('./_cacheHas'),\n    createSet = require('./_createSet'),\n    setToArray = require('./_setToArray');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n */\nfunction baseUniq(array, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      length = array.length,\n      isCommon = true,\n      result = [],\n      seen = result;\n\n  if (comparator) {\n    isCommon = false;\n    includes = arrayIncludesWith;\n  }\n  else if (length >= LARGE_ARRAY_SIZE) {\n    var set = iteratee ? null : createSet(array);\n    if (set) {\n      return setToArray(set);\n    }\n    isCommon = false;\n    includes = cacheHas;\n    seen = new SetCache;\n  }\n  else {\n    seen = iteratee ? [] : result;\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var seenIndex = seen.length;\n      while (seenIndex--) {\n        if (seen[seenIndex] === computed) {\n          continue outer;\n        }\n      }\n      if (iteratee) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n    else if (!includes(seen, computed, comparator)) {\n      if (seen !== result) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseUniq;\n","var Set = require('./_Set'),\n    noop = require('./noop'),\n    setToArray = require('./_setToArray');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Creates a set object of `values`.\n *\n * @private\n * @param {Array} values The values to add to the set.\n * @returns {Object} Returns the new set.\n */\nvar createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n  return new Set(values);\n};\n\nmodule.exports = createSet;\n","/**\n * A specialized version of `_.indexOf` which performs strict equality\n * comparisons of values, i.e. `===`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction strictIndexOf(array, value, fromIndex) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = strictIndexOf;\n","/**\n * Gets the last element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the last element of `array`.\n * @example\n *\n * _.last([1, 2, 3]);\n * // => 3\n */\nfunction last(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? array[length - 1] : undefined;\n}\n\nmodule.exports = last;\n","/**\n * This method returns `undefined`.\n *\n * @static\n * @memberOf _\n * @since 2.3.0\n * @category Util\n * @example\n *\n * _.times(2, _.noop);\n * // => [undefined, undefined]\n */\nfunction noop() {\n  // No operation performed.\n}\n\nmodule.exports = noop;\n","var baseFlatten = require('./_baseFlatten'),\n    baseRest = require('./_baseRest'),\n    baseUniq = require('./_baseUniq'),\n    isArrayLikeObject = require('./isArrayLikeObject');\n\n/**\n * Creates an array of unique values, in order, from all given arrays using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @returns {Array} Returns the new array of combined values.\n * @example\n *\n * _.union([2], [1, 2]);\n * // => [2, 1]\n */\nvar union = baseRest(function(arrays) {\n  return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n});\n\nmodule.exports = union;\n","var baseFlatten = require('./_baseFlatten'),\n    baseRest = require('./_baseRest'),\n    baseUniq = require('./_baseUniq'),\n    isArrayLikeObject = require('./isArrayLikeObject'),\n    last = require('./last');\n\n/**\n * This method is like `_.union` except that it accepts `comparator` which\n * is invoked to compare elements of `arrays`. Result values are chosen from\n * the first array in which the value occurs. The comparator is invoked\n * with two arguments: (arrVal, othVal).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of combined values.\n * @example\n *\n * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n *\n * _.unionWith(objects, others, _.isEqual);\n * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n */\nvar unionWith = baseRest(function(arrays) {\n  var comparator = last(arrays);\n  comparator = typeof comparator == 'function' ? comparator : undefined;\n  return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n});\n\nmodule.exports = unionWith;\n","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nimport { __rest, __spreadArray } from \"tslib\";\nimport * as React from 'react';\nimport useIntl from './useIntl';\nimport { shallowEqual } from '../utils';\nfunction areEqual(prevProps, nextProps) {\n    var values = prevProps.values, otherProps = __rest(prevProps, [\"values\"]);\n    var nextValues = nextProps.values, nextOtherProps = __rest(nextProps, [\"values\"]);\n    return (shallowEqual(nextValues, values) &&\n        shallowEqual(otherProps, nextOtherProps));\n}\nvar FormattedMessage = React.memo(function (props) {\n    var intl = useIntl();\n    var formatMessage = intl.formatMessage, _a = intl.textComponent, Text = _a === void 0 ? React.Fragment : _a;\n    var id = props.id, description = props.description, defaultMessage = props.defaultMessage, values = props.values, children = props.children, _b = props.tagName, Component = _b === void 0 ? Text : _b, ignoreTag = props.ignoreTag;\n    var descriptor = { id: id, description: description, defaultMessage: defaultMessage };\n    var nodes = formatMessage(descriptor, values, {\n        ignoreTag: ignoreTag,\n    });\n    if (!Array.isArray(nodes)) {\n        nodes = [nodes];\n    }\n    if (typeof children === 'function') {\n        return children(nodes);\n    }\n    if (Component) {\n        // Needs to use `createElement()` instead of JSX, otherwise React will\n        // warn about a missing `key` prop with rich-text message formatting.\n        return React.createElement.apply(React, __spreadArray([Component, null], nodes));\n    }\n    return React.createElement(React.Fragment, null, nodes);\n}, areEqual);\nFormattedMessage.displayName = 'FormattedMessage';\nexport default FormattedMessage;\n","(function() {\n  \"use strict\";\n\nfunction immutableInit(config) {\n\n  // https://github.com/facebook/react/blob/v15.0.1/src/isomorphic/classic/element/ReactElement.js#L21\n  var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol.for && Symbol.for('react.element');\n  var REACT_ELEMENT_TYPE_FALLBACK = 0xeac7;\n\n  var globalConfig = {\n    use_static: false\n  };\n  if (isObject(config)) {\n      if (config.use_static !== undefined) {\n          globalConfig.use_static = Boolean(config.use_static);\n      }\n  }\n\n  function isObject(data) {\n    return (\n      typeof data === 'object' &&\n      !Array.isArray(data) &&\n      data !== null\n    );\n  }\n\n  function instantiateEmptyObject(obj) {\n      var prototype = Object.getPrototypeOf(obj);\n      if (!prototype) {\n          return {};\n      } else {\n          return Object.create(prototype);\n      }\n  }\n\n  function addPropertyTo(target, methodName, value) {\n    Object.defineProperty(target, methodName, {\n      enumerable: false,\n      configurable: false,\n      writable: false,\n      value: value\n    });\n  }\n\n  function banProperty(target, methodName) {\n    addPropertyTo(target, methodName, function() {\n      throw new ImmutableError(\"The \" + methodName +\n        \" method cannot be invoked on an Immutable data structure.\");\n    });\n  }\n\n  var immutabilityTag = \"__immutable_invariants_hold\";\n\n  function addImmutabilityTag(target) {\n    addPropertyTo(target, immutabilityTag, true);\n  }\n\n  function isImmutable(target) {\n    if (typeof target === \"object\") {\n      return target === null || Boolean(\n        Object.getOwnPropertyDescriptor(target, immutabilityTag)\n      );\n    } else {\n      // In JavaScript, only objects are even potentially mutable.\n      // strings, numbers, null, and undefined are all naturally immutable.\n      return true;\n    }\n  }\n\n  function isEqual(a, b) {\n    // Avoid false positives due to (NaN !== NaN) evaluating to true\n    return (a === b || (a !== a && b !== b));\n  }\n\n  function isMergableObject(target) {\n    return target !== null && typeof target === \"object\" && !(Array.isArray(target)) && !(target instanceof Date);\n  }\n\n  var mutatingObjectMethods = [\n    \"setPrototypeOf\"\n  ];\n\n  var nonMutatingObjectMethods = [\n    \"keys\"\n  ];\n\n  var mutatingArrayMethods = mutatingObjectMethods.concat([\n    \"push\", \"pop\", \"sort\", \"splice\", \"shift\", \"unshift\", \"reverse\"\n  ]);\n\n  var nonMutatingArrayMethods = nonMutatingObjectMethods.concat([\n    \"map\", \"filter\", \"slice\", \"concat\", \"reduce\", \"reduceRight\"\n  ]);\n\n  var mutatingDateMethods = mutatingObjectMethods.concat([\n    \"setDate\", \"setFullYear\", \"setHours\", \"setMilliseconds\", \"setMinutes\", \"setMonth\", \"setSeconds\",\n    \"setTime\", \"setUTCDate\", \"setUTCFullYear\", \"setUTCHours\", \"setUTCMilliseconds\", \"setUTCMinutes\",\n    \"setUTCMonth\", \"setUTCSeconds\", \"setYear\"\n  ]);\n\n  function ImmutableError(message) {\n    this.name = 'MyError';\n    this.message = message;\n    this.stack = (new Error()).stack;\n  }\n  ImmutableError.prototype = new Error();\n  ImmutableError.prototype.constructor = Error;\n\n  function makeImmutable(obj, bannedMethods) {\n    // Tag it so we can quickly tell it's immutable later.\n    addImmutabilityTag(obj);\n\n    if (\"development\" !== \"production\") {\n      // Make all mutating methods throw exceptions.\n      for (var index in bannedMethods) {\n        if (bannedMethods.hasOwnProperty(index)) {\n          banProperty(obj, bannedMethods[index]);\n        }\n      }\n\n      // Freeze it and return it.\n      Object.freeze(obj);\n    }\n\n    return obj;\n  }\n\n  function makeMethodReturnImmutable(obj, methodName) {\n    var currentMethod = obj[methodName];\n\n    addPropertyTo(obj, methodName, function() {\n      return Immutable(currentMethod.apply(obj, arguments));\n    });\n  }\n\n  function arraySet(idx, value, config) {\n    var deep          = config && config.deep;\n\n    if (idx in this) {\n      if (deep && this[idx] !== value && isMergableObject(value) && isMergableObject(this[idx])) {\n        value = Immutable.merge(this[idx], value, {deep: true, mode: 'replace'});\n      }\n      if (isEqual(this[idx], value)) {\n        return this;\n      }\n    }\n\n    var mutable = asMutableArray.call(this);\n    mutable[idx] = Immutable(value);\n    return makeImmutableArray(mutable);\n  }\n\n  var immutableEmptyArray = Immutable([]);\n\n  function arraySetIn(pth, value, config) {\n    var head = pth[0];\n\n    if (pth.length === 1) {\n      return arraySet.call(this, head, value, config);\n    } else {\n      var tail = pth.slice(1);\n      var thisHead = this[head];\n      var newValue;\n\n      if (typeof(thisHead) === \"object\" && thisHead !== null) {\n        // Might (validly) be object or array\n        newValue = Immutable.setIn(thisHead, tail, value);\n      } else {\n        var nextHead = tail[0];\n        // If the next path part is a number, then we are setting into an array, else an object.\n        if (nextHead !== '' && isFinite(nextHead)) {\n          newValue = arraySetIn.call(immutableEmptyArray, tail, value);\n        } else {\n          newValue = objectSetIn.call(immutableEmptyObject, tail, value);\n        }\n      }\n\n      if (head in this && thisHead === newValue) {\n        return this;\n      }\n\n      var mutable = asMutableArray.call(this);\n      mutable[head] = newValue;\n      return makeImmutableArray(mutable);\n    }\n  }\n\n  function makeImmutableArray(array) {\n    // Don't change their implementations, but wrap these functions to make sure\n    // they always return an immutable value.\n    for (var index in nonMutatingArrayMethods) {\n      if (nonMutatingArrayMethods.hasOwnProperty(index)) {\n        var methodName = nonMutatingArrayMethods[index];\n        makeMethodReturnImmutable(array, methodName);\n      }\n    }\n\n    if (!globalConfig.use_static) {\n      addPropertyTo(array, \"flatMap\",  flatMap);\n      addPropertyTo(array, \"asObject\", asObject);\n      addPropertyTo(array, \"asMutable\", asMutableArray);\n      addPropertyTo(array, \"set\", arraySet);\n      addPropertyTo(array, \"setIn\", arraySetIn);\n      addPropertyTo(array, \"update\", update);\n      addPropertyTo(array, \"updateIn\", updateIn);\n      addPropertyTo(array, \"getIn\", getIn);\n    }\n\n    for(var i = 0, length = array.length; i < length; i++) {\n      array[i] = Immutable(array[i]);\n    }\n\n    return makeImmutable(array, mutatingArrayMethods);\n  }\n\n  function makeImmutableDate(date) {\n    if (!globalConfig.use_static) {\n      addPropertyTo(date, \"asMutable\", asMutableDate);\n    }\n\n    return makeImmutable(date, mutatingDateMethods);\n  }\n\n  function asMutableDate() {\n    return new Date(this.getTime());\n  }\n\n  /**\n   * Effectively performs a map() over the elements in the array, using the\n   * provided iterator, except that whenever the iterator returns an array, that\n   * array's elements are added to the final result instead of the array itself.\n   *\n   * @param {function} iterator - The iterator function that will be invoked on each element in the array. It will receive three arguments: the current value, the current index, and the current object.\n   */\n  function flatMap(iterator) {\n    // Calling .flatMap() with no arguments is a no-op. Don't bother cloning.\n    if (arguments.length === 0) {\n      return this;\n    }\n\n    var result = [],\n        length = this.length,\n        index;\n\n    for (index = 0; index < length; index++) {\n      var iteratorResult = iterator(this[index], index, this);\n\n      if (Array.isArray(iteratorResult)) {\n        // Concatenate Array results into the return value we're building up.\n        result.push.apply(result, iteratorResult);\n      } else {\n        // Handle non-Array results the same way map() does.\n        result.push(iteratorResult);\n      }\n    }\n\n    return makeImmutableArray(result);\n  }\n\n  /**\n   * Returns an Immutable copy of the object without the given keys included.\n   *\n   * @param {array} keysToRemove - A list of strings representing the keys to exclude in the return value. Instead of providing a single array, this method can also be called by passing multiple strings as separate arguments.\n   */\n  function without(remove) {\n    // Calling .without() with no arguments is a no-op. Don't bother cloning.\n    if (typeof remove === \"undefined\" && arguments.length === 0) {\n      return this;\n    }\n\n    if (typeof remove !== \"function\") {\n      // If we weren't given an array, use the arguments list.\n      var keysToRemoveArray = (Array.isArray(remove)) ?\n         remove.slice() : Array.prototype.slice.call(arguments);\n\n      // Convert numeric keys to strings since that's how they'll\n      // come from the enumeration of the object.\n      keysToRemoveArray.forEach(function(el, idx, arr) {\n        if(typeof(el) === \"number\") {\n          arr[idx] = el.toString();\n        }\n      });\n\n      remove = function(val, key) {\n        return keysToRemoveArray.indexOf(key) !== -1;\n      };\n    }\n\n    var result = instantiateEmptyObject(this);\n\n    for (var key in this) {\n      if (this.hasOwnProperty(key) && remove(this[key], key) === false) {\n        result[key] = this[key];\n      }\n    }\n\n    return makeImmutableObject(result);\n  }\n\n  function asMutableArray(opts) {\n    var result = [], i, length;\n\n    if(opts && opts.deep) {\n      for(i = 0, length = this.length; i < length; i++) {\n        result.push(asDeepMutable(this[i]));\n      }\n    } else {\n      for(i = 0, length = this.length; i < length; i++) {\n        result.push(this[i]);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * Effectively performs a [map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map) over the elements in the array, expecting that the iterator function\n   * will return an array of two elements - the first representing a key, the other\n   * a value. Then returns an Immutable Object constructed of those keys and values.\n   *\n   * @param {function} iterator - A function which should return an array of two elements - the first representing the desired key, the other the desired value.\n   */\n  function asObject(iterator) {\n    // If no iterator was provided, assume the identity function\n    // (suggesting this array is already a list of key/value pairs.)\n    if (typeof iterator !== \"function\") {\n      iterator = function(value) { return value; };\n    }\n\n    var result = {},\n        length = this.length,\n        index;\n\n    for (index = 0; index < length; index++) {\n      var pair  = iterator(this[index], index, this),\n          key   = pair[0],\n          value = pair[1];\n\n      result[key] = value;\n    }\n\n    return makeImmutableObject(result);\n  }\n\n  function asDeepMutable(obj) {\n    if (\n      (!obj) ||\n      (typeof obj !== 'object') ||\n      (!Object.getOwnPropertyDescriptor(obj, immutabilityTag)) ||\n      (obj instanceof Date)\n    ) { return obj; }\n    return Immutable.asMutable(obj, {deep: true});\n  }\n\n  function quickCopy(src, dest) {\n    for (var key in src) {\n      if (Object.getOwnPropertyDescriptor(src, key)) {\n        dest[key] = src[key];\n      }\n    }\n\n    return dest;\n  }\n\n  /**\n   * Returns an Immutable Object containing the properties and values of both\n   * this object and the provided object, prioritizing the provided object's\n   * values whenever the same key is present in both objects.\n   *\n   * @param {object} other - The other object to merge. Multiple objects can be passed as an array. In such a case, the later an object appears in that list, the higher its priority.\n   * @param {object} config - Optional config object that contains settings. Supported settings are: {deep: true} for deep merge and {merger: mergerFunc} where mergerFunc is a function\n   *                          that takes a property from both objects. If anything is returned it overrides the normal merge behaviour.\n   */\n  function merge(other, config) {\n    // Calling .merge() with no arguments is a no-op. Don't bother cloning.\n    if (arguments.length === 0) {\n      return this;\n    }\n\n    if (other === null || (typeof other !== \"object\")) {\n      throw new TypeError(\"Immutable#merge can only be invoked with objects or arrays, not \" + JSON.stringify(other));\n    }\n\n    var receivedArray = (Array.isArray(other)),\n        deep          = config && config.deep,\n        mode          = config && config.mode || 'merge',\n        merger        = config && config.merger,\n        result;\n\n    // Use the given key to extract a value from the given object, then place\n    // that value in the result object under the same key. If that resulted\n    // in a change from this object's value at that key, set anyChanges = true.\n    function addToResult(currentObj, otherObj, key) {\n      var immutableValue = Immutable(otherObj[key]);\n      var mergerResult = merger && merger(currentObj[key], immutableValue, config);\n      var currentValue = currentObj[key];\n\n      if ((result !== undefined) ||\n        (mergerResult !== undefined) ||\n        (!currentObj.hasOwnProperty(key)) ||\n        !isEqual(immutableValue, currentValue)) {\n\n        var newValue;\n\n        if (mergerResult !== undefined) {\n          newValue = mergerResult;\n        } else if (deep && isMergableObject(currentValue) && isMergableObject(immutableValue)) {\n          newValue = Immutable.merge(currentValue, immutableValue, config);\n        } else {\n          newValue = immutableValue;\n        }\n\n        if (!isEqual(currentValue, newValue) || !currentObj.hasOwnProperty(key)) {\n          if (result === undefined) {\n            // Make a shallow clone of the current object.\n            result = quickCopy(currentObj, instantiateEmptyObject(currentObj));\n          }\n\n          result[key] = newValue;\n        }\n      }\n    }\n\n    function clearDroppedKeys(currentObj, otherObj) {\n      for (var key in currentObj) {\n        if (!otherObj.hasOwnProperty(key)) {\n          if (result === undefined) {\n            // Make a shallow clone of the current object.\n            result = quickCopy(currentObj, instantiateEmptyObject(currentObj));\n          }\n          delete result[key];\n        }\n      }\n    }\n\n    var key;\n\n    // Achieve prioritization by overriding previous values that get in the way.\n    if (!receivedArray) {\n      // The most common use case: just merge one object into the existing one.\n      for (key in other) {\n        if (Object.getOwnPropertyDescriptor(other, key)) {\n          addToResult(this, other, key);\n        }\n      }\n      if (mode === 'replace') {\n        clearDroppedKeys(this, other);\n      }\n    } else {\n      // We also accept an Array\n      for (var index = 0, length = other.length; index < length; index++) {\n        var otherFromArray = other[index];\n\n        for (key in otherFromArray) {\n          if (otherFromArray.hasOwnProperty(key)) {\n            addToResult(result !== undefined ? result : this, otherFromArray, key);\n          }\n        }\n      }\n    }\n\n    if (result === undefined) {\n      return this;\n    } else {\n      return makeImmutableObject(result);\n    }\n  }\n\n  function objectReplace(value, config) {\n    var deep          = config && config.deep;\n\n    // Calling .replace() with no arguments is a no-op. Don't bother cloning.\n    if (arguments.length === 0) {\n      return this;\n    }\n\n    if (value === null || typeof value !== \"object\") {\n      throw new TypeError(\"Immutable#replace can only be invoked with objects or arrays, not \" + JSON.stringify(value));\n    }\n\n    return Immutable.merge(this, value, {deep: deep, mode: 'replace'});\n  }\n\n  var immutableEmptyObject = Immutable({});\n\n  function objectSetIn(path, value, config) {\n    if (!(Array.isArray(path)) || path.length === 0) {\n      throw new TypeError(\"The first argument to Immutable#setIn must be an array containing at least one \\\"key\\\" string.\");\n    }\n\n    var head = path[0];\n    if (path.length === 1) {\n      return objectSet.call(this, head, value, config);\n    }\n\n    var tail = path.slice(1);\n    var newValue;\n    var thisHead = this[head];\n\n    if (this.hasOwnProperty(head) && typeof(thisHead) === \"object\" && thisHead !== null) {\n      // Might (validly) be object or array\n      newValue = Immutable.setIn(thisHead, tail, value);\n    } else {\n      newValue = objectSetIn.call(immutableEmptyObject, tail, value);\n    }\n\n    if (this.hasOwnProperty(head) && thisHead === newValue) {\n      return this;\n    }\n\n    var mutable = quickCopy(this, instantiateEmptyObject(this));\n    mutable[head] = newValue;\n    return makeImmutableObject(mutable);\n  }\n\n  function objectSet(property, value, config) {\n    var deep          = config && config.deep;\n\n    if (this.hasOwnProperty(property)) {\n      if (deep && this[property] !== value && isMergableObject(value) && isMergableObject(this[property])) {\n        value = Immutable.merge(this[property], value, {deep: true, mode: 'replace'});\n      }\n      if (isEqual(this[property], value)) {\n        return this;\n      }\n    }\n\n    var mutable = quickCopy(this, instantiateEmptyObject(this));\n    mutable[property] = Immutable(value);\n    return makeImmutableObject(mutable);\n  }\n\n  function update(property, updater) {\n    var restArgs = Array.prototype.slice.call(arguments, 2);\n    var initialVal = this[property];\n    return Immutable.set(this, property, updater.apply(initialVal, [initialVal].concat(restArgs)));\n  }\n\n  function getInPath(obj, path) {\n    /*jshint eqnull:true */\n    for (var i = 0, l = path.length; obj != null && i < l; i++) {\n      obj = obj[path[i]];\n    }\n\n    return (i && i == l) ? obj : undefined;\n  }\n\n  function updateIn(path, updater) {\n    var restArgs = Array.prototype.slice.call(arguments, 2);\n    var initialVal = getInPath(this, path);\n\n    return Immutable.setIn(this, path, updater.apply(initialVal, [initialVal].concat(restArgs)));\n  }\n\n  function getIn(path, defaultValue) {\n    var value = getInPath(this, path);\n    return value === undefined ? defaultValue : value;\n  }\n\n  function asMutableObject(opts) {\n    var result = instantiateEmptyObject(this), key;\n\n    if(opts && opts.deep) {\n      for (key in this) {\n        if (this.hasOwnProperty(key)) {\n          result[key] = asDeepMutable(this[key]);\n        }\n      }\n    } else {\n      for (key in this) {\n        if (this.hasOwnProperty(key)) {\n          result[key] = this[key];\n        }\n      }\n    }\n\n    return result;\n  }\n\n  // Creates plain object to be used for cloning\n  function instantiatePlainObject() {\n    return {};\n  }\n\n  // Finalizes an object with immutable methods, freezes it, and returns it.\n  function makeImmutableObject(obj) {\n    if (!globalConfig.use_static) {\n      addPropertyTo(obj, \"merge\", merge);\n      addPropertyTo(obj, \"replace\", objectReplace);\n      addPropertyTo(obj, \"without\", without);\n      addPropertyTo(obj, \"asMutable\", asMutableObject);\n      addPropertyTo(obj, \"set\", objectSet);\n      addPropertyTo(obj, \"setIn\", objectSetIn);\n      addPropertyTo(obj, \"update\", update);\n      addPropertyTo(obj, \"updateIn\", updateIn);\n      addPropertyTo(obj, \"getIn\", getIn);\n    }\n\n    return makeImmutable(obj, mutatingObjectMethods);\n  }\n\n  // Returns true if object is a valid react element\n  // https://github.com/facebook/react/blob/v15.0.1/src/isomorphic/classic/element/ReactElement.js#L326\n  function isReactElement(obj) {\n    return typeof obj === 'object' &&\n           obj !== null &&\n           (obj.$$typeof === REACT_ELEMENT_TYPE_FALLBACK || obj.$$typeof === REACT_ELEMENT_TYPE);\n  }\n\n  function isFileObject(obj) {\n    return typeof File !== 'undefined' &&\n           obj instanceof File;\n  }\n\n  function isBlobObject(obj) {\n    return typeof Blob !== 'undefined' &&\n           obj instanceof Blob;\n  }\n\n  function isPromise(obj) {\n    return typeof obj === 'object' &&\n           typeof obj.then === 'function';\n  }\n\n  function isError(obj) {\n    return obj instanceof Error;\n  }\n\n  function Immutable(obj, options, stackRemaining) {\n    if (isImmutable(obj) || isReactElement(obj) || isFileObject(obj) || isBlobObject(obj) || isError(obj)) {\n      return obj;\n    } else if (isPromise(obj)) {\n      return obj.then(Immutable);\n    } else if (Array.isArray(obj)) {\n      return makeImmutableArray(obj.slice());\n    } else if (obj instanceof Date) {\n      return makeImmutableDate(new Date(obj.getTime()));\n    } else {\n      // Don't freeze the object we were given; make a clone and use that.\n      var prototype = options && options.prototype;\n      var instantiateEmptyObject =\n        (!prototype || prototype === Object.prototype) ?\n          instantiatePlainObject : (function() { return Object.create(prototype); });\n      var clone = instantiateEmptyObject();\n\n      if (\"development\" !== \"production\") {\n        /*jshint eqnull:true */\n        if (stackRemaining == null) {\n          stackRemaining = 64;\n        }\n        if (stackRemaining <= 0) {\n          throw new ImmutableError(\"Attempt to construct Immutable from a deeply nested object was detected.\" +\n            \" Have you tried to wrap an object with circular references (e.g. React element)?\" +\n            \" See https://github.com/rtfeldman/seamless-immutable/wiki/Deeply-nested-object-was-detected for details.\");\n        }\n        stackRemaining -= 1;\n      }\n\n      for (var key in obj) {\n        if (Object.getOwnPropertyDescriptor(obj, key)) {\n          clone[key] = Immutable(obj[key], undefined, stackRemaining);\n        }\n      }\n\n      return makeImmutableObject(clone);\n    }\n  }\n\n  // Wrapper to allow the use of object methods as static methods of Immutable.\n  function toStatic(fn) {\n    function staticWrapper() {\n      var args = [].slice.call(arguments);\n      var self = args.shift();\n      return fn.apply(self, args);\n    }\n\n    return staticWrapper;\n  }\n\n  // Wrapper to allow the use of object methods as static methods of Immutable.\n  // with the additional condition of choosing which function to call depending\n  // if argument is an array or an object.\n  function toStaticObjectOrArray(fnObject, fnArray) {\n    function staticWrapper() {\n      var args = [].slice.call(arguments);\n      var self = args.shift();\n      if (Array.isArray(self)) {\n          return fnArray.apply(self, args);\n      } else {\n          return fnObject.apply(self, args);\n      }\n    }\n\n    return staticWrapper;\n  }\n\n  // Wrapper to allow the use of object methods as static methods of Immutable.\n  // with the additional condition of choosing which function to call depending\n  // if argument is an array or an object or a date.\n  function toStaticObjectOrDateOrArray(fnObject, fnArray, fnDate) {\n    function staticWrapper() {\n      var args = [].slice.call(arguments);\n      var self = args.shift();\n      if (Array.isArray(self)) {\n          return fnArray.apply(self, args);\n      } else if (self instanceof Date) {\n          return fnDate.apply(self, args);\n      } else {\n          return fnObject.apply(self, args);\n      }\n    }\n\n    return staticWrapper;\n  }\n\n  // Export the library\n  Immutable.from           = Immutable;\n  Immutable.isImmutable    = isImmutable;\n  Immutable.ImmutableError = ImmutableError;\n  Immutable.merge          = toStatic(merge);\n  Immutable.replace        = toStatic(objectReplace);\n  Immutable.without        = toStatic(without);\n  Immutable.asMutable      = toStaticObjectOrDateOrArray(asMutableObject, asMutableArray, asMutableDate);\n  Immutable.set            = toStaticObjectOrArray(objectSet, arraySet);\n  Immutable.setIn          = toStaticObjectOrArray(objectSetIn, arraySetIn);\n  Immutable.update         = toStatic(update);\n  Immutable.updateIn       = toStatic(updateIn);\n  Immutable.getIn          = toStatic(getIn);\n  Immutable.flatMap        = toStatic(flatMap);\n  Immutable.asObject       = toStatic(asObject);\n  if (!globalConfig.use_static) {\n      Immutable.static = immutableInit({\n          use_static: true\n      });\n  }\n\n  Object.freeze(Immutable);\n\n  return Immutable;\n}\n\n  var Immutable = immutableInit();\n  /* istanbul ignore if */\n  if (typeof define === 'function' && define.amd) {\n    define(function() {\n      return Immutable;\n    });\n  } else if (typeof module === \"object\") {\n    module.exports = Immutable;\n  } else if (typeof exports === \"object\") {\n    exports.Immutable = Immutable;\n  } else if (typeof window === \"object\") {\n    window.Immutable = Immutable;\n  } else if (typeof global === \"object\") {\n    global.Immutable = Immutable;\n  }\n})();\n"],"sourceRoot":""}