{"version":3,"sources":["webpack://insights-inventory-frontend/./node_modules/@babel/runtime/helpers/arrayWithHoles.js","webpack://insights-inventory-frontend/./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","webpack://insights-inventory-frontend/./node_modules/@babel/runtime/helpers/nonIterableRest.js","webpack://insights-inventory-frontend/./node_modules/@babel/runtime/helpers/slicedToArray.js","webpack://insights-inventory-frontend/./node_modules/lodash/_arrayIncludes.js","webpack://insights-inventory-frontend/./node_modules/lodash/_arrayIncludesWith.js","webpack://insights-inventory-frontend/./node_modules/lodash/_baseIndexOf.js","webpack://insights-inventory-frontend/./node_modules/lodash/_baseIsNaN.js","webpack://insights-inventory-frontend/./node_modules/lodash/_baseUniq.js","webpack://insights-inventory-frontend/./node_modules/lodash/_createSet.js","webpack://insights-inventory-frontend/./node_modules/lodash/_strictIndexOf.js","webpack://insights-inventory-frontend/./node_modules/lodash/last.js","webpack://insights-inventory-frontend/./node_modules/lodash/noop.js","webpack://insights-inventory-frontend/./node_modules/lodash/union.js","webpack://insights-inventory-frontend/./node_modules/lodash/unionWith.js","webpack://insights-inventory-frontend/./node_modules/lodash/uniqWith.js","webpack://insights-inventory-frontend/./node_modules/seamless-immutable/seamless-immutable.development.js"],"names":["module","exports","arr","Array","isArray","__esModule","i","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","TypeError","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","baseIndexOf","array","comparator","index","baseFindIndex","baseIsNaN","strictIndexOf","fromIndex","SetCache","arrayIncludes","arrayIncludesWith","cacheHas","createSet","setToArray","iteratee","includes","isCommon","result","seen","set","outer","computed","seenIndex","Set","noop","values","baseFlatten","baseRest","baseUniq","isArrayLikeObject","union","arrays","last","unionWith","Immutable","immutableInit","config","data","REACT_ELEMENT_TYPE","for","globalConfig","use_static","instantiateEmptyObject","obj","prototype","getPrototypeOf","create","addPropertyTo","target","methodName","defineProperty","enumerable","configurable","writable","banProperty","ImmutableError","Boolean","immutabilityTag","isImmutable","getOwnPropertyDescriptor","isEqual","a","b","isMergableObject","Date","mutatingObjectMethods","mutatingArrayMethods","concat","nonMutatingArrayMethods","mutatingDateMethods","message","this","name","stack","Error","makeImmutable","bannedMethods","hasOwnProperty","freeze","makeMethodReturnImmutable","currentMethod","apply","arguments","arraySet","idx","deep","merge","mode","mutable","asMutableArray","call","makeImmutableArray","constructor","immutableEmptyArray","arraySetIn","pth","head","newValue","tail","slice","thisHead","setIn","nextHead","isFinite","objectSetIn","immutableEmptyObject","flatMap","asObject","update","updateIn","getIn","asMutableDate","getTime","iteratorResult","without","remove","keysToRemoveArray","forEach","el","toString","val","key","indexOf","makeImmutableObject","opts","asDeepMutable","pair","asMutable","quickCopy","src","dest","other","JSON","stringify","receivedArray","merger","addToResult","currentObj","otherObj","immutableValue","mergerResult","currentValue","clearDroppedKeys","otherFromArray","objectReplace","fnObject","fnArray","fnDate","path","objectSet","property","updater","restArgs","initialVal","getInPath","l","defaultValue","asMutableObject","instantiatePlainObject","options","stackRemaining","$$typeof","isReactElement","File","isFileObject","Blob","isBlobObject","isError","then","isPromise","date","clone","toStatic","fn","args","self","shift","toStaticObjectOrArray","from","replace","static"],"mappings":"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","file":"js/602.ca5044f7cab64651d674.js","sourcesContent":["function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableRest;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var arrayWithHoles = require(\"./arrayWithHoles.js\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableRest = require(\"./nonIterableRest.js\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var baseIndexOf = require('./_baseIndexOf');\n\n/**\n * A specialized version of `_.includes` for arrays without support for\n * specifying an index to search from.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludes(array, value) {\n  var length = array == null ? 0 : array.length;\n  return !!length && baseIndexOf(array, value, 0) > -1;\n}\n\nmodule.exports = arrayIncludes;\n","/**\n * This function is like `arrayIncludes` except that it accepts a comparator.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @param {Function} comparator The comparator invoked per element.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludesWith(array, value, comparator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (comparator(value, array[index])) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arrayIncludesWith;\n","var baseFindIndex = require('./_baseFindIndex'),\n    baseIsNaN = require('./_baseIsNaN'),\n    strictIndexOf = require('./_strictIndexOf');\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  return value === value\n    ? strictIndexOf(array, value, fromIndex)\n    : baseFindIndex(array, baseIsNaN, fromIndex);\n}\n\nmodule.exports = baseIndexOf;\n","/**\n * The base implementation of `_.isNaN` without support for number objects.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */\nfunction baseIsNaN(value) {\n  return value !== value;\n}\n\nmodule.exports = baseIsNaN;\n","var SetCache = require('./_SetCache'),\n    arrayIncludes = require('./_arrayIncludes'),\n    arrayIncludesWith = require('./_arrayIncludesWith'),\n    cacheHas = require('./_cacheHas'),\n    createSet = require('./_createSet'),\n    setToArray = require('./_setToArray');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n */\nfunction baseUniq(array, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      length = array.length,\n      isCommon = true,\n      result = [],\n      seen = result;\n\n  if (comparator) {\n    isCommon = false;\n    includes = arrayIncludesWith;\n  }\n  else if (length >= LARGE_ARRAY_SIZE) {\n    var set = iteratee ? null : createSet(array);\n    if (set) {\n      return setToArray(set);\n    }\n    isCommon = false;\n    includes = cacheHas;\n    seen = new SetCache;\n  }\n  else {\n    seen = iteratee ? [] : result;\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var seenIndex = seen.length;\n      while (seenIndex--) {\n        if (seen[seenIndex] === computed) {\n          continue outer;\n        }\n      }\n      if (iteratee) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n    else if (!includes(seen, computed, comparator)) {\n      if (seen !== result) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseUniq;\n","var Set = require('./_Set'),\n    noop = require('./noop'),\n    setToArray = require('./_setToArray');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Creates a set object of `values`.\n *\n * @private\n * @param {Array} values The values to add to the set.\n * @returns {Object} Returns the new set.\n */\nvar createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n  return new Set(values);\n};\n\nmodule.exports = createSet;\n","/**\n * A specialized version of `_.indexOf` which performs strict equality\n * comparisons of values, i.e. `===`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction strictIndexOf(array, value, fromIndex) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = strictIndexOf;\n","/**\n * Gets the last element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the last element of `array`.\n * @example\n *\n * _.last([1, 2, 3]);\n * // => 3\n */\nfunction last(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? array[length - 1] : undefined;\n}\n\nmodule.exports = last;\n","/**\n * This method returns `undefined`.\n *\n * @static\n * @memberOf _\n * @since 2.3.0\n * @category Util\n * @example\n *\n * _.times(2, _.noop);\n * // => [undefined, undefined]\n */\nfunction noop() {\n  // No operation performed.\n}\n\nmodule.exports = noop;\n","var baseFlatten = require('./_baseFlatten'),\n    baseRest = require('./_baseRest'),\n    baseUniq = require('./_baseUniq'),\n    isArrayLikeObject = require('./isArrayLikeObject');\n\n/**\n * Creates an array of unique values, in order, from all given arrays using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @returns {Array} Returns the new array of combined values.\n * @example\n *\n * _.union([2], [1, 2]);\n * // => [2, 1]\n */\nvar union = baseRest(function(arrays) {\n  return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n});\n\nmodule.exports = union;\n","var baseFlatten = require('./_baseFlatten'),\n    baseRest = require('./_baseRest'),\n    baseUniq = require('./_baseUniq'),\n    isArrayLikeObject = require('./isArrayLikeObject'),\n    last = require('./last');\n\n/**\n * This method is like `_.union` except that it accepts `comparator` which\n * is invoked to compare elements of `arrays`. Result values are chosen from\n * the first array in which the value occurs. The comparator is invoked\n * with two arguments: (arrVal, othVal).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of combined values.\n * @example\n *\n * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n *\n * _.unionWith(objects, others, _.isEqual);\n * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n */\nvar unionWith = baseRest(function(arrays) {\n  var comparator = last(arrays);\n  comparator = typeof comparator == 'function' ? comparator : undefined;\n  return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n});\n\nmodule.exports = unionWith;\n","var baseUniq = require('./_baseUniq');\n\n/**\n * This method is like `_.uniq` except that it accepts `comparator` which\n * is invoked to compare elements of `array`. The order of result values is\n * determined by the order they occur in the array.The comparator is invoked\n * with two arguments: (arrVal, othVal).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n *\n * _.uniqWith(objects, _.isEqual);\n * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n */\nfunction uniqWith(array, comparator) {\n  comparator = typeof comparator == 'function' ? comparator : undefined;\n  return (array && array.length) ? baseUniq(array, undefined, comparator) : [];\n}\n\nmodule.exports = uniqWith;\n","(function() {\n  \"use strict\";\n\nfunction immutableInit(config) {\n\n  // https://github.com/facebook/react/blob/v15.0.1/src/isomorphic/classic/element/ReactElement.js#L21\n  var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol.for && Symbol.for('react.element');\n  var REACT_ELEMENT_TYPE_FALLBACK = 0xeac7;\n\n  var globalConfig = {\n    use_static: false\n  };\n  if (isObject(config)) {\n      if (config.use_static !== undefined) {\n          globalConfig.use_static = Boolean(config.use_static);\n      }\n  }\n\n  function isObject(data) {\n    return (\n      typeof data === 'object' &&\n      !Array.isArray(data) &&\n      data !== null\n    );\n  }\n\n  function instantiateEmptyObject(obj) {\n      var prototype = Object.getPrototypeOf(obj);\n      if (!prototype) {\n          return {};\n      } else {\n          return Object.create(prototype);\n      }\n  }\n\n  function addPropertyTo(target, methodName, value) {\n    Object.defineProperty(target, methodName, {\n      enumerable: false,\n      configurable: false,\n      writable: false,\n      value: value\n    });\n  }\n\n  function banProperty(target, methodName) {\n    addPropertyTo(target, methodName, function() {\n      throw new ImmutableError(\"The \" + methodName +\n        \" method cannot be invoked on an Immutable data structure.\");\n    });\n  }\n\n  var immutabilityTag = \"__immutable_invariants_hold\";\n\n  function addImmutabilityTag(target) {\n    addPropertyTo(target, immutabilityTag, true);\n  }\n\n  function isImmutable(target) {\n    if (typeof target === \"object\") {\n      return target === null || Boolean(\n        Object.getOwnPropertyDescriptor(target, immutabilityTag)\n      );\n    } else {\n      // In JavaScript, only objects are even potentially mutable.\n      // strings, numbers, null, and undefined are all naturally immutable.\n      return true;\n    }\n  }\n\n  function isEqual(a, b) {\n    // Avoid false positives due to (NaN !== NaN) evaluating to true\n    return (a === b || (a !== a && b !== b));\n  }\n\n  function isMergableObject(target) {\n    return target !== null && typeof target === \"object\" && !(Array.isArray(target)) && !(target instanceof Date);\n  }\n\n  var mutatingObjectMethods = [\n    \"setPrototypeOf\"\n  ];\n\n  var nonMutatingObjectMethods = [\n    \"keys\"\n  ];\n\n  var mutatingArrayMethods = mutatingObjectMethods.concat([\n    \"push\", \"pop\", \"sort\", \"splice\", \"shift\", \"unshift\", \"reverse\"\n  ]);\n\n  var nonMutatingArrayMethods = nonMutatingObjectMethods.concat([\n    \"map\", \"filter\", \"slice\", \"concat\", \"reduce\", \"reduceRight\"\n  ]);\n\n  var mutatingDateMethods = mutatingObjectMethods.concat([\n    \"setDate\", \"setFullYear\", \"setHours\", \"setMilliseconds\", \"setMinutes\", \"setMonth\", \"setSeconds\",\n    \"setTime\", \"setUTCDate\", \"setUTCFullYear\", \"setUTCHours\", \"setUTCMilliseconds\", \"setUTCMinutes\",\n    \"setUTCMonth\", \"setUTCSeconds\", \"setYear\"\n  ]);\n\n  function ImmutableError(message) {\n    this.name = 'MyError';\n    this.message = message;\n    this.stack = (new Error()).stack;\n  }\n  ImmutableError.prototype = new Error();\n  ImmutableError.prototype.constructor = Error;\n\n  function makeImmutable(obj, bannedMethods) {\n    // Tag it so we can quickly tell it's immutable later.\n    addImmutabilityTag(obj);\n\n    if (\"development\" !== \"production\") {\n      // Make all mutating methods throw exceptions.\n      for (var index in bannedMethods) {\n        if (bannedMethods.hasOwnProperty(index)) {\n          banProperty(obj, bannedMethods[index]);\n        }\n      }\n\n      // Freeze it and return it.\n      Object.freeze(obj);\n    }\n\n    return obj;\n  }\n\n  function makeMethodReturnImmutable(obj, methodName) {\n    var currentMethod = obj[methodName];\n\n    addPropertyTo(obj, methodName, function() {\n      return Immutable(currentMethod.apply(obj, arguments));\n    });\n  }\n\n  function arraySet(idx, value, config) {\n    var deep          = config && config.deep;\n\n    if (idx in this) {\n      if (deep && this[idx] !== value && isMergableObject(value) && isMergableObject(this[idx])) {\n        value = Immutable.merge(this[idx], value, {deep: true, mode: 'replace'});\n      }\n      if (isEqual(this[idx], value)) {\n        return this;\n      }\n    }\n\n    var mutable = asMutableArray.call(this);\n    mutable[idx] = Immutable(value);\n    return makeImmutableArray(mutable);\n  }\n\n  var immutableEmptyArray = Immutable([]);\n\n  function arraySetIn(pth, value, config) {\n    var head = pth[0];\n\n    if (pth.length === 1) {\n      return arraySet.call(this, head, value, config);\n    } else {\n      var tail = pth.slice(1);\n      var thisHead = this[head];\n      var newValue;\n\n      if (typeof(thisHead) === \"object\" && thisHead !== null) {\n        // Might (validly) be object or array\n        newValue = Immutable.setIn(thisHead, tail, value);\n      } else {\n        var nextHead = tail[0];\n        // If the next path part is a number, then we are setting into an array, else an object.\n        if (nextHead !== '' && isFinite(nextHead)) {\n          newValue = arraySetIn.call(immutableEmptyArray, tail, value);\n        } else {\n          newValue = objectSetIn.call(immutableEmptyObject, tail, value);\n        }\n      }\n\n      if (head in this && thisHead === newValue) {\n        return this;\n      }\n\n      var mutable = asMutableArray.call(this);\n      mutable[head] = newValue;\n      return makeImmutableArray(mutable);\n    }\n  }\n\n  function makeImmutableArray(array) {\n    // Don't change their implementations, but wrap these functions to make sure\n    // they always return an immutable value.\n    for (var index in nonMutatingArrayMethods) {\n      if (nonMutatingArrayMethods.hasOwnProperty(index)) {\n        var methodName = nonMutatingArrayMethods[index];\n        makeMethodReturnImmutable(array, methodName);\n      }\n    }\n\n    if (!globalConfig.use_static) {\n      addPropertyTo(array, \"flatMap\",  flatMap);\n      addPropertyTo(array, \"asObject\", asObject);\n      addPropertyTo(array, \"asMutable\", asMutableArray);\n      addPropertyTo(array, \"set\", arraySet);\n      addPropertyTo(array, \"setIn\", arraySetIn);\n      addPropertyTo(array, \"update\", update);\n      addPropertyTo(array, \"updateIn\", updateIn);\n      addPropertyTo(array, \"getIn\", getIn);\n    }\n\n    for(var i = 0, length = array.length; i < length; i++) {\n      array[i] = Immutable(array[i]);\n    }\n\n    return makeImmutable(array, mutatingArrayMethods);\n  }\n\n  function makeImmutableDate(date) {\n    if (!globalConfig.use_static) {\n      addPropertyTo(date, \"asMutable\", asMutableDate);\n    }\n\n    return makeImmutable(date, mutatingDateMethods);\n  }\n\n  function asMutableDate() {\n    return new Date(this.getTime());\n  }\n\n  /**\n   * Effectively performs a map() over the elements in the array, using the\n   * provided iterator, except that whenever the iterator returns an array, that\n   * array's elements are added to the final result instead of the array itself.\n   *\n   * @param {function} iterator - The iterator function that will be invoked on each element in the array. It will receive three arguments: the current value, the current index, and the current object.\n   */\n  function flatMap(iterator) {\n    // Calling .flatMap() with no arguments is a no-op. Don't bother cloning.\n    if (arguments.length === 0) {\n      return this;\n    }\n\n    var result = [],\n        length = this.length,\n        index;\n\n    for (index = 0; index < length; index++) {\n      var iteratorResult = iterator(this[index], index, this);\n\n      if (Array.isArray(iteratorResult)) {\n        // Concatenate Array results into the return value we're building up.\n        result.push.apply(result, iteratorResult);\n      } else {\n        // Handle non-Array results the same way map() does.\n        result.push(iteratorResult);\n      }\n    }\n\n    return makeImmutableArray(result);\n  }\n\n  /**\n   * Returns an Immutable copy of the object without the given keys included.\n   *\n   * @param {array} keysToRemove - A list of strings representing the keys to exclude in the return value. Instead of providing a single array, this method can also be called by passing multiple strings as separate arguments.\n   */\n  function without(remove) {\n    // Calling .without() with no arguments is a no-op. Don't bother cloning.\n    if (typeof remove === \"undefined\" && arguments.length === 0) {\n      return this;\n    }\n\n    if (typeof remove !== \"function\") {\n      // If we weren't given an array, use the arguments list.\n      var keysToRemoveArray = (Array.isArray(remove)) ?\n         remove.slice() : Array.prototype.slice.call(arguments);\n\n      // Convert numeric keys to strings since that's how they'll\n      // come from the enumeration of the object.\n      keysToRemoveArray.forEach(function(el, idx, arr) {\n        if(typeof(el) === \"number\") {\n          arr[idx] = el.toString();\n        }\n      });\n\n      remove = function(val, key) {\n        return keysToRemoveArray.indexOf(key) !== -1;\n      };\n    }\n\n    var result = instantiateEmptyObject(this);\n\n    for (var key in this) {\n      if (this.hasOwnProperty(key) && remove(this[key], key) === false) {\n        result[key] = this[key];\n      }\n    }\n\n    return makeImmutableObject(result);\n  }\n\n  function asMutableArray(opts) {\n    var result = [], i, length;\n\n    if(opts && opts.deep) {\n      for(i = 0, length = this.length; i < length; i++) {\n        result.push(asDeepMutable(this[i]));\n      }\n    } else {\n      for(i = 0, length = this.length; i < length; i++) {\n        result.push(this[i]);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * Effectively performs a [map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map) over the elements in the array, expecting that the iterator function\n   * will return an array of two elements - the first representing a key, the other\n   * a value. Then returns an Immutable Object constructed of those keys and values.\n   *\n   * @param {function} iterator - A function which should return an array of two elements - the first representing the desired key, the other the desired value.\n   */\n  function asObject(iterator) {\n    // If no iterator was provided, assume the identity function\n    // (suggesting this array is already a list of key/value pairs.)\n    if (typeof iterator !== \"function\") {\n      iterator = function(value) { return value; };\n    }\n\n    var result = {},\n        length = this.length,\n        index;\n\n    for (index = 0; index < length; index++) {\n      var pair  = iterator(this[index], index, this),\n          key   = pair[0],\n          value = pair[1];\n\n      result[key] = value;\n    }\n\n    return makeImmutableObject(result);\n  }\n\n  function asDeepMutable(obj) {\n    if (\n      (!obj) ||\n      (typeof obj !== 'object') ||\n      (!Object.getOwnPropertyDescriptor(obj, immutabilityTag)) ||\n      (obj instanceof Date)\n    ) { return obj; }\n    return Immutable.asMutable(obj, {deep: true});\n  }\n\n  function quickCopy(src, dest) {\n    for (var key in src) {\n      if (Object.getOwnPropertyDescriptor(src, key)) {\n        dest[key] = src[key];\n      }\n    }\n\n    return dest;\n  }\n\n  /**\n   * Returns an Immutable Object containing the properties and values of both\n   * this object and the provided object, prioritizing the provided object's\n   * values whenever the same key is present in both objects.\n   *\n   * @param {object} other - The other object to merge. Multiple objects can be passed as an array. In such a case, the later an object appears in that list, the higher its priority.\n   * @param {object} config - Optional config object that contains settings. Supported settings are: {deep: true} for deep merge and {merger: mergerFunc} where mergerFunc is a function\n   *                          that takes a property from both objects. If anything is returned it overrides the normal merge behaviour.\n   */\n  function merge(other, config) {\n    // Calling .merge() with no arguments is a no-op. Don't bother cloning.\n    if (arguments.length === 0) {\n      return this;\n    }\n\n    if (other === null || (typeof other !== \"object\")) {\n      throw new TypeError(\"Immutable#merge can only be invoked with objects or arrays, not \" + JSON.stringify(other));\n    }\n\n    var receivedArray = (Array.isArray(other)),\n        deep          = config && config.deep,\n        mode          = config && config.mode || 'merge',\n        merger        = config && config.merger,\n        result;\n\n    // Use the given key to extract a value from the given object, then place\n    // that value in the result object under the same key. If that resulted\n    // in a change from this object's value at that key, set anyChanges = true.\n    function addToResult(currentObj, otherObj, key) {\n      var immutableValue = Immutable(otherObj[key]);\n      var mergerResult = merger && merger(currentObj[key], immutableValue, config);\n      var currentValue = currentObj[key];\n\n      if ((result !== undefined) ||\n        (mergerResult !== undefined) ||\n        (!currentObj.hasOwnProperty(key)) ||\n        !isEqual(immutableValue, currentValue)) {\n\n        var newValue;\n\n        if (mergerResult !== undefined) {\n          newValue = mergerResult;\n        } else if (deep && isMergableObject(currentValue) && isMergableObject(immutableValue)) {\n          newValue = Immutable.merge(currentValue, immutableValue, config);\n        } else {\n          newValue = immutableValue;\n        }\n\n        if (!isEqual(currentValue, newValue) || !currentObj.hasOwnProperty(key)) {\n          if (result === undefined) {\n            // Make a shallow clone of the current object.\n            result = quickCopy(currentObj, instantiateEmptyObject(currentObj));\n          }\n\n          result[key] = newValue;\n        }\n      }\n    }\n\n    function clearDroppedKeys(currentObj, otherObj) {\n      for (var key in currentObj) {\n        if (!otherObj.hasOwnProperty(key)) {\n          if (result === undefined) {\n            // Make a shallow clone of the current object.\n            result = quickCopy(currentObj, instantiateEmptyObject(currentObj));\n          }\n          delete result[key];\n        }\n      }\n    }\n\n    var key;\n\n    // Achieve prioritization by overriding previous values that get in the way.\n    if (!receivedArray) {\n      // The most common use case: just merge one object into the existing one.\n      for (key in other) {\n        if (Object.getOwnPropertyDescriptor(other, key)) {\n          addToResult(this, other, key);\n        }\n      }\n      if (mode === 'replace') {\n        clearDroppedKeys(this, other);\n      }\n    } else {\n      // We also accept an Array\n      for (var index = 0, length = other.length; index < length; index++) {\n        var otherFromArray = other[index];\n\n        for (key in otherFromArray) {\n          if (otherFromArray.hasOwnProperty(key)) {\n            addToResult(result !== undefined ? result : this, otherFromArray, key);\n          }\n        }\n      }\n    }\n\n    if (result === undefined) {\n      return this;\n    } else {\n      return makeImmutableObject(result);\n    }\n  }\n\n  function objectReplace(value, config) {\n    var deep          = config && config.deep;\n\n    // Calling .replace() with no arguments is a no-op. Don't bother cloning.\n    if (arguments.length === 0) {\n      return this;\n    }\n\n    if (value === null || typeof value !== \"object\") {\n      throw new TypeError(\"Immutable#replace can only be invoked with objects or arrays, not \" + JSON.stringify(value));\n    }\n\n    return Immutable.merge(this, value, {deep: deep, mode: 'replace'});\n  }\n\n  var immutableEmptyObject = Immutable({});\n\n  function objectSetIn(path, value, config) {\n    if (!(Array.isArray(path)) || path.length === 0) {\n      throw new TypeError(\"The first argument to Immutable#setIn must be an array containing at least one \\\"key\\\" string.\");\n    }\n\n    var head = path[0];\n    if (path.length === 1) {\n      return objectSet.call(this, head, value, config);\n    }\n\n    var tail = path.slice(1);\n    var newValue;\n    var thisHead = this[head];\n\n    if (this.hasOwnProperty(head) && typeof(thisHead) === \"object\" && thisHead !== null) {\n      // Might (validly) be object or array\n      newValue = Immutable.setIn(thisHead, tail, value);\n    } else {\n      newValue = objectSetIn.call(immutableEmptyObject, tail, value);\n    }\n\n    if (this.hasOwnProperty(head) && thisHead === newValue) {\n      return this;\n    }\n\n    var mutable = quickCopy(this, instantiateEmptyObject(this));\n    mutable[head] = newValue;\n    return makeImmutableObject(mutable);\n  }\n\n  function objectSet(property, value, config) {\n    var deep          = config && config.deep;\n\n    if (this.hasOwnProperty(property)) {\n      if (deep && this[property] !== value && isMergableObject(value) && isMergableObject(this[property])) {\n        value = Immutable.merge(this[property], value, {deep: true, mode: 'replace'});\n      }\n      if (isEqual(this[property], value)) {\n        return this;\n      }\n    }\n\n    var mutable = quickCopy(this, instantiateEmptyObject(this));\n    mutable[property] = Immutable(value);\n    return makeImmutableObject(mutable);\n  }\n\n  function update(property, updater) {\n    var restArgs = Array.prototype.slice.call(arguments, 2);\n    var initialVal = this[property];\n    return Immutable.set(this, property, updater.apply(initialVal, [initialVal].concat(restArgs)));\n  }\n\n  function getInPath(obj, path) {\n    /*jshint eqnull:true */\n    for (var i = 0, l = path.length; obj != null && i < l; i++) {\n      obj = obj[path[i]];\n    }\n\n    return (i && i == l) ? obj : undefined;\n  }\n\n  function updateIn(path, updater) {\n    var restArgs = Array.prototype.slice.call(arguments, 2);\n    var initialVal = getInPath(this, path);\n\n    return Immutable.setIn(this, path, updater.apply(initialVal, [initialVal].concat(restArgs)));\n  }\n\n  function getIn(path, defaultValue) {\n    var value = getInPath(this, path);\n    return value === undefined ? defaultValue : value;\n  }\n\n  function asMutableObject(opts) {\n    var result = instantiateEmptyObject(this), key;\n\n    if(opts && opts.deep) {\n      for (key in this) {\n        if (this.hasOwnProperty(key)) {\n          result[key] = asDeepMutable(this[key]);\n        }\n      }\n    } else {\n      for (key in this) {\n        if (this.hasOwnProperty(key)) {\n          result[key] = this[key];\n        }\n      }\n    }\n\n    return result;\n  }\n\n  // Creates plain object to be used for cloning\n  function instantiatePlainObject() {\n    return {};\n  }\n\n  // Finalizes an object with immutable methods, freezes it, and returns it.\n  function makeImmutableObject(obj) {\n    if (!globalConfig.use_static) {\n      addPropertyTo(obj, \"merge\", merge);\n      addPropertyTo(obj, \"replace\", objectReplace);\n      addPropertyTo(obj, \"without\", without);\n      addPropertyTo(obj, \"asMutable\", asMutableObject);\n      addPropertyTo(obj, \"set\", objectSet);\n      addPropertyTo(obj, \"setIn\", objectSetIn);\n      addPropertyTo(obj, \"update\", update);\n      addPropertyTo(obj, \"updateIn\", updateIn);\n      addPropertyTo(obj, \"getIn\", getIn);\n    }\n\n    return makeImmutable(obj, mutatingObjectMethods);\n  }\n\n  // Returns true if object is a valid react element\n  // https://github.com/facebook/react/blob/v15.0.1/src/isomorphic/classic/element/ReactElement.js#L326\n  function isReactElement(obj) {\n    return typeof obj === 'object' &&\n           obj !== null &&\n           (obj.$$typeof === REACT_ELEMENT_TYPE_FALLBACK || obj.$$typeof === REACT_ELEMENT_TYPE);\n  }\n\n  function isFileObject(obj) {\n    return typeof File !== 'undefined' &&\n           obj instanceof File;\n  }\n\n  function isBlobObject(obj) {\n    return typeof Blob !== 'undefined' &&\n           obj instanceof Blob;\n  }\n\n  function isPromise(obj) {\n    return typeof obj === 'object' &&\n           typeof obj.then === 'function';\n  }\n\n  function isError(obj) {\n    return obj instanceof Error;\n  }\n\n  function Immutable(obj, options, stackRemaining) {\n    if (isImmutable(obj) || isReactElement(obj) || isFileObject(obj) || isBlobObject(obj) || isError(obj)) {\n      return obj;\n    } else if (isPromise(obj)) {\n      return obj.then(Immutable);\n    } else if (Array.isArray(obj)) {\n      return makeImmutableArray(obj.slice());\n    } else if (obj instanceof Date) {\n      return makeImmutableDate(new Date(obj.getTime()));\n    } else {\n      // Don't freeze the object we were given; make a clone and use that.\n      var prototype = options && options.prototype;\n      var instantiateEmptyObject =\n        (!prototype || prototype === Object.prototype) ?\n          instantiatePlainObject : (function() { return Object.create(prototype); });\n      var clone = instantiateEmptyObject();\n\n      if (\"development\" !== \"production\") {\n        /*jshint eqnull:true */\n        if (stackRemaining == null) {\n          stackRemaining = 64;\n        }\n        if (stackRemaining <= 0) {\n          throw new ImmutableError(\"Attempt to construct Immutable from a deeply nested object was detected.\" +\n            \" Have you tried to wrap an object with circular references (e.g. React element)?\" +\n            \" See https://github.com/rtfeldman/seamless-immutable/wiki/Deeply-nested-object-was-detected for details.\");\n        }\n        stackRemaining -= 1;\n      }\n\n      for (var key in obj) {\n        if (Object.getOwnPropertyDescriptor(obj, key)) {\n          clone[key] = Immutable(obj[key], undefined, stackRemaining);\n        }\n      }\n\n      return makeImmutableObject(clone);\n    }\n  }\n\n  // Wrapper to allow the use of object methods as static methods of Immutable.\n  function toStatic(fn) {\n    function staticWrapper() {\n      var args = [].slice.call(arguments);\n      var self = args.shift();\n      return fn.apply(self, args);\n    }\n\n    return staticWrapper;\n  }\n\n  // Wrapper to allow the use of object methods as static methods of Immutable.\n  // with the additional condition of choosing which function to call depending\n  // if argument is an array or an object.\n  function toStaticObjectOrArray(fnObject, fnArray) {\n    function staticWrapper() {\n      var args = [].slice.call(arguments);\n      var self = args.shift();\n      if (Array.isArray(self)) {\n          return fnArray.apply(self, args);\n      } else {\n          return fnObject.apply(self, args);\n      }\n    }\n\n    return staticWrapper;\n  }\n\n  // Wrapper to allow the use of object methods as static methods of Immutable.\n  // with the additional condition of choosing which function to call depending\n  // if argument is an array or an object or a date.\n  function toStaticObjectOrDateOrArray(fnObject, fnArray, fnDate) {\n    function staticWrapper() {\n      var args = [].slice.call(arguments);\n      var self = args.shift();\n      if (Array.isArray(self)) {\n          return fnArray.apply(self, args);\n      } else if (self instanceof Date) {\n          return fnDate.apply(self, args);\n      } else {\n          return fnObject.apply(self, args);\n      }\n    }\n\n    return staticWrapper;\n  }\n\n  // Export the library\n  Immutable.from           = Immutable;\n  Immutable.isImmutable    = isImmutable;\n  Immutable.ImmutableError = ImmutableError;\n  Immutable.merge          = toStatic(merge);\n  Immutable.replace        = toStatic(objectReplace);\n  Immutable.without        = toStatic(without);\n  Immutable.asMutable      = toStaticObjectOrDateOrArray(asMutableObject, asMutableArray, asMutableDate);\n  Immutable.set            = toStaticObjectOrArray(objectSet, arraySet);\n  Immutable.setIn          = toStaticObjectOrArray(objectSetIn, arraySetIn);\n  Immutable.update         = toStatic(update);\n  Immutable.updateIn       = toStatic(updateIn);\n  Immutable.getIn          = toStatic(getIn);\n  Immutable.flatMap        = toStatic(flatMap);\n  Immutable.asObject       = toStatic(asObject);\n  if (!globalConfig.use_static) {\n      Immutable.static = immutableInit({\n          use_static: true\n      });\n  }\n\n  Object.freeze(Immutable);\n\n  return Immutable;\n}\n\n  var Immutable = immutableInit();\n  /* istanbul ignore if */\n  if (typeof define === 'function' && define.amd) {\n    define(function() {\n      return Immutable;\n    });\n  } else if (typeof module === \"object\") {\n    module.exports = Immutable;\n  } else if (typeof exports === \"object\") {\n    exports.Immutable = Immutable;\n  } else if (typeof window === \"object\") {\n    window.Immutable = Immutable;\n  } else if (typeof global === \"object\") {\n    global.Immutable = Immutable;\n  }\n})();\n"],"sourceRoot":""}