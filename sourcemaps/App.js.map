{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/routes/inventory.scss?1810","webpack:///./src/routes/inventory.scss","webpack:///./src/App.scss?e765","webpack:///./src/App.scss","webpack:///./src/constants.js","webpack:///./src/store/reducers.js","webpack:///./src/store/index.js","webpack:///./src/config.js","webpack:///./src/api.js","webpack:///./src/actions.js","webpack:///./src/components/inventory/AsyncInventory.js","webpack:///./src/routes/InventoryTable.js","webpack:///./src/routes/InventoryDetail.js","webpack:///./src/Routes.js","webpack:///./src/App.js","webpack:///./src/entry.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","content","options","hmr","transform","insertInto","undefined","locals","asyncActions","flatMap","a","concat","ACTION_TYPES","keyBy","toConsumableArray_default","k","alertIdGenerator","defaultState","loaded","entityLoaded","state","_ref2","payload","health","tags","rest","objectWithoutProperties_default","objectSpread_default","entity","enableApplications","activeApps","title","component","Overview","GeneralInformation","middlewareListener","reducers","alerts","applyReducerHash","_objectSpread2","defineProperty_default","ALERT_ADD","_ref3","id","ALERT_DISMISS","action","filter","alert","mapValues","pickBy","type","endsWith","message","dismissible","variant","entitiesReducer","GET_ENTITIES_FULFILLED","_ref","rows","mergeArraysByKey","results","entities","entitesDetailReducer","INVENTORY_ACTION_TYPES","_applyReducerHash2","LOAD_ENTITY_FULFILLED","GET_ENTITY_FULFILLED","addNewListener","actionType","callback","addNew","on","INVENTORY_API_BASE","addMockApp","map","row","vulnerabilities","redirect","configuration","compliance","cost","loadEntities","config","GET_ENTITIES","page","per_page","query","params","keys","reduce","acc","curr","join","fetch","then","ok","json","Error","status","getEntities","items","loadEntity","GET_ENTITY","getEntity","addAlert","_ref$dismissible","_ref$variant","asyncInventoryLoader","insights","loadInventory","react","React","reactRouterDom","reactCore","reactIcons","pfReact","PaginationRow","Inventory","registryDecorator","props","ctx","_this","classCallCheck_default","this","possibleConstructorReturn_default","getPrototypeOf_default","inventory","createRef","ConnectedInventory","react_default","createElement","onRefresh","assertThisInitialized_default","inventoryConnector","mergeWithEntities","getRegistry","register","LOAD_ENTITIES","_this2","InventoryTable","updateEntities","setState","Fragment","insights_frontend_components","className","Grid","gutter","GridItem","span","filters","ref","showHealth","Component","contextTypes","store","PropTypes","propTypes","func","routerParams","connect","dispatch","actions","InventoryDetail","mergeWithDetail","entityListener","LOAD_ENTITY","error","Card","CardBody","InsightsRoute","rootClass","root","document","getElementById","removeAttribute","classList","add","Route","extends_default","string","Routes","Switch","Routes_InsightsRoute","exact","path","Redirect","to","App","notifications","chrome","init","identifyApp","appNav","event","history","navId","Notifications","Routes_Routes","childProps","ReactDOM","render","es","MiddlewareListener","_len","arguments","middleware","Array","_key","getMiddleware","promiseMiddleware","notificationsMiddleware","logger","getStore","BrowserRouter","basename","RELEASE","src_App_0"],"mappings":"aACA,SAAAA,EAAAC,GAQA,IAPA,IAMAC,EAAAC,EANAC,EAAAH,EAAA,GACAI,EAAAJ,EAAA,GACAK,EAAAL,EAAA,GAIAM,EAAA,EAAAC,KACQD,EAAAH,EAAAK,OAAoBF,IAC5BJ,EAAAC,EAAAG,GACAG,EAAAP,IACAK,EAAAG,KAAAD,EAAAP,GAAA,IAEAO,EAAAP,GAAA,EAEA,IAAAD,KAAAG,EACAO,OAAAC,UAAAC,eAAAC,KAAAV,EAAAH,KACAc,EAAAd,GAAAG,EAAAH,IAKA,IAFAe,KAAAhB,GAEAO,EAAAC,QACAD,EAAAU,OAAAV,GAOA,OAHAW,EAAAR,KAAAS,MAAAD,EAAAb,OAGAe,IAEA,SAAAA,IAEA,IADA,IAAAC,EACAf,EAAA,EAAiBA,EAAAY,EAAAV,OAA4BF,IAAA,CAG7C,IAFA,IAAAgB,EAAAJ,EAAAZ,GACAiB,GAAA,EACAC,EAAA,EAAkBA,EAAAF,EAAAd,OAA2BgB,IAAA,CAC7C,IAAAC,EAAAH,EAAAE,GACA,IAAAf,EAAAgB,KAAAF,GAAA,GAEAA,IACAL,EAAAQ,OAAApB,IAAA,GACAe,EAAAM,IAAAC,EAAAN,EAAA,KAGA,OAAAD,EAIA,IAAAQ,KAKApB,GACAqB,EAAA,GAGAZ,KAGA,SAAAS,EAAA1B,GAGA,GAAA4B,EAAA5B,GACA,OAAA4B,EAAA5B,GAAA8B,QAGA,IAAAC,EAAAH,EAAA5B,IACAK,EAAAL,EACAgC,GAAA,EACAF,YAUA,OANAhB,EAAAd,GAAAa,KAAAkB,EAAAD,QAAAC,IAAAD,QAAAJ,GAGAK,EAAAC,GAAA,EAGAD,EAAAD,QAKAJ,EAAAO,EAAAnB,EAGAY,EAAAQ,EAAAN,EAGAF,EAAAS,EAAA,SAAAL,EAAAM,EAAAC,GACAX,EAAAY,EAAAR,EAAAM,IACA1B,OAAA6B,eAAAT,EAAAM,GAA0CI,YAAA,EAAAC,IAAAJ,KAK1CX,EAAAgB,EAAA,SAAAZ,GACA,oBAAAa,eAAAC,aACAlC,OAAA6B,eAAAT,EAAAa,OAAAC,aAAwDC,MAAA,WAExDnC,OAAA6B,eAAAT,EAAA,cAAiDe,OAAA,KAQjDnB,EAAAoB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAAnB,EAAAmB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAvC,OAAAwC,OAAA,MAGA,GAFAxB,EAAAgB,EAAAO,GACAvC,OAAA6B,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAAnB,EAAAS,EAAAc,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAvB,EAAA2B,EAAA,SAAAtB,GACA,IAAAM,EAAAN,KAAAiB,WACA,WAA2B,OAAAjB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAL,EAAAS,EAAAE,EAAA,IAAAA,GACAA,GAIAX,EAAAY,EAAA,SAAAgB,EAAAC,GAAsD,OAAA7C,OAAAC,UAAAC,eAAAC,KAAAyC,EAAAC,IAGtD7B,EAAA8B,EAAA,gCAEA,IAAAC,EAAAC,OAAA,aAAAA,OAAA,iBACAC,EAAAF,EAAAhD,KAAA2C,KAAAK,GACAA,EAAAhD,KAAAX,EACA2D,IAAAG,QACA,QAAAvD,EAAA,EAAgBA,EAAAoD,EAAAlD,OAAuBF,IAAAP,EAAA2D,EAAApD,IACvC,IAAAU,EAAA4C,EAIA1C,EAAAR,MAAA,QAEAU,0BCrJA,IAAA0C,EAAcnC,EAAQ,KAEtB,iBAAAmC,QAA4C9B,EAAA1B,EAASwD,EAAA,MAOrD,IAAAC,GAAeC,KAAA,EAEfC,eAPAA,EAQAC,gBAAAC,GAEaxC,EAAQ,IAARA,CAA2DmC,EAAAC,GAExED,EAAAM,SAAApC,EAAAD,QAAA+B,EAAAM,8BCjBArC,EAAAC,EAAAD,QAA2BJ,EAAQ,IAARA,EAAuD,IAElFrB,EAAUqB,EAAQ,KAAmG,IAGrHI,EAAArB,MAAcsB,EAAA1B,EAAS,6FAA2F,0BCJlH,IAAAwD,EAAcnC,EAAQ,KAEtB,iBAAAmC,QAA4C9B,EAAA1B,EAASwD,EAAA,MAOrD,IAAAC,GAAeC,KAAA,EAEfC,eAPAA,EAQAC,gBAAAC,GAEaxC,EAAQ,IAARA,CAAwDmC,EAAAC,GAErED,EAAAM,SAAApC,EAAAD,QAAA+B,EAAAM,8BCjBArC,EAAAC,EAAAD,QAA2BJ,EAAQ,IAARA,EAAoD,IAE/ErB,EAAUqB,EAAQ,KAAgG,IAClHI,EAAAzB,EAAUqB,EAAQ,KAAmH,IAGrII,EAAArB,MAAcsB,EAAA1B,EAAS,uCAAqC,sRCEtD+D,QAAeC,IACjB,eACA,cACD,SAAAC,GAAC,OAAKA,EAAD,GAAAC,OAAOD,EAAP,eAAAC,OAAuBD,EAAvB,iBAAAC,OAAyCD,EAAzC,gBAEKE,EAAeC,KATxB,YACA,iBAQ6BF,OAAAG,IAAiBN,IAAe,SAAAO,GAAC,OAAIA,sBCFlEC,EAAmB,EAEjBC,GAAiBC,QAAQ,GAU/B,SAASC,EAAaC,EAAtBC,GAA0C,IAAXC,EAAWD,EAAXC,QACnBC,EAA0BD,EAA1BC,OAAQC,EAAkBF,EAAlBE,KAASC,EADaC,IACJJ,GADI,kBAEtC,OAAAK,OACOP,GACHG,SACAC,OACAI,OAAQD,OACDP,EAAMQ,OACNH,KAKf,SAASI,EAAmBT,GACxB,OAAAO,OACOP,GACHF,QAAQ,EACRY,aACMC,MAAO,WAAYvD,KAAM,WAAYwD,UAAWC,aAChDF,MAAO,kBAAmBvD,KAAM,oBAChCuD,MAAO,2BAA4BvD,KAAM,6BACzCuD,MAAO,aAAcvD,KAAM,eAC3BuD,MAAO,mBAAoBvD,KAAM,oBACjCuD,MAAO,sBAAuBvD,KAAM,sBAAuBwD,UAAWE,yBAKpF,IC7CIC,ED6CAC,GACAC,OAAQC,2BAAiBX,KAAAY,KAAAC,IAAAD,EACpB3B,EAAa6B,UAAY,SAACrB,EAADsB,GAAA,IAAUpB,EAAVoB,EAAUpB,QAAV,OAAAR,IACjBM,GADiBT,QAAAgB,KACRgB,GAAI3B,KAAuBM,OAFzBkB,IAAAD,EAGnB3B,EAAagC,cAAgB,SAACxB,EAAOyB,GAAR,OAAmBzB,EAAM0B,OAAO,SAAAC,GAAK,OAAIA,EAAMJ,KAAOE,EAAOE,MAAMJ,OAH7EJ,GAMjBS,IACCC,IAAOrC,EAAe,SAAAsC,GAAI,OAAIA,EAAKC,SAAS,eAC5C,kBAAM,SAAC/B,EAAOyB,GAAR,OAAA/B,IACGM,GADHT,SACYoB,MAAOc,EAAOvB,QAAQ8B,QAAST,GAAI3B,IAAoBqC,aAAa,EAAMC,QAAS,sBAKpGC,EAAkBjB,2BAAiBE,OAEvC5B,EAAa4C,uBArDtB,SAAwBpC,EAAxBqC,GAA4C,IAAXnC,EAAWmC,EAAXnC,QAC7B,OAAAK,OACOP,GACHsC,KAAMC,4BAAkBvC,EAAMsC,KAAMpC,EAAQsC,UAC5CC,SAAUF,4BAAkBvC,EAAMyC,SAAUvC,EAAQsC,cAmDxD3C,GAGS6C,EAAuB,SAACC,GAAD,IAAAC,EAAA,OAA4B1B,4BAAgB0B,KAAAxB,IAAAwB,EAEvED,EAAuBE,sBAAwBpC,GAFwBW,IAAAwB,EAGvEpD,EAAasD,qBAAuB/C,GAHmC6C,GAK5E/C,IAGWmB,IC7DR,SAAS+B,EAATV,GAAmD,IAAxBW,EAAwBX,EAAxBW,WAAYC,EAAYZ,EAAZY,SAC1C,OAAOlC,EAAmBmC,QACtBC,GAAIH,EACJC,2OCtBKG,WAAqB,+CCC5BC,GAAa,SAACb,GAAD,OAAaA,EAAQc,IAAI,SAAAC,GAAG,OAC3ChC,GAAIgC,EAAIhC,GACRpB,QACIqD,iBAAmB7C,MAAO,EAAG8C,SAAU,mBACvCC,eAAiB/C,MAAO,GAAI8C,SAAU,4BACtCE,YAAchD,MAAO,MAAO8C,SAAU,cACtCG,MAAQjD,MAAO,MAAO8C,SAAU,wBCLjC,OAAMI,GAAe,SAACC,GACzB,OACIhC,KAAMtC,EAAauE,aACnB7D,QDOD,SAAAmC,GAAyC,IAAlB2B,EAAkB3B,EAAlB2B,KAAMC,EAAY5B,EAAZ4B,SAC5BC,EAAQ,GAEZ,GAAID,GAAYD,EAAM,CAElB,IAAMG,GAAWF,WAAUD,QAC3BE,EAAQ,IAAMxI,OAAO0I,KAAKD,GAAQE,OAC9B,SAACC,EAAKC,GAAN,OAAA7E,IAAmB4E,GAAnB/E,QAAA,GAAAA,OAA2BgF,EAA3B,KAAAhF,OAAmC4E,EAAOI,WAC5CC,KAAK,KAGX,OAAOC,MAAK,GAAAlF,OAAI6D,IAAJ7D,OAAyB2E,IAASQ,KAAK,SAAAhH,GAC/C,GAAIA,EAAEiH,GACF,OAAOjH,EAAEkH,OAAOF,KAAK,SAAA3J,GAAI,OACrByH,QAASa,GAAWtI,EAAKyH,YAIjC,MAAM,IAAIqC,MAAJ,4BAAAtF,OAAsC7B,EAAEoH,WCzBrCC,CAAYjB,GAAQY,KAAK,SAAA3J,GAAI,OAAKA,EAAKiK,OAASjK,MAIpDkK,GAAa,SAAA1D,GAAE,OACxBO,KAAMtC,EAAa0F,WACnBhF,QDuBG,SAAoBqB,GACvB,OAAOkD,MAAK,GAAAlF,OAAI6D,GAAJ,KAAA7D,OAA0BgC,IAAMmD,KAAK,SAAAhH,GAC7C,GAAIA,EAAEiH,GACF,OAAOjH,EAAEkH,OAGb,MAAM,IAAIC,MAAJ,4BAAAtF,OAAsC7B,EAAEoH,WC7BzCK,CAAU5D,KAGV6D,GAAW,SAAA/C,GAAA,IAAG1B,EAAH0B,EAAG1B,MAAH0E,EAAAhD,EAAUJ,mBAAV,IAAAoD,KAAAC,EAAAjD,EAA+BH,eAA/B,IAAAoD,EAAyC,UAAzCA,EAAA,OACpBxD,KAAMtC,EAAa6B,UACnBnB,SAAWS,QAAOsB,cAAaC,wECXtBqD,GAAuB,kBAAMC,SAASC,eAC/CC,MAAOC,IACPC,kBACAC,aACAC,cACAC,SACIC,uBCAFC,GADLC,oCAGG,SAAAD,EAAaE,EAAOC,GAAK,IAAAC,EAAA,OAAAC,IAAAC,KAAAN,IACrBI,EAAAG,IAAAD,KAAAE,IAAAR,GAAApK,KAAA0K,KAAMJ,EAAOC,KACRX,gBACLY,EAAKK,UAAYf,IAAMgB,YAEvBN,EAAKrG,OACD4G,mBAAoB,kBAAMC,EAAAvH,EAAAwH,cAAA,0BAG9BT,EAAKU,UAAYV,EAAKU,UAAU3I,KAAf4I,UAAAX,KATIA,2MAiBXd,qBAHN0B,uBACAtE,2BACAuE,sBAEJX,KAAKY,cAAcC,SAAnB7G,OACO2G,EAAkB/E,KAGzBY,GACIC,WAAYL,EAAuB0E,cACnCpE,SAAU,SAAAhD,GAAcA,EAAXlF,KAEJ2J,KAAK,SAAApD,GAAwB,IAArB0C,EAAqB1C,EAArB0C,KAAMC,EAAe3C,EAAf2C,SAEfqD,EAAKnB,MAAMtC,cAAeG,OAAMC,oBAKDgD,IAAnCM,mBAAgBC,mBAExBjB,KAAKiB,eAAiBA,EAEtBjB,KAAKkB,UACDb,mBAAoBW,6KAOnB,IACGX,EAAuBL,KAAKvG,MAA5B4G,mBACR,OACIC,EAAAvH,EAAAwH,cAACD,EAAAvH,EAAMoI,SAAP,KACIb,EAAAvH,EAAAwH,cAACa,EAAA,YAAWC,UAAU,cAClBf,EAAAvH,EAAAwH,cAACa,EAAA,iBAAgBhH,MAAM,eAE3BkG,EAAAvH,EAAAwH,cAACa,EAAA,KAAD,KACId,EAAAvH,EAAAwH,cAACe,GAAA,GAAKC,OAAO,MACTjB,EAAAvH,EAAAwH,cAACiB,GAAA,GAASC,KAAM,IACZnB,EAAAvH,EAAAwH,cAACF,GACGqB,UAEQtH,MAAO,gBAAiB9C,MAAO,gBAAiBmH,WAGhDrE,MAAO,YAAa9C,MAAO,YAAamH,WAGhDkD,IAAK3B,KAAKG,UACVyB,YAAU,EACVpB,UAAWR,KAAKQ,uBApExBqB,kBA8ExBnC,GAAUoC,cACNC,MAAOC,KAAUjK,QAGrB2H,GAAUuC,WACNpD,SAAUmD,KAAUE,KACpB5E,aAAc0E,KAAUE,KACxBxD,WAAYsD,KAAUE,MAWXC,iCAAaC,kBAAQ,qBARpC,SAA4BC,GACxB,OACIxD,SAAU,SAAClF,GAAD,OAAa0I,EAASC,GAAiB3I,KACjD2D,aAAc,SAACC,GAAD,OAAY8E,EAASC,GAAqB/E,KACxDmB,WAAY,SAAC1D,GAAD,OAAQqH,EAASC,GAAmBtH,OAI5BoH,CAAwC1C,yBChG9DA,GADLC,oCAGG,SAAAD,EAAYE,EAAOC,GAAK,IAAAC,EAAA,OAAAC,IAAAC,KAAAN,IACpBI,EAAAG,IAAAD,KAAAE,IAAAR,GAAApK,KAAA0K,KAAMJ,EAAOC,KACRX,gBAELY,EAAKrG,OACD8I,gBAAiB,kBAAMjC,EAAAvH,EAAAwH,cAAA,0BALPT,yMAcVd,qBAHN0B,uBACAtE,2BACAoG,oBAEJxC,KAAKY,cAAcC,SAAnB7G,OACOwI,EAAgBrG,EAAqBC,MAG5C4D,KAAKyC,eAAiBjG,GAClBC,WAAYL,EAAuBsG,YACnChG,SAAU,SAAAhD,GAAcA,EAAXlF,KACJ2J,KAAK,SAAAxE,GACNA,EAAQgJ,OAAS5B,EAAKnB,MAAMf,UAAWzE,MAAOT,EAAQgJ,MAAMlH,UAC5DsF,EAAKnB,MAAMlB,WAAW/E,EAAQsC,QAAQ,GAAGjB,WAKzB0F,IAApB6B,oBAERvC,KAAKkB,UACDqB,sKAKJvC,KAAKyC,kDAGA,IACGF,EAAoBvC,KAAKvG,MAAzB8I,gBACR,OACIjC,EAAAvH,EAAAwH,cAACD,EAAAvH,EAAMoI,SAAP,KACIb,EAAAvH,EAAAwH,cAACa,EAAA,YAAWC,UAAU,cAClBf,EAAAvH,EAAAwH,cAACa,EAAA,iBAAgBhH,MAAM,eAE3BkG,EAAAvH,EAAAwH,cAACa,EAAA,KAAD,KACId,EAAAvH,EAAAwH,cAACe,GAAA,GAAKC,OAAO,MACTjB,EAAAvH,EAAAwH,cAACiB,GAAA,GAASC,KAAM,IACZnB,EAAAvH,EAAAwH,cAACqC,GAAA,EAAD,KACItC,EAAAvH,EAAAwH,cAACsC,GAAA,EAAD,KACIvC,EAAAvH,EAAAwH,cAACgC,EAAD,mBAtDZV,kBAiExBnC,GAAUoC,cACNC,MAAOC,KAAUjK,QAGrB2H,GAAUuC,WACNpD,SAAUmD,KAAUE,KACpB5E,aAAc0E,KAAUE,KACxBxD,WAAYsD,KAAUE,MAWXC,8BAAaC,kBAAQ,qBARpC,SAA4BC,GACxB,OACIxD,SAAU,SAAClF,GAAD,OAAa0I,EAASC,GAAiB3I,KACjD2D,aAAc,kBAAM+E,EAASC,OAC7B5D,WAAY,SAAC1D,GAAD,OAAQqH,EAASC,GAAmBtH,OAI5BoH,CAAwC1C,KCzF9DoD,GAAgB,SAAAhH,GAAkD,IAApC+F,EAAoC/F,EAA/CzB,UAAsB0I,EAAyBjH,EAAzBiH,UAAcjJ,EAAWC,IAAA+B,GAAA,0BAC9DkH,EAAOC,SAASC,eAAe,QAIrC,OAHAF,EAAKG,gBAAgB,SACrBH,EAAKI,UAAUC,IAAf,SAAArK,OAA4B+J,GAAa,mBAEjCzC,EAAAvH,EAAAwH,cAAC+C,GAAA,EAADC,QAAWzJ,GAAMO,UAAWwH,MAGxCiB,GAAcb,WACV5H,UAAW2H,KAAUE,KACrBa,UAAWf,KAAUwB,QAWlB,OAAMC,GAAS,WAClB,OACInD,EAAAvH,EAAAwH,cAACmD,GAAA,EAAD,KACIpD,EAAAvH,EAAAwH,cAACoD,IAAcC,OAAK,EAACC,KAAK,UAAUxJ,UAAW2G,GAAgB+B,UAAU,cACzEzC,EAAAvH,EAAAwH,cAACoD,IAAcE,KAAK,uBAAuBxJ,UAAWkI,GAAiBQ,UAAU,cACjFzC,EAAAvH,EAAAwH,cAACuD,GAAA,GAASC,GAAG,cCrBnBC,WADLrE,oCAEG,SAAAqE,EAAYpE,GAAO,IAAAE,EAAA,OAAAC,IAAAC,KAAAgE,IACflE,EAAAG,IAAAD,KAAAE,IAAA8D,GAAA1O,KAAA0K,KAAMJ,KACDgB,cAAcC,SAASpG,GAC5BqF,EAAKc,cAAcC,UAAWoD,gCAHfnE,mEAME,IAAAiB,EAAAf,KACjBf,SAASiF,OAAOC,OAChBlF,SAASiF,OAAOE,YPlBM,aOmBtBpE,KAAKqE,OAASpF,SAASiF,OAAOtH,GAAG,iBAAkB,SAAA0H,GAAK,OAAIvD,EAAKnB,MAAM2E,QAAQrP,KAAnB,IAAA8D,OAA4BsL,EAAME,yDAI9FxE,KAAKqE,0CAIL,OACI/D,EAAAvH,EAAAwH,cAACD,EAAAvH,EAAMoI,SAAP,KACIb,EAAAvH,EAAAwH,cAACkE,EAAA,oBAAD,MACAnE,EAAAvH,EAAAwH,cAACmE,IAAOC,WAAY3E,KAAKJ,gBArBvBiC,mBA2BlBmC,GAAI/B,WACAsC,QAASvC,KAAUjK,QAORoK,8BAAaC,oBAAU4B,0BClCtCY,IAASC,OACLvE,EAAAvH,EAAAwH,cAACuE,EAAA,UAAS/C,MTLP,WACHvH,EAAqB,IAAIuK,IADQ,QAAAC,EAAAC,UAAAjQ,OAAZkQ,EAAY,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAZF,EAAYE,GAAAH,UAAAG,GAEjC,OAAOxE,0BAECpG,EAAmB6K,gBACnBC,cACAC,qCAJUvM,OAKPkM,ISFMf,CAAKqB,MAAQC,YAC1BnF,EAAAvH,EAAAwH,cAACmF,EAAA,GAAOC,SAAQ,IAAA3M,OAAO4M,WAAP,wBACZtF,EAAAvH,EAAAwH,cAACsF,GAAD,QAGR5C,SAASC,eAAe","file":"js/App.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/insights/platform/inventory/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([630,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","\nvar content = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/sass-loader/lib/loader.js??ref--5-2!./inventory.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../node_modules/css-loader/index.js!../../node_modules/sass-loader/lib/loader.js??ref--5-2!./inventory.scss\", function() {\n\t\tvar newContent = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/sass-loader/lib/loader.js??ref--5-2!./inventory.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\nexports.i(require(\"-!../../node_modules/css-loader/index.js!@red-hat-insights/insights-frontend-components/index.css\"), \"\");\n\n// module\nexports.push([module.id, \"button:focus {\\n  outline: none; }\\n\\n.buttons button + button {\\n  margin-left: 15px; }\\n\", \"\"]);\n\n// exports\n","\nvar content = require(\"!!../node_modules/css-loader/index.js!../node_modules/sass-loader/lib/loader.js??ref--5-2!./App.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../node_modules/css-loader/index.js!../node_modules/sass-loader/lib/loader.js??ref--5-2!./App.scss\", function() {\n\t\tvar newContent = require(\"!!../node_modules/css-loader/index.js!../node_modules/sass-loader/lib/loader.js??ref--5-2!./App.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\nexports.i(require(\"-!../node_modules/css-loader/index.js!@red-hat-insights/insights-frontend-components/index.css\"), \"\");\nexports.i(require(\"-!../node_modules/css-loader/index.js!@red-hat-insights/insights-frontend-components/components/Notifications.css\"), \"\");\n\n// module\nexports.push([module.id, \"button:focus {\\n  outline: none; }\\n\", \"\"]);\n\n// exports\n","import keyBy from 'lodash/keyBy';\nimport flatMap from 'lodash/flatMap';\n\nconst actions = [\n    'ALERT_ADD',\n    'ALERT_DISMISS'\n];\n\nconst asyncActions = flatMap([\n    'GET_ENTITIES',\n    'GET_ENTITY'\n], a => [a, `${a}_PENDING`, `${a}_FULFILLED`, `${a}_REJECTED`]);\n\nexport const ACTION_TYPES = keyBy([...actions, ...asyncActions], k => k);\n","import pickBy from 'lodash/pickBy';\nimport mapValues from 'lodash/mapValues';\n\nimport { ACTION_TYPES } from '../constants';\nimport { applyReducerHash } from '@red-hat-insights/insights-frontend-components/Utilities/ReducerRegistry';\nimport { mergeArraysByKey } from '@red-hat-insights/insights-frontend-components/Utilities/helpers';\nimport {\n    Overview,\n    GeneralInformation\n} from '@red-hat-insights/insights-frontend-components';\n\nlet alertIdGenerator = 0;\n\nconst defaultState = { loaded: false };\n\nfunction entitiesLoaded(state, { payload }) {\n    return {\n        ...state,\n        rows: mergeArraysByKey([state.rows, payload.results]),\n        entities: mergeArraysByKey([state.entities, payload.results])\n    };\n}\n\nfunction entityLoaded(state, { payload }) {\n    const { health, tags, ...rest } = payload;\n    return {\n        ...state,\n        health,\n        tags,\n        entity: {\n            ...state.entity,\n            ...rest\n        }\n    };\n}\n\nfunction enableApplications(state) {\n    return {\n        ...state,\n        loaded: true,\n        activeApps: [\n            { title: 'Overview', name: 'overview', component: Overview },\n            { title: 'Vulnerabilities', name: 'vulnerabilities' },\n            { title: 'Configuration Assessment', name: 'configuration_assessment' },\n            { title: 'Compliance', name: 'compliance' },\n            { title: 'Cost Managemenet', name: 'cost_management' },\n            { title: 'General Information', name: 'general_information', component: GeneralInformation }\n        ]\n    };\n}\n\nlet reducers = {\n    alerts: applyReducerHash({\n        [ACTION_TYPES.ALERT_ADD]: (state, { payload }) =>\n            ([...state, { id: alertIdGenerator++, ...payload }]),\n        [ACTION_TYPES.ALERT_DISMISS]: (state, action) => state.filter(alert => alert.id !== action.alert.id),\n\n        // map every rejected action to an alert\n        ...mapValues(\n            pickBy(ACTION_TYPES, (type => type.endsWith('_REJECTED'))),\n            () => (state, action) =>\n                ([...state, { title: action.payload.message, id: alertIdGenerator++, dismissible: true, variant: 'warning' }])\n        )\n    }, [])\n};\n\nexport const entitiesReducer = applyReducerHash(\n    {\n        [ACTION_TYPES.GET_ENTITIES_FULFILLED]: entitiesLoaded\n    },\n    defaultState\n);\n\nexport const entitesDetailReducer = (INVENTORY_ACTION_TYPES) => applyReducerHash(\n    {\n        [INVENTORY_ACTION_TYPES.LOAD_ENTITY_FULFILLED]: enableApplications,\n        [ACTION_TYPES.GET_ENTITY_FULFILLED]: entityLoaded\n    },\n    defaultState\n);\n\nexport default reducers;\n","import MiddlewareListener from '@red-hat-insights/insights-frontend-components/Utilities/MiddlewareListener';\nimport { getRegistry } from '@red-hat-insights/insights-frontend-components';\nimport { notificationsMiddleware } from '@red-hat-insights/insights-frontend-components/components/Notifications/';\nimport promiseMiddleware from 'redux-promise-middleware';\nexport { default as reducers, entitiesReducer, entitesDetailReducer } from './reducers';\n\nlet middlewareListener;\n\nexport function init (...middleware) {\n    middlewareListener = new MiddlewareListener();\n    return getRegistry(\n        {}, [\n            middlewareListener.getMiddleware(),\n            promiseMiddleware(),\n            notificationsMiddleware(),\n            ...middleware\n        ]\n    );\n}\n\nexport function addNewListener ({ actionType, callback }) {\n    return middlewareListener.addNew({\n        on: actionType,\n        callback\n    });\n}\n","\nexport const INVENTORY_API_BASE = '/r/insights/platform/inventory/api/v1/hosts';\nexport const INVENTORY_ROOT = 'inventory';\n","import { INVENTORY_API_BASE } from './config';\n\nconst addMockApp = (results) => results.map(row => ({\n    id: row.id,\n    health: {\n        vulnerabilities: { title: 5, redirect: 'cost_management' },\n        configuration: { title: 10, redirect: 'configuration_assessment' },\n        compliance: { title: '74%', redirect: 'compliance' },\n        cost: { title: '23K', redirect: 'cost_management' }\n    }\n}));\n\n// eslint-disable-next-line camelcase\nexport function getEntities({ page, per_page }) {\n    let query = '';\n    // eslint-disable-next-line camelcase\n    if (per_page || page) {\n        // eslint-disable-next-line camelcase\n        const params = { per_page, page };\n        query = '?' + Object.keys(params).reduce(\n            (acc, curr) => [...acc, `${curr}=${params[curr]}`], []\n        ).join('&');\n    }\n\n    return fetch(`${INVENTORY_API_BASE}${query}`).then(r => {\n        if (r.ok) {\n            return r.json().then(data => ({\n                results: addMockApp(data.results)\n            }));\n        }\n\n        throw new Error(`Unexpected response code ${r.status}`);\n    });\n}\n\nexport function getEntity (id) {\n    return fetch(`${INVENTORY_API_BASE}/${id}`).then(r => {\n        if (r.ok) {\n            return r.json();\n        }\n\n        throw new Error(`Unexpected response code ${r.status}`);\n    });\n}\n","import { ACTION_TYPES } from './constants';\nimport { getEntity, getEntities } from './api';\n\nexport const loadEntities = (config) => {\n    return ({\n        type: ACTION_TYPES.GET_ENTITIES,\n        payload: getEntities(config).then(data => (data.items || data))\n    });\n};\n\nexport const loadEntity = id => ({\n    type: ACTION_TYPES.GET_ENTITY,\n    payload: getEntity(id)\n});\n\nexport const addAlert = ({ title, dismissible = false, variant = 'warning' }) => ({\n    type: ACTION_TYPES.ALERT_ADD,\n    payload: { title, dismissible, variant }\n});\n\nexport const dismissAlert = (alert, timeout = false) => ({\n    type: ACTION_TYPES.ALERT_DISMISS,\n    alert,\n    timeout\n});\n","import React from 'react';\nimport * as reactRouterDom from 'react-router-dom';\nimport * as reactCore from '@patternfly/react-core';\nimport * as reactIcons from '@patternfly/react-icons';\nimport { PaginationRow } from 'patternfly-react';\n\nexport const asyncInventoryLoader = () => insights.loadInventory({\n    react: React,\n    reactRouterDom,\n    reactCore,\n    reactIcons,\n    pfReact: {\n        PaginationRow\n    }\n});\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport './inventory.scss';\nimport { PageHeader, PageHeaderTitle, Main, routerParams } from '@red-hat-insights/insights-frontend-components';\nimport { entitiesReducer, addNewListener } from '../store';\nimport * as actions from '../actions';\nimport { Grid, GridItem } from '@patternfly/react-core';\nimport { asyncInventoryLoader } from '../components/inventory/AsyncInventory';\nimport { registry as registryDecorator } from '@red-hat-insights/insights-frontend-components';\n\n@registryDecorator()\nclass Inventory extends Component {\n\n    constructor (props, ctx) {\n        super(props, ctx);\n        this.loadInventory();\n        this.inventory = React.createRef();\n\n        this.state = {\n            ConnectedInventory: () => <div>Loading..</div>\n        };\n\n        this.onRefresh = this.onRefresh.bind(this);\n    }\n\n    async loadInventory() {\n        const {\n            inventoryConnector,\n            INVENTORY_ACTION_TYPES,\n            mergeWithEntities\n        } = await asyncInventoryLoader();\n        this.getRegistry().register({\n            ...mergeWithEntities(entitiesReducer)\n        });\n\n        addNewListener({\n            actionType: INVENTORY_ACTION_TYPES.LOAD_ENTITIES,\n            callback: ({ data }) => {\n                // eslint-disable-next-line camelcase\n                data.then(({ page, per_page }) => {\n                    // eslint-disable-next-line camelcase\n                    this.props.loadEntities({ page, per_page });\n                });\n            }\n        });\n\n        const { InventoryTable, updateEntities } = inventoryConnector();\n\n        this.updateEntities = updateEntities;\n\n        this.setState({\n            ConnectedInventory: InventoryTable\n        });\n    }\n\n    onRefresh() {\n    }\n\n    render() {\n        const { ConnectedInventory } = this.state;\n        return (\n            <React.Fragment>\n                <PageHeader className=\"pf-m-light\">\n                    <PageHeaderTitle title='Inventory'/>\n                </PageHeader>\n                <Main>\n                    <Grid gutter=\"md\">\n                        <GridItem span={12}>\n                            <ConnectedInventory\n                                filters={[\n                                    {\n                                        title: 'Health status', value: 'health-status', items: []\n                                    },\n                                    {\n                                        title: 'Last seen', value: 'last-seen', items: []\n                                    }\n                                ]}\n                                ref={this.inventory}\n                                showHealth\n                                onRefresh={this.onRefresh}\n                            />\n                        </GridItem>\n                    </Grid>\n                </Main>\n            </React.Fragment>\n        );\n    }\n}\n\nInventory.contextTypes = {\n    store: PropTypes.object\n};\n\nInventory.propTypes = {\n    addAlert: PropTypes.func,\n    loadEntities: PropTypes.func,\n    loadEntity: PropTypes.func\n};\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        addAlert: (payload) => dispatch(actions.addAlert(payload)),\n        loadEntities: (config) => dispatch(actions.loadEntities(config)),\n        loadEntity: (id) => dispatch(actions.loadEntity(id))\n    };\n}\n\nexport default routerParams(connect(() => ({}), mapDispatchToProps)(Inventory));\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport './inventory.scss';\nimport { PageHeader, PageHeaderTitle, Main, routerParams } from '@red-hat-insights/insights-frontend-components';\nimport { entitesDetailReducer, addNewListener } from '../store';\nimport * as actions from '../actions';\nimport { Card, CardBody, Grid, GridItem } from '@patternfly/react-core';\nimport { asyncInventoryLoader } from '../components/inventory/AsyncInventory';\nimport { registry as registryDecorator } from '@red-hat-insights/insights-frontend-components';\n\n@registryDecorator()\nclass Inventory extends Component {\n\n    constructor(props, ctx) {\n        super(props, ctx);\n        this.loadInventory();\n\n        this.state = {\n            InventoryDetail: () => <div>Loading..</div>\n        };\n    }\n\n    async loadInventory() {\n        const {\n            inventoryConnector,\n            INVENTORY_ACTION_TYPES,\n            mergeWithDetail\n        } = await asyncInventoryLoader();\n        this.getRegistry().register({\n            ...mergeWithDetail(entitesDetailReducer(INVENTORY_ACTION_TYPES))\n        });\n\n        this.entityListener = addNewListener({\n            actionType: INVENTORY_ACTION_TYPES.LOAD_ENTITY,\n            callback: ({ data }) => {\n                data.then(payload => {\n                    payload.error && this.props.addAlert({ title: payload.error.message });\n                    this.props.loadEntity(payload.results[0].id);\n                });\n            }\n        });\n\n        const { InventoryDetail } = inventoryConnector();\n\n        this.setState({\n            InventoryDetail\n        });\n    }\n\n    componentWillUnmount() {\n        this.entityListener();\n    }\n\n    render() {\n        const { InventoryDetail } = this.state;\n        return (\n            <React.Fragment>\n                <PageHeader className=\"pf-m-light\">\n                    <PageHeaderTitle title='Inventory' />\n                </PageHeader>\n                <Main>\n                    <Grid gutter=\"md\">\n                        <GridItem span={12}>\n                            <Card>\n                                <CardBody>\n                                    <InventoryDetail />\n                                </CardBody>\n                            </Card>\n                        </GridItem>\n                    </Grid>\n                </Main>\n            </React.Fragment>\n        );\n    }\n}\n\nInventory.contextTypes = {\n    store: PropTypes.object\n};\n\nInventory.propTypes = {\n    addAlert: PropTypes.func,\n    loadEntities: PropTypes.func,\n    loadEntity: PropTypes.func\n};\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        addAlert: (payload) => dispatch(actions.addAlert(payload)),\n        loadEntities: () => dispatch(actions.loadEntities()),\n        loadEntity: (id) => dispatch(actions.loadEntity(id))\n    };\n}\n\nexport default routerParams(connect(() => ({}), mapDispatchToProps)(Inventory));\n","import { Route, Switch, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport InventoryTable from './routes/InventoryTable';\nimport InventoryDetail from './routes/InventoryDetail';\n\nconst InsightsRoute = ({ component: Component, rootClass, ...rest }) => {\n    const root = document.getElementById('root');\n    root.removeAttribute('class');\n    root.classList.add(`page__${rootClass}`, 'pf-l-page__main');\n\n    return (<Route {...rest} component={Component}/>);\n};\n\nInsightsRoute.propTypes = {\n    component: PropTypes.func,\n    rootClass: PropTypes.string\n};\n\n/**\n * the Switch component changes routes depending on the path.\n *\n * Route properties:\n *      exact - path must match exactly,\n *      path - https://prod.foo.redhat.com:1337/insights/advisor/rules\n *      component - component to be rendered when a route has been chosen.\n */\nexport const Routes = () => {\n    return (\n        <Switch>\n            <InsightsRoute exact path='/entity' component={InventoryTable} rootClass='inventory' />\n            <InsightsRoute path='/entity/:inventoryId' component={InventoryDetail} rootClass='inventory' />\n            <Redirect to=\"/entity\" />\n        </Switch>\n    );\n};\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Routes } from './Routes';\nimport './App.scss';\nimport { INVENTORY_ROOT } from './config';\nimport { registry as registryDecorator, routerParams } from '@red-hat-insights/insights-frontend-components';\nimport { reducers } from './store';\nimport { NotificationsPortal, notifications } from '@red-hat-insights/insights-frontend-components/components/Notifications';\n\n@registryDecorator()\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.getRegistry().register(reducers);\n        this.getRegistry().register({ notifications });\n    }\n\n    componentDidMount () {\n        insights.chrome.init();\n        insights.chrome.identifyApp(INVENTORY_ROOT);\n        this.appNav = insights.chrome.on('APP_NAVIGATION', event => this.props.history.push(`/${event.navId}`));\n    }\n\n    componentWillUnmount() {\n        this.appNav();\n    }\n\n    render () {\n        return (\n            <React.Fragment>\n                <NotificationsPortal />\n                <Routes childProps={this.props} />\n            </React.Fragment>\n        );\n    }\n}\n\nApp.propTypes = {\n    history: PropTypes.object\n};\n\n/**\n * connect: https://github.com/reactjs/react-redux/blob/master/docs/api.md\n *          https://reactjs.org/docs/higher-order-components.html\n */\nexport default routerParams(connect()(App));\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { init } from './store';\nimport App from './App';\nimport logger from 'redux-logger';\n\n// exposes webpack variable RELEASE\n/*global RELEASE:true*/\n/*eslint no-undef: \"error\"*/\n\nReactDOM.render(\n    <Provider store={init(logger).getStore()}>\n        <Router basename={ `/${RELEASE}/platform/inventory` }>\n            <App />\n        </Router>\n    </Provider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}