{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/routes/inventory.scss?1810","webpack:///./src/routes/inventory.scss","webpack:///./src/App.scss?e765","webpack:///./src/App.scss","webpack:///./src/constants.js","webpack:///./src/store/reducers.js","webpack:///./src/store/index.js","webpack:///./src/config.js","webpack:///./src/api.js","webpack:///./src/actions.js","webpack:///./src/components/inventory/AsyncInventory.js","webpack:///./src/routes/InventoryTable.js","webpack:///./src/routes/InventoryDetail.js","webpack:///./src/Routes.js","webpack:///./src/App.js","webpack:///./src/entry.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","content","options","hmr","transform","insertInto","undefined","locals","asyncActions","flatMap","a","concat","ACTION_TYPES","keyBy","toConsumableArray_default","k","alertIdGenerator","defaultState","loaded","entityLoaded","state","_ref2","payload","health","tags","rest","objectWithoutProperties_default","objectSpread_default","entity","enableApplications","activeApps","title","component","Vulnerabilities","Advisor","Compliance","GeneralInformation","middlewareListener","reducers","alerts","applyReducerHash","_objectSpread2","defineProperty_default","ALERT_ADD","_ref3","id","ALERT_DISMISS","action","filter","alert","mapValues","pickBy","type","endsWith","message","dismissible","variant","entitiesReducer","GET_ENTITIES_FULFILLED","_ref","rows","mergeArraysByKey","results","entities","entitesDetailReducer","INVENTORY_ACTION_TYPES","_applyReducerHash2","LOAD_ENTITY_FULFILLED","GET_ENTITY_FULFILLED","addNewListener","actionType","callback","addNew","on","INVENTORY_API_BASE","getAllEntities","_x","_getAllEntities","this","arguments","_callee","_ref$filters","config","numberOfpages","regenerator_default","wrap","_context","prev","next","filters","per_page","getEntities","page","sent","Math","ceil","Number","total","t0","t1","Promise","all","Array","map","_item","then","t2","t3","t4","Boolean","t5","item","t6","facts","abrupt","stop","_ref2$filters","query","displayName","find","params","display_name","keys","reduce","acc","curr","indexOf","join","fetch","ok","json","Error","status","loadEntities","GET_ENTITIES","loadEntity","GET_ENTITY","getEntity","addAlert","_ref2$dismissible","_ref2$variant","asyncInventoryLoader","insights","loadInventory","react","React","reactRouterDom","reactCore","reactIcons","pfReact","PaginationRow","Inventory","registryDecorator","props","ctx","_this","classCallCheck_default","possibleConstructorReturn_default","getPrototypeOf_default","inventory","createRef","removeListener","onRefresh","assertThisInitialized_default","onSelect","inventoryConnector","mergeWithEntities","getRegistry","register","InventoryTable","updateEntities","setState","ConnectedInventory","_event","fileType","downloadFile","JSON","stringify","Date","toISOString","JSON_TYPE","header","head","react_default","createElement","Fragment","insights_frontend_components","className","Grid","gutter","GridItem","span","items","ref","DownloadButton","Component","contextTypes","store","PropTypes","propTypes","func","routerParams","connect","dispatch","actions","onNavigate","mergeWithDetail","LOAD_ENTITY","error","_this2","InventoryDetailHead","AppInfo","VulnerabilitiesStore","InventoryDetail","navigateTo","history","_this3","_this$state","navigate","current","hideBack","entityDetails","InsightsRoute","rootClass","root","document","getElementById","removeAttribute","classList","add","Route","extends_default","string","Routes","Switch","Routes_InsightsRoute","exact","path","Redirect","to","App","chrome","init","identifyApp","appNav","event","navId","Notifications","Routes_Routes","childProps","ReactDOM","render","es","MiddlewareListener","_len","middleware","_key","getMiddleware","promiseMiddleware","notificationsMiddleware","logger","getStore","BrowserRouter","basename","RELEASE","src_App_0"],"mappings":"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","file":"js/App.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/insights/platform/inventory/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([633,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","\nvar content = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/sass-loader/lib/loader.js??ref--5-2!./inventory.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../node_modules/css-loader/index.js!../../node_modules/sass-loader/lib/loader.js??ref--5-2!./inventory.scss\", function() {\n\t\tvar newContent = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/sass-loader/lib/loader.js??ref--5-2!./inventory.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\nexports.i(require(\"-!../../node_modules/css-loader/index.js!@red-hat-insights/insights-frontend-components/index.css\"), \"\");\n\n// module\nexports.push([module.id, \"button:focus {\\n  outline: none; }\\n\\n.buttons button + button {\\n  margin-left: 15px; }\\n\", \"\"]);\n\n// exports\n","\nvar content = require(\"!!../node_modules/css-loader/index.js!../node_modules/sass-loader/lib/loader.js??ref--5-2!./App.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../node_modules/css-loader/index.js!../node_modules/sass-loader/lib/loader.js??ref--5-2!./App.scss\", function() {\n\t\tvar newContent = require(\"!!../node_modules/css-loader/index.js!../node_modules/sass-loader/lib/loader.js??ref--5-2!./App.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\nexports.i(require(\"-!../node_modules/css-loader/index.js!@red-hat-insights/insights-frontend-components/index.css\"), \"\");\nexports.i(require(\"-!../node_modules/css-loader/index.js!@red-hat-insights/insights-frontend-components/components/Notifications.css\"), \"\");\n\n// module\nexports.push([module.id, \"button:focus {\\n  outline: none; }\\n\", \"\"]);\n\n// exports\n","import keyBy from 'lodash/keyBy';\nimport flatMap from 'lodash/flatMap';\n\nconst actions = [\n    'ALERT_ADD',\n    'ALERT_DISMISS'\n];\n\nconst asyncActions = flatMap([\n    'GET_ENTITIES',\n    'GET_ENTITY'\n], a => [a, `${a}_PENDING`, `${a}_FULFILLED`, `${a}_REJECTED`]);\n\nexport const ACTION_TYPES = keyBy([...actions, ...asyncActions], k => k);\n","import pickBy from 'lodash/pickBy';\nimport mapValues from 'lodash/mapValues';\n\nimport { ACTION_TYPES } from '../constants';\nimport { applyReducerHash } from '@red-hat-insights/insights-frontend-components/Utilities/ReducerRegistry';\nimport { mergeArraysByKey } from '@red-hat-insights/insights-frontend-components/Utilities/helpers';\nimport {\n    GeneralInformation,\n    Vulnerabilities,\n    Compliance,\n    Advisor\n} from '@red-hat-insights/insights-frontend-components';\n\nlet alertIdGenerator = 0;\n\nconst defaultState = { loaded: false };\n\nfunction entitiesLoaded(state, { payload }) {\n    return {\n        ...state,\n        rows: mergeArraysByKey([state.rows, payload.results]),\n        entities: mergeArraysByKey([state.entities, payload.results])\n    };\n}\n\nfunction entityLoaded(state, { payload }) {\n    const { health, tags, ...rest } = payload;\n    return {\n        ...state,\n        health,\n        tags,\n        entity: {\n            ...state.entity,\n            ...rest\n        }\n    };\n}\n\nfunction enableApplications(state) {\n    return {\n        ...state,\n        loaded: true,\n        activeApps: [\n            { title: 'Vulnerabilities', name: 'vulnerabilities', component: Vulnerabilities },\n            { title: 'Configuration Assessment', name: 'configuration_assessment', component: Advisor },\n            { title: 'Compliance', name: 'compliance', component: Compliance },\n            { title: 'General Information', name: 'general_information', component: GeneralInformation }\n        ]\n    };\n}\n\nlet reducers = {\n    alerts: applyReducerHash({\n        [ACTION_TYPES.ALERT_ADD]: (state, { payload }) =>\n            ([...state, { id: alertIdGenerator++, ...payload }]),\n        [ACTION_TYPES.ALERT_DISMISS]: (state, action) => state.filter(alert => alert.id !== action.alert.id),\n\n        // map every rejected action to an alert\n        ...mapValues(\n            pickBy(ACTION_TYPES, (type => type.endsWith('_REJECTED'))),\n            () => (state, action) =>\n                ([...state, { title: action.payload.message, id: alertIdGenerator++, dismissible: true, variant: 'warning' }])\n        )\n    }, [])\n};\n\nexport const entitiesReducer = applyReducerHash(\n    {\n        [ACTION_TYPES.GET_ENTITIES_FULFILLED]: entitiesLoaded\n    },\n    defaultState\n);\n\nexport const entitesDetailReducer = (INVENTORY_ACTION_TYPES) => applyReducerHash(\n    {\n        [INVENTORY_ACTION_TYPES.LOAD_ENTITY_FULFILLED]: enableApplications,\n        [ACTION_TYPES.GET_ENTITY_FULFILLED]: entityLoaded\n    },\n    defaultState\n);\n\nexport default reducers;\n","import MiddlewareListener from '@red-hat-insights/insights-frontend-components/Utilities/MiddlewareListener';\nimport { getRegistry } from '@red-hat-insights/insights-frontend-components';\nimport { notificationsMiddleware } from '@red-hat-insights/insights-frontend-components/components/Notifications/';\nimport promiseMiddleware from 'redux-promise-middleware';\nexport { default as reducers, entitiesReducer, entitesDetailReducer } from './reducers';\n\nlet middlewareListener;\n\nexport function init (...middleware) {\n    middlewareListener = new MiddlewareListener();\n    return getRegistry(\n        {}, [\n            middlewareListener.getMiddleware(),\n            promiseMiddleware(),\n            notificationsMiddleware(),\n            ...middleware\n        ]\n    );\n}\n\nexport function addNewListener ({ actionType, callback }) {\n    return middlewareListener.addNew({\n        on: actionType,\n        callback\n    });\n}\n","\nexport const INVENTORY_API_BASE = '/r/insights/platform/inventory/api/v1/hosts';\nexport const INVENTORY_ROOT = 'inventory';\n","import { INVENTORY_API_BASE } from './config';\n\nexport async function getAllEntities({ filters = [] }) {\n    const config = {\n        // eslint-disable-next-line camelcase\n        per_page: 100,\n        filters\n    };\n    const data = await getEntities({ page: 1, ...config });\n    let numberOfpages = Math.ceil(Number(data.total) / 100);\n    let results = data.results;\n    if (numberOfpages > 1) {\n        results = [\n            ...results,\n            ...await Promise.all([...Array(numberOfpages)].map((_item, key) => {\n                if (key + 1 !== 1) {\n                    return getEntities({ page: key + 1, ...config }).then(entities => entities.results);\n                }\n            }))\n        ].filter(Boolean)\n        .flatMap(item => item)\n        // eslint-disable-next-line no-unused-vars\n        .flatMap(({ facts, ...item }) => item);\n    }\n\n    return results;\n}\n\n// eslint-disable-next-line camelcase\nexport function getEntities({ page, per_page, filters = [] }) {\n    let query = '';\n    const displayName = filters.find(item => item.value === 'display_name');\n    // eslint-disable-next-line camelcase\n    if (per_page || page || displayName) {\n        // eslint-disable-next-line camelcase\n        const params = { per_page, page, display_name: displayName && displayName.filter };\n        query = '?' + Object.keys(params).reduce(\n            (acc, curr) => [...acc, `${curr}=${params[curr]}`], []\n        ).filter(item => item.indexOf('undefined') === -1).join('&');\n    }\n\n    return fetch(`${INVENTORY_API_BASE}${query}`).then(r => {\n        if (r.ok) {\n            return r.json();\n        }\n\n        throw new Error(`Unexpected response code ${r.status}`);\n    });\n}\n\nexport function getEntity (id) {\n    return fetch(`${INVENTORY_API_BASE}/${id}`).then(r => {\n        if (r.ok) {\n            return r.json();\n        }\n\n        throw new Error(`Unexpected response code ${r.status}`);\n    });\n}\n","import { ACTION_TYPES } from './constants';\nimport { getEntity, getEntities } from './api';\n\nexport const loadEntities = (config) => {\n    return ({\n        type: ACTION_TYPES.GET_ENTITIES,\n        payload: getEntities(config).then(({ results }) => ({ results }))\n    });\n};\n\nexport const loadEntity = id => ({\n    type: ACTION_TYPES.GET_ENTITY,\n    payload: getEntity(id)\n});\n\nexport const addAlert = ({ title, dismissible = false, variant = 'warning' }) => ({\n    type: ACTION_TYPES.ALERT_ADD,\n    payload: { title, dismissible, variant }\n});\n\nexport const dismissAlert = (alert, timeout = false) => ({\n    type: ACTION_TYPES.ALERT_DISMISS,\n    alert,\n    timeout\n});\n","import React from 'react';\nimport * as reactRouterDom from 'react-router-dom';\nimport * as reactCore from '@patternfly/react-core';\nimport * as reactIcons from '@patternfly/react-icons';\nimport { PaginationRow } from 'patternfly-react';\n\nexport const asyncInventoryLoader = () => insights.loadInventory({\n    react: React,\n    reactRouterDom,\n    reactCore,\n    reactIcons,\n    pfReact: {\n        PaginationRow\n    }\n});\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport './inventory.scss';\nimport { PageHeader, PageHeaderTitle, Main, routerParams, DownloadButton } from '@red-hat-insights/insights-frontend-components';\nimport { entitiesReducer } from '../store';\nimport * as actions from '../actions';\nimport { Grid, GridItem } from '@patternfly/react-core';\nimport { asyncInventoryLoader } from '../components/inventory/AsyncInventory';\nimport { registry as registryDecorator } from '@red-hat-insights/insights-frontend-components';\nimport { getAllEntities } from '../api';\nimport { downloadFile, JSON_TYPE } from '@red-hat-insights/insights-frontend-components/Utilities/helpers';\n\n@registryDecorator()\nclass Inventory extends Component {\n\n    constructor (props, ctx) {\n        super(props, ctx);\n        this.loadInventory();\n        this.inventory = React.createRef();\n        this.state = {\n            removeListener: () => undefined\n        };\n        this.onRefresh = this.onRefresh.bind(this);\n        this.onSelect = this.onSelect.bind(this);\n    }\n\n    async loadInventory() {\n        const {\n            inventoryConnector,\n            mergeWithEntities\n        } = await asyncInventoryLoader();\n        this.getRegistry().register({\n            ...mergeWithEntities(entitiesReducer)\n        });\n\n        // No need for it right now because we are not getting extra data\n        // const removeListener = addNewListener({\n        //     actionType: INVENTORY_ACTION_TYPES.LOAD_ENTITIES,\n        //     callback: ({ data }) => {\n        //         // eslint-disable-next-line camelcase\n        //         data.then(({ page, per_page }) => {\n        //             // eslint-disable-next-line camelcase\n        //             this.props.loadEntities({ page, per_page, filters: this.state.filters });\n        //         });\n        //     }\n        // });\n\n        const { InventoryTable, updateEntities } = inventoryConnector();\n\n        this.updateEntities = updateEntities;\n\n        this.setState({\n            ConnectedInventory: InventoryTable\n        });\n    }\n\n    onRefresh({ filters }) {\n        this.setState({\n            filters\n        });\n    }\n\n    async onSelect(_event, fileType) {\n        const { filters } = this.state;\n        const results = await getAllEntities({ filters });\n        if (fileType === 'json') {\n            downloadFile(JSON.stringify(results), `${new Date().toISOString()}.json`, JSON_TYPE);\n        } else {\n            const header = Object.keys(results[0]);\n            const data = results.map(item => header.map(head => item[head] || '').join(','));\n            downloadFile([\n                header.join(','),\n                ...data\n            ].join('\\n'), `${new Date().toISOString()}.csv`, JSON_TYPE);\n        }\n    }\n\n    render() {\n        const { ConnectedInventory } = this.state;\n        return (\n            <React.Fragment>\n                <PageHeader className=\"pf-m-light\">\n                    <PageHeaderTitle title='Inventory'/>\n                </PageHeader>\n                <Main>\n                    <Grid gutter=\"md\">\n                        <GridItem span={12}>\n                            {ConnectedInventory &&\n                                <ConnectedInventory\n                                    filters={[\n                                        {\n                                            title: 'Health status', value: 'health-status', items: []\n                                        },\n                                        {\n                                            title: 'Last seen', value: 'last-seen', items: []\n                                        }\n                                    ]}\n                                    ref={this.inventory}\n                                    onRefresh={this.onRefresh}\n                                >\n                                    { DownloadButton && <DownloadButton onSelect={this.onSelect}/> }\n                                </ConnectedInventory>\n                            }\n                        </GridItem>\n                    </Grid>\n                </Main>\n            </React.Fragment>\n        );\n    }\n}\n\nInventory.contextTypes = {\n    store: PropTypes.object\n};\n\nInventory.propTypes = {\n    addAlert: PropTypes.func,\n    loadEntities: PropTypes.func,\n    loadEntity: PropTypes.func\n};\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        addAlert: (payload) => dispatch(actions.addAlert(payload)),\n        loadEntities: (config) => dispatch(actions.loadEntities(config)),\n        loadEntity: (id) => dispatch(actions.loadEntity(id))\n    };\n}\n\nexport default routerParams(connect(() => ({}), mapDispatchToProps)(Inventory));\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport './inventory.scss';\nimport { PageHeader, Main, routerParams, Breadcrumbs } from '@red-hat-insights/insights-frontend-components';\nimport { entitesDetailReducer, addNewListener } from '../store';\nimport * as actions from '../actions';\nimport { Grid, GridItem } from '@patternfly/react-core';\nimport { asyncInventoryLoader } from '../components/inventory/AsyncInventory';\nimport { registry as registryDecorator } from '@red-hat-insights/insights-frontend-components';\nimport '@red-hat-insights/insights-frontend-components/components/GeneralInformation.css';\nimport '@red-hat-insights/insights-frontend-components/components/Advisor.css';\n\n@registryDecorator()\nclass Inventory extends Component {\n\n    constructor(props, ctx) {\n        super(props, ctx);\n        this.loadInventory();\n\n        this.state = {};\n        this.onNavigate = this.onNavigate.bind(this);\n    }\n\n    async loadInventory() {\n        const {\n            inventoryConnector,\n            INVENTORY_ACTION_TYPES,\n            mergeWithDetail\n        } = await asyncInventoryLoader();\n        this.getRegistry().register({\n            ...mergeWithDetail(entitesDetailReducer(INVENTORY_ACTION_TYPES))\n        });\n\n        const removeListener = addNewListener({\n            actionType: INVENTORY_ACTION_TYPES.LOAD_ENTITY,\n            callback: ({ data }) => {\n                data.then(payload => {\n                    payload.error && this.props.addAlert({ title: payload.error.message });\n                    this.props.loadEntity(payload.results[0].id);\n                    removeListener();\n                });\n            }\n        });\n\n        const { InventoryDetailHead, AppInfo, VulnerabilitiesStore } = inventoryConnector();\n\n        VulnerabilitiesStore && this.getRegistry().register({ VulnerabilitiesStore });\n\n        this.setState({\n            InventoryDetail: InventoryDetailHead,\n            AppInfo\n        });\n    }\n\n    onNavigate(navigateTo) {\n        const { history } = this.props;\n        history.push(`/${navigateTo}`);\n    }\n\n    render() {\n        const { InventoryDetail, AppInfo } = this.state;\n        const { entity } = this.props;\n        return (\n            <Fragment>\n                <PageHeader className=\"pf-m-light ins-inventory-detail\">\n                    <Breadcrumbs\n                        items={[{ title: 'Inventory', navigate: 'entity' }]}\n                        current={entity && entity.display_name}\n                        onNavigate={(_event, navigateTo) => this.onNavigate(navigateTo)}\n                    />\n                    {InventoryDetail && <InventoryDetail hideBack />}\n                </PageHeader>\n                <Main>\n                    <Grid gutter=\"md\">\n                        <GridItem span={12}>\n                            {AppInfo && <AppInfo />}\n                        </GridItem>\n                    </Grid>\n                </Main>\n            </Fragment>\n        );\n    }\n}\n\nInventory.contextTypes = {\n    store: PropTypes.object\n};\n\nInventory.propTypes = {\n    history: PropTypes.object,\n    entity: PropTypes.object,\n    addAlert: PropTypes.func,\n    loadEntities: PropTypes.func,\n    loadEntity: PropTypes.func\n};\n\nfunction mapStateToProps({ entityDetails }) {\n    return {\n        entity: entityDetails && entityDetails.entity\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        addAlert: (payload) => dispatch(actions.addAlert(payload)),\n        loadEntities: () => dispatch(actions.loadEntities()),\n        loadEntity: (id) => dispatch(actions.loadEntity(id))\n    };\n}\n\nexport default routerParams(connect(mapStateToProps, mapDispatchToProps)(Inventory));\n","import { Route, Switch, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport InventoryTable from './routes/InventoryTable';\nimport InventoryDetail from './routes/InventoryDetail';\n\nconst InsightsRoute = ({ component: Component, rootClass, ...rest }) => {\n    const root = document.getElementById('root');\n    root.removeAttribute('class');\n    root.classList.add(`page__${rootClass}`, 'pf-l-page__main');\n\n    return (<Route {...rest} component={Component}/>);\n};\n\nInsightsRoute.propTypes = {\n    component: PropTypes.func,\n    rootClass: PropTypes.string\n};\n\n/**\n * the Switch component changes routes depending on the path.\n *\n * Route properties:\n *      exact - path must match exactly,\n *      path - https://prod.foo.redhat.com:1337/insights/advisor/rules\n *      component - component to be rendered when a route has been chosen.\n */\nexport const Routes = () => {\n    return (\n        <Switch>\n            <InsightsRoute exact path='/entity' component={InventoryTable} rootClass='inventory' />\n            <InsightsRoute path='/entity/:inventoryId' component={InventoryDetail} rootClass='inventory' />\n            <Redirect to=\"/entity\" />\n        </Switch>\n    );\n};\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Routes } from './Routes';\nimport './App.scss';\nimport { INVENTORY_ROOT } from './config';\nimport { registry as registryDecorator, routerParams } from '@red-hat-insights/insights-frontend-components';\nimport { reducers } from './store';\nimport { NotificationsPortal } from '@red-hat-insights/insights-frontend-components/components/Notifications';\n\n@registryDecorator()\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.getRegistry().register(reducers);\n    }\n\n    componentDidMount () {\n        insights.chrome.init();\n        insights.chrome.identifyApp(INVENTORY_ROOT);\n        this.appNav = insights.chrome.on('APP_NAVIGATION', event => this.props.history.push(`/${event.navId}`));\n    }\n\n    componentWillUnmount() {\n        this.appNav();\n    }\n\n    render () {\n        return (\n            <React.Fragment>\n                <NotificationsPortal />\n                <Routes childProps={this.props} />\n            </React.Fragment>\n        );\n    }\n}\n\nApp.propTypes = {\n    history: PropTypes.object\n};\n\n/**\n * connect: https://github.com/reactjs/react-redux/blob/master/docs/api.md\n *          https://reactjs.org/docs/higher-order-components.html\n */\nexport default routerParams(connect()(App));\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { init } from './store';\nimport App from './App';\nimport logger from 'redux-logger';\n\n// exposes webpack variable RELEASE\n/*global RELEASE:true*/\n/*eslint no-undef: \"error\"*/\n\nReactDOM.render(\n    <Provider store={init(logger).getStore()}>\n        <Router basename={ `/${RELEASE}/platform/inventory` }>\n            <App />\n        </Router>\n    </Provider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}
