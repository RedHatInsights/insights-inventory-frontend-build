{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/routes/inventory.scss","webpack:///./src/App.scss?1b6e","webpack:///./src/App.scss","webpack:///./src/constants.js","webpack:///./src/store/reducers.js","webpack:///./src/store/index.js","webpack:///./src/actions.js","webpack:///./src/api.js","webpack:///./src/components/inventory/AsyncInventory.js","webpack:///./src/routes/InventoryTable.js","webpack:///./src/routes/InventoryDetail.js","webpack:///./src/Routes.js","webpack:///./src/App.js","webpack:///./src/config.js","webpack:///./src/entry.js","webpack:///./src/routes/inventory.scss?94da"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","content","options","hmr","transform","insertInto","undefined","locals","asyncActions","flatMap","a","concat","ACTION_TYPES","keyBy","toConsumableArray_default","k","defaultState","loaded","isEntitled","service","sessionStorage","getItem","is_entitled","entityLoaded","state","entitlements","arguments","payload","objectSpread_default","activeApps","title","component","GeneralInformation","insights","Advisor","smart_management","Vulnerabilities","Compliance","filter","Boolean","middlewareListener","reducers","notifications","entitiesReducer","applyReducerHash","defineProperty_default","GET_ENTITIES_FULFILLED","_ref","rows","mergeArraysByKey","results","entities","addNewListener","actionType","callback","addNew","on","loadEntity","type","GET_ENTITY","chrome","auth","getUser","clearNotifications","asyncInventoryLoader","loadInventory","react","React","reactRouterDom","reactCore","reactIcons","pfReact","Inventory","registryDecorator","props","ctx","_this","classCallCheck_default","this","possibleConstructorReturn_default","getPrototypeOf_default","inventory","createRef","removeListener","onRefresh","assertThisInitialized_default","inventoryConnector","mergeWithEntities","getRegistry","register","InventoryTable","updateEntities","setState","ConnectedInventory","_this2","filters","current","onRefreshData","react_default","createElement","Fragment","insights_frontend_components","className","Grid","gutter","GridItem","span","ref","hasCheckbox","Component","contextTypes","store","PropTypes","propTypes","func","routerParams","connect","dispatch","id","actions","INVENTORY_ACTION_TYPES","mergeWithDetail","GET_ENTITY_FULFILLED","LOAD_ENTITY","_ref2","then","InventoryDetailHead","AppInfo","VulnerabilitiesStore","InventoryDetail","_this$state","_this$props","entity","currentApp","classNames","Breadcrumb","BreadcrumbItem","Link","to","routes","table","isActive","display_name","size","SkeletonSize","xs","hideBack","history","string","_ref3","entityDetails","activeApp","appName","firstApp","InsightsRoute","rootClass","rest","objectWithoutProperties_default","root","document","getElementById","removeAttribute","classList","add","Route","extends_default","detail","Routes","technology","app","childProps","pathName","location","pathname","split","values","some","route","matchPath","href","path","baseURI","Switch","Routes_InsightsRoute","exact","shape","App","init","identifyApp","appNav","event","navId","Notifications","Routes_Routes","release","ReactDOM","render","es","MiddlewareListener","_len","middleware","Array","_key","getMiddleware","promiseMiddleware","notificationsMiddleware","errorDescriptionKey","getStore","BrowserRouter","basename","src_App_0"],"mappings":"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","file":"js/App.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/beta/apps/inventory/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([260,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\nexports.i(require(\"-!../../node_modules/css-loader/index.js!@red-hat-insights/insights-frontend-components/index.css\"), \"\");\n\n// module\nexports.push([module.id, \"button:focus {\\n  outline: none; }\\n\\n.buttons button + button {\\n  margin-left: 15px; }\\n\\n.ins-inventory-filters .pf-l-grid__item:not([class*=\\\"ins-\\\"]) {\\n  margin-top: -4px; }\\n\\n.pf-c-breadcrumb .pf-c-breadcrumb__item .ins-c-skeleton {\\n  width: 75px;\\n  width: 5.35714rem; }\\n\\n.ins-c-inventory__detail--general-info:not(.ins-inventory-detail) {\\n  background: var(--pf-global--BackgroundColor--100); }\\n\\n.ins-inventory-detail.ins-c-inventory__detail--general-info .pf-c-tabs__list:after {\\n  border-bottom-style: solid;\\n  border-bottom-width: 1px;\\n  border-bottom-color: var(--pf-c-tabs__item--BorderColor); }\\n\\n.ins-inventory-detail.ins-c-inventory__detail--general-info .pf-c-tabs__list li:not(.pf-m-current) button:before {\\n  border: solid var(--pf-c-tabs__item--BorderColor);\\n  border-width: var(--pf-c-tabs__item--BorderWidth) 0 var(--pf-c-tabs__item--BorderWidth) var(--pf-c-tabs__item--BorderWidth); }\\n\", \"\"]);\n\n// exports\n","\nvar content = require(\"!!../node_modules/css-loader/index.js!../node_modules/sass-loader/lib/loader.js!./App.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../node_modules/css-loader/index.js!../node_modules/sass-loader/lib/loader.js!./App.scss\", function() {\n\t\tvar newContent = require(\"!!../node_modules/css-loader/index.js!../node_modules/sass-loader/lib/loader.js!./App.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\nexports.i(require(\"-!../node_modules/css-loader/index.js!@red-hat-insights/insights-frontend-components/index.css\"), \"\");\nexports.i(require(\"-!../node_modules/css-loader/index.js!@red-hat-insights/insights-frontend-components/components/Notifications.css\"), \"\");\n\n// module\nexports.push([module.id, \"button:focus {\\n  outline: none; }\\n\\ntable.ins-entity-table th {\\n  padding: 1rem;\\n  padding-left: 2rem; }\\n\", \"\"]);\n\n// exports\n","import keyBy from 'lodash/keyBy';\nimport flatMap from 'lodash/flatMap';\n\nconst actions = [\n    'ALERT_ADD',\n    'ALERT_DISMISS'\n];\n\nconst asyncActions = flatMap([\n    'GET_ENTITIES',\n    'GET_ENTITY'\n], a => [a, `${a}_PENDING`, `${a}_FULFILLED`, `${a}_REJECTED`]);\n\nexport const ACTION_TYPES = keyBy([...actions, ...asyncActions], k => k);\nexport const CLEAR_NOTIFICATIONS = '@@INSIGHTS-CORE/NOTIFICATIONS/CLEAR_NOTIFICATIONS';\n","import { ACTION_TYPES } from '../constants';\nimport { applyReducerHash } from '@red-hat-insights/insights-frontend-components/Utilities/ReducerRegistry';\nimport { mergeArraysByKey } from '@red-hat-insights/insights-frontend-components/Utilities/helpers';\nimport {\n    GeneralInformation,\n    Vulnerabilities,\n    Compliance,\n    Advisor\n} from '@red-hat-insights/insights-frontend-components';\nimport { notifications } from '@red-hat-insights/insights-frontend-components/components/Notifications';\n\nconst defaultState = { loaded: false };\n\nconst isEntitled = (service) => {\n    if (window.sessionStorage.getItem('disableEntitlements') === 'true') {\n        return true;\n    }\n\n    return service && service.is_entitled;\n};\n\nfunction entitiesLoaded(state, { payload }) {\n    return {\n        ...state,\n        rows: mergeArraysByKey([state.rows, payload.results]),\n        entities: mergeArraysByKey([state.entities, payload.results])\n    };\n}\n\nfunction entityLoaded(state, { payload: { entitlements } } = { payload: {} }) {\n    return {\n        ...state,\n        loaded: true,\n        activeApps: [\n            { title: 'General Information', name: 'general_information', component: GeneralInformation },\n            isEntitled(entitlements && entitlements.insights) && { title: 'Insights', name: 'insights', component: Advisor },\n            isEntitled(entitlements && entitlements.smart_management) && {\n                title: 'Vulnerabilities',\n                name: 'vulnerabilities',\n                component: Vulnerabilities\n            },\n            isEntitled(entitlements && entitlements.smart_management) && {\n                title: 'Compliance',\n                name: 'compliance',\n                component: Compliance\n            }\n        ].filter(Boolean)\n    };\n}\n\nlet reducers = {\n    notifications\n};\n\nexport const entitiesReducer = applyReducerHash(\n    {\n        [ACTION_TYPES.GET_ENTITIES_FULFILLED]: entitiesLoaded\n    },\n    defaultState\n);\n\nexport const entitesDetailReducer = () => applyReducerHash(\n    {\n        [ACTION_TYPES.GET_ENTITY_FULFILLED]: entityLoaded\n    },\n    defaultState\n);\n\nexport default reducers;\n","import MiddlewareListener from '@red-hat-insights/insights-frontend-components/Utilities/MiddlewareListener';\nimport { getRegistry } from '@red-hat-insights/insights-frontend-components';\nimport { notificationsMiddleware } from '@red-hat-insights/insights-frontend-components/components/Notifications/';\nimport promiseMiddleware from 'redux-promise-middleware';\nexport { default as reducers, entitiesReducer, entitesDetailReducer } from './reducers';\n\nlet middlewareListener;\n\nexport function init (...middleware) {\n    middlewareListener = new MiddlewareListener();\n    return getRegistry(\n        {}, [\n            middlewareListener.getMiddleware(),\n            promiseMiddleware(),\n            notificationsMiddleware({\n                errorDescriptionKey: ['detail', 'stack']\n            }),\n            ...middleware\n        ]\n    );\n}\n\nexport function addNewListener ({ actionType, callback }) {\n    return middlewareListener.addNew({\n        on: actionType,\n        callback\n    });\n}\n","import { ACTION_TYPES, CLEAR_NOTIFICATIONS } from './constants';\nimport { getEntity } from './api';\n\nexport const loadEntity = () => ({\n    type: ACTION_TYPES.GET_ENTITY,\n    payload: getEntity()\n});\n\nexport const clearNotifications = () => {\n    return ({\n        type: CLEAR_NOTIFICATIONS\n    });\n};\n","import { INVENTORY_API_BASE } from './config';\n\nexport async function getAllEntities({ filters = [] }) {\n    const config = {\n        // eslint-disable-next-line camelcase\n        per_page: 100,\n        filters\n    };\n    const data = await getEntities({ page: 1, ...config });\n    let numberOfpages = Math.ceil(Number(data.total) / 100);\n    let results = data.results;\n    if (numberOfpages > 1) {\n        results = [\n            ...results,\n            ...await Promise.all([...Array(numberOfpages)].map((_item, key) => {\n                if (key + 1 !== 1) {\n                    return getEntities({ page: key + 1, ...config }).then(entities => entities.results);\n                }\n            }))\n        ].filter(Boolean);\n    }\n\n    return results\n    .flatMap(item => item)\n    // eslint-disable-next-line no-unused-vars\n    .flatMap(({ facts, ...item }) => item);\n}\n\n// eslint-disable-next-line camelcase\nexport function getEntities({ page, per_page, filters = [] }) {\n    let query = '';\n    const displayName = filters.find(item => item.value === 'display_name');\n    // eslint-disable-next-line camelcase\n    if (per_page || page || displayName) {\n        // eslint-disable-next-line camelcase\n        const params = { per_page, page, display_name: displayName && displayName.filter };\n        query = '?' + Object.keys(params).reduce(\n            (acc, curr) => [...acc, `${curr}=${params[curr]}`], []\n        ).filter(item => item.indexOf('undefined') === -1).join('&');\n    }\n\n    return fetch(`${INVENTORY_API_BASE}${query}`).then(r => {\n        if (r.ok) {\n            return r.json();\n        }\n\n        throw new Error(`Unexpected response code ${r.status}`);\n    });\n}\n\nexport function getEntity () {\n    return insights.chrome.auth.getUser();\n}\n","import React from 'react';\nimport * as reactRouterDom from 'react-router-dom';\nimport * as reactCore from '@patternfly/react-core';\nimport * as reactIcons from '@patternfly/react-icons';\n\nexport const asyncInventoryLoader = () => insights.loadInventory({\n    react: React,\n    reactRouterDom,\n    reactCore,\n    reactIcons,\n    pfReact: {}\n});\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport './inventory.scss';\nimport { PageHeader, PageHeaderTitle, Main, routerParams } from '@red-hat-insights/insights-frontend-components';\nimport { entitiesReducer } from '../store';\nimport * as actions from '../actions';\nimport { Grid, GridItem } from '@patternfly/react-core';\nimport { asyncInventoryLoader } from '../components/inventory/AsyncInventory';\nimport { registry as registryDecorator } from '@red-hat-insights/insights-frontend-components';\n\n@registryDecorator()\nclass Inventory extends Component {\n\n    constructor (props, ctx) {\n        super(props, ctx);\n        this.loadInventory();\n        this.inventory = React.createRef();\n        this.state = {\n            removeListener: () => undefined\n        };\n        this.onRefresh = this.onRefresh.bind(this);\n    }\n\n    async loadInventory() {\n        this.props.clearNotifications();\n        const {\n            inventoryConnector,\n            mergeWithEntities\n        } = await asyncInventoryLoader();\n        this.getRegistry().register({\n            ...mergeWithEntities(entitiesReducer)\n        });\n\n        const { InventoryTable, updateEntities } = inventoryConnector();\n\n        this.updateEntities = updateEntities;\n\n        this.setState({\n            ConnectedInventory: InventoryTable\n        });\n    }\n\n    onRefresh(options) {\n        this.setState({\n            filters: options.filters\n        }, () => this.inventory.current.onRefreshData(options, false));\n    }\n\n    render() {\n        const { ConnectedInventory } = this.state;\n        return (\n            <React.Fragment>\n                <PageHeader className=\"pf-m-light\">\n                    <PageHeaderTitle title='Inventory'/>\n                </PageHeader>\n                <Main>\n                    <Grid gutter=\"md\">\n                        <GridItem span={12}>\n                            {\n                                ConnectedInventory &&\n                                <ConnectedInventory\n                                    ref={this.inventory}\n                                    onRefresh={this.onRefresh}\n                                    hasCheckbox={false}\n                                />\n                            }\n                        </GridItem>\n                    </Grid>\n                </Main>\n            </React.Fragment>\n        );\n    }\n}\n\nInventory.contextTypes = {\n    store: PropTypes.object\n};\n\nInventory.propTypes = {\n    loadEntity: PropTypes.func,\n    clearNotifications: PropTypes.func\n};\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        loadEntity: (id) => dispatch(actions.loadEntity(id)),\n        clearNotifications: () => dispatch(actions.clearNotifications())\n    };\n}\n\nexport default routerParams(connect(() => ({}), mapDispatchToProps)(Inventory));\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport './inventory.scss';\nimport { PageHeader, Main, routerParams } from '@red-hat-insights/insights-frontend-components';\nimport { Link } from 'react-router-dom';\nimport { entitesDetailReducer, addNewListener } from '../store';\nimport * as actions from '../actions';\nimport { Grid, GridItem } from '@patternfly/react-core';\nimport { asyncInventoryLoader } from '../components/inventory/AsyncInventory';\nimport { registry as registryDecorator, Skeleton, SkeletonSize } from '@red-hat-insights/insights-frontend-components';\nimport { Breadcrumb, BreadcrumbItem } from '@patternfly/react-core';\nimport '@red-hat-insights/insights-frontend-components/components/GeneralInformation.css';\nimport '@red-hat-insights/insights-frontend-components/components/Advisor.css';\nimport { routes } from '../Routes';\n\n@registryDecorator()\nclass Inventory extends Component {\n\n    constructor(props, ctx) {\n        super(props, ctx);\n        this.loadInventory();\n\n        this.state = {};\n    }\n\n    async loadInventory() {\n        this.props.clearNotifications();\n        const {\n            inventoryConnector,\n            INVENTORY_ACTION_TYPES,\n            mergeWithDetail\n        } = await asyncInventoryLoader();\n        this.getRegistry().register({\n            ...mergeWithDetail(entitesDetailReducer(INVENTORY_ACTION_TYPES))\n        });\n\n        const removeListener = addNewListener({\n            actionType: INVENTORY_ACTION_TYPES.LOAD_ENTITY,\n            callback: ({ data }) => {\n                data.then(payload => {\n                    this.props.loadEntity(payload.results[0].id);\n                    removeListener();\n                });\n            }\n        });\n\n        const { InventoryDetailHead, AppInfo, VulnerabilitiesStore } = inventoryConnector();\n\n        VulnerabilitiesStore && this.getRegistry().register({ VulnerabilitiesStore });\n\n        this.setState({\n            InventoryDetail: InventoryDetailHead,\n            AppInfo\n        });\n    }\n\n    render() {\n        const { InventoryDetail, AppInfo } = this.state;\n        const { entity, currentApp } = this.props;\n        const classNames = `${\n            currentApp && currentApp === 'general_information' ?\n                'ins-c-inventory__detail--general-info' :\n                ''\n        }`;\n        return (\n            <Fragment>\n                <PageHeader className={`pf-m-light ins-inventory-detail ${classNames}`}>\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to={routes.table}>Inventory</Link></BreadcrumbItem>\n                        <BreadcrumbItem isActive>\n                            {\n                                entity ?\n                                    entity.display_name :\n                                    <Skeleton size={SkeletonSize.xs} />\n                            }\n                        </BreadcrumbItem>\n                    </Breadcrumb>\n                    {InventoryDetail && <InventoryDetail hideBack />}\n                </PageHeader>\n                <Main className={classNames}>\n                    <Grid gutter=\"md\">\n                        <GridItem span={12}>\n                            {AppInfo && <AppInfo />}\n                        </GridItem>\n                    </Grid>\n                </Main>\n            </Fragment>\n        );\n    }\n}\n\nInventory.contextTypes = {\n    store: PropTypes.object\n};\n\nInventory.propTypes = {\n    history: PropTypes.object,\n    entity: PropTypes.object,\n    loadEntity: PropTypes.func,\n    clearNotifications: PropTypes.func,\n    currentApp: PropTypes.string\n};\n\nfunction mapStateToProps({ entityDetails }) {\n    const activeApp = entityDetails && entityDetails.activeApp && entityDetails.activeApp.appName;\n    const firstApp = entityDetails && entityDetails.activeApps && entityDetails.activeApps[0];\n    return {\n        entity: entityDetails && entityDetails.entity,\n        currentApp: activeApp || (firstApp && firstApp.name)\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        loadEntity: (id) => dispatch(actions.loadEntity(id)),\n        clearNotifications: () => dispatch(actions.clearNotifications())\n    };\n}\n\nexport default routerParams(connect(mapStateToProps, mapDispatchToProps)(Inventory));\n","import { Route, Switch, matchPath } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport InventoryTable from './routes/InventoryTable';\nimport InventoryDetail from './routes/InventoryDetail';\n\nconst InsightsRoute = ({ component: Component, rootClass, ...rest }) => {\n    const root = document.getElementById('root');\n    root.removeAttribute('class');\n    root.classList.add(`page__${rootClass}`, 'pf-c-page__main');\n    root.classList.add(`page__${rootClass}`, 'pf-l-page__main');\n\n    return (<Route {...rest} component={Component}/>);\n};\n\nInsightsRoute.propTypes = {\n    component: PropTypes.func,\n    rootClass: PropTypes.string\n};\n\nexport const routes = {\n    table: '/',\n    detail: '/:inventoryId'\n};\n\nfunction checkPaths(technology, app) {\n    return Object\n    .values(routes)\n    .some(\n        route => {\n            return matchPath(location.href, { path: `${document.baseURI}${technology}/${app}${route}` });\n        }\n    );\n}\n\nexport const Routes = ({ childProps: { history } }) => {\n    const pathName = window.location.pathname.split('/');\n    pathName.shift();\n\n    if (pathName[0] === 'beta') {\n        pathName.shift();\n    }\n\n    if (!checkPaths(pathName[0], pathName[1])) {\n        history.push(routes.table);\n    }\n\n    return (\n        <Switch>\n            <InsightsRoute exact path={routes.table} component={InventoryTable} rootClass='inventory' />\n            <InsightsRoute path={routes.detail} component={InventoryDetail} rootClass='inventory' />\n        </Switch>\n    );\n};\n\nRoutes.propTypes = {\n    childProps: PropTypes.shape({\n        history: PropTypes.shape({\n            push: PropTypes.func\n        })\n    })\n};\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Routes } from './Routes';\nimport './App.scss';\nimport { INVENTORY_ROOT } from './config';\nimport { registry as registryDecorator, routerParams } from '@red-hat-insights/insights-frontend-components';\nimport { reducers } from './store';\nimport { NotificationsPortal } from '@red-hat-insights/insights-frontend-components/components/Notifications';\n\n@registryDecorator()\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.getRegistry().register(reducers);\n    }\n\n    componentDidMount () {\n        insights.chrome.init();\n        insights.chrome.identifyApp(INVENTORY_ROOT);\n        this.appNav = insights.chrome.on('APP_NAVIGATION', event => this.props.history.push(`/${event.navId}`));\n    }\n\n    componentWillUnmount() {\n        this.appNav();\n    }\n\n    render () {\n        return (\n            <React.Fragment>\n                <NotificationsPortal />\n                <Routes childProps={this.props} />\n            </React.Fragment>\n        );\n    }\n}\n\nApp.propTypes = {\n    history: PropTypes.object\n};\n\n/**\n * connect: https://github.com/reactjs/react-redux/blob/master/docs/api.md\n *          https://reactjs.org/docs/higher-order-components.html\n */\nexport default routerParams(connect()(App));\n","\nexport const INVENTORY_API_BASE = '/api/inventory/v1/hosts';\nexport const INVENTORY_ROOT = 'inventory';\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { init } from './store';\nimport App from './App';\n\nconst pathName = window.location.pathname.split('/');\npathName.shift();\n\nlet release = '/';\n\nif (pathName[0] === 'beta') {\n    release = `/${pathName.shift()}/`;\n}\n\nReactDOM.render(\n    <Provider store={init().getStore()}>\n        <Router basename={`${release}${pathName[0]}/${pathName[1]}`}>\n            <App />\n        </Router>\n    </Provider>,\n\n    document.getElementById('root')\n);\n","\nvar content = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./inventory.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../node_modules/css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./inventory.scss\", function() {\n\t\tvar newContent = require(\"!!../../node_modules/css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./inventory.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}"],"sourceRoot":""}