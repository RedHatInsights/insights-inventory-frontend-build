{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.js","webpack:///./src/App.scss","webpack:///./src/Routes.js","webpack:///./src/Utilities/expiringComponent.js","webpack:///./src/actions.js","webpack:///./src/api.js","webpack:///./src/components/Alerts.js","webpack:///./src/components/Alerts.scss","webpack:///./src/components/inventory/AsyncInventory.js","webpack:///./src/config.js","webpack:///./src/constants.js","webpack:///./src/containers/AlertsContainer.js","webpack:///./src/entry-dev.js","webpack:///./src/routes/Inventory.js","webpack:///./src/routes/inventory.scss","webpack:///./src/store/index.js","webpack:///./src/store/reducers.js"],"names":["App","props","getRegistry","register","insights","chrome","init","identifyApp","appNav","on","event","history","push","navId","propTypes","object","InsightsRoute","Component","component","rootClass","rest","root","document","getElementById","removeAttribute","classList","add","func","string","Routes","DEFAULT_TIMEOUT","expiringComponent","fn","timeout","setTimeout","instanceOf","isRequired","number","loadEntities","type","GET_ENTITIES","payload","then","data","items","loadEntity","id","GET_ENTITY","addAlert","title","dismissible","variant","ALERT_ADD","dismissAlert","alert","ALERT_DISMISS","buildMock","i","canonical_facts","machine_id","account","facts","hostname","release","rhel_version","host_system_id","bios_information","vendor","version","release_date","bios_revision","system_information","family","manufacturer","product_name","virtual_machine","listening_processes","timezone_information","timezone","utcoffset","namespace","health","vulnerabilities","redirect","configuration","compliance","cost","display_name","MOCKS","Array","from","length","map","v","mockWarnCount","getEntities","fetch","r","ok","json","row","status","isMocked","Error","getEntity","entities","find","e","Alerts","alerts","dismiss","createPortal","action","undefined","reverse","array","asyncInventoryLoader","loadInventory","react","reactRouterDom","reactCore","reactIcons","INVENTORY_API_BASE","INVENTORY_ROOT","actions","asyncActions","a","ACTION_TYPES","k","AlertsContainer","dispatch","render","getStore","Inventory","ctx","alert1","alert2","state","ConnectedInventory","inventoryConnector","INVENTORY_ACTION_TYPES","mergeWithEntities","mergeWithDetail","entitiesListener","actionType","LOAD_ENTITIES","callback","entityListener","LOAD_ENTITY","error","message","setState","contextTypes","store","mapDispatchToProps","middlewareListener","middleware","getMiddleware","addNewListener","addNew","alertIdGenerator","defaultState","loaded","entitiesLoaded","rows","displayName","entityLoaded","tags","entity","enableApplications","activeApps","name","Overview","GeneralInformation","reducers","filter","endsWith","entitiesReducer","GET_ENTITIES_FULFILLED","entitesDetailReducer","LOAD_ENTITY_FULFILLED","GET_ENTITY_FULFILLED"],"mappings":"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","file":"js/App.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"App\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/insights/platform/inventory/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([\"./src/entry-dev.js\",\"vendor\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Routes } from './Routes';\nimport './App.scss';\nimport { INVENTORY_ROOT } from './config';\nimport { registry as registryDecorator, routerParams } from '@red-hat-insights/insights-frontend-components';\nimport AlertsContainer from './containers/AlertsContainer';\nimport { reducers } from './store';\n\n@registryDecorator()\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.getRegistry().register(reducers);\n    }\n\n    componentDidMount () {\n        insights.chrome.init();\n        insights.chrome.identifyApp(INVENTORY_ROOT);\n        this.appNav = insights.chrome.on('APP_NAVIGATION', event => this.props.history.push(`/${event.navId}`));\n    }\n\n    componentWillUnmount() {\n        this.appNav();\n    }\n\n    render () {\n        return (\n            <React.Fragment>\n                <AlertsContainer/>\n                <Routes childProps={this.props} />\n            </React.Fragment>\n        );\n    }\n}\n\nApp.propTypes = {\n    history: PropTypes.object\n};\n\n/**\n * connect: https://github.com/reactjs/react-redux/blob/master/docs/api.md\n *          https://reactjs.org/docs/higher-order-components.html\n */\nexport default routerParams(connect()(App));\n","// extracted by mini-css-extract-plugin","import { Route, Switch, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Inventory from './routes/Inventory';\n\nconst InsightsRoute = ({ component: Component, rootClass, ...rest }) => {\n    const root = document.getElementById('root');\n    root.removeAttribute('class');\n    root.classList.add(`page__${rootClass}`, 'pf-l-page__main');\n\n    return (<Route {...rest} component={Component}/>);\n};\n\nInsightsRoute.propTypes = {\n    component: PropTypes.func,\n    rootClass: PropTypes.string\n};\n\n/**\n * the Switch component changes routes depending on the path.\n *\n * Route properties:\n *      exact - path must match exactly,\n *      path - https://prod.foo.redhat.com:1337/insights/advisor/rules\n *      component - component to be rendered when a route has been chosen.\n */\nexport const Routes = () => {\n    return (\n        <Switch>\n            <InsightsRoute path='/entity' component={Inventory} rootClass='inventory' />\n            <Redirect to=\"/entity\" />\n        </Switch>\n    );\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst DEFAULT_TIMEOUT = 6000;\n\n/*\n * Expiring Component HOC\n * Causes the given function to be invoked after the given component has been rendered for\n * the given amount of time (defaults to 6000ms)\n */\nfunction expiringComponent (Component, fn, timeout = DEFAULT_TIMEOUT) {\n    return class ExpiringWrapper extends React.Component {\n\n        componentDidMount () {\n            setTimeout(fn, timeout);\n        }\n\n        render () {\n            return <Component {...this.props}/>;\n        }\n    };\n}\n\nexpiringComponent.propTypes = {\n    Component: PropTypes.instanceOf(React.Component).isRequired,\n    fn: PropTypes.func.isRequired,\n    timeout: PropTypes.number\n};\n\nexport default expiringComponent;\n","import { ACTION_TYPES } from './constants';\nimport { getEntity, getEntities } from './api';\n\nexport const loadEntities = () => {\n    return ({\n        type: ACTION_TYPES.GET_ENTITIES,\n        payload: getEntities().then(data => (data.items || data))\n    });\n};\n\nexport const loadEntity = id => ({\n    type: ACTION_TYPES.GET_ENTITY,\n    payload: getEntity(id)\n});\n\nexport const addAlert = ({ title, dismissible = false, variant = 'warning' }) => ({\n    type: ACTION_TYPES.ALERT_ADD,\n    payload: { title, dismissible, variant }\n});\n\nexport const dismissAlert = (alert, timeout = false) => ({\n    type: ACTION_TYPES.ALERT_DISMISS,\n    alert,\n    timeout\n});\n","import { INVENTORY_API_BASE } from './config';\n\n/* eslint camelcase: off */\nfunction buildMock (i) {\n    return {\n        id: i,\n        canonical_facts: {\n            machine_id: `${i}c1497de-0ec7-43bb-a8a6-35cabd59e0bf`\n        },\n        account: '000001',\n        facts: [{\n            facts: {\n                hostname: `server0${i}.redhat.com`,\n                release: 'Red Hat Enterprise Linux Server release 7.5 (Maipo)',\n                rhel_version: '7.5',\n                host_system_id: '6c1497de-0ec7-43bb-a8a6-35cabd59e0bf',\n                bios_information: {\n                    vendor: 'SeaBIOS',\n                    version: '1.10.2-3.el7_4.1',\n                    release_date: '04/01/2014',\n                    bios_revision: '0.0'\n                },\n                system_information: {\n                    family: 'Red Hat Enterprise Linux',\n                    manufacturer: 'Red Hat',\n                    product_name: 'RHEV Hypervisor',\n                    virtual_machine: true\n                },\n                listening_processes: [],\n                timezone_information: {\n                    timezone: 'EDT',\n                    utcoffset: '-0400'\n                }\n            },\n            namespace: 'insights'\n        }],\n        health: {\n            vulnerabilities: { title: 5, redirect: 'cost_management' },\n            configuration: { title: 10, redirect: 'configuration_assessment' },\n            compliance: { title: '74%', redirect: 'compliance' },\n            cost: { title: '23K', redirect: 'cost_management' }\n        },\n        display_name: `Red Hat Enterprise Linux Server release 7.5 (Maipo)`\n    };\n}\n\nconst MOCKS = Array.from({ length: 5 }).map((v, i) => buildMock(i));\nlet mockWarnCount = 0;\n\nexport function getEntities () {\n    return fetch(INVENTORY_API_BASE).then(r => {\n        if (r.ok) {\n            return r.json().then(data => data.map(row => ({\n                id: row.id,\n                health: {\n                    vulnerabilities: { title: 5, redirect: 'cost_management' },\n                    configuration: { title: 10, redirect: 'configuration_assessment' },\n                    compliance: { title: '74%', redirect: 'compliance' },\n                    cost: { title: '23K', redirect: 'cost_management' }\n                }\n            })));\n        }\n\n        if (r.status === 404) {\n            if (!mockWarnCount) {\n                mockWarnCount++;\n\n            }\n\n            return {\n                items: MOCKS,\n                isMocked: true\n            };\n        }\n\n        throw new Error(`Unexpected response code ${r.status}`);\n    });\n}\n\nexport function getEntity (id) {\n    return getEntities().then(entities => {\n        return (entities.items || entities).find(e => e.id === id);\n    });\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { Button, Alert } from '@patternfly/react-core';\nimport './Alerts.scss';\nimport expiringComponent from '../Utilities/expiringComponent';\n\n// MARK: implement this in components\nconst Alerts = ({ alerts, dismiss }) => {\n    if (!alerts.length) {\n        return null;\n    }\n\n    return ReactDOM.createPortal(\n        (\n            <div className='alerts'>\n                { alerts.map(alert => {\n                    const action = alert.dismissible ?\n                        <Button variant='secondary' onClick={() => dismiss(alert)}>Dismiss</Button> :\n                        undefined;\n\n                    const Component = alert.dismissible ? Alert : expiringComponent(Alert, () => dismiss(alert, true));\n\n                    return (\n                        <Component\n                            variant={alert.variant}\n                            title={alert.title}\n                            key={alert.id}\n                            action={action}\n                        />);\n                }).reverse()}\n            </div>\n        ),\n        document.getElementById('root')\n    );\n};\n\nAlerts.propTypes = {\n    alerts: PropTypes.array.isRequired,\n    dismiss: PropTypes.func.isRequired\n};\n\nexport default Alerts;\n","// extracted by mini-css-extract-plugin","import React from 'react';\nimport * as reactRouterDom from 'react-router-dom';\nimport * as reactCore from '@patternfly/react-core';\nimport * as reactIcons from '@patternfly/react-icons';\n\nexport const asyncInventoryLoader = () => insights.loadInventory({\n    react: React,\n    reactRouterDom,\n    reactCore,\n    reactIcons\n});\n","\nexport const INVENTORY_API_BASE = '/entities';\nexport const INVENTORY_ROOT = 'inventory';\n","import keyBy from 'lodash/keyBy';\nimport flatMap from 'lodash/flatMap';\n\nconst actions = [\n    'ALERT_ADD',\n    'ALERT_DISMISS'\n];\n\nconst asyncActions = flatMap([\n    'GET_ENTITIES',\n    'GET_ENTITY'\n], a => [a, `${a}_PENDING`, `${a}_FULFILLED`, `${a}_REJECTED`]);\n\nexport const ACTION_TYPES = keyBy([...actions, ...asyncActions], k => k);\n","import { connect } from 'react-redux';\nimport Alerts from '../components/Alerts';\nimport * as actions from '../actions';\n\nconst AlertsContainer = connect(\n    ({ alerts }) => ({ alerts }),\n    dispatch => ({\n        dismiss: (alert, timeout) => dispatch(actions.dismissAlert(alert, timeout))\n    })\n)(Alerts);\n\nexport default AlertsContainer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { init } from './store';\nimport App from './App';\nimport logger from 'redux-logger';\n\nReactDOM.render(\n    <Provider store={init(logger).getStore()}>\n        <Router basename='/insights/platform/inventory'>\n            <App />\n        </Router>\n    </Provider>,\n    document.getElementById('root')\n);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport './inventory.scss';\nimport { PageHeader, PageHeaderTitle, Main, routerParams } from '@red-hat-insights/insights-frontend-components';\nimport { Button } from '@patternfly/react-core';\nimport { entitesDetailReducer, entitiesReducer, addNewListener } from '../store';\nimport * as actions from '../actions';\nimport { Card, CardBody, Grid, GridItem } from '@patternfly/react-core';\nimport { asyncInventoryLoader } from '../components/inventory/AsyncInventory';\nimport { registry as registryDecorator } from '@red-hat-insights/insights-frontend-components';\n\n@registryDecorator()\nclass Inventory extends Component {\n\n    constructor (props, ctx) {\n        super(props, ctx);\n        this.loadInventory();\n        this.alert1 = () => this.props.addAlert({ title: 'Dismissible alert', dismissible: true });\n        this.alert2 = () => this.props.addAlert({ title: 'Non-dismissible alert', dismissible: false });\n\n        this.state = {\n            ConnectedInventory: () => <div>Loading..</div>\n        };\n    }\n\n    async loadInventory() {\n        const {\n            inventoryConnector,\n            INVENTORY_ACTION_TYPES,\n            mergeWithEntities,\n            mergeWithDetail\n        } = await asyncInventoryLoader();\n        this.getRegistry().register({\n            ...mergeWithEntities(entitiesReducer),\n            ...mergeWithDetail(entitesDetailReducer(INVENTORY_ACTION_TYPES))\n        });\n        this.entitiesListener = addNewListener({\n            actionType: INVENTORY_ACTION_TYPES.LOAD_ENTITIES,\n            callback: this.props.loadEntities\n        });\n\n        this.entityListener = addNewListener({\n            actionType: INVENTORY_ACTION_TYPES.LOAD_ENTITY,\n            callback: ({ data }) => {\n                data.then(payload => {\n                    payload.error && this.props.addAlert({ title: payload.error.message });\n                    this.props.loadEntity(payload.id);\n                });\n            }\n        });\n\n        this.setState({\n            ConnectedInventory: inventoryConnector()\n        });\n    }\n\n    componentWillUnmount() {\n        this.entitiesListener();\n    }\n\n    render() {\n        const { ConnectedInventory } = this.state;\n        return (\n            <React.Fragment>\n                <PageHeader className=\"pf-m-light\">\n                    <PageHeaderTitle title='Inventory'/>\n                </PageHeader>\n                <Main>\n                    <Grid gutter=\"md\">\n                        <GridItem span={12}>\n                            <Card>\n                                <CardBody>\n                                    <ConnectedInventory />\n                                </CardBody>\n                            </Card>\n                        </GridItem>\n                        <GridItem span={12}>\n                            <Card>\n                                <CardBody>\n                                    <div className='buttons'>\n                                        <Button variant='secondary' onClick={this.alert1}>Dismissible alert</Button>\n                                        <Button variant='secondary' onClick={this.alert2}>Non-dismissible alert</Button>\n                                    </div>\n                                </CardBody>\n                            </Card>\n                        </GridItem>\n                    </Grid>\n                </Main>\n            </React.Fragment>\n        );\n    }\n}\n\nInventory.contextTypes = {\n    store: PropTypes.object\n};\n\nInventory.propTypes = {\n    addAlert: PropTypes.func,\n    loadEntities: PropTypes.func,\n    loadEntity: PropTypes.func\n};\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        addAlert: (payload) => dispatch(actions.addAlert(payload)),\n        loadEntities: () => dispatch(actions.loadEntities()),\n        loadEntity: (id) => dispatch(actions.loadEntity(id))\n    };\n}\n\nexport default routerParams(connect(() => ({}), mapDispatchToProps)(Inventory));\n","// extracted by mini-css-extract-plugin","import MiddlewareListener from '@red-hat-insights/insights-frontend-components/Utilities/MiddlewareListener';\nimport { getRegistry } from '@red-hat-insights/insights-frontend-components';\nimport promiseMiddleware from 'redux-promise-middleware';\nexport { default as reducers, entitiesReducer, entitesDetailReducer } from './reducers';\n\nlet middlewareListener;\n\nexport function init (...middleware) {\n    middlewareListener = new MiddlewareListener();\n    return getRegistry(\n        {}, [\n            middlewareListener.getMiddleware(),\n            promiseMiddleware(),\n            ...middleware\n        ]\n    );\n}\n\nexport function addNewListener ({ actionType, callback }) {\n    return middlewareListener.addNew({\n        on: actionType,\n        callback\n    });\n}\n","import pickBy from 'lodash/pickBy';\nimport mapValues from 'lodash/mapValues';\n\nimport { ACTION_TYPES } from '../constants';\nimport { applyReducerHash } from '@red-hat-insights/insights-frontend-components/Utilities/ReducerRegistry';\nimport { mergeArraysByKey } from '@red-hat-insights/insights-frontend-components/Utilities/helpers';\nimport {\n    Overview,\n    GeneralInformation\n} from '@red-hat-insights/insights-frontend-components';\n\nlet alertIdGenerator = 0;\n\nconst defaultState = { loaded: false };\n\nfunction entitiesLoaded(state, { payload }) {\n    return {\n        ...state,\n        // eslint-disable-next-line no-unused-vars\n        rows: mergeArraysByKey([state.rows, payload.map(({ display_name: displayName, ...rest }) => rest)]),\n        // eslint-disable-next-line no-unused-vars\n        entities: mergeArraysByKey([state.entities, payload.map(({ display_name: displayName, ...rest }) => rest)])\n    };\n}\n\nfunction entityLoaded(state, { payload }) {\n    const { health, tags, ...rest } = payload;\n    return {\n        ...state,\n        health,\n        tags,\n        entity: {\n            ...state.entity,\n            ...rest\n        }\n    };\n}\n\nfunction enableApplications(state) {\n    return {\n        ...state,\n        loaded: true,\n        activeApps: [\n            { title: 'Overview', name: 'overview', component: Overview },\n            { title: 'Vulnerabilities', name: 'vulnerabilities' },\n            { title: 'Configuration Assessment', name: 'configuration_assessment' },\n            { title: 'Compliance', name: 'compliance' },\n            { title: 'Cost Managemenet', name: 'cost_management' },\n            { title: 'General Information', name: 'general_information', component: GeneralInformation }\n        ]\n    };\n}\n\nlet reducers = {\n    alerts: applyReducerHash({\n        [ACTION_TYPES.ALERT_ADD]: (state, { payload }) =>\n            ([...state, { id: alertIdGenerator++, ...payload }]),\n        [ACTION_TYPES.ALERT_DISMISS]: (state, action) => state.filter(alert => alert.id !== action.alert.id),\n\n        // map every rejected action to an alert\n        ...mapValues(\n            pickBy(ACTION_TYPES, (type => type.endsWith('_REJECTED'))),\n            () => (state, action) =>\n                ([...state, { title: action.payload.message, id: alertIdGenerator++, dismissible: true, variant: 'warning' }])\n        )\n    }, [])\n};\n\nexport const entitiesReducer = applyReducerHash(\n    {\n        [ACTION_TYPES.GET_ENTITIES_FULFILLED]: entitiesLoaded\n    },\n    defaultState\n);\n\nexport const entitesDetailReducer = (INVENTORY_ACTION_TYPES) => applyReducerHash(\n    {\n        [INVENTORY_ACTION_TYPES.LOAD_ENTITY_FULFILLED]: enableApplications,\n        [ACTION_TYPES.GET_ENTITY_FULFILLED]: entityLoaded\n    },\n    defaultState\n);\n\nexport default reducers;\n"],"sourceRoot":""}