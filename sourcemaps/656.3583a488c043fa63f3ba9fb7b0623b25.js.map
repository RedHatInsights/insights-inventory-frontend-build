{"version":3,"file":"js/656.77869269de892290a076.js","mappings":"0IAEAA,EAAQ,GAAgB,CACtBC,KAAM,UACNC,OAAQ,IACRC,MAAO,IACPC,QAAS,w2BACTC,QAAS,EACTC,QAAS,GAEXN,EAAQ,GAAU,YAAoCA,EAAQ,IAC9DA,EAAA,GAAqBA,EAAQ,E,+BCT7BA,EAAQ,GAAwB,CAC9BC,KAAM,kBACNC,OAAQ,KACRC,MAAO,KACPC,QAAS,42FACTC,QAAS,EACTC,QAAS,GAEXN,EAAQ,GAAkB,YAAoCA,EAAQ,IACtEA,EAAA,GAAqBA,EAAQ,E,+BCT7BA,EAAQ,GAAqB,CAC3BC,KAAM,eACNC,OAAQ,KACRC,MAAO,IACPC,QAAS,giBACTC,QAAS,EACTC,QAAS,GAEXN,EAAQ,GAAe,YAAoCA,EAAQ,IACnEA,EAAA,GAAqBA,EAAQ,E,2SCJvBO,EAAY,SAAC,GAA8B,IAA5BC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SACxBC,GAAcC,EAAAA,EAAAA,cAAY,gBAAoBC,EAApB,EAAGC,cAAiBD,OAApB,OAAmCA,aAAnC,EAAmCA,EAAQE,YAA3C,IAC1BC,GAAWJ,EAAAA,EAAAA,cAAY,gBAAoBC,EAApB,EAAGC,cAAiBD,OAApB,OAAmCA,aAAnC,EAAmCA,EAAQI,EAA3C,IACvBC,GAAON,EAAAA,EAAAA,cAAY,gBAAoBC,EAApB,EAAGC,cAAiBD,OAApB,OAAmCA,aAAnC,EAAmCA,EAAQK,IAA3C,IACzB,OAAO,kBAACC,EAAA,EAAD,CAAOC,WAAS,GACnB,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAWC,UAAQ,GACf,kBAACC,EAAA,EAAD,CAAOC,aAAa,KAAKC,KAAK,MAAOhB,KAEvCF,GAAe,kBAACc,EAAA,EAAD,KACb,uBAAGK,UAAU,gCAAgCC,KAAI,+BAA0Bb,IAA3E,wBAKRN,GACA,kBAACW,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAOF,WAAS,GACZ,kBAACG,EAAA,EAAD,cAGA,kBAACA,EAAA,EAAD,KACI,kBAACO,EAAA,EAAD,KACsB,KAAjBZ,aAAA,EAAAA,EAAMa,QAAeb,aAArB,EAAqBA,EAAMc,KAAI,SAACC,EAAMC,GAAP,OAC5B,kBAACC,EAAA,EAAD,CAAMD,IAAKA,EAAKE,YAAU,IACrBH,aAAA,EAAAA,EAAMI,YAAN,UAAsBJ,aAAtB,EAAsBA,EAAMI,UAA5B,KACAJ,aAFL,EAEKA,EAAMC,KACND,aAAA,EAAAA,EAAMK,QAAN,WAAmBL,aAAnB,EAAmBA,EAAMK,OAJF,IAM3B,cAOhC,EAED9B,EAAU+B,UAAY,CAClB9B,YAAa+B,IAAAA,KACb9B,SAAU8B,IAAAA,MAGdhC,EAAUiC,aAAe,CACrBhC,aAAa,EACbC,UAAU,GAGd,U,sEC5CMgC,EAAe,SAAC,GAAiB,wBAAfC,EAAe,EAAfA,SACdC,GAAWC,EAAAA,EAAAA,eACX7B,GAAWJ,EAAAA,EAAAA,cAAY,gBAAoBC,EAApB,EAAGC,cAAiBD,OAApB,OAAmCA,aAAnC,EAAmCA,EAAQI,EAA3C,IACvB6B,GAAUlC,EAAAA,EAAAA,cAAY,gBAAoBmC,EAApB,EAAGjC,cAAiBiC,aAApB,OAAyCA,aAAzC,EAAyCA,EAAcD,OAAvD,IACtBE,GAAapC,EAAAA,EAAAA,cAAY,gBAAoBmC,EAApB,EAAGjC,cAAiBiC,aAApB,OAAyCA,aAAzC,EAAyCA,EAAcC,UAAvD,IACzBC,GAAMrC,EAAAA,EAAAA,cAAY,gBAAoBmC,EAApB,EAAGjC,cAAiBiC,aAApB,OAAyCA,aAAzC,EAAyCA,EAAcE,GAAvD,IAClBC,GAAQtC,EAAAA,EAAAA,cAAY,gBAAoBmC,EAApB,EAAGjC,cAAiBiC,aAApB,OAAyCA,aAAzC,EAAyCA,EAAcG,KAAvD,IAU1B,OATAC,EAAAA,EAAAA,YAAU,WACFnC,GAAY2B,IACZC,GAASQ,EAAAA,EAAAA,IAAepC,IACxB4B,GAASS,EAAAA,EAAAA,IAAkBrC,IAC3B4B,GAASU,EAAAA,EAAAA,IAAatC,IACtB4B,GAASW,EAAAA,EAAAA,IAAYvC,IAE5B,GAAE,CAACA,EAAU2B,IAEP,kBAACxB,EAAA,EAAD,CAAOC,WAAS,EAACQ,UAAU,yCAC9B,kBAACP,EAAA,EAAD,KACI,kBAACI,EAAA,EAAD,CAAOC,aAAa,KAAKC,KAAK,MAA9B,sBAEJ,kBAACN,EAAA,EAAD,KACI,kBAACmC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACtC,EAAA,EAAD,CAAOC,WAAS,GACZ,kBAACC,EAAA,EAAD,CAAWO,UAAU,kCAArB,mBAGA,kBAACP,EAAA,EAAD,KAEQ4B,SAAAA,EAAKS,SACD,kBAACF,EAAA,EAAD,CAAOpC,WAAS,EAACQ,UAAU,+BACvB,kBAAC6B,EAAA,EAAD,CAAW7B,UAAU,kBACjB,uBAAGC,KAAI,0CAAqCb,EAArC,eACFiC,SAAA,UAAAA,EAAKU,gBAAL,eAAeC,QAAS,EAD7B,cAIJ,kBAACH,EAAA,EAAD,CAAW7B,UAAU,mBACjB,uBAAGC,KAAI,0CAAqCb,EAArC,eACFiC,SAAA,UAAAA,EAAKY,iBAAL,eAAgBD,QAAS,EAD9B,eAIJ,kBAACH,EAAA,EAAD,CAAW7B,UAAU,kBACjB,uBAAGC,KAAI,0CAAqCb,EAArC,eACFiC,SAAA,UAAAA,EAAKa,gBAAL,eAAeF,QAAS,EAD7B,cAIJ,kBAACH,EAAA,EAAD,CAAW7B,UAAU,aACjB,uBAAGC,KAAI,0CAAqCb,EAArC,eACFiC,SAAA,UAAAA,EAAKc,WAAL,eAAUH,QAAS,EADxB,UAKR,kBAACI,EAAA,EAAD,CAAUrC,KAAOsC,EAAAA,EAAAA,QAKrC,kBAACR,EAAA,EAAD,KACI,kBAACtC,EAAA,EAAD,CAAOC,WAAS,GACZ,kBAACC,EAAA,EAAD,CAAWO,UAAU,kCAArB,yBAGA,kBAACP,EAAA,EAAD,KAEQ6B,SAAAA,EAAOQ,SACH,kBAACF,EAAA,EAAD,CAAOpC,WAAS,EAACQ,UAAU,iCACvB,kBAAC6B,EAAA,EAAD,KACI,uBAAG5B,KAAI,kCAA6Bb,EAA7B,sBACH,kBAAC,KAAD,MADJ,IACiBkC,SADjB,UACiBA,EAAOgB,WADxB,aACiB,EAAYN,QAGjC,kBAACH,EAAA,EAAD,CAAW7B,UAAU,kBACjB,uBAAGC,KAAI,kCAA6Bb,EAA7B,sBACH,kBAAC,KAAD,MADJ,IACsBkC,SADtB,UACsBA,EAAOiB,gBAD7B,aACsB,EAAiBP,QAG3C,kBAACH,EAAA,EAAD,KACI,uBAAG5B,KAAI,kCAA6Bb,EAA7B,sBACH,kBAAC,KAAD,MADJ,IACyBkC,SADzB,UACyBA,EAAOkB,mBADhC,aACyB,EAAoBR,SAIrD,kBAACI,EAAA,EAAD,CAAUrC,KAAOsC,EAAAA,EAAAA,UAO7C,kBAAC5C,EAAA,EAAD,KAEQyB,SAAAA,EAASY,SACL,8BACI,0BAAM9B,UAAU,mBACXkB,SAAA,UAAAA,EAASuB,qBAAT,eAAwBtC,SAAU,EADvC,aADJ,uBAG+B,uBAAGF,KAAI,qCAAgCb,IAAvC,YAE/B,kBAACgD,EAAA,EAAD,CAAUrC,KAAOsC,EAAAA,EAAAA,MAIzBjB,SAAAA,EAAYU,UACPV,aAAA,EAAAA,EAAYsB,WACT,uEAC0C,uBAClCzC,KAAM,kCAELmB,SAHiC,UAGjCA,EAAYsB,gBAHqB,aAGjC,EAAsBvC,OAHW,KAGFiB,SAAA,UAAAA,EAAYsB,gBAAZ,eAAsBvC,QAAS,EAAI,WAAa,WAI5F,kBAACiC,EAAA,EAAD,CAAUrC,KAAOsC,EAAAA,EAAAA,KAGhC,EAEDvB,EAAaH,UAAY,CACrBI,SAAUH,IAAAA,MAGd,U,mGCjHM+B,EAAgB,SAAC,GAA0F,IAAxFC,EAAwF,EAAxFA,SAAU/D,EAA8E,EAA9EA,YAAaC,EAAiE,EAAjEA,SAAU+D,EAAuD,EAAvDA,QAAS7C,EAA8C,EAA9CA,UAAsB8C,GAAwB,EAAnCC,UAAmC,EAAxBD,SAAYE,GAAY,YACvGhC,GAAWC,EAAAA,EAAAA,eACXgC,GAAQC,EAAAA,EAAAA,YACRjE,GAASD,EAAAA,EAAAA,cAAY,gBAAGE,EAAH,EAAGA,cAAH,OAAuBA,aAAvB,EAAuBA,EAAeD,MAAtC,IACrBkE,GAAanE,EAAAA,EAAAA,cAAY,gBAAGE,EAAH,EAAGA,cAAH,OAAuBA,aAAvB,EAAuBA,EAAekE,cAAtC,IACzBC,GAASrE,EAAAA,EAAAA,cAAY,gBAAGE,EAAH,EAAGA,cAAH,OAAuBA,aAAvB,EAAuBA,EAAemE,MAAtC,IAE3B,OAAO,kBAACC,EAAA,IAAD,QACHtD,UAAS,kCAA6BA,GAAa,IACnDmD,WAAYA,EACZI,SAAU,kBAAMvC,GAASwC,EAAAA,EAAAA,KAAa,GAA5B,GACNR,GAEJ,kBAACS,EAAA,EAAD,CACIC,aACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAAC,EAAD,CAAW/E,YAAcA,EAAcC,SAAWA,IAClD,kBAAC+E,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAmBC,QAAS,kBAAO/C,GAASwC,EAAAA,EAAAA,KAAa,GAA7B,MAGpC,kBAACQ,EAAA,EAAD,KACI,kBAACzE,EAAA,EAAD,CAAOS,UAAU,oCACb,kBAACP,EAAA,EAAD,KACI,kBAAC,EAAD,CAAcsB,SAAUoC,KAE5B,kBAAC1D,EAAA,EAAD,CAAWG,UAAQ,EAACI,UAAU,kCAC1B,kBAACiE,EAAA,EAAD,CAAWhF,OAAQA,EAAQoE,OAAQA,IAE/BF,GACAE,GACAR,GACA,kBAACA,EAAD,CACII,MAAOA,EACPH,QAASA,SASrC,kBAACoB,EAAA,EAAD,KACKtB,IAIhB,EAEDD,EAAchC,UAAY,CACtBiC,SAAUhC,IAAAA,IACV/B,YAAa+B,IAAAA,KACb9B,SAAU8B,IAAAA,KACVkC,QAASlC,IAAAA,MAAgB,CACrB,sBACA,UACA,WACA,aACA,kBACA,UAEJZ,UAAWY,IAAAA,OACXiC,QAASjC,IAAAA,YACTmC,UAAWnC,IAAAA,MAGf+B,EAAc9B,aAAe,CACzBiC,QAAS,uBAGb,S","sources":["webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/bug-icon.js","webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/enhancement-icon.js","webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/security-icon.js","webpack:///./src/components/InventoryDetailDrawer/BasicInfo.js","webpack:///./src/components/InventoryDetailDrawer/SystemIssues.js","webpack:///./src/components/InventoryDetail/DetailWrapper.js"],"sourcesContent":["\"use strict\"\nexports.__esModule = true;\nexports.BugIconConfig = {\n  name: 'BugIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M511.988 288.9c-.478 17.43-15.217 31.1-32.653 31.1H424v16c0 21.864-4.882 42.584-13.6 61.145l60.228 60.228c12.496 12.497 12.496 32.758 0 45.255-12.498 12.497-32.759 12.496-45.256 0l-54.736-54.736C345.886 467.965 314.351 480 280 480V236c0-6.627-5.373-12-12-12h-24c-6.627 0-12 5.373-12 12v244c-34.351 0-65.886-12.035-90.636-32.108l-54.736 54.736c-12.498 12.497-32.759 12.496-45.256 0-12.496-12.497-12.496-32.758 0-45.255l60.228-60.228C92.882 378.584 88 357.864 88 336v-16H32.666C15.23 320 .491 306.33.013 288.9-.484 270.816 14.028 256 32 256h56v-58.745l-46.628-46.628c-12.496-12.497-12.496-32.758 0-45.255 12.498-12.497 32.758-12.497 45.256 0L141.255 160h229.489l54.627-54.627c12.498-12.497 32.758-12.497 45.256 0 12.496 12.497 12.496 32.758 0 45.255L424 197.255V256h56c17.972 0 32.484 14.816 31.988 32.9zM257 0c-61.856 0-112 50.144-112 112h224C369 50.144 318.856 0 257 0z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.BugIcon = require('../createIcon').createIcon(exports.BugIconConfig);\nexports[\"default\"] = exports.BugIcon;","\"use strict\"\nexports.__esModule = true;\nexports.EnhancementIconConfig = {\n  name: 'EnhancementIcon',\n  height: 1024,\n  width: 1024,\n  svgPath: 'M561.001473,320.000669 L463.001473,320.000669 C454.717202,320.000669 448.001473,326.716398 448.001473,335.000669 L448.001473,448.000669 L335.001473,448.000669 C326.694173,448.03924 319.984846,454.793296 320.001442,463.100669 L320.001442,561.100669 C320.001442,565.069782 321.58492,568.874889 324.400878,571.672074 C327.216835,574.469258 331.032449,576.027308 335.001473,576.000669 L448.001473,576.000669 L448.001473,689.000669 C448.001473,697.284941 454.717202,704.000669 463.001473,704.000669 L561.001473,704.000669 C569.285744,704.000669 576.001473,697.284941 576.001473,689.000669 L576.001473,576.000669 L689.001473,576.000669 C692.960412,576.051464 696.77486,574.514957 699.593209,571.734186 C702.411558,568.953414 704.001504,565.159934 704.001504,561.200669 L704.001504,463.100669 C704.0181,454.793296 697.308773,448.03924 689.001473,448.000669 L576.001473,448.100669 L576.001473,335.000669 C576.001473,326.716398 569.285744,320.000669 561.001473,320.000669 Z M469.781473,22.5506693 C484.981473,-0.249330671 516.281473,-6.94933067 539.781473,7.95066933 C545.75355,11.6723498 550.839109,16.655515 554.681473,22.5506693 L624.981473,161.550669 L788.081473,75.3406693 C814.181473,65.4406693 843.481473,78.2406693 853.481473,103.640669 C856.110836,110.173406 857.238617,117.213492 856.781473,124.240669 L832.481473,281.760669 L986.381473,312.000669 C1013.28147,319.100669 1029.48147,346.300669 1022.18147,372.610669 C1020.26485,379.362841 1016.99906,385.656295 1012.58147,391.110669 L903.381473,512.000669 L1012.58147,632.910669 C1021.0338,642.981263 1025.06698,656.035336 1023.76825,669.118608 C1022.46952,682.20188 1015.94868,694.208295 1005.68147,702.420669 C1000.12004,706.859911 993.67723,710.064272 986.781473,711.820669 L828.181473,737.420669 L857.081473,899.540669 C858.781473,926.940669 837.281473,950.240669 809.481473,951.640669 C802.299495,952.112229 795.100686,951.020466 788.381473,948.440669 L627.581473,862.230669 L554.681473,1001.45067 C539.481473,1024.25067 508.181473,1030.95067 484.781473,1016.05067 C478.809396,1012.32899 473.723837,1007.34582 469.881473,1001.45067 L397.001473,862.230669 L236.201473,948.440669 C210.101473,958.340669 180.811473,945.540669 170.811473,920.140669 C168.175054,913.609729 167.043717,906.56878 167.501473,899.540669 L196.401473,737.420669 L37.7914729,711.820669 C10.6914729,704.920669 -5.50852711,677.720669 1.79147289,651.410669 C3.70809476,644.658497 6.97388689,638.365044 11.3914729,632.910669 L120.581473,512.000669 L11.1914729,391.090669 C2.80380205,380.945109 -1.1303086,367.841751 0.281843743,354.753923 C1.69399609,341.666095 8.33267438,329.70352 18.6914729,321.580669 C24.2529052,317.141428 30.6957158,313.937067 37.5914729,312.180669 L191.591473,281.780669 L167.291473,124.260669 C165.881473,97.0606693 187.181473,73.7606693 215.181473,72.3606693 C222.264582,71.9118093 229.360824,73.0035388 235.981473,75.5606693 L396.881473,161.770669 L469.781473,22.5506693 Z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.EnhancementIcon = require('../createIcon').createIcon(exports.EnhancementIconConfig);\nexports[\"default\"] = exports.EnhancementIcon;","\"use strict\"\nexports.__esModule = true;\nexports.SecurityIconConfig = {\n  name: 'SecurityIcon',\n  height: 1024,\n  width: 896,\n  svgPath: 'M861.5,0 L34.5,0 C15.4,0 0,14.3 0,32 L0,452.1 C0,768 387.7,1024 448.5,1024 C509.3,1024 896,768 896,452.2 L896,32 C896,14.3 880.6,0 861.5,0 Z M490.7,768 L405.3,768 C393.5,767.8 384.2,757.5 384,744.7 L384,663.3 C384.2,650.5 393.6,640.3 405.3,640 L490.7,640 C502.5,640.2 511.8,650.5 512,663.3 L512,744.7 L512.1,744.7 C511.8,757.5 502.4,767.8 490.7,768 Z M543.9,162.7 L517.2,514.4 C515.8,530.9 502,544 485.3,544 L410.6,544 C394,544 380.1,531.2 378.7,514.7 L352.1,163 C350.5,144.3 365.3,128.3 384,128.3 L512,128 C530.7,128 545.4,144 543.9,162.7 Z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.SecurityIcon = require('../createIcon').createIcon(exports.SecurityIconConfig);\nexports[\"default\"] = exports.SecurityIcon;","/* eslint-disable react/display-name */\n/* eslint-disable camelcase */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Chip, ChipGroup, Title, Split, SplitItem, Stack, StackItem } from '@patternfly/react-core';\nimport { useSelector } from 'react-redux';\n\nconst BasicInfo = ({ hideInvLink, showTags }) => {\n    const displayName = useSelector(({ entityDetails: { entity } }) => entity?.display_name);\n    const systemId = useSelector(({ entityDetails: { entity } }) => entity?.id);\n    const tags = useSelector(({ entityDetails: { entity } }) => entity?.tags);\n    return <Stack hasGutter>\n        <StackItem>\n            <Split>\n                <SplitItem isFilled>\n                    <Title headingLevel=\"h3\" size='xl'>{ displayName }</Title>\n                </SplitItem>\n                {!hideInvLink && <SplitItem>\n                    <a className='ins-c-entity-detail__inv-link' href={`./insights/inventory/${systemId}`}>Open in Inventory</a>\n                </SplitItem>}\n            </Split>\n        </StackItem>\n        {\n            showTags &&\n            <StackItem>\n                <Split hasGutter>\n                    <SplitItem>\n                        Tags:\n                    </SplitItem>\n                    <SplitItem>\n                        <ChipGroup>\n                            {tags?.length !== 0 ? tags?.map((item, key) => (\n                                <Chip key={key} isReadOnly>\n                                    {item?.namespace && `${item?.namespace}/`}\n                                    {item?.key}\n                                    {item?.value && `=${item?.value}`}\n                                </Chip>\n                            )) : 'No tags'}\n                        </ChipGroup>\n                    </SplitItem>\n                </Split>\n            </StackItem>\n        }\n    </Stack>;\n};\n\nBasicInfo.propTypes = {\n    hideInvLink: PropTypes.bool,\n    showTags: PropTypes.bool\n};\n\nBasicInfo.defaultProps = {\n    hideInvLink: false,\n    showTags: false\n};\n\nexport default BasicInfo;\n","/* eslint-disable react/prop-types */\n/* eslint-disable react/display-name */\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAdvisorData, getComplianceData, getPatchData, getVulnData } from '../../store/actions';\nimport { Title, Level, LevelItem,  Stack, StackItem } from '@patternfly/react-core';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components/Skeleton';\nimport BugIcon from '@patternfly/react-icons/dist/js/icons/bug-icon';\nimport EnhancementIcon from '@patternfly/react-icons/dist/js/icons/enhancement-icon';\nimport SecurityIcon from '@patternfly/react-icons/dist/js/icons/security-icon';\n\nconst SystemIssues = ({ isOpened }) => {\n    const dispatch = useDispatch();\n    const systemId = useSelector(({ entityDetails: { entity } }) => entity?.id);\n    const advisor = useSelector(({ entityDetails: { systemIssues } }) => systemIssues?.advisor);\n    const compliance = useSelector(({ entityDetails: { systemIssues } }) => systemIssues?.compliance);\n    const cve = useSelector(({ entityDetails: { systemIssues } }) => systemIssues?.cve);\n    const patch = useSelector(({ entityDetails: { systemIssues } }) => systemIssues?.patch);\n    useEffect(() => {\n        if (systemId && isOpened) {\n            dispatch(getAdvisorData(systemId));\n            dispatch(getComplianceData(systemId));\n            dispatch(getPatchData(systemId));\n            dispatch(getVulnData(systemId));\n        }\n    }, [systemId, isOpened]);\n\n    return <Stack hasGutter className=\"ins-c-inventory__drawer-system-issues\">\n        <StackItem>\n            <Title headingLevel=\"h4\" size='lg'>Top system issues</Title>\n        </StackItem>\n        <StackItem>\n            <Level>\n                <LevelItem>\n                    <Stack hasGutter>\n                        <StackItem className=\"ins-c-inventory__drawer--title\">\n                            Applicable CVEs\n                        </StackItem>\n                        <StackItem>\n                            {\n                                cve?.isLoaded ?\n                                    <Level hasGutter className=\"ins-c-inventory__drawer-cve\">\n                                        <LevelItem className=\"ins-m-critical\">\n                                            <a href={`/insights/vulnerability/systems/${systemId}?impact=7`}>\n                                                {cve?.critical?.count || 0} critical\n                                            </a>\n                                        </LevelItem>\n                                        <LevelItem className=\"ins-m-important\">\n                                            <a href={`/insights/vulnerability/systems/${systemId}?impact=5`}>\n                                                {cve?.important?.count || 0} important\n                                            </a>\n                                        </LevelItem>\n                                        <LevelItem className=\"ins-m-moderate\">\n                                            <a href={`/insights/vulnerability/systems/${systemId}?impact=4`}>\n                                                {cve?.moderate?.count || 0} moderate\n                                            </a>\n                                        </LevelItem>\n                                        <LevelItem className=\"ins-m-low\">\n                                            <a href={`/insights/vulnerability/systems/${systemId}?impact=2`}>\n                                                {cve?.low?.count || 0} low\n                                            </a>\n                                        </LevelItem>\n                                    </Level> :\n                                    <Skeleton size={ SkeletonSize.md } />\n                            }\n                        </StackItem>\n                    </Stack>\n                </LevelItem>\n                <LevelItem>\n                    <Stack hasGutter>\n                        <StackItem className=\"ins-c-inventory__drawer--title\">\n                            Applicable advisories\n                        </StackItem>\n                        <StackItem>\n                            {\n                                patch?.isLoaded ?\n                                    <Level hasGutter className=\"ins-c-inventory__drawer-patch\">\n                                        <LevelItem>\n                                            <a href={`/insights/patch/systems/${systemId}/?advisory_type=2`}>\n                                                <BugIcon /> {patch?.bug?.count}\n                                            </a>\n                                        </LevelItem>\n                                        <LevelItem className=\"ins-m-moderate\">\n                                            <a href={`/insights/patch/systems/${systemId}/?advisory_type=3`}>\n                                                <SecurityIcon /> {patch?.security?.count}\n                                            </a>\n                                        </LevelItem>\n                                        <LevelItem>\n                                            <a href={`/insights/patch/systems/${systemId}/?advisory_type=1`}>\n                                                <EnhancementIcon /> {patch?.enhancement?.count}\n                                            </a>\n                                        </LevelItem>\n                                    </Level> :\n                                    <Skeleton size={ SkeletonSize.md } />\n                            }\n                        </StackItem>\n                    </Stack>\n                </LevelItem>\n            </Level>\n        </StackItem>\n        <StackItem>\n            {\n                advisor?.isLoaded ?\n                    <span>\n                        <span className=\"ins-m-critical\">\n                            {advisor?.criticalCount?.length || 0} critical\n                        </span> recommendations in <a href={`./insights/advisor/systems/${systemId}`}>Advisor</a>\n                    </span> :\n                    <Skeleton size={ SkeletonSize.md } />\n            }\n        </StackItem>\n        {\n            compliance?.isLoaded ?\n                (compliance?.profiles &&\n                    <span>\n                        System above compliance threshold for <a\n                            href={'./insights/compliance/reports/'}\n                        >\n                            {compliance?.profiles?.length} {compliance?.profiles?.length > 1 ? 'policies' : 'policy'}\n                        </a>\n                    </span>\n                ) :\n                <Skeleton size={ SkeletonSize.md } />\n        }\n    </Stack>;\n};\n\nSystemIssues.propTypes = {\n    isOpened: PropTypes.bool\n};\n\nexport default SystemIssues;\n","import React from 'react';\nimport {\n    Drawer,\n    DrawerPanelContent,\n    DrawerContent,\n    DrawerContentBody,\n    DrawerPanelBody,\n    DrawerActions,\n    DrawerHead,\n    DrawerCloseButton,\n    Stack,\n    StackItem\n} from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch, useStore } from 'react-redux';\nimport { toggleDrawer } from '../../store/actions';\nimport { BasicInfo, SystemIssues } from '../InventoryDetailDrawer';\nimport FactsInfo from './FactsInfo';\n\nconst DetailWrapper = ({ children, hideInvLink, showTags, Wrapper, className, hasAccess, appName, ...props }) => {\n    const dispatch = useDispatch();\n    const store = useStore();\n    const entity = useSelector(({ entityDetails }) => entityDetails?.entity);\n    const isExpanded = useSelector(({ entityDetails }) => entityDetails?.isToggleOpened);\n    const loaded = useSelector(({ entityDetails }) => entityDetails?.loaded);\n\n    return <Drawer\n        className={`ins-c-inventory__drawer ${className || ''}`}\n        isExpanded={isExpanded}\n        onExpand={() => dispatch(toggleDrawer(true))}\n        {...props}\n    >\n        <DrawerContent\n            panelContent={\n                <DrawerPanelContent>\n                    <DrawerHead>\n                        <BasicInfo hideInvLink={ hideInvLink } showTags={ showTags } />\n                        <DrawerActions>\n                            <DrawerCloseButton onClick={() =>  dispatch(toggleDrawer(false))} />\n                        </DrawerActions>\n                    </DrawerHead>\n                    <DrawerPanelBody>\n                        <Stack className=\"ins-c-inventory__drawer--content\">\n                            <StackItem>\n                                <SystemIssues isOpened={isExpanded} />\n                            </StackItem>\n                            <StackItem isFilled className=\"ins-c-inventory__drawer--facts\">\n                                <FactsInfo entity={entity} loaded={loaded} />\n                                {\n                                    isExpanded &&\n                                    loaded &&\n                                    Wrapper &&\n                                    <Wrapper\n                                        store={store}\n                                        appName={appName}\n                                    />\n                                }\n                            </StackItem>\n                        </Stack>\n                    </DrawerPanelBody>\n                </DrawerPanelContent>\n            }\n        >\n            <DrawerContentBody>\n                {children}\n            </DrawerContentBody>\n        </DrawerContent>\n    </Drawer>;\n};\n\nDetailWrapper.propTypes = {\n    children: PropTypes.any,\n    hideInvLink: PropTypes.bool,\n    showTags: PropTypes.bool,\n    appName: PropTypes.oneOf([\n        'general_information',\n        'advisor',\n        'insights',\n        'compliance',\n        'vulnerabilities',\n        'patch'\n    ]),\n    className: PropTypes.string,\n    Wrapper: PropTypes.elementType,\n    hasAccess: PropTypes.bool\n};\n\nDetailWrapper.defaultProps = {\n    appName: 'general_information'\n};\n\nexport default DetailWrapper;\n"],"names":["exports","name","height","width","svgPath","yOffset","xOffset","BasicInfo","hideInvLink","showTags","displayName","useSelector","entity","entityDetails","display_name","systemId","id","tags","Stack","hasGutter","StackItem","Split","SplitItem","isFilled","Title","headingLevel","size","className","href","ChipGroup","length","map","item","key","Chip","isReadOnly","namespace","value","propTypes","PropTypes","defaultProps","SystemIssues","isOpened","dispatch","useDispatch","advisor","systemIssues","compliance","cve","patch","useEffect","getAdvisorData","getComplianceData","getPatchData","getVulnData","Level","LevelItem","isLoaded","critical","count","important","moderate","low","Skeleton","SkeletonSize","bug","security","enhancement","criticalCount","profiles","DetailWrapper","children","Wrapper","appName","hasAccess","props","store","useStore","isExpanded","isToggleOpened","loaded","Drawer","onExpand","toggleDrawer","DrawerContent","panelContent","DrawerPanelContent","DrawerHead","DrawerActions","DrawerCloseButton","onClick","DrawerPanelBody","FactsInfo","DrawerContentBody"],"sourceRoot":""}