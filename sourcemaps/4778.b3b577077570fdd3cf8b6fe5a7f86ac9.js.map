{"version":3,"file":"js/4778.91a3365dfd7d8a7faa9b.js","mappings":"2eAKaA,EAAe,SAACC,EAASC,GAAV,MAA2B,CACnDC,KAAMC,EAAAA,GAAAA,cACNC,QAASC,EAAAA,MAAAA,kBAAwBL,GACjCM,KAAM,CACFC,cAAe,CACXC,UAAW,CACPC,QAAS,UACTC,MAAO,4BACPC,YAAa,GAAF,OAAKV,EAAL,mCACXW,aAAa,IAGrBZ,QAAAA,KAIKa,EAAY,SAACC,GAAD,MAAkB,CACvCZ,KAAMa,EAAAA,GACNX,QAAS,CACLU,YAAAA,KAIKE,EAAqB,WAC9B,MAAQ,CACJd,KAAMe,EAAAA,KAIDC,EAAkB,SAACC,EAAIC,GAAL,MAAgB,CAC3ClB,KAAMC,EAAAA,GAAAA,oBACNC,QAASC,EAAAA,MAAAA,iBAAuB,CAACc,GAAK,CAAEE,aAAcD,IACtDd,KAAM,CACFa,GAAAA,EACAC,MAAAA,EACAb,cAAe,CACXC,UAAW,CACPC,QAAS,UACTC,MAAO,mCAAF,OAAqCS,EAArC,gCAA+DC,GACpER,aAAa,OAMhBU,EAAgB,SAACC,EAAMC,GAAP,MAAoB,CAC7CtB,KAAMuB,EAAAA,GACNrB,QAAS,CACLmB,KAAAA,EAAMC,QAAAA,KAIDE,EAAgB,SAACC,GAAD,MAAa,CACtCzB,KAAMC,EAAAA,GAAAA,oBACNC,SAASwB,EAAAA,EAAAA,wBAAuBD,EAAQ,MAG/BE,EAAkB,SAACV,EAAIC,GAAL,MAAgB,CAC3ClB,KAAMC,EAAAA,GAAAA,iBACNC,QAASC,EAAAA,MAAAA,iBAAuB,CAACc,GAAK,CAAEW,aAAcV,IACtDd,KAAM,CACFC,cAAe,CACXC,UAAW,CACPC,QAAS,UACTC,MAAO,oCACPE,aAAa","sources":["webpack:///./src/store/actions.js"],"sourcesContent":["import { ACTION_TYPES, CLEAR_NOTIFICATIONS, SET_INVENTORY_FILTER, SET_PAGINATION } from './action-types';\nimport { hosts, getEntitySystemProfile } from '../api';\nexport * from './system-issues-actions';\nexport * from './inventory-actions';\n\nexport const deleteEntity = (systems, displayName) => ({\n    type: ACTION_TYPES.REMOVE_ENTITY,\n    payload: hosts.apiHostDeleteById(systems),\n    meta: {\n        notifications: {\n            fulfilled: {\n                variant: 'success',\n                title: 'Delete operation finished',\n                description: `${displayName} has been successfully removed.`,\n                dismissable: true\n            }\n        },\n        systems\n    }\n});\n\nexport const setFilter = (filtersList) => ({\n    type: SET_INVENTORY_FILTER,\n    payload: {\n        filtersList\n    }\n});\n\nexport const clearNotifications = () => {\n    return ({\n        type: CLEAR_NOTIFICATIONS\n    });\n};\n\nexport const editDisplayName = (id, value) => ({\n    type: ACTION_TYPES.UPDATE_DISPLAY_NAME,\n    payload: hosts.apiHostPatchById([id], { display_name: value }), // eslint-disable-line camelcase\n    meta: {\n        id,\n        value,\n        notifications: {\n            fulfilled: {\n                variant: 'success',\n                title: `Display name for entity with ID ${id} has been changed to ${value}`,\n                dismissable: true\n            }\n        }\n    }\n});\n\nexport const setPagination = (page, perPage) => ({\n    type: SET_PAGINATION,\n    payload: {\n        page, perPage\n    }\n});\n\nexport const systemProfile = (itemId) => ({\n    type: ACTION_TYPES.LOAD_SYSTEM_PROFILE,\n    payload: getEntitySystemProfile(itemId, {})\n});\n\nexport const editAnsibleHost = (id, value) => ({\n    type: ACTION_TYPES.SET_ANSIBLE_HOST,\n    payload: hosts.apiHostPatchById([id], { ansible_host: value }), // eslint-disable-line camelcase\n    meta: {\n        notifications: {\n            fulfilled: {\n                variant: 'success',\n                title: 'Ansible hostname has been updated',\n                dismissable: true\n            }\n        }\n    }\n});\n"],"names":["deleteEntity","systems","displayName","type","ACTION_TYPES","payload","hosts","meta","notifications","fulfilled","variant","title","description","dismissable","setFilter","filtersList","SET_INVENTORY_FILTER","clearNotifications","CLEAR_NOTIFICATIONS","editDisplayName","id","value","display_name","setPagination","page","perPage","SET_PAGINATION","systemProfile","itemId","getEntitySystemProfile","editAnsibleHost","ansible_host"],"sourceRoot":""}