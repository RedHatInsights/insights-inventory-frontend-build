{"version":3,"file":"js/5242.510f8bb1777d6e72731e.js","mappings":"y4BAYA,IAAMA,EAAiB,SAAC,GAAD,IAAGC,EAAH,EAAGA,IAAKC,EAAR,EAAQA,OAAR,OACnB,kBAAC,IAAD,CACIC,QACI,kBAAC,aAAD,KACI,2CAAkBD,GAAU,iBAC5B,sDAA6BD,GAAO,mBAI5C,8BAAQC,GAAUD,GAAO,mBAIjCD,EAAeI,UAAY,CACvBH,IAAKI,IAAAA,OACLH,OAAQG,IAAAA,QAGZ,IAAMC,EAAiB,SAAC,GAAD,IACnBC,EADmB,EACnBA,aACAC,EAFmB,EAEnBA,sBACAC,EAHmB,EAGnBA,OACAC,EAJmB,EAInBA,YACAC,EALmB,EAKnBA,UACAC,EANmB,EAMnBA,eACAC,EAPmB,EAOnBA,cACAC,EARmB,EAQnBA,cACAC,EATmB,EASnBA,YACAC,EAVmB,EAUnBA,aACAC,EAXmB,EAWnBA,MAXmB,OAYhB,kBAAC,IAAD,CACHC,MAAM,yBACNC,WAAaZ,EACba,MAAK,kBACET,EAAY,CAAC,CACZO,MAAO,kBACPG,MAAO,kBAACrB,EAAD,CAAgBC,IAAKO,EAAsBP,IAAKC,OAAQM,EAAsBN,WACpF,KAJJ,OAKEU,EAAiB,CAAC,CAAEM,MAAO,gBAAiBG,MAAOZ,IAClDa,EAAAA,EACI,kBAAC,IAAD,CAAYC,KAAOd,EAAOe,QAAUC,KAAK,aACzC,IAAIC,KAAKjB,EAAOe,SAASG,oBAC1B,KATN,OAUEd,EAAgB,CAAC,CAAEK,MAAO,aAAcG,MAAOZ,IAC9Ca,EAAAA,EACI,kBAAC,IAAD,CAAYC,KAAMd,EAAOmB,QAASH,KAAK,aACvC,IAAIC,KAAKjB,EAAOmB,SAASD,oBAC1B,KAdN,OAeEb,EAAgB,CAAC,CAAEI,MAAO,cAAeG,MAAOZ,GAAUA,EAAOoB,cAAiB,KAfpF,OAgBEd,EAAc,CAAC,CAAEG,MAAO,WAAYG,MAAOZ,GAAUA,EAAOqB,WAAc,KAhB5E,OAiBEd,EAAe,CAAC,CAAEE,MAAO,kBAAmBG,MAAOZ,GAAUA,EAAOsB,kBAAqB,KAjB3F,OAkBEd,EAAMe,KAAI,gBAAGC,EAAH,EAAGA,QAAH,4BAENA,GAAW,CAAEA,QAAS,SAACC,GAAD,OAAOD,EAAQC,EAAGxB,cAKvDJ,EAAeF,UAAY,CACvBG,aAAcF,IAAAA,KACdI,OAAQJ,IAAAA,MAAgB,CACpBmB,QAASnB,IAAAA,OACTuB,QAASvB,IAAAA,OACTwB,YAAaxB,IAAAA,OACbyB,SAAUzB,IAAAA,OACV0B,gBAAiB1B,IAAAA,SAErBK,YAAaL,IAAAA,KACbG,sBAAuBH,IAAAA,MAAgB,CACnCH,OAAQG,IAAAA,OACRJ,IAAKI,IAAAA,SAETM,UAAWN,IAAAA,KACXO,eAAgBP,IAAAA,KAChBQ,cAAeR,IAAAA,KACfS,cAAeT,IAAAA,KACfU,YAAaV,IAAAA,KACbW,aAAcX,IAAAA,KACdY,MAAOZ,IAAAA,QAAkB8B,EAAAA,KAE7B7B,EAAe8B,aAAe,CAC1B7B,cAAc,EACdG,YAAa,aACbC,WAAW,EACX0B,QAAQ,EACRzB,gBAAgB,EAChBC,eAAe,EACfC,eAAe,EACfC,aAAa,EACbC,cAAc,EACdC,MAAO,IAGX,SAAeqB,EAAAA,EAAAA,UAAQ,gBAEf7B,EAFe,EACnB8B,cACI9B,OAGA+B,EALe,EAInBC,mBACID,cALe,MAOhB,CACH/B,OAAAA,EACAF,aAAciC,GAAiBA,EAAcE,OAC7ClC,uBAAuBmC,EAAAA,EAAAA,IAA8BH,MAVzD,CAWIlC","sources":["webpack:///./src/components/GeneralInfo/CollectionCard/CollectionCard.js"],"sourcesContent":["/* eslint-disable camelcase */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { Tooltip } from '@patternfly/react-core';\n\nimport LoadingCard from '../LoadingCard';\nimport { collectionInformationSelector } from '../selectors';\nimport DateFormat from '@redhat-cloud-services/frontend-components/DateFormat';\nimport { extraShape } from '../../../constants';\n\nconst VersionTooltip = ({ egg, client }) => (\n    <Tooltip\n        content={\n            <React.Fragment>\n                <p>RPM version: { client || 'Not available' }</p>\n                <p>Dynamic update version: { egg || 'Not available' }</p>\n            </React.Fragment>\n        }\n    >\n        <span>{ client || egg || 'Not available' }</span>\n    </Tooltip>\n);\n\nVersionTooltip.propTypes = {\n    egg: PropTypes.string,\n    client: PropTypes.string\n};\n\nconst CollectionCard = ({\n    detailLoaded,\n    collectionInformation,\n    entity,\n    handleClick,\n    hasClient,\n    hasLastCheckIn,\n    hasRegistered,\n    hasInsightsId,\n    hasReporter,\n    hasMachineId,\n    extra\n}) => (<LoadingCard\n    title=\"Collection information\"\n    isLoading={ !detailLoaded }\n    items={ [\n        ...hasClient ? [{\n            title: 'Insights client',\n            value: <VersionTooltip egg={collectionInformation.egg} client={collectionInformation.client}/>\n        }] : [],\n        ...hasLastCheckIn ? [{ title: 'Last check-in', value: entity && (\n            DateFormat ?\n                <DateFormat date={ entity.updated } type=\"onlyDate\" /> :\n                new Date(entity.updated).toLocaleString()\n        ) }] : [],\n        ...hasRegistered ? [{ title: 'Registered', value: entity && (\n            DateFormat ?\n                <DateFormat date={entity.created} type=\"onlyDate\" /> :\n                new Date(entity.created).toLocaleString()\n        ) }] : [],\n        ...hasInsightsId ? [{ title: 'Insights id', value: entity && entity.insights_id }] : [],\n        ...hasReporter ? [{ title: 'Reporter', value: entity && entity.reporter }] : [],\n        ...hasMachineId ? [{ title: 'RHEL machine id', value: entity && entity.rhel_machine_id }] : [],\n        ...extra.map(({ onClick, ...item }) => ({\n            ...item,\n            ...onClick && { onClick: (e) => onClick(e, handleClick) }\n        }))\n    ] }\n/>);\n\nCollectionCard.propTypes = {\n    detailLoaded: PropTypes.bool,\n    entity: PropTypes.shape({\n        updated: PropTypes.string,\n        created: PropTypes.string,\n        insights_id: PropTypes.string,\n        reporter: PropTypes.string,\n        rhel_machine_id: PropTypes.string\n    }),\n    handleClick: PropTypes.func,\n    collectionInformation: PropTypes.shape({\n        client: PropTypes.string,\n        egg: PropTypes.string\n    }),\n    hasClient: PropTypes.bool,\n    hasLastCheckIn: PropTypes.bool,\n    hasRegistered: PropTypes.bool,\n    hasInsightsId: PropTypes.bool,\n    hasReporter: PropTypes.bool,\n    hasMachineId: PropTypes.bool,\n    extra: PropTypes.arrayOf(extraShape)\n};\nCollectionCard.defaultProps = {\n    detailLoaded: false,\n    handleClick: () => undefined,\n    hasClient: true,\n    hasEgg: true,\n    hasLastCheckIn: true,\n    hasRegistered: true,\n    hasInsightsId: true,\n    hasReporter: true,\n    hasMachineId: true,\n    extra: []\n};\n\nexport default connect(({\n    entityDetails: {\n        entity\n    },\n    systemProfileStore: {\n        systemProfile\n    }\n}) => ({\n    entity,\n    detailLoaded: systemProfile && systemProfile.loaded,\n    collectionInformation: collectionInformationSelector(systemProfile)\n}))(CollectionCard);\n"],"names":["VersionTooltip","egg","client","content","propTypes","PropTypes","CollectionCard","detailLoaded","collectionInformation","entity","handleClick","hasClient","hasLastCheckIn","hasRegistered","hasInsightsId","hasReporter","hasMachineId","extra","title","isLoading","items","value","DateFormat","date","updated","type","Date","toLocaleString","created","insights_id","reporter","rhel_machine_id","map","onClick","e","extraShape","defaultProps","hasEgg","connect","entityDetails","systemProfile","systemProfileStore","loaded","collectionInformationSelector"],"sourceRoot":""}