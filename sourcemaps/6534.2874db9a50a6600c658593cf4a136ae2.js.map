{"version":3,"file":"js/6534.1667401667766.6332306a985d6cca7b31.js","mappings":"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","sources":["webpack:///./src/Utilities/DeleteModal.js","webpack:///./src/Utilities/InsightsDisconnected.js","webpack:///./src/Utilities/OperatingSystemFormatter.js","webpack:///./src/Utilities/TagWithDialog.js","webpack:///./src/Utilities/TagsModal.js","webpack:///./src/Utilities/Wrapper.js","webpack:///./src/Utilities/constants.js","webpack:///./src/Utilities/sharedFunctions.js","webpack:///./src/api/api.js","webpack:///./src/api/systemIssues.js","webpack:///./src/components/GeneralInfo/EditButton/EditButton.js","webpack:///./src/components/GeneralInfo/InfoTable/InfoTable.js","webpack:///./src/components/GeneralInfo/LoadingCard/LoadingCard.js","webpack:///./src/components/GeneralInfo/SystemStatusCard/SystemStatusCard.js","webpack:///./src/components/GeneralInfo/TextInputModal/TextInputModal.js","webpack:///./src/components/InventoryTable/TitleColumn.js","webpack:///./src/components/SpinnerFallback.js","webpack:///./src/constants.js","webpack:///./src/store/action-types.js","webpack:///./src/store/system-issues-actions.js","webpack:///./src/store/actions.js","webpack:///./src/store/entities.js","webpack:///./src/store/index.js","webpack:///./src/components/SystemDetails/Compliance.js","webpack:///./src/components/SystemDetails/Vulnerability.js","webpack:///./src/components/SystemDetails/Advisor.js","webpack:///./src/components/SystemDetails/Patch.js","webpack:///./src/components/SystemDetails/Ros.js","webpack:///./src/store/systemIssues.js","webpack:///./src/store/entityDetails.js","webpack:///./src/store/reducers.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    ClipboardCopy,\n    Modal,\n    Split,\n    SplitItem,\n    Stack,\n    StackItem,\n    Level,\n    LevelItem,\n    Button\n} from '@patternfly/react-core';\n\nimport ExclamationTriangleIcon from  '@patternfly/react-icons/dist/js/icons/exclamation-triangle-icon';\n\nconst DeleteModal = ({ handleModalToggle, isModalOpen, currentSytems, onConfirm }) => {\n    let systemToRemove;\n    let systemLabel = 'system';\n    if (Array.isArray(currentSytems)) {\n        systemToRemove = currentSytems.length === 1 ? currentSytems[0].display_name : `${currentSytems.length} systems`;\n        systemLabel = currentSytems.length === 1 ? systemLabel : 'systems';\n    } else {\n        systemToRemove = currentSytems.display_name;\n    }\n\n    return <Modal\n        variant=\"small\"\n        title=\"Remove from inventory\"\n        className=\"ins-c-inventory__table--remove\"\n        ouiaId=\"inventory-delete-modal\"\n        isOpen={isModalOpen}\n        onClose={() => handleModalToggle(false)}\n        appendTo={document.getElementsByClassName('inventory')[0] || document.body}\n    >\n        <Split hasGutter>\n            <SplitItem><ExclamationTriangleIcon size=\"xl\" className=\"ins-m-alert\" /></SplitItem>\n            <SplitItem isFilled>\n                <Stack hasGutter>\n                    <StackItem>\n                        {systemToRemove} will be removed from\n                                    all {location.host} applications and services. You need to re-register\n                        the {systemLabel} to add it back to your inventory.\n                    </StackItem>\n                    <StackItem>\n                        To disable the daily upload for this {systemLabel}, use the following command:\n                    </StackItem>\n                    <StackItem>\n                        <ClipboardCopy>insights-client --unregister</ClipboardCopy>\n                    </StackItem>\n                </Stack>\n            </SplitItem>\n        </Split>\n        <Level hasGutter>\n            <LevelItem>\n                <Button\n                    variant=\"danger\"\n                    ouiaId=\"confirm-inventory-delete\"\n                    onClick={onConfirm}\n                >\n                    Remove\n                </Button>\n                <Button\n                    variant=\"link\"\n                    ouiaId=\"cancel-inventory-delete\"\n                    onClick={() => handleModalToggle(false)}\n                >\n                    Cancel\n                </Button>\n            </LevelItem>\n        </Level>\n    </Modal>;\n};\n\nconst ActiveSystemProp = PropTypes.shape({\n    id: PropTypes.string,\n    displayName: PropTypes.string\n});\n\nDeleteModal.propTypes = {\n    isModalOpen: PropTypes.bool,\n    currentSytems: PropTypes.oneOfType([ActiveSystemProp, PropTypes.arrayOf(ActiveSystemProp)]),\n    handleModalToggle: PropTypes.func,\n    onConfirm: PropTypes.func\n};\n\nDeleteModal.defaultProps = {\n    isModalOpen: false,\n    currentSytems: {},\n    handleModalToggle: () => undefined,\n    onConfirm: () => undefined\n};\n\nexport default DeleteModal;\n","import React from 'react';\n\nimport { Tooltip, Grid, GridItem } from '@patternfly/react-core';\nimport { DisconnectedIcon } from '@patternfly/react-icons';\n\nimport './InsightsDisconnected.scss';\n\nconst InsightsDisconnected = () => (\n    <Tooltip\n        maxWidth='14rem'\n        content={(\n            <Grid hasGutter>\n                <GridItem>\n                    Insights client not reporting\n                </GridItem>\n                <GridItem>\n                    From the main navigation, open\n                    &quot;Registration Assitant&quot; to learn\n                    how to set up Insights.\n                </GridItem>\n            </Grid>\n        )}>\n        <span className=\"pf-u-ml-sm ins-c-inventor__disconnected-icon\">\n            <DisconnectedIcon />\n        </span>\n    </Tooltip>\n);\n\nexport default InsightsDisconnected;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst OperatingSystemFormatter = ({ operatingSystem }) => {\n    if (operatingSystem?.name === 'RHEL') {\n        const version = (operatingSystem.major && operatingSystem.minor !== null)\n        && `${operatingSystem.major}.${operatingSystem?.minor}` || null;\n\n        return <span>\n            RHEL {version}\n        </span>;\n    }\n\n    return <span>\n        {operatingSystem?.name || 'Not available'}\n    </span>;\n};\n\nOperatingSystemFormatter.propTypes = {\n    operatingSystem: PropTypes.shape({\n        name: PropTypes.string,\n        major: PropTypes.number,\n        minor: PropTypes.number\n    })\n};\n\nexport default OperatingSystemFormatter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { TagCount } from '@redhat-cloud-services/frontend-components/TagCount';\nimport { loadTags, toggleTagModal } from '../store/actions';\n\nconst TagWithDialog = ({ count, loadTags, systemId }) => (\n    <span\n        onClick={(e) => e.stopPropagation()}\n        className=\"ins-c-inventory__list-tags\"\n        data-ouia-component-id={`${systemId}-tag-button`}\n    >\n        <TagCount count={count} onTagClick={ () => loadTags(systemId, count) } />\n    </span>\n);\n\nTagWithDialog.propTypes = {\n    count: PropTypes.number,\n    loadTags: PropTypes.func,\n    systemId: PropTypes.string\n};\n\nconst dispatchToProps = (dispatch) => ({\n    loadTags: (systemId, count) => {\n        if (systemId) {\n            dispatch(toggleTagModal(true));\n            dispatch(loadTags(systemId, undefined, undefined, count));\n        }\n    }\n});\n\nexport default connect(() => ({}), dispatchToProps)(TagWithDialog);\n","import React, { useState, useCallback, useEffect } from 'react';\nimport { useSelector, useDispatch, shallowEqual } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { toggleTagModal, fetchAllTags } from '../store/actions';\nimport { TagModal } from '@redhat-cloud-services/frontend-components/TagModal';\nimport { cellWidth } from '@patternfly/react-table';\nimport debounce from 'lodash/debounce';\nimport flatten from 'lodash/flatten';\n\nconst TagsModal = ({\n    filterTagsBy,\n    onToggleModal,\n    onApply,\n    getTags\n}) => {\n    const dispatch = useDispatch();\n    const [filterBy, setFilterBy] = useState('');\n    const [selected, setSelected] = useState([]);\n    const [statePagination, setStatePagination] = useState({\n        perPage: 10,\n        page: 1\n    });\n\n    const showTagDialog = useSelector(({ entities, entityDetails }) => (entities || entityDetails)?.showTagDialog);\n\n    const pagination = useSelector(({ entities, entityDetails }) => {\n        if (entities?.activeSystemTag || entityDetails?.entity) {\n            return statePagination;\n        }\n\n        return entities?.allTagsPagination || statePagination;\n    }, shallowEqual);\n\n    const loaded = useSelector(({ entities, entityDetails }) => entities?.tagModalLoaded || entityDetails?.tagModalLoaded);\n\n    const activeSystemTag = useSelector(({ entities, entityDetails }) => entities?.activeSystemTag || entityDetails?.entity);\n    const tags = useSelector(({ entities, entityDetails }) => {\n        const activeTags = entities?.activeSystemTag?.tags || entityDetails?.entity?.tags;\n        if (activeTags) {\n            return activeTags?.filter(\n                (tag) => Object.values(tag).some((val) => val?.includes(filterBy))\n            ).slice(statePagination?.perPage * (statePagination?.page - 1), statePagination?.perPage * statePagination?.page);\n        }\n\n        return entities?.allTags?.reduce((acc, { tags }) => ([\n            ...acc,\n            ...flatten(tags.map(({ tag }) => tag))\n        ]), []);\n    });\n\n    const tagsCount = useSelector(({ entities, entityDetails }) => {\n        const activeTags = (entities?.activeSystemTag?.tags || entityDetails?.entity?.tags)?.filter(\n            (tag) => Object.values(tag).some((val) => val?.includes(filterBy))\n        );\n        return activeTags ? activeTags.length : entities?.allTagsTotal;\n    });\n\n    useEffect(() => {\n        setFilterBy(filterTagsBy);\n    }, [filterTagsBy]);\n\n    const fetchTags = (pagination, filterBy) => {\n        if (!activeSystemTag) {\n            dispatch(fetchAllTags(filterBy, pagination, getTags));\n        } else {\n            setStatePagination(() => pagination);\n        }\n    };\n\n    const debouncedFetch = useCallback(debounce(fetchTags, 800), [activeSystemTag]);\n\n    return (\n        <TagModal\n            className=\"ins-c-inventory__tags-modal\"\n            tableProps={{\n                canSelectAll: false\n            }}\n            {...loaded && {\n                loaded,\n                pagination: {\n                    ...pagination,\n                    count: tagsCount\n                },\n                rows: tags?.map(({ key, value, namespace }) => ({\n                    id: `${namespace}/${key}=${value}`,\n                    selected: selected.find(({ id }) => id === `${namespace}/${key}=${value}`),\n                    cells: [key, value, namespace]\n                })) || []\n            }}\n            loaded={ loaded }\n            width=\"auto\"\n            isOpen={ showTagDialog }\n            toggleModal={() => {\n                setSelected([]);\n                setFilterBy('');\n                onToggleModal();\n                dispatch(toggleTagModal(false));\n            }}\n            filters={[\n                {\n                    label: 'Tags filter',\n                    placeholder: 'Filter tags',\n                    value: 'tags-filter',\n                    filterValues: {\n                        value: filterBy,\n                        onChange: (_e, value) => {\n                            debouncedFetch(pagination, value);\n                            setFilterBy(value);\n                        }\n                    }\n                }\n            ]}\n            onUpdateData={ (pagination) => fetchTags(pagination, filterBy) }\n            columns={ [\n                { title: 'Name' },\n                { title: 'Value', transforms: [cellWidth(30)] },\n                { title: 'Tag source', transforms: [cellWidth(30)] }\n            ] }\n            {...!activeSystemTag && {\n                onSelect: (selected) => setSelected(selected),\n                selected,\n                onApply: () => onApply && onApply(selected)\n            }}\n            bulkSelect={{ id: 'bulk-select-tags' }}\n            title={ activeSystemTag ?\n                `${activeSystemTag.display_name} (${tagsCount})` :\n                `All tags in inventory (${tagsCount})`\n            }\n        />\n    );\n};\n\nTagsModal.propTypes = {\n    onApply: PropTypes.func,\n    onToggleModal: PropTypes.func,\n    filterTagsBy: PropTypes.string,\n    customFilters: PropTypes.shape({\n        tags: PropTypes.oneOfType([\n            PropTypes.object,\n            PropTypes.arrayOf(PropTypes.string)\n        ])\n    }),\n    getTags: PropTypes.func\n};\n\nTagsModal.defaultProps = {\n    filterTagsBy: '',\n    onToggleModal: () => undefined\n};\n\nexport default TagsModal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { usePermissionsWithContext } from '@redhat-cloud-services/frontend-components-utilities/RBACHook';\n\nconst RenderWrapper = ({ cmp: Component, isRbacEnabled, inventoryRef, store, ...props }) => {\n    const { hasAccess } = usePermissionsWithContext([\n        'inventory:*:*',\n        'inventory:*:read',\n        'inventory:hosts:read'\n    ]);\n    return (\n        <Component\n            {...props}\n            { ...inventoryRef && {\n                ref: inventoryRef\n            }}\n            hasAccess={isRbacEnabled ? hasAccess : true}\n            store={ store }\n        />\n    );\n};\n\nRenderWrapper.propTypes = {\n    cmp: PropTypes.any,\n    inventoryRef: PropTypes.any,\n    store: PropTypes.object,\n    customRender: PropTypes.bool,\n    isRbacEnabled: PropTypes.bool\n};\n\nexport default RenderWrapper;\n","import { createContext, useContext } from 'react';\nimport { usePermissionsWithContext } from '@redhat-cloud-services/frontend-components-utilities/RBACHook';\nimport { INVENTORY_WRITE_PERMISSIONS } from '../constants';\nimport { RegistryContext } from '../store';\nimport { loadEntities } from '../store/actions';\n\nexport const TEXT_FILTER = 'hostname_or_id';\nexport const TEXTUAL_CHIP = 'textual';\nexport const TAG_CHIP = 'tags';\nexport const STALE_CHIP = 'staleness';\nexport const REGISTERED_CHIP = 'registered_with';\nexport const OS_CHIP = 'operating_system';\nexport const staleness = [\n    { label: 'Fresh', value: 'fresh' },\n    { label: 'Stale', value: 'stale' },\n    { label: 'Stale warning', value: 'stale_warning' }\n];\nexport const registered = [\n    { label: 'insights-client', value: 'puptoo', idName: 'Insights id', idValue: 'insights_id' },\n    { label: 'subscription-manager', value: 'rhsm-conduit',\n        idName: 'Subscription manager id', idValue: 'subscription_manager_id' },\n    { label: 'Satellite/Discovery', value: 'yupana' },\n    { label: 'insights-client not connected', value: '!puptoo' }\n];\nexport const InventoryContext = createContext({});\nexport const defaultFilters = {\n    staleFilter: ['fresh', 'stale']\n};\n\nexport function filterToGroup(filter = [], valuesKey = 'values') {\n    return filter.reduce((accGroup, group) => ({\n        ...accGroup,\n        [group.key]: group[valuesKey].reduce((acc, curr) => ({ ...acc, [curr.key]: {\n            isSelected: true,\n            group: curr.group,\n            item: {\n                meta: {\n                    tag: {\n                        key: curr.tagKey,\n                        value: curr.value\n                    }\n                }\n            }\n        } }), {})\n    }), {});\n}\n\nexport const arrayToSelection = (selected) => selected.reduce((acc, { cells: [key, value, namespace] }) => ({\n    ...acc,\n    [namespace]: {\n        ...acc[namespace?.title || namespace],\n        [key?.title || key]: {\n            isSelected: true,\n            group: { value: namespace?.title || namespace, label: namespace?.title || namespace },\n            item: {\n                value: key?.title || key,\n                meta: { tag: { key: key?.title || key, value: value?.title || value } }\n            }\n        }\n    }\n}), {});\n\nexport function reduceFilters(filters = []) {\n    return filters.reduce((acc, oneFilter) => {\n        if (oneFilter.value === TEXT_FILTER) {\n            return { ...acc, textFilter: oneFilter.filter };\n        } else if ('tagFilters' in oneFilter) {\n            return {\n                ...acc,\n                tagFilters: filterToGroup(oneFilter.tagFilters)\n            };\n        }\n\n        const foundKey = ['staleFilter', 'registeredWithFilter', 'osFilter', '']\n        .find(item => Object.keys(oneFilter).includes(item));\n\n        return {\n            ...acc,\n            ...foundKey && { [foundKey]: oneFilter[foundKey] }\n        };\n    }, {\n        textFilter: '',\n        tagFilters: {},\n        ...defaultFilters\n    });\n}\n\nexport const loadSystems = (options, showTags, getEntities) => {\n    const limitedItems = options?.items?.length > options.per_page ? options?.items?.slice(\n        (options?.page - 1) * options.per_page, options?.page * options.per_page\n    ) : options?.items;\n\n    const config = {\n        ...options.hasItems && {\n            sortBy: options?.sortBy?.key,\n            orderDirection: options?.sortBy?.direction?.toUpperCase()\n        },\n        ...options,\n        filters: options?.filters || options?.activeFilters,\n        orderBy: options?.orderBy || options?.sortBy?.key,\n        orderDirection: options?.orderDirection?.toUpperCase() || options?.sortBy?.direction?.toUpperCase(),\n        ...limitedItems?.length > 0 && {\n            itemsPage: options?.page,\n            page: 1\n        }\n    };\n\n    return loadEntities(limitedItems, config, { showTags }, getEntities);\n};\n\nexport const reloadWrapper = (event, callback) => {\n    event.payload.then(data => {\n        callback();\n        return data;\n    });\n\n    return event;\n};\n\nexport const isEmpty = (check) => !check || check?.length === 0;\n\nexport const generateFilter = (status, source, tagsFilter, filterbyName, operatingSystem) => ([\n    !isEmpty(status) && {\n        staleFilter: Array.isArray(status) ? status : [status]\n    },\n    !isEmpty(tagsFilter) && {\n        tagFilters: Array.isArray(tagsFilter) ? tagsFilter : [tagsFilter]\n    },\n    !isEmpty(source) && {\n        registeredWithFilter: Array.isArray(source) ? source : [source]\n    },\n    !isEmpty(filterbyName) && {\n        value: 'hostname_or_id',\n        filter: Array.isArray(filterbyName) ? filterbyName[0] : filterbyName\n    },\n    (!isEmpty(status) || !isEmpty(tagsFilter) || !isEmpty(filterbyName)) && isEmpty(source) && {\n        registeredWithFilter: []\n    },\n    (!isEmpty(source) || !isEmpty(tagsFilter) || !isEmpty(filterbyName)) && isEmpty(status) && {\n        staleFilter: []\n    },\n    !isEmpty(operatingSystem) && {\n        osFilter: Array.isArray(operatingSystem) ? operatingSystem : [operatingSystem]\n    }\n].filter(Boolean));\n\nexport const useWritePermissions = () => {\n    const { hasAccess } = usePermissionsWithContext(INVENTORY_WRITE_PERMISSIONS);\n\n    return hasAccess;\n};\n\nexport const useGetRegistry = () => {\n    const { getRegistry } = useContext(RegistryContext);\n\n    return getRegistry;\n};\n\nexport const allStaleFilters = ['fresh', 'stale', 'stale_warning', 'unknown'];\n","export const subtractWeeks = (numOfWeeks, date = new Date()) => {\n    date.setDate(date.getDate() - numOfWeeks * 7);\n\n    return date;\n};\n\nexport const verifyCollectorStaleness = (reporterStaleness) =>{\n    const stalenessDate = new Date(reporterStaleness.stale_timestamp);\n    const currentDateTime = new Date();\n\n    const twoWeeksPeriod = subtractWeeks(2);\n    const oneWeeksPeriod = subtractWeeks(1);\n\n    if (stalenessDate > currentDateTime) {\n        return 'Fresh';\n    } else if (oneWeeksPeriod < stalenessDate && stalenessDate < currentDateTime) {\n        return 'Stale';\n    }\n    else if (twoWeeksPeriod < stalenessDate && stalenessDate < oneWeeksPeriod) {\n        return 'Stale warning';\n    } else {\n        return 'Culled';\n    }\n};\n\nexport const verifyCulledInsightsClient = (perReporterStaleness) => {\n    //TODO: get rid of !perReporterStaleness condition when dependant apps have per_reporter_staleness info\n    if (!perReporterStaleness) {\n        return false;\n    }\n    else if (perReporterStaleness.puptoo) {\n        return verifyCollectorStaleness(perReporterStaleness.puptoo) === 'Culled';\n    } else {\n        return true;\n    }\n};\n","import 'abortcontroller-polyfill/dist/polyfill-patch-fetch';\nexport const INVENTORY_API_BASE = '/api/inventory/v1';\nimport flatMap from 'lodash/flatMap';\n\nimport instance from '@redhat-cloud-services/frontend-components-utilities/interceptors';\nimport { generateFilter, mergeArraysByKey } from '@redhat-cloud-services/frontend-components-utilities/helpers';\nimport { HostsApi, TagsApi, SystemProfileApi } from '@redhat-cloud-services/host-inventory-client';\nimport { allStaleFilters } from '../Utilities/constants';\n\nexport { instance };\nexport const hosts = new HostsApi(undefined, INVENTORY_API_BASE, instance);\nexport const tags = new TagsApi(undefined, INVENTORY_API_BASE, instance);\nexport const systemProfile = new SystemProfileApi(undefined, INVENTORY_API_BASE, instance);\n\nexport const getEntitySystemProfile = (item) => hosts.apiHostGetHostSystemProfileById([item]);\n\n/* eslint camelcase: off */\nexport const mapData = ({ facts = {}, ...oneResult }) => ({\n    ...oneResult,\n    rawFacts: facts,\n    facts: {\n        ...facts.reduce?.((acc, curr) => ({ ...acc, [curr.namespace]: curr.facts }), {}),\n        ...flatMap(facts, (oneFact => Object.values(oneFact)))\n        .map(item => typeof item !== 'string' ? ({\n            ...item,\n            // eslint-disable-next-line camelcase\n            os_release: item.os_release || item.release,\n            // eslint-disable-next-line camelcase\n            display_name: item.display_name || item.fqdn || item.id\n        }) : item)\n        .reduce(\n            (acc, curr) => ({ ...acc, ...(typeof curr !== 'string') ? curr : {} }), {}\n        )\n    }\n});\n\nexport const mapTags = (data = { results: [] }, { orderBy, orderDirection } = {}) => {\n    if (data.results.length > 0) {\n        return hosts.apiHostGetHostTags(data.results.map(({ id }) => id), data.per_page, 1, orderBy, orderDirection)\n        .then(({ results: tags }) => ({\n            ...data,\n            results: data.results.map(row => ({ ...row, tags: tags[row.id] || [] }))\n        }))\n        .catch(() => ({\n            ...data,\n            results: data.results.map(row => ({\n                ...row,\n                tags: []\n            }))\n        }));\n    }\n\n    return data;\n};\n\nexport const constructTags = (tagFilters) => {\n    return flatMap(\n        tagFilters,\n        ({ values, category: namespace }) => values.map(({ value: tagValue, tagKey }) => (\n            `${namespace ? `${namespace}/` : ''}${tagKey}${tagValue ? `=${tagValue}` : ''}`\n        ))\n    ) || '';\n};\n\nexport const calculateSystemProfile = (osFilter) => {\n    let systemProfile = {};\n    const osFilterValues = Array.isArray(osFilter) ? osFilter : Object.values(osFilter || {})\n    .flatMap((majorOsVersion) => Object.keys(majorOsVersion));\n\n    if (osFilterValues?.length > 0) {\n        systemProfile.operating_system = {\n            RHEL: {\n                version: {\n                    eq: osFilterValues\n                }\n            }\n        };\n    }\n\n    return generateFilter({ system_profile: systemProfile });\n};\n\nexport const filtersReducer = (acc, filter = {}) => ({\n    ...acc,\n    ...filter.value === 'hostname_or_id' && { hostnameOrId: filter.filter },\n    ...'tagFilters' in filter && { tagFilters: filter.tagFilters },\n    ...'staleFilter' in filter && { staleFilter: filter.staleFilter },\n    ...'registeredWithFilter' in filter && { registeredWithFilter: filter.registeredWithFilter },\n    ...'osFilter' in filter && { osFilter: filter.osFilter }\n});\n\nexport async function getEntities(items, {\n    controller,\n    hasItems,\n    filters,\n    per_page: perPage,\n    page,\n    orderBy,\n    orderDirection,\n    fields = { system_profile: ['operating_system'] },\n    ...options\n}, showTags) {\n    if (hasItems && items.length > 0) {\n        let data = await hosts.apiHostGetHostById(\n            items,\n            undefined,\n            undefined,\n            undefined,\n            undefined,\n            undefined,\n            undefined,\n            undefined,\n            { cancelToken: controller && controller.token }\n        );\n\n        if (fields && Object.keys(fields).length) {\n            try {\n                const result = await hosts.apiHostGetHostSystemProfileById(\n                    items,\n                    undefined,\n                    undefined,\n                    undefined,\n                    undefined,\n                    undefined,\n                    undefined,\n                    {\n                        cancelToken: controller && controller.token,\n                        query: generateFilter(fields, 'fields')\n                    }\n                );\n\n                data = {\n                    ...data,\n                    results: mergeArraysByKey([\n                        data?.results,\n                        result?.results || []\n                    ], 'id')\n                };\n            } catch (e) {\n                console.error(e); // eslint-disable-line\n            }\n        }\n\n        data = showTags ? await mapTags(data) : data;\n\n        data = {\n            ...data,\n            filters,\n            results: data.results.map(result => mapData({\n                ...result,\n                display_name: result.display_name || result.fqdn || result.id\n            }))\n        };\n\n        return data;\n    } else if (!hasItems) {\n        return hosts.apiHostGetHostList(\n            undefined,\n            undefined,\n            filters.hostnameOrId,\n            undefined,\n            undefined,\n            undefined,\n            undefined,\n            perPage,\n            page,\n            orderBy,\n            orderDirection,\n            filters.staleFilter,\n            [\n                ...constructTags(filters.tagFilters),\n                ...options.tags || []\n            ],\n            filters?.registeredWithFilter,\n            undefined,\n            undefined,\n            {\n                cancelToken: controller && controller.token,\n                query: {\n                    ...(options.filter && Object.keys(options.filter).length && generateFilter(options.filter)),\n                    ...(calculateSystemProfile(filters.osFilter)),\n                    ...(fields && Object.keys(fields).length && generateFilter(fields, 'fields'))\n                }\n            }\n        )\n        .then((data) => showTags ? mapTags(data, { orderBy, orderDirection }) : data)\n        .then(({ results = [], ...data } = {}) => ({\n            ...data,\n            filters,\n            results: results.map(result => mapData({\n                ...result,\n                display_name: result.display_name || result.fqdn || result.id\n            }))\n        }));\n    }\n\n    return {\n        page,\n        per_page: perPage,\n        results: []\n    };\n}\n\nexport function getTags(systemId, search, { pagination } = { pagination: {} }) {\n    return hosts.apiHostGetHostTags(\n        systemId,\n        pagination.perPage || 10,\n        pagination.page || 1,\n        undefined,\n        undefined,\n        search\n    );\n}\n\nexport function getAllTags(search, pagination = {}) {\n    return tags.apiTagGetTags(\n        [],\n        'tag',\n        'ASC',\n        pagination.perPage || 10,\n        pagination.page || 1,\n        //TODO: ask the backend to return all tags by default.\n        allStaleFilters,\n        search,\n        undefined,\n        undefined,\n        undefined,\n        undefined,\n        undefined,\n        undefined,\n        undefined,\n        undefined,\n        undefined\n    );\n}\n\nexport function getOperatingSystems(params = []) {\n    return systemProfile.apiSystemProfileGetOperatingSystem(...params);\n}\n","import instance from '@redhat-cloud-services/frontend-components-utilities/interceptors';\nexport const systemIssuesInstance = instance;\n\nexport const cves = async (systemId) => {\n    try {\n        const [low, moderate, important, critical] = await Promise.all([2, 4, 5, 7].map((impact) => (\n            instance.get(\n                `/api/vulnerability//v1/systems/${systemId}/cves?page=1&page_size=1&impact=${impact}`\n            )\n        )));\n        return { low, moderate, important, critical };\n    } catch (_e) {\n        return {};\n    }\n};\n\nexport const patch = async (systemId) => {\n    try {\n        return await instance.get(`/api/patch/v1/systems/${systemId}`);\n    } catch (_e) {\n        return {};\n    }\n};\n\nexport const advisor = async (systemId) => {\n    try {\n        return await instance.get(`/api/insights/v1/system/${systemId}/reports/`);\n    } catch (_e) {\n        return {};\n    }\n};\n\nexport const compliance = async (systemId) => {\n    const query = `query System($systemId: String!) {\n        system(id: $systemId) {\n            id\n            name\n            profiles {\n                id\n                name\n                refId\n                compliant\n                rulesFailed\n                rulesPassed\n                lastScanned\n                score\n                __typename\n            }\n            __typename\n        }\n    }`;\n    try {\n        return await instance.post('/api/compliance/graphql', {\n            operationName: 'System',\n            query,\n            variables: {\n                systemId\n            }\n        });\n    } catch (_e) {\n        return {};\n    }\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { usePermissionsWithContext } from '@redhat-cloud-services/frontend-components-utilities/RBACHook';\n\nimport { PencilAltIcon } from '@patternfly/react-icons';\n\nconst InnerButton = ({ link, onClick }) => (\n    <a\n        className=\"ins-c-inventory__detail--action\"\n        href={ `${window.location.href}/${link}` }\n        onClick={ onClick }\n    >\n        <PencilAltIcon />\n    </a>\n);\n\nInnerButton.propTypes = {\n    link: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired\n};\n\nlet permissionsCache = undefined;\n\nconst EditButtonUnknownPermissions = (props) => {\n    const { hasAccess } = usePermissionsWithContext([\n        'inventory:*:*',\n        'inventory:hosts:write',\n        'inventory:*:write'\n    ]);\n\n    if (hasAccess) {\n        permissionsCache = hasAccess;\n    }\n\n    if (!hasAccess) {\n        return null;\n    }\n\n    return <InnerButton {...props}/>;\n};\n\nEditButtonUnknownPermissions.propTypes = {\n    link: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired\n};\n\nconst EditButtonWrapper = ({ writePermissions, ...props }) => {\n    if (insights.chrome.isProd || writePermissions || permissionsCache) {\n        return <InnerButton {...props} />;\n    }\n\n    if (typeof writePermissions !== 'boolean') {\n        return <EditButtonUnknownPermissions {...props} />;\n    }\n\n    return null;\n};\n\nEditButtonWrapper.propTypes = {\n    writePermissions: PropTypes.bool\n};\n\nexport default EditButtonWrapper;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { TextContent, Text, TextVariants, Pagination } from '@patternfly/react-core';\nimport PrimaryToolbar from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport TableToolbar from '@redhat-cloud-services/frontend-components/TableToolbar';\nimport { Table, TableHeader, TableBody, TableVariant, SortByDirection } from '@patternfly/react-table';\nimport flatMap from 'lodash/flatMap';\nimport { prepareRows, filterRows, generateFilters, onDeleteFilter } from '../../../constants';\nclass InfoTable extends Component {\n    state = {\n        sortBy: { index: 0, direction: SortByDirection.asc },\n        opened: [],\n        pagination: {\n            page: 1,\n            perPage: 10\n        },\n        activeFilters: {}\n    };\n\n    onSort = (event, index, direction) => {\n        const { expandable } = this.props;\n        this.props.onSort(event, expandable ? index - 1 : index, direction);\n        this.setState({\n            sortBy: {\n                index,\n                direction\n            }\n        });\n    }\n\n    onCollapse = (_event, index, isOpen) => {\n        const { opened } = this.state;\n        opened[index] = isOpen;\n        this.setState({\n            opened\n        });\n    }\n\n    onUpdatePagination = ({ page, perPage }) => {\n        this.setState({ pagination: { ...this.state.pagination, page, perPage } });\n    }\n\n    setFilter = (key, value, label) => {\n        const { activeFilters } = this.state;\n        // eslint-disable-next-line no-unused-vars\n        const { [key]: currFilter, ...restFilter } = activeFilters;\n        this.setState({\n            activeFilters: {\n                ...restFilter,\n                ...value.length !== 0 && {\n                    [key]: { key, value, label }\n                }\n            },\n            pagination: { ...this.state.pagination, page: 1 }\n        });\n    }\n\n    onDeleteFilter = (_e, [deleted], deleteAll) => {\n        this.setState({\n            activeFilters: onDeleteFilter(\n                deleted,\n                deleteAll,\n                this.state.activeFilters\n            ),\n            pagination: { ...this.state.pagination, page: 1 }\n        });\n    }\n\n    render() {\n        const { cells, rows, expandable, filters } = this.props;\n        const { sortBy, opened, pagination, activeFilters } = this.state;\n        const collapsibleProps = expandable ? { onCollapse: this.onCollapse } : {};\n        const activeRows = filterRows(rows, activeFilters);\n        const mappedRows = expandable ? flatMap(\n            prepareRows(activeRows, pagination),\n            ({ child, ...row }, key) => [\n                {\n                    ...row,\n                    isOpen: opened[key * 2] || false\n                },\n                {\n                    cells: [{ title: child }],\n                    parent: key * 2\n                }\n            ]) : prepareRows(activeRows, pagination);\n        return (\n            <Fragment>\n                <PrimaryToolbar pagination={{\n                    ...pagination,\n                    itemCount: activeRows.length,\n                    onSetPage: (_e, page) => this.onUpdatePagination({ ...pagination, page }),\n                    onPerPageSelect: (_e, perPage) => this.onUpdatePagination({ ...pagination, page: 1, perPage })\n                }}\n                {...filters && {\n                    filterConfig: {\n                        items: generateFilters(cells, filters, activeFilters, this.setFilter)\n                    }\n                } }\n                activeFiltersConfig={{\n                    filters: Object.values(activeFilters).map(filter => ({\n                        ...filter,\n                        category: filter.label,\n                        chips: Array.isArray(filter.value) ? filter.value.map(item => ({ name: item })) : [{ name: filter.value }]\n                    })),\n                    onDelete: this.onDeleteFilter\n                }}\n                />\n                {\n                    cells.length !== 1 ? <Table\n                        aria-label=\"General information dialog table\"\n                        variant={ TableVariant.compact }\n                        cells={ cells }\n                        rows={ mappedRows }\n                        sortBy={ {\n                            ...sortBy,\n                            index: expandable && sortBy.index === 0 ? 1 : sortBy.index\n                        } }\n                        onSort={ this.onSort }\n                        { ...collapsibleProps }\n                    >\n                        <TableHeader />\n                        <TableBody />\n                    </Table> :\n                        <TextContent>\n                            {\n                                prepareRows(activeRows, pagination)\n                                .map((row, key) => (\n                                    <Text component={ TextVariants.small } key={ key }>\n                                        { row.title || row }\n                                    </Text>\n                                )) }\n                        </TextContent>\n                }\n                <TableToolbar isFooter className=\"ins-c-inventory__table--toolbar\">\n                    <Pagination\n                        {...pagination}\n                        itemCount={activeRows.length}\n                        variant=\"bottom\"\n                        onSetPage={(_e, page) => this.onUpdatePagination({ ...pagination, page })}\n                        onPerPageSelect={(_e, perPage) => this.onUpdatePagination({ ...pagination, page: 1, perPage })}\n                    />\n                </TableToolbar>\n            </Fragment>\n\n        );\n    }\n}\n\nInfoTable.propTypes = {\n    rows: PropTypes.array,\n    cells: PropTypes.array,\n    onSort: PropTypes.func,\n    expandable: PropTypes.bool,\n    filters: PropTypes.arrayOf(PropTypes.shape({\n        index: PropTypes.number,\n        title: PropTypes.string,\n        type: PropTypes.oneOf(['text', 'checkbox', 'radio', 'group']),\n        options: PropTypes.arrayOf(PropTypes.shape({\n            value: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n            label: PropTypes.node\n        }))\n    }))\n};\nInfoTable.defaultProps = {\n    cells: [],\n    rows: [],\n    onSort: () => undefined,\n    sortBy: {},\n    expandable: false\n};\n\nexport default InfoTable;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    Stack,\n    StackItem,\n    TextContent,\n    Text,\n    TextList,\n    TextVariants,\n    TextListItemVariants,\n    TextListVariants,\n    TextListItem\n} from '@patternfly/react-core';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components/Skeleton';\nimport { useParams } from 'react-router-dom';\n\nconst valueToText = (value, singular, plural) => {\n    if ((value || value === 0) && singular) {\n        return value === 1 ? `1 ${singular}` : `${value} ${plural || `${singular}s`}`;\n    }\n\n    if (value === 0) {\n        return 'None';\n    }\n\n    return value || 'Not available';\n};\n\nexport const Clickable = ({ item: { onClick, value, target, plural, singular } }) => (\n    <a\n        onClick={ event => {\n            event.preventDefault();\n            onClick(event, { value, target });\n        } }\n        href={ `${window.location.href.split('#')[0]}/${target}` }\n    >\n        { valueToText(value, singular, plural) }\n    </a>\n);\n\nClickable.propTypes = {\n    item: PropTypes.shape({\n        value: PropTypes.node,\n        target: PropTypes.string,\n        onClick: PropTypes.func,\n        plural: PropTypes.string,\n        singular: PropTypes.string\n    })\n};\n\nClickable.defaultProps = {\n    item: {}\n};\n\nconst LoadingCard = ({ title, isLoading, items, children }) => {\n    const { modalId } = useParams();\n    return (\n        <Stack hasGutter>\n            <StackItem>\n                <TextContent>\n                    <Text component={ TextVariants.h1 }>\n                        { title }\n                    </Text>\n                </TextContent>\n            </StackItem>\n            <StackItem isFilled>\n                {items.length ?\n                    (<TextContent>\n                        <TextList component={ TextListVariants.dl }>\n                            { items.map((item, key) => (\n                                <Fragment key={ key }>\n                                    <TextListItem component={ TextListItemVariants.dt }>\n                                        { item.title }\n                                    </TextListItem>\n                                    <TextListItem component={ TextListItemVariants.dd }>\n                                        { isLoading && <Skeleton size={ item.size || SkeletonSize.sm } /> }\n                                        { modalId && item.onClick && item.target === modalId && item.onClick()}\n                                        { !isLoading && (\n                                            item.onClick && item.value ?\n                                                <Clickable item={ item }/> :\n                                                valueToText(item.value, item.singular, item.plural)\n                                        ) }\n                                    </TextListItem>\n                                </Fragment>\n                            )) }\n                        </TextList>\n                    </TextContent>) : null}\n                {children}\n            </StackItem>\n        </Stack>\n    );\n};\n\nLoadingCard.propTypes = {\n    title: PropTypes.node.isRequired,\n    isLoading: PropTypes.bool,\n    items: PropTypes.arrayOf(PropTypes.shape({\n        title: PropTypes.node,\n        value: PropTypes.node,\n        onClick: PropTypes.func,\n        size: PropTypes.oneOf(Object.values(SkeletonSize)),\n        plural: PropTypes.string,\n        singular: PropTypes.string\n    })),\n    children: PropTypes.node\n};\n\nLoadingCard.defaultProps = {\n    isLoading: true,\n    items: []\n};\n\nexport default LoadingCard;\n","/* eslint-disable camelcase */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport LoadingCard from '../LoadingCard';\nimport DateFormat from '@redhat-cloud-services/frontend-components/DateFormat';\nimport { systemStatus } from '../selectors';\n\nconst SystemStatusCardCore = ({\n    detailLoaded,\n    hasState,\n    hasRegistered,\n    hasLastCheckIn,\n    hasRHC,\n    entity,\n    systemProfile,\n    systemStatus\n}) => (\n    <LoadingCard\n        title=\"System status\"\n        isLoading={ !detailLoaded }\n        items={\n            [\n                ...hasState ? [{\n                    title: 'Current state',\n                    value: systemStatus.stale ? 'Stale' : 'Active'\n                }] : [],\n                ...hasRegistered ? [{ title: 'Registered', value: entity && (\n                    <DateFormat date={entity.created} type=\"exact\" />\n                ) }] : [],\n                ...hasLastCheckIn ? [{ title: 'Last upload', value: entity && (\n                    <DateFormat date={ entity.updated } type=\"exact\" />\n                ) }] : [],\n                ...hasRHC ? [{\n                    title: 'RHC',\n                    value: systemProfile?.rhc_client_id ? 'Connected' : 'Not available'\n                }] : []\n            ]\n        }\n    />);\n\nSystemStatusCardCore.propTypes = {\n    detailLoaded: PropTypes.bool,\n    entity: PropTypes.shape({\n        updated: PropTypes.string,\n        created: PropTypes.string\n    }),\n    systemProfile: PropTypes.shape({\n        rhc_client_id: PropTypes.string\n    }),\n    systemStatus: PropTypes.object,\n    handleClick: PropTypes.func,\n    hasState: PropTypes.bool,\n    hasLastCheckIn: PropTypes.bool,\n    hasRegistered: PropTypes.bool,\n    hasRHC: PropTypes.bool\n};\nSystemStatusCardCore.defaultProps = {\n    detailLoaded: false,\n    systemStatus: {},\n    handleClick: () => undefined,\n    hasState: true,\n    hasLastCheckIn: true,\n    hasRegistered: true,\n    hasRHC: true\n};\n\nexport const SystemStatusCard = connect(({\n    entityDetails: {\n        entity\n    },\n    systemProfileStore: {\n        systemProfile\n    }\n}) => ({\n    entity,\n    systemProfile,\n    detailLoaded: systemProfile?.loaded,\n    systemStatus: systemStatus(entity)\n}))(SystemStatusCardCore);\n\nSystemStatusCard.propTypes = SystemStatusCardCore.propTypes;\nSystemStatusCard.defaultProps = SystemStatusCardCore.defaultProps;\n\nexport default SystemStatusCard;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n    Button,\n    Modal,\n    TextInput\n} from '@patternfly/react-core';\n\nexport default class TextInputModal extends Component {\n    constructor (props) {\n        super(props);\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps (props, state) {\n        if (!props.isOpen) {\n            return { value: undefined };\n        }\n\n        if (state.value !== undefined) {\n            return null;\n        }\n\n        return {\n            value: props.value || ''\n        };\n    };\n\n    render () {\n        const {\n            title, isOpen, onCancel, onSubmit, ariaLabel, modalOuiaId, cancelOuiaId, confirmOuiaId, inputOuiaId\n        } = this.props;\n        const { value } = this.state;\n\n        return (\n            <Modal\n                variant=\"small\"\n                title={ title }\n                className=\"ins-c-inventory__detail--edit\"\n                aria-label={ ariaLabel ? `${ariaLabel} - modal` : 'input modal' }\n                ouiaId={ modalOuiaId }\n                isOpen={ isOpen }\n                onClose={ event => onCancel(event) }\n                actions={ [\n                    <Button key=\"cancel\" data-action=\"cancel\" variant=\"secondary\" onClick={ onCancel } ouiaId={ cancelOuiaId }>\n                        Cancel\n                    </Button>,\n                    <Button\n                        key=\"confirm\"\n                        data-action=\"confirm\"\n                        variant=\"primary\"\n                        onClick={ () => onSubmit(this.state.value) }\n                        ouiaId={ confirmOuiaId }\n                    >\n                        Save\n                    </Button>\n                ] }\n            >\n                <TextInput\n                    value={ value }\n                    type=\"text\"\n                    ouiaId={ inputOuiaId }\n                    onChange={ value => this.setState({ value }) }\n                    aria-label={ ariaLabel  }\n                />\n            </Modal>\n        );\n    }\n}\n\nTextInputModal.propTypes = {\n    title: PropTypes.string,\n    isOpen: PropTypes.bool,\n    onCancel: PropTypes.func,\n    onSubmit: PropTypes.func,\n    ariaLabel: PropTypes.string,\n    modalOuiaId: PropTypes.string,\n    cancelOuiaId: PropTypes.string,\n    confirmOuiaId: PropTypes.string,\n    inputOuiaId: PropTypes.string,\n    value: PropTypes.string\n};\n\nTextInputModal.defaultProps = {\n    onCancel: () => undefined,\n    onSubmit: () => undefined,\n    isOpen: false,\n    title: '',\n    ariaLabel: 'input text'\n};\n","/* eslint-disable camelcase */\n/* eslint-disable react/prop-types */\nimport React from 'react';\n\n/**\n * Helper function to proprly calculate what to do when user clicks on first cell.\n * Either full redirect if used with ctrl button or `onRowClick` from props is used.\n * @param {*} event html event, to find out if meta key was clicked.\n * @param {*} key inventory UUID.\n * @param {*} props additional props from `EntityTable` - loaded, onRowClick and noDetail.\n */\nconst onRowClick = (event, key, { loaded, onRowClick: rowClick, noDetail }) => {\n    if (loaded && !noDetail) {\n        const isMetaKey = (event.ctrlKey || event.metaKey || event.which === 2);\n        if (isMetaKey) {\n            return;\n        } else if (rowClick) {\n            rowClick(event, key, isMetaKey);\n        }\n    }\n\n    event.preventDefault();\n    event.stopPropagation();\n};\n\n/**\n * Helper function to generate first cell in plain inventory either with clickable detail or just data from attribut.\n * This is later on used in redux in `renderFunc`.\n * @param {React.node} data React node with information that will be shown to user as column title.\n * @param {string} id inventory UUID, used to navigate to correct URL.\n * @param {*} item row data, holds every information from redux store for currecnt row.\n * @param {*} props additional props passed from `EntityTable` - holds any props passed to inventory table.\n */\nconst TitleColumn = (data, id, item, props) => (\n    <div className=\"ins-composed-col\">\n        <div key=\"os_release\">{item?.os_release}</div>\n        <div key=\"data\" className={props?.noDetail ? 'ins-m-nodetail' : ''}>\n            { props?.noDetail ?\n                data :\n                <a\n                    widget=\"col\"\n                    href={ `${location.pathname}${location.pathname.substr(-1) === '/' ? '' : '/'}${id}` }\n                    onClick={ event => {\n                        onRowClick(event, id, props);\n                    }}\n                >\n                    { data }\n                </a> }\n        </div>\n    </div>\n);\n\nexport default TitleColumn;\n","import React from 'react';\nimport { Bullseye, Spinner } from '@patternfly/react-core';\n\nconst Fallback = () => (\n    <Bullseye>\n        <Spinner size=\"xl\" />\n    </Bullseye>\n);\n\nexport default Fallback;\n","import PropTypes from 'prop-types';\n\nexport const tagsMapper = (acc, curr) => {\n    let [namespace, keyValue] = curr.split('/');\n    if (!keyValue) {\n        keyValue = namespace;\n        namespace = null;\n    }\n\n    const [key, value = null] = keyValue.split('=');\n    const currTagKey = acc.findIndex(({ category }) => category === namespace);\n    const currTag = acc[currTagKey] || {\n        category: namespace,\n        key: namespace,\n        type: 'tags',\n        values: []\n    };\n    currTag.values.push({\n        name: `${key}${value ? `=${value}` : ''}`,\n        key: `${key}${value ? `=${value}` : ''}`,\n        tagKey: key,\n        value,\n        group: {\n            label: namespace,\n            value: namespace,\n            type: 'checkbox'\n        }\n    });\n    if (!acc[currTagKey]) {\n        acc.push(currTag);\n    }\n\n    return acc;\n};\n\nexport const prepareRows = (rows = [], pagination = {}) => (\n    rows\n    .slice((pagination.page - 1) * pagination.perPage, pagination.page * pagination.perPage)\n);\n\nexport const isDate = (date) => {\n    return !(isNaN(date) && isNaN(Date.parse(date)));\n};\n\nexport const filterRows = (rows = [], activeFilters = {}) => (\n    rows\n    .filter(row => (\n        Object.values(activeFilters).length === 0 ||\n        Object.values(activeFilters)\n        .every(\n            filter => {\n                const rowValue = row[filter.key] && (row[filter.key].sortValue || row[filter.key]);\n                return rowValue && (\n                    Array.isArray(filter.value) ?\n                        filter.value.includes(rowValue) :\n                        rowValue.toLocaleLowerCase().indexOf(filter.value.toLocaleLowerCase()) !== -1\n                );\n            }\n        )\n    ))\n);\n\nexport const generateFilters = (cells = [], filters = [], activeFilters = {}, onChange = () => undefined) => (\n    filters.map((filter, key) => {\n        const activeKey = filter.index || key;\n        const activeLabel = cells[activeKey] && (cells[activeKey].title || cells[activeKey]);\n\n        return ({\n            value: String(activeKey),\n            label: activeLabel,\n            type: filter.type || 'text',\n            filterValues: {\n                id: filter.id || `${activeLabel}-${activeKey}`,\n                onChange: (_e, newFilter) => onChange(activeKey, newFilter, activeLabel),\n                value: activeFilters[activeKey] && activeFilters[activeKey].value,\n                ...filter.options && { items: filter.options }\n            }\n        });\n    })\n);\n\nexport const onDeleteFilter = (deleted = {}, deleteAll = false, activeFilters = {}) => {\n    if (deleteAll) {\n        return {};\n    } else {\n        const { [deleted.key]: workingItem, ...filtersRest } = activeFilters;\n        const newValue = workingItem && Array.isArray(workingItem.value) &&\n            workingItem.value.filter(item => !deleted.chips.find(({ name }) => name === item));\n        const newFilter = workingItem && Array.isArray(workingItem.value) && newValue && newValue.length > 0 ? {\n            [deleted.key]: {\n                ...workingItem,\n                value: newValue\n            }\n        } : {};\n        return {\n            ...filtersRest,\n            ...newFilter\n        };\n    }\n};\n\nexport const extraShape = PropTypes.shape({\n    title: PropTypes.node,\n    value: PropTypes.node,\n    singular: PropTypes.node,\n    plural: PropTypes.node,\n    onClick: PropTypes.func\n});\n\nexport const INVENTORY_WRITE_PERMISSIONS = [\n    'inventory:*:*',\n    'inventory:hosts:write',\n    'inventory:*:write'\n];\n","import keyBy from 'lodash/keyBy';\n\nconst makeActions = (actions) => {\n    return actions?.reduce?.((acc, curr) => ({\n        ...acc,\n        [curr]: curr,\n        [`${curr}_PENDING`]: `${curr}_PENDING`,\n        [`${curr}_FULFILLED`]: `${curr}_FULFILLED`,\n        [`${curr}_REJECTED`]: `${curr}_REJECTED`\n    }), {});\n};\n\nconst actions = [\n    'ALERT_ADD',\n    'ALERT_DISMISS',\n    'REMOVE_ENTITY'\n];\n\nexport const asyncActions = [\n    'GET_ENTITIES',\n    'GET_ENTITY',\n    'UPDATE_DISPLAY_NAME',\n    'LOAD_WRITE_PERMISSIONS',\n    'LOAD_SYSTEM_PROFILE',\n    'SET_ANSIBLE_HOST'\n];\n\nexport const asyncInventory = [\n    'LOAD_ENTITIES',\n    'LOAD_ENTITY',\n    'REMOVE_ENTITY',\n    'LOAD_SYSTEM_PROFILE',\n    'SET_DISPLAY_NAME',\n    'SET_ANSIBLE_HOST',\n    'LOAD_TAGS',\n    'ALL_TAGS',\n    'OPERATING_SYSTEMS'\n];\n\nexport const systemIssues = [\n    'LOAD_ADVISOR_RECOMMENDATIONS',\n    'LOAD_APPLICABLE_CVES',\n    'LOAD_APPLICABLE_ADVISORIES',\n    'LOAD_COMPLIANCE_POLICIES'\n];\n\nexport const ACTION_TYPES = { ...keyBy(actions, k => k), ...makeActions(asyncActions), ...makeActions(asyncInventory) };\nexport const INVENTORY_ACTION_TYPES = makeActions(asyncInventory);\nexport const SYSTEM_ISSUE_TYPES = makeActions(systemIssues);\n\nexport const CLEAR_NOTIFICATIONS = '@@INSIGHTS-CORE/NOTIFICATIONS/CLEAR_NOTIFICATIONS';\nexport const SELECT_ENTITY = 'SELECT_ENTITY';\nexport const SET_INVENTORY_FILTER = 'SET_INVENTORY_FILTER';\nexport const SET_PAGINATION = 'SET_PAGINATION';\nexport const SET_DISPLAY_NAME = 'SET_DISPLAY_NAME';\nexport const SET_ANSIBLE_HOST = 'SET_ANSIBLE_HOST';\n\nexport const UPDATE_ENTITIES = 'UPDATE_ENTITIES';\nexport const CHANGE_SORT = 'CHANGE_SORT';\nexport const FILTER_ENTITIES = 'FILTER_ENTITIES';\nexport const APPLICATION_SELECTED = 'APPLICATION_SELECTED';\nexport const SHOW_ENTITIES = 'SHOW_ENTITIES';\nexport const FILTER_SELECT = 'FILTER_SELECT';\nexport const ENTITIES_LOADING = 'ENTITIES_LOADING';\nexport const CLEAR_FILTERS = 'CLEAR_FILTERS';\nexport const TOGGLE_TAG_MODAL = 'TOGGLE_TAG_MODAL';\nexport const CONFIG_CHANGED = 'CONFIG_CHANGED';\nexport const TOGGLE_DRAWER = 'TOGGLE_INVENTORY_DRAWER';\n","import { SYSTEM_ISSUE_TYPES } from './action-types';\nimport {\n    cves,\n    compliance,\n    advisor,\n    patch\n} from '../api';\n\nexport const getAdvisorData = (systemId) => ({\n    type: SYSTEM_ISSUE_TYPES.LOAD_ADVISOR_RECOMMENDATIONS,\n    payload: advisor(systemId)\n});\n\nexport const getVulnData = (systemId) => ({\n    type: SYSTEM_ISSUE_TYPES.LOAD_APPLICABLE_CVES,\n    payload: cves(systemId)\n});\n\nexport const getPatchData = (systemId) => ({\n    type: SYSTEM_ISSUE_TYPES.LOAD_APPLICABLE_ADVISORIES,\n    payload: patch(systemId)\n});\n\nexport const getComplianceData = (systemId) => ({\n    type: SYSTEM_ISSUE_TYPES.LOAD_COMPLIANCE_POLICIES,\n    payload: compliance(systemId)\n});\n","import { ACTION_TYPES, CLEAR_NOTIFICATIONS, SET_INVENTORY_FILTER, SET_PAGINATION } from './action-types';\nimport { hosts, getEntitySystemProfile } from '../api';\nexport * from './system-issues-actions';\nexport * from './inventory-actions';\n\nexport const deleteEntity = (systems, displayName) => ({\n    type: ACTION_TYPES.REMOVE_ENTITY,\n    payload: hosts.apiHostDeleteById(systems),\n    meta: {\n        notifications: {\n            fulfilled: {\n                variant: 'success',\n                title: 'Delete operation finished',\n                description: `${displayName} has been successfully removed.`,\n                dismissable: true\n            }\n        },\n        systems\n    }\n});\n\nexport const setFilter = (filtersList) => ({\n    type: SET_INVENTORY_FILTER,\n    payload: {\n        filtersList\n    }\n});\n\nexport const clearNotifications = () => {\n    return ({\n        type: CLEAR_NOTIFICATIONS\n    });\n};\n\nexport const editDisplayName = (id, value, origValue) => ({\n    type: ACTION_TYPES.UPDATE_DISPLAY_NAME,\n    payload: hosts.apiHostPatchById([id], { display_name: value }), // eslint-disable-line camelcase\n    meta: {\n        id,\n        value,\n        origValue,\n        notifications: {\n            fulfilled: {\n                variant: 'success',\n                title: `Display name for entity with ID ${id} has been changed to ${value}`,\n                dismissable: true\n            }\n        }\n    }\n});\n\nexport const setPagination = (page, perPage) => ({\n    type: SET_PAGINATION,\n    payload: {\n        page, perPage\n    }\n});\n\nexport const systemProfile = (itemId) => ({\n    type: ACTION_TYPES.LOAD_SYSTEM_PROFILE,\n    payload: getEntitySystemProfile(itemId, {})\n});\n\nexport const editAnsibleHost = (id, value, origValue) => ({\n    type: ACTION_TYPES.SET_ANSIBLE_HOST,\n    payload: hosts.apiHostPatchById([id], { ansible_host: value }), // eslint-disable-line camelcase\n    meta: {\n        id,\n        value,\n        origValue,\n        notifications: {\n            fulfilled: {\n                variant: 'success',\n                title: 'Ansible hostname has been updated',\n                dismissable: true\n            }\n        }\n    }\n});\n","import React from 'react';\nimport {\n    ACTION_TYPES,\n    SELECT_ENTITY,\n    CHANGE_SORT,\n    SHOW_ENTITIES,\n    FILTER_SELECT,\n    UPDATE_ENTITIES,\n    ENTITIES_LOADING,\n    CLEAR_FILTERS,\n    TOGGLE_TAG_MODAL,\n    CONFIG_CHANGED\n} from './action-types';\nimport { mergeArraysByKey } from '@redhat-cloud-services/frontend-components-utilities/helpers';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport { CullingInformation } from '@redhat-cloud-services/frontend-components/CullingInfo';\nimport { TagWithDialog } from '../Utilities/index';\nimport groupBy from 'lodash/groupBy';\nimport TitleColumn from '../components/InventoryTable/TitleColumn';\nimport InsightsDisconnected from '../Utilities/InsightsDisconnected';\nimport OperatingSystemFormatter from '../Utilities/OperatingSystemFormatter';\nimport { Tooltip } from '@patternfly/react-core';\nimport { defaultFilters } from '../Utilities/constants';\nimport { verifyCulledInsightsClient } from '../Utilities/sharedFunctions';\n\nexport const defaultState = {\n    loaded: false,\n    tagsLoaded: false,\n    allTagsLoaded: false,\n    operatingSystems: [],\n    operatingSystemsLoaded: false,\n    invConfig: {},\n    sortBy: {\n        key: 'updated',\n        direction: 'desc'\n    }\n};\n\nexport const defaultColumns = () => ([\n    {\n        key: 'display_name',\n        sortKey: 'display_name',\n        title: 'Name',\n        renderFunc: TitleColumn\n    },\n    {\n        key: 'tags',\n        title: 'Tags',\n        props: { width: 10, isStatic: true },\n        // eslint-disable-next-line react/display-name\n        renderFunc: (value, systemId) => <TagWithDialog count={value.length} systemId={systemId} />\n    },\n    {\n        key: 'system_profile',\n        sortKey: 'operating_system',\n        dataLabel: 'OS',\n        title: <Tooltip content={<span>Operating system</span>}><span>OS</span></Tooltip>,\n        // eslint-disable-next-line react/display-name\n        renderFunc: (systemProfile) => <OperatingSystemFormatter operatingSystem={systemProfile?.operating_system} />,\n        props: { width: 10 }\n    },\n    {\n        key: 'updated',\n        sortKey: 'updated',\n        title: 'Last seen',\n        // eslint-disable-next-line react/display-name\n        renderFunc: (\n            value,\n            _id,\n            {\n                culled_timestamp: culled, stale_warning_timestamp: staleWarn, stale_timestamp: stale,\n                per_reporter_staleness: perReporterStaleness\n            }) => {\n            return CullingInformation ? <CullingInformation\n                culled={culled}\n                staleWarning={staleWarn}\n                stale={stale}\n                render={({ msg }) => <React.Fragment>\n                    <DateFormat date={ value } extraTitle={ (\n                        <React.Fragment>\n                            <div>{ msg }</div>\n                        Last seen:{` `}\n                        </React.Fragment>\n                    ) }/>\n                    {verifyCulledInsightsClient(perReporterStaleness) && <InsightsDisconnected />}\n                </React.Fragment>\n                }\n            > <DateFormat date={ value } /> </CullingInformation> : new Date(value).toLocaleString();\n        },\n        props: { width: 10 }\n    }\n]);\n\nfunction entitiesPending(state, { meta }) {\n    return {\n        ...state,\n        ...state.columns && { columns: mergeArraysByKey([\n            defaultColumns().filter(({ key }) => key !== 'tags' || meta?.showTags),\n            state.columns\n        ], 'key') } || {},\n        rows: [],\n        loaded: false,\n        lastDateRequest: meta.lastDateRequest\n    };\n}\n\nfunction clearFilters(state) {\n    return {\n        ...state,\n        activeFilters: [defaultFilters]\n    };\n}\n\n// eslint-disable-next-line camelcase\nfunction entitiesLoaded(state, { payload: { results, per_page: perPage, page, count, total, loaded, filters }, meta }) {\n    // Older requests should not rewrite the state\n    if (meta.lastDateRequest < state.lastDateRequest) {\n        return state;\n    }\n\n    // Data are loaded and APi returned malicious data\n    if (loaded === undefined && (page === undefined || perPage === undefined)) {\n        return state;\n    }\n\n    return {\n        ...state,\n        activeFilters: filters || [],\n        loaded: loaded === undefined || loaded,\n        // filter data only if we are loaded\n        rows: mergeArraysByKey([state.rows, results]).filter(item => !loaded ? true : item.created),\n        perPage: perPage !== undefined ? perPage : state.perPage,\n        page: page !== undefined ? page : state.page,\n        count: count !== undefined ? count : state.count,\n        total: total !== undefined ? total : state.total\n    };\n}\n\nfunction loadingRejected(state, { payload }) {\n    return {\n        ...state,\n        error: payload\n    };\n}\n\nfunction selectEntity(state, { payload }) {\n    const rows = [...state.rows];\n    const toSelect = [].concat(payload);\n    toSelect.forEach(({ id, selected }) => {\n        const entity = rows.find(entity => entity.id === id);\n        if (entity) {\n            entity.selected = selected;\n        } else {\n            rows.forEach(item => item.selected = selected);\n        }\n    });\n    return {\n        ...state,\n        rows\n    };\n}\n\nfunction versionsLoaded(state, { payload: { results } }) {\n    return {\n        ...state,\n        operatingSystems: results.map(entry => {\n            const { name, major, minor } = entry.value;\n            const versionStringified = `${major}.${minor}`;\n            return { label: `${name} ${versionStringified}`, value: versionStringified };\n        }),\n        operatingSystemsLoaded: true\n    };\n}\n\nfunction changeSort(state, { payload: { key, direction } }) {\n    return {\n        ...state,\n        sortBy: {\n            key,\n            direction\n        }\n    };\n}\n\nfunction selectFilter(state, { payload: { item: { items, ...item }, selected } }) {\n    let { activeFilters = [] } = state;\n    if (selected) {\n        activeFilters = [\n            ...activeFilters,\n            item,\n            ...items ? items : []\n        ];\n        const values = activeFilters.map(active => active.value);\n        activeFilters = activeFilters.filter((filter, key) => values.lastIndexOf(filter.value) === key);\n    } else {\n        activeFilters.splice(activeFilters.map(active => active.value).indexOf(item.value), 1);\n        if (items) {\n            items.forEach(subItem => {\n                activeFilters.splice(activeFilters.map(active => active.value).indexOf(subItem.value), 1);\n            });\n        }\n    }\n\n    return {\n        ...state,\n        activeFilters\n    };\n}\n\nexport function showTags(state, { payload, meta }) {\n    const { tags, ...activeSystemTag } = state.rows ? state.rows.find(({ id }) => meta.systemId === id) : state.entity || {};\n    return {\n        ...state,\n        tagModalLoaded: true,\n        activeSystemTag: {\n            ...activeSystemTag,\n            tags: Object.values(payload.results)[0],\n            tagsCount: meta.tagsCount,\n            page: payload.page,\n            perPage: payload.per_page,\n            tagsLoaded: true\n        }\n    };\n}\n\nexport function showTagsPending(state, { meta }) {\n    const { tags, ...activeSystemTag } = state.rows ? state.rows.find(({ id }) => meta.systemId === id) : state.entity || {};\n    return {\n        ...state,\n        tagModalLoaded: false,\n        activeSystemTag: {\n            ...activeSystemTag,\n            tagsCount: meta.tagsCount,\n            tagsLoaded: false\n        }\n    };\n}\n\nexport function toggleTagModalReducer(state, { payload: { isOpen } }) {\n    return {\n        ...state,\n        showTagDialog: isOpen,\n        activeSystemTag: undefined\n    };\n}\n\nexport function allTags(state, { payload: { results, total, page, per_page: perPage }, meta: { lastDateRequestTags } }) {\n    // only the latest request can change state\n    if (lastDateRequestTags < state.lastDateRequestTags) {\n        return state;\n    }\n\n    return {\n        ...state,\n        allTags: Object.entries(groupBy(results, ({ tag: { namespace } }) => namespace)).map(([key, value]) => ({\n            name: key,\n            tags: value\n        })),\n        allTagsPagination: {\n            perPage,\n            page\n        },\n        additionalTagsCount: total > perPage ? total - perPage : 0,\n        allTagsTotal: total,\n        allTagsLoaded: true,\n        tagModalLoaded: true\n    };\n}\n\nexport default {\n    [ACTION_TYPES.ALL_TAGS_FULFILLED]: allTags,\n    [ACTION_TYPES.ALL_TAGS_PENDING]: (state, { meta }) => (\n        { ...state, allTagsLoaded: false, tagModalLoaded: false, lastDateRequestTags: meta.lastDateRequestTags }\n    ),\n    [ACTION_TYPES.LOAD_ENTITIES_PENDING]: entitiesPending,\n    [ACTION_TYPES.LOAD_ENTITIES_FULFILLED]: entitiesLoaded,\n    [ACTION_TYPES.LOAD_ENTITIES_REJECTED]: loadingRejected,\n    [ACTION_TYPES.LOAD_TAGS_PENDING]: showTagsPending,\n    [ACTION_TYPES.LOAD_TAGS_FULFILLED]: showTags,\n    [ACTION_TYPES.ALL_TAGS_REJECTED]: loadingRejected,\n    [ACTION_TYPES.OPERATING_SYSTEMS_PENDING]: (state) => ({ ...state, operatingSystemsLoaded: false }),\n    [ACTION_TYPES.OPERATING_SYSTEMS_FULFILLED]: versionsLoaded,\n    [UPDATE_ENTITIES]: entitiesLoaded,\n    [SHOW_ENTITIES]: (state, action) => entitiesLoaded(state, {\n        payload: {\n            ...action.payload,\n            loaded: false\n        }\n    }),\n    [FILTER_SELECT]: selectFilter,\n    [SELECT_ENTITY]: selectEntity,\n    [CHANGE_SORT]: changeSort,\n    [CLEAR_FILTERS]: clearFilters,\n    [ENTITIES_LOADING]: (state, { payload: { isLoading } }) => ({ ...state, loaded: !isLoading }),\n    [TOGGLE_TAG_MODAL]: toggleTagModalReducer,\n    [CONFIG_CHANGED]: (state, { payload }) => ({ ...state, invConfig: payload })\n};\n","\nimport { createContext } from 'react';\nimport MiddlewareListener from '@redhat-cloud-services/frontend-components-utilities/MiddlewareListener';\nimport { ReducerRegistry } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport notificationsMiddleware from '@redhat-cloud-services/frontend-components-notifications/notificationsMiddleware';\nimport promise  from 'redux-promise-middleware';\nexport { default as reducers, tableReducer, entitesDetailReducer } from './reducers';\n\nexport const RegistryContext = createContext({\n    getRegistry: () => {}\n});\n\nlet middlewareListener;\n\nexport function init (...middleware) {\n    middlewareListener = new MiddlewareListener();\n    return new ReducerRegistry(\n        {},\n        [\n            middlewareListener.getMiddleware(),\n            promise,\n            notificationsMiddleware({\n                errorDescriptionKey: ['detail', 'stack']\n            }),\n            ...middleware\n        ]\n    );\n}\n\nexport function addNewListener ({ actionType, callback }) {\n    return middlewareListener.addNew({\n        on: actionType,\n        callback\n    });\n}\n","import React from 'react';\nimport { useStore } from 'react-redux';\nimport { useRouteMatch } from 'react-router-dom';\nimport AsyncComponent from '@redhat-cloud-services/frontend-components/AsyncComponent';\n\nconst ComplianceTab = () => {\n    const { params } = useRouteMatch('/:inventoryId');\n    return <AsyncComponent\n        appName=\"compliance\"\n        module=\"./SystemDetail\"\n        store={useStore()}\n        customItnl\n        intlProps={{\n            locale: navigator.language.slice(0, 2)\n        }}\n        inventoryId={ params.inventoryId }\n        remediationsEnabled\n    />;\n};\n\nexport default ComplianceTab;\n","import React, { useContext } from 'react';\nimport { useRouteMatch } from 'react-router-dom';\nimport { RegistryContext } from '../../store';\nimport AsyncComponent from '@redhat-cloud-services/frontend-components/AsyncComponent';\n\nconst VulnerabilityTab = () => {\n    const { params } = useRouteMatch('/:inventoryId');\n    const { getRegistry } = useContext(RegistryContext);\n\n    return <AsyncComponent\n        appName=\"vulnerability\"\n        module=\"./SystemDetail\"\n        getRegistry={getRegistry}\n        customItnlProvider\n        entity={ { id: params.inventoryId } }\n    />;\n};\n\nexport default VulnerabilityTab;\n","import React from 'react';\nimport { useStore } from 'react-redux';\nimport AsyncComponent from '@redhat-cloud-services/frontend-components/AsyncComponent';\n\nconst AdvisorTab = () => {\n    return <AsyncComponent\n        appName=\"advisor\"\n        module=\"./SystemDetail\"\n        store={useStore()}\n        customItnl\n        intlProps={{\n            locale: navigator.language.slice(0, 2)\n        }}\n    />;\n};\n\nexport default AdvisorTab;\n","import React, { useContext } from 'react';\nimport { RegistryContext } from '../../store';\nimport AsyncComponent from '@redhat-cloud-services/frontend-components/AsyncComponent';\n\nconst PatchTab = () => {\n    const { getRegistry } = useContext(RegistryContext);\n\n    return <AsyncComponent\n        appName=\"patch\"\n        module=\"./SystemDetail\"\n        getRegistry={getRegistry}\n    />;\n};\n\nexport default PatchTab;\n","import React, { useContext } from 'react';\nimport { useRouteMatch } from 'react-router-dom';\nimport { RegistryContext } from '../../store';\nimport AsyncComponent from '@redhat-cloud-services/frontend-components/AsyncComponent';\n\nconst RosTab = () => {\n    const { params } = useRouteMatch('/:inventoryId');\n    const { getRegistry } = useContext(RegistryContext);\n\n    return <AsyncComponent\n        appName=\"ros\"\n        module=\"./SystemDetail\"\n        getRegistry={ getRegistry }\n        inventoryId={ params.inventoryId }\n    />;\n};\n\nexport default RosTab;\n","/* eslint-disable camelcase */\nimport { SYSTEM_ISSUE_TYPES } from './action-types';\n\nexport function advisor(state, { payload }) {\n    return {\n        ...state,\n        systemIssues: {\n            ...state?.systemIssues,\n            advisor: {\n                isLoaded: true,\n                criticalCount: payload?.filter(item => item?.total_risk >= 4)\n            }\n        }\n    };\n}\n\nexport function cve(state, { payload }) {\n    return {\n        ...state,\n        systemIssues: {\n            ...state?.systemIssues,\n            cve: {\n                isLoaded: true,\n                critical: {\n                    count: payload?.critical?.meta?.total_items || 0\n                },\n                moderate: {\n                    count: payload?.moderate?.meta?.total_items || 0\n                },\n                important: {\n                    count: payload?.important?.meta?.total_items || 0\n                },\n                low: {\n                    count: payload?.low?.meta?.total_items || 0\n                }\n            }\n        }\n    };\n}\n\nexport function patch(state, { payload }) {\n    return {\n        ...state,\n        systemIssues: {\n            ...state?.systemIssues,\n            patch: {\n                isLoaded: true,\n                bug: {\n                    count: payload?.data?.attributes?.rhba_count || 0\n                },\n                enhancement: {\n                    count: payload?.data?.attributes?.rhea_count || 0\n                },\n                security: {\n                    count: payload?.data?.attributes?.rhsa_count || 0\n                }\n            }\n        }\n    };\n}\n\nexport function compliance(state, { payload }) {\n    return {\n        ...state,\n        systemIssues: {\n            ...state?.systemIssues,\n            compliance: {\n                isLoaded: true,\n                profiles: payload?.data?.system?.profiles\n            }\n        }\n    };\n}\n\nexport function isPending(state, type) {\n    return {\n        ...state,\n        systemIssues: {\n            ...state?.systemIssues,\n            ...type && { [type]: { isLoaded: false } }\n        }\n    };\n}\n\nexport default {\n    [SYSTEM_ISSUE_TYPES.LOAD_ADVISOR_RECOMMENDATIONS_PENDING]: (state) => isPending(state, 'advisor'),\n    [SYSTEM_ISSUE_TYPES.LOAD_APPLICABLE_CVES_PENDING]: (state) => isPending(state, 'cve'),\n    [SYSTEM_ISSUE_TYPES.LOAD_APPLICABLE_ADVISORIES_PENDING]: (state) => isPending(state, 'patch'),\n    [SYSTEM_ISSUE_TYPES.LOAD_COMPLIANCE_POLICIES_PENDING]: (state) => isPending(state, 'compliance'),\n    [SYSTEM_ISSUE_TYPES.LOAD_ADVISOR_RECOMMENDATIONS_FULFILLED]: advisor,\n    [SYSTEM_ISSUE_TYPES.LOAD_APPLICABLE_CVES_FULFILLED]: cve,\n    [SYSTEM_ISSUE_TYPES.LOAD_APPLICABLE_ADVISORIES_FULFILLED]: patch,\n    [SYSTEM_ISSUE_TYPES.LOAD_COMPLIANCE_POLICIES_FULFILLED]: compliance\n};\n","import { ACTION_TYPES, APPLICATION_SELECTED, TOGGLE_TAG_MODAL, TOGGLE_DRAWER } from './action-types';\nimport { showTags, toggleTagModalReducer } from './entities';\nimport systemIssuesReducer from './systemIssues';\nexport const entityDefaultState = { loaded: false };\n\nfunction entityDetailPending(state) {\n    return {\n        ...state,\n        loaded: false\n    };\n}\n\nfunction entityDetailLoaded(state, { payload }) {\n    return {\n        ...state,\n        loaded: true,\n        entity: payload.results[0]\n    };\n}\n\nfunction onApplicationSelected(state, { payload }) {\n    return {\n        ...state,\n        activeApp: payload\n    };\n}\n\nfunction toggleDrawer(state, { payload }) {\n    return  {\n        ...state,\n        isToggleOpened: payload?.isOpened\n    };\n}\n\nfunction showTagsPending(state) {\n    return {\n        ...state,\n        tagModalLoaded: false\n    };\n}\n\nfunction updateAnsibleName(state, { meta }, useOrigValue) {\n    const value = useOrigValue ? meta?.origValue : meta?.value;\n    return {\n        ...state,\n        ...state.rows && {\n            rows: state.rows.map((row) => row.id === meta?.id ? ({\n                ...row,\n                // eslint-disable-next-line camelcase\n                ansible_host: value\n            }) : row)\n        },\n        ...state.entity && {\n            entity: {\n                ...state.entity,\n                // eslint-disable-next-line camelcase\n                ansible_host: value\n            }\n        }\n    };\n}\n\nexport function updateEntity(state, { meta }, useOrigValue) {\n    const value = useOrigValue ? meta?.origValue : meta?.value;\n    return {\n        ...state,\n        ...state.rows && {\n            rows: state.rows.map((row) => row.id === meta?.id ? ({\n                ...row,\n                // eslint-disable-next-line camelcase\n                display_name: value\n            }) : row)\n        },\n        ...state.entity && {\n            entity: {\n                ...state.entity,\n                // eslint-disable-next-line camelcase\n                display_name: value\n            }\n        }\n    };\n}\n\nexport default {\n    [ACTION_TYPES.LOAD_ENTITIES_PENDING]: () => entityDefaultState,\n    [ACTION_TYPES.LOAD_ENTITY_PENDING]: entityDetailPending,\n    [ACTION_TYPES.LOAD_ENTITY_FULFILLED]: entityDetailLoaded,\n    [APPLICATION_SELECTED]: onApplicationSelected,\n    [ACTION_TYPES.LOAD_TAGS]: showTags,\n    [ACTION_TYPES.LOAD_TAGS_PENDING]: showTagsPending,\n    [ACTION_TYPES.LOAD_TAGS_FULFILLED]: showTags,\n    [TOGGLE_TAG_MODAL]: toggleTagModalReducer,\n    [TOGGLE_DRAWER]: toggleDrawer,\n    [ACTION_TYPES.UPDATE_DISPLAY_NAME_PENDING]: updateEntity,\n    [ACTION_TYPES.SET_ANSIBLE_HOST_PENDING]: updateAnsibleName,\n    [ACTION_TYPES.UPDATE_DISPLAY_NAME_ERROR]: (state, payload) => updateEntity(state, payload, true),\n    [ACTION_TYPES.SET_ANSIBLE_HOST_ERROR]: (state, payload) => updateAnsibleName(state, payload, true),\n    ...systemIssuesReducer\n};\n","import {\n    INVENTORY_ACTION_TYPES,\n    ACTION_TYPES,\n    SELECT_ENTITY,\n    SET_INVENTORY_FILTER,\n    SET_PAGINATION\n} from './action-types';\nimport systemProfileStore from './systemProfileStore';\nimport {\n    ComplianceTab,\n    VulnerabilityTab,\n    AdvisorTab,\n    GeneralInformationTab,\n    PatchTab,\n    RosTab\n} from '../components/SystemDetails';\nimport { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport { mergeArraysByKey } from '@redhat-cloud-services/frontend-components-utilities/helpers';\nimport { notificationsReducer } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport entitiesReducer, { defaultState as entitiesDefault } from './entities';\nimport entityDetailsReducer, { entityDefaultState as entityDefault, updateEntity } from './entityDetails';\n\nexport { entitiesReducer, entityDetailsReducer };\n\nconst defaultState = { loaded: false, selected: new Map() };\n\nfunction entitiesLoaded(state, { payload }) {\n    return {\n        ...state,\n        rows: mergeArraysByKey([state.rows, payload.results]),\n        entities: mergeArraysByKey([state.entities, payload.results])\n    };\n}\n\nfunction entityLoaded(state) {\n    return {\n        ...state,\n        loaded: true,\n        activeApps: [\n            { title: 'General information', name: 'general_information', component: GeneralInformationTab },\n            { title: 'Advisor', name: 'advisor', component: AdvisorTab },\n            {\n                title: 'Vulnerability',\n                name: 'vulnerabilities',\n                component: VulnerabilityTab\n            },\n            {\n                title: 'Compliance',\n                name: 'compliance',\n                component: ComplianceTab\n            },\n            {\n                title: 'Patch',\n                name: 'patch',\n                component: PatchTab\n            },\n            {\n                title: 'Resource Optimization',\n                name: 'ros',\n                isVisible: false,\n                component: RosTab\n            }\n        ].filter(Boolean)\n    };\n}\n\nfunction entitySelected(state, { payload }) {\n    const selected = state.selected || (new Map());\n    if (payload.selected) {\n        if (payload.id === 0) {\n            state.rows.forEach(row => selected.set(row.id, row));\n        } else {\n            const selectedRow = state.rows && state.rows.find(({ id }) => id === payload.id);\n            selected.set(payload.id, { ...selectedRow || {}, id: payload.id });\n        }\n    } else {\n        if (payload.id === 0) {\n            state.rows.forEach(row => selected.delete(row.id));\n        } else if (payload.id === -1) {\n            selected.clear();\n        } else {\n            selected.delete(payload.id);\n        }\n    }\n\n    return {\n        ...state,\n        selected: new Map(selected)\n    };\n}\n\nfunction resourceOptTabVisibility(state, { payload }) {\n    return {\n        ...state,\n        activeApps: state.activeApps?.map((entity) => entity.name === 'ros' ? ({\n            ...entity,\n            isVisible: payload\n        }) : entity\n        )\n    };\n}\n\nfunction entityDeleted(state, { meta }) {\n    const selected = state.selected || (new Map());\n    meta.systems.forEach(id => selected.delete(id));\n\n    return {\n        ...state,\n        selected: new Map(selected)\n    };\n}\n\nfunction onEntitiesLoaded(state, { payload, meta }) {\n    if (meta?.lastDateRequest < state?.lastDateRequest) {\n        return state;\n    }\n\n    return {\n        ...state,\n        rows: mergeArraysByKey([state.rows, payload.results.map(result => {\n            return {\n                ...result,\n                selected: state.selected && state.selected.has(result.id)\n            };\n        })])\n    };\n}\n\nfunction onSetFilter(state, { payload }) {\n    return {\n        ...state,\n        activeFilters: payload.filtersList\n    };\n}\n\nfunction onSetPagination(state, { payload }) {\n    const perPage = parseInt(payload.perPage, 10);\n    const page = parseInt(payload.page, 10);\n    return {\n        ...state,\n        perPage: isNaN(perPage) ? 50 : perPage,\n        page: isNaN(page) ? 1 : page\n    };\n}\n\nlet reducers = {\n    notifications: notificationsReducer,\n    systemProfileStore\n};\n\nexport const tableReducer = applyReducerHash(\n    {\n        [ACTION_TYPES.GET_ENTITIES_FULFILLED]: entitiesLoaded,\n        [INVENTORY_ACTION_TYPES.LOAD_ENTITIES_FULFILLED]: onEntitiesLoaded,\n        [`${ACTION_TYPES.REMOVE_ENTITY}_FULFILLED`]: entityDeleted,\n        [SELECT_ENTITY]: entitySelected,\n        FILTER_SELECT: (state) => ({ ...state, selected: {} }),\n        [SET_INVENTORY_FILTER]: onSetFilter,\n        [SET_PAGINATION]: onSetPagination,\n        [ACTION_TYPES.UPDATE_DISPLAY_NAME_FULFILLED]: updateEntity\n    },\n    defaultState\n);\n\nexport const entitesDetailReducer = () => applyReducerHash(\n    {\n        [INVENTORY_ACTION_TYPES.LOAD_ENTITY_FULFILLED]: entityLoaded,\n        [INVENTORY_ACTION_TYPES.LOAD_SYSTEM_PROFILE_FULFILLED]: resourceOptTabVisibility\n    },\n    defaultState\n);\n\nexport function mergeWithEntities(additionalReducers = (state) => state, defaultState = {}) {\n    return ({\n        entities: (state, payload) => ({\n            ...additionalReducers({\n                ...applyReducerHash({\n                    ...entitiesReducer\n                }, { ...entitiesDefault, ...defaultState })(state, payload)\n            }, payload)\n        })\n    });\n}\n\nexport function mergeWithDetail(additionalReducers = (state) => state, defaultState = {}) {\n    return ({\n        entityDetails: (state, payload) => ({\n            ...additionalReducers({\n                ...applyReducerHash({\n                    ...entityDetailsReducer\n                }, { ...entityDefault, ...defaultState })(state, payload)\n            }, payload)\n        })\n    });\n}\n\nexport default reducers;\n"],"names":["DeleteModal","systemToRemove","handleModalToggle","isModalOpen","currentSytems","onConfirm","systemLabel","Array","isArray","length","display_name","variant","title","className","ouiaId","isOpen","onClose","appendTo","document","getElementsByClassName","body","hasGutter","size","isFilled","location","host","onClick","ActiveSystemProp","PropTypes","id","displayName","propTypes","defaultProps","maxWidth","content","OperatingSystemFormatter","operatingSystem","name","version","major","minor","TagWithDialog","count","loadTags","systemId","e","stopPropagation","onTagClick","connect","dispatch","toggleTagModal","undefined","TagsModal","filterTagsBy","onToggleModal","onApply","getTags","useDispatch","useState","filterBy","setFilterBy","selected","setSelected","perPage","page","statePagination","setStatePagination","showTagDialog","useSelector","entities","entityDetails","pagination","activeSystemTag","entity","allTagsPagination","shallowEqual","loaded","tagModalLoaded","tags","activeTags","filter","tag","Object","values","some","val","includes","slice","allTags","reduce","acc","flatten","map","tagsCount","allTagsTotal","useEffect","fetchTags","fetchAllTags","debouncedFetch","useCallback","debounce","tableProps","canSelectAll","rows","key","value","namespace","find","cells","width","toggleModal","filters","label","placeholder","filterValues","onChange","_e","onUpdateData","columns","transforms","cellWidth","onSelect","bulkSelect","customFilters","RenderWrapper","Component","cmp","isRbacEnabled","inventoryRef","store","props","hasAccess","usePermissionsWithContext","ref","customRender","TEXT_FILTER","TEXTUAL_CHIP","TAG_CHIP","STALE_CHIP","REGISTERED_CHIP","OS_CHIP","staleness","registered","idName","idValue","InventoryContext","createContext","defaultFilters","staleFilter","filterToGroup","valuesKey","accGroup","group","curr","isSelected","item","meta","tagKey","arrayToSelection","reduceFilters","oneFilter","textFilter","tagFilters","foundKey","keys","loadSystems","options","showTags","getEntities","limitedItems","items","per_page","config","hasItems","sortBy","orderDirection","direction","toUpperCase","activeFilters","orderBy","itemsPage","loadEntities","reloadWrapper","event","callback","payload","then","data","isEmpty","check","generateFilter","status","source","tagsFilter","filterbyName","registeredWithFilter","osFilter","Boolean","useWritePermissions","INVENTORY_WRITE_PERMISSIONS","useGetRegistry","useContext","RegistryContext","getRegistry","allStaleFilters","subtractWeeks","numOfWeeks","date","Date","setDate","getDate","verifyCollectorStaleness","reporterStaleness","stalenessDate","stale_timestamp","currentDateTime","twoWeeksPeriod","oneWeeksPeriod","verifyCulledInsightsClient","perReporterStaleness","puptoo","INVENTORY_API_BASE","hosts","HostsApi","instance","TagsApi","systemProfile","SystemProfileApi","getEntitySystemProfile","apiHostGetHostSystemProfileById","mapData","facts","rawFacts","flatMap","oneFact","os_release","release","fqdn","mapTags","results","apiHostGetHostTags","row","catch","constructTags","category","tagValue","calculateSystemProfile","osFilterValues","majorOsVersion","operating_system","RHEL","eq","system_profile","filtersReducer","hostnameOrId","controller","fields","apiHostGetHostById","cancelToken","token","query","result","mergeArraysByKey","console","error","apiHostGetHostList","search","getAllTags","apiTagGetTags","getOperatingSystems","params","apiSystemProfileGetOperatingSystem","systemIssuesInstance","cves","Promise","all","impact","low","moderate","important","critical","patch","advisor","compliance","operationName","variables","InnerButton","link","href","window","permissionsCache","EditButtonUnknownPermissions","EditButtonWrapper","writePermissions","insights","chrome","isProd","InfoTable","index","SortByDirection","opened","expandable","onSort","setState","_event","state","restFilter","deleteAll","deleted","onDeleteFilter","this","collapsibleProps","onCollapse","activeRows","filterRows","mappedRows","prepareRows","child","parent","Fragment","PrimaryToolbar","itemCount","onSetPage","onUpdatePagination","onPerPageSelect","filterConfig","generateFilters","setFilter","activeFiltersConfig","chips","onDelete","Table","TableVariant","TableHeader","TableBody","TextContent","Text","component","TextVariants","TableToolbar","isFooter","Pagination","type","valueToText","singular","plural","Clickable","target","preventDefault","split","LoadingCard","isLoading","children","modalId","useParams","Stack","StackItem","TextList","TextListVariants","TextListItem","T","TextListItemVariants","Skeleton","SkeletonSize","SystemStatusCardCore","detailLoaded","hasState","hasRegistered","hasLastCheckIn","hasRHC","systemStatus","stale","DateFormat","created","updated","rhc_client_id","handleClick","SystemStatusCard","systemProfileStore","TextInputModal","onCancel","onSubmit","ariaLabel","modalOuiaId","cancelOuiaId","confirmOuiaId","inputOuiaId","Modal","actions","Button","TextInput","noDetail","widget","pathname","substr","rowClick","onRowClick","isMetaKey","ctrlKey","metaKey","which","tagsMapper","keyValue","currTagKey","findIndex","currTag","push","isDate","isNaN","parse","every","rowValue","sortValue","toLocaleLowerCase","indexOf","activeKey","activeLabel","String","newFilter","workingItem","filtersRest","newValue","extraShape","makeActions","asyncActions","asyncInventory","systemIssues","ACTION_TYPES","keyBy","k","INVENTORY_ACTION_TYPES","SYSTEM_ISSUE_TYPES","CLEAR_NOTIFICATIONS","SELECT_ENTITY","SET_INVENTORY_FILTER","SET_PAGINATION","SET_DISPLAY_NAME","SET_ANSIBLE_HOST","UPDATE_ENTITIES","CHANGE_SORT","FILTER_ENTITIES","APPLICATION_SELECTED","SHOW_ENTITIES","FILTER_SELECT","ENTITIES_LOADING","CLEAR_FILTERS","TOGGLE_TAG_MODAL","CONFIG_CHANGED","TOGGLE_DRAWER","getAdvisorData","getVulnData","getPatchData","getComplianceData","deleteEntity","systems","notifications","fulfilled","description","dismissable","filtersList","clearNotifications","editDisplayName","origValue","setPagination","itemId","editAnsibleHost","ansible_host","defaultState","tagsLoaded","allTagsLoaded","operatingSystems","operatingSystemsLoaded","invConfig","defaultColumns","sortKey","renderFunc","TitleColumn","isStatic","dataLabel","_id","culled","culled_timestamp","staleWarn","stale_warning_timestamp","per_reporter_staleness","CullingInformation","staleWarning","render","msg","extraTitle","toLocaleString","entitiesLoaded","total","lastDateRequest","loadingRejected","toggleTagModalReducer","lastDateRequestTags","entries","groupBy","additionalTagsCount","entry","versionStringified","action","active","lastIndexOf","splice","forEach","subItem","concat","middlewareListener","init","MiddlewareListener","middleware","ReducerRegistry","getMiddleware","promise","notificationsMiddleware","errorDescriptionKey","useRouteMatch","AsyncComponent","appName","module","useStore","customItnl","intlProps","locale","navigator","language","inventoryId","remediationsEnabled","customItnlProvider","isPending","isLoaded","criticalCount","total_risk","cve","total_items","bug","attributes","rhba_count","enhancement","rhea_count","security","rhsa_count","profiles","system","entityDefaultState","updateAnsibleName","useOrigValue","updateEntity","activeApp","isToggleOpened","isOpened","systemIssuesReducer","Map","entityLoaded","activeApps","GeneralInformationTab","AdvisorTab","VulnerabilityTab","ComplianceTab","PatchTab","isVisible","RosTab","resourceOptTabVisibility","reducers","notificationsReducer","tableReducer","applyReducerHash","has","delete","set","selectedRow","clear","parseInt","entitesDetailReducer","mergeWithEntities","additionalReducers","entitiesReducer","entitiesDefault","mergeWithDetail","entityDetailsReducer","entityDefault"],"sourceRoot":""}