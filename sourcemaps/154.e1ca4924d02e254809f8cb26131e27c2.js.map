{"version":3,"file":"js/154.86d1c776b67eb33423eb.js","mappings":"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","sources":["webpack:///./src/components/InventoryDetailDrawer/BasicInfo.js","webpack:///./src/components/InventoryDetailDrawer/SystemIssues.js","webpack:///./src/components/InventoryDetail/DetailWrapper.js","webpack:///./src/modules/AsyncInventory.js","webpack:///./src/store/reducers.js","webpack:///./src/store/systemProfileStore.js"],"sourcesContent":["/* eslint-disable react/display-name */\n/* eslint-disable camelcase */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Chip,\n  ChipGroup,\n  Split,\n  SplitItem,\n  Stack,\n  StackItem,\n  Title,\n} from '@patternfly/react-core';\nimport { useSelector } from 'react-redux';\n\nconst BasicInfo = ({ hideInvLink, showTags }) => {\n  const displayName = useSelector(\n    ({ entityDetails: { entity } }) => entity?.display_name\n  );\n  const systemId = useSelector(({ entityDetails: { entity } }) => entity?.id);\n  const tags = useSelector(({ entityDetails: { entity } }) => entity?.tags);\n  return (\n    <Stack hasGutter>\n      <StackItem>\n        <Split>\n          <SplitItem isFilled>\n            <Title headingLevel=\"h3\" size=\"xl\">\n              {displayName}\n            </Title>\n          </SplitItem>\n          {!hideInvLink && (\n            <SplitItem>\n              <a\n                className=\"ins-c-entity-detail__inv-link\"\n                href={`./insights/inventory/${systemId}`}\n              >\n                Open in Inventory\n              </a>\n            </SplitItem>\n          )}\n        </Split>\n      </StackItem>\n      {showTags && (\n        <StackItem>\n          <Split hasGutter>\n            <SplitItem>Tags:</SplitItem>\n            <SplitItem>\n              <ChipGroup>\n                {tags?.length !== 0\n                  ? tags?.map((item, key) => (\n                      <Chip key={key} isReadOnly>\n                        {item?.namespace && `${item?.namespace}/`}\n                        {item?.key}\n                        {item?.value && `=${item?.value}`}\n                      </Chip>\n                    ))\n                  : 'No tags'}\n              </ChipGroup>\n            </SplitItem>\n          </Split>\n        </StackItem>\n      )}\n    </Stack>\n  );\n};\n\nBasicInfo.propTypes = {\n  hideInvLink: PropTypes.bool,\n  showTags: PropTypes.bool,\n};\n\nBasicInfo.defaultProps = {\n  hideInvLink: false,\n  showTags: false,\n};\n\nexport default BasicInfo;\n","/* eslint-disable react/prop-types */\n/* eslint-disable react/display-name */\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  getAdvisorData,\n  getComplianceData,\n  getPatchData,\n  getVulnData,\n} from '../../store/actions';\nimport {\n  Level,\n  LevelItem,\n  Stack,\n  StackItem,\n  Title,\n} from '@patternfly/react-core';\nimport {\n  Skeleton,\n  SkeletonSize,\n} from '@redhat-cloud-services/frontend-components/Skeleton';\nimport BugIcon from '@patternfly/react-icons/dist/js/icons/bug-icon';\nimport EnhancementIcon from '@patternfly/react-icons/dist/js/icons/enhancement-icon';\nimport SecurityIcon from '@patternfly/react-icons/dist/js/icons/security-icon';\n\nconst SystemIssues = ({ isOpened }) => {\n  const dispatch = useDispatch();\n  const systemId = useSelector(({ entityDetails: { entity } }) => entity?.id);\n  const advisor = useSelector(\n    ({ entityDetails: { systemIssues } }) => systemIssues?.advisor\n  );\n  const compliance = useSelector(\n    ({ entityDetails: { systemIssues } }) => systemIssues?.compliance\n  );\n  const cve = useSelector(\n    ({ entityDetails: { systemIssues } }) => systemIssues?.cve\n  );\n  const patch = useSelector(\n    ({ entityDetails: { systemIssues } }) => systemIssues?.patch\n  );\n  useEffect(() => {\n    if (systemId && isOpened) {\n      dispatch(getAdvisorData(systemId));\n      dispatch(getComplianceData(systemId));\n      dispatch(getPatchData(systemId));\n      dispatch(getVulnData(systemId));\n    }\n  }, [systemId, isOpened]);\n\n  return (\n    <Stack hasGutter className=\"ins-c-inventory__drawer-system-issues\">\n      <StackItem>\n        <Title headingLevel=\"h4\" size=\"lg\">\n          Top system issues\n        </Title>\n      </StackItem>\n      <StackItem>\n        <Level>\n          <LevelItem>\n            <Stack hasGutter>\n              <StackItem className=\"ins-c-inventory__drawer--title\">\n                Applicable CVEs\n              </StackItem>\n              <StackItem>\n                {cve?.isLoaded ? (\n                  <Level hasGutter className=\"ins-c-inventory__drawer-cve\">\n                    <LevelItem className=\"ins-m-critical\">\n                      <a\n                        href={`/insights/vulnerability/systems/${systemId}?impact=7`}\n                      >\n                        {cve?.critical?.count || 0} critical\n                      </a>\n                    </LevelItem>\n                    <LevelItem className=\"ins-m-important\">\n                      <a\n                        href={`/insights/vulnerability/systems/${systemId}?impact=5`}\n                      >\n                        {cve?.important?.count || 0} important\n                      </a>\n                    </LevelItem>\n                    <LevelItem className=\"ins-m-moderate\">\n                      <a\n                        href={`/insights/vulnerability/systems/${systemId}?impact=4`}\n                      >\n                        {cve?.moderate?.count || 0} moderate\n                      </a>\n                    </LevelItem>\n                    <LevelItem className=\"ins-m-low\">\n                      <a\n                        href={`/insights/vulnerability/systems/${systemId}?impact=2`}\n                      >\n                        {cve?.low?.count || 0} low\n                      </a>\n                    </LevelItem>\n                  </Level>\n                ) : (\n                  <Skeleton size={SkeletonSize.md} />\n                )}\n              </StackItem>\n            </Stack>\n          </LevelItem>\n          <LevelItem>\n            <Stack hasGutter>\n              <StackItem className=\"ins-c-inventory__drawer--title\">\n                Applicable advisories\n              </StackItem>\n              <StackItem>\n                {patch?.isLoaded ? (\n                  <Level hasGutter className=\"ins-c-inventory__drawer-patch\">\n                    <LevelItem>\n                      <a\n                        href={`/insights/patch/systems/${systemId}/?advisory_type=2`}\n                      >\n                        <BugIcon /> {patch?.bug?.count}\n                      </a>\n                    </LevelItem>\n                    <LevelItem className=\"ins-m-moderate\">\n                      <a\n                        href={`/insights/patch/systems/${systemId}/?advisory_type=3`}\n                      >\n                        <SecurityIcon /> {patch?.security?.count}\n                      </a>\n                    </LevelItem>\n                    <LevelItem>\n                      <a\n                        href={`/insights/patch/systems/${systemId}/?advisory_type=1`}\n                      >\n                        <EnhancementIcon /> {patch?.enhancement?.count}\n                      </a>\n                    </LevelItem>\n                  </Level>\n                ) : (\n                  <Skeleton size={SkeletonSize.md} />\n                )}\n              </StackItem>\n            </Stack>\n          </LevelItem>\n        </Level>\n      </StackItem>\n      <StackItem>\n        {advisor?.isLoaded ? (\n          <span>\n            <span className=\"ins-m-critical\">\n              {advisor?.criticalCount?.length || 0} critical\n            </span>{' '}\n            recommendations in{' '}\n            <a href={`./insights/advisor/systems/${systemId}`}>Advisor</a>\n          </span>\n        ) : (\n          <Skeleton size={SkeletonSize.md} />\n        )}\n      </StackItem>\n      {compliance?.isLoaded ? (\n        compliance?.profiles && (\n          <span>\n            System above compliance threshold for{' '}\n            <a href={'./insights/compliance/reports/'}>\n              {compliance?.profiles?.length}{' '}\n              {compliance?.profiles?.length > 1 ? 'policies' : 'policy'}\n            </a>\n          </span>\n        )\n      ) : (\n        <Skeleton size={SkeletonSize.md} />\n      )}\n    </Stack>\n  );\n};\n\nSystemIssues.propTypes = {\n  isOpened: PropTypes.bool,\n};\n\nexport default SystemIssues;\n","import React, { useEffect } from 'react';\nimport {\n  Drawer,\n  DrawerActions,\n  DrawerCloseButton,\n  DrawerContent,\n  DrawerContentBody,\n  DrawerHead,\n  DrawerPanelBody,\n  DrawerPanelContent,\n  Stack,\n  StackItem,\n} from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector, useStore } from 'react-redux';\nimport { loadEntity, toggleDrawer } from '../../store/actions';\nimport { BasicInfo, SystemIssues } from '../InventoryDetailDrawer';\nimport FactsInfo from './FactsInfo';\n\nconst DetailWrapper = ({\n  children,\n  hideInvLink,\n  showTags,\n  Wrapper,\n  className,\n  appName,\n  inventoryId,\n  ...props\n}) => {\n  const dispatch = useDispatch();\n  const store = useStore();\n  const entity = useSelector(({ entityDetails }) => entityDetails?.entity);\n  const isExpanded = useSelector(\n    ({ entityDetails }) => entityDetails?.isToggleOpened\n  );\n  const loaded = useSelector(({ entityDetails }) => entityDetails?.loaded);\n\n  useEffect(() => {\n    if ((inventoryId && !entity) || !(entity?.id === inventoryId)) {\n      dispatch(loadEntity(inventoryId, { hasItems: true }, { showTags }));\n    }\n  }, [entity, inventoryId]);\n\n  return (\n    <Drawer\n      className={`ins-c-inventory__drawer ${className || ''}`}\n      isExpanded={isExpanded}\n      onExpand={() => dispatch(toggleDrawer(true))}\n      {...props}\n    >\n      <DrawerContent\n        panelContent={\n          <DrawerPanelContent>\n            <DrawerHead>\n              <BasicInfo hideInvLink={hideInvLink} showTags={showTags} />\n              <DrawerActions>\n                <DrawerCloseButton\n                  onClick={() => dispatch(toggleDrawer(false))}\n                />\n              </DrawerActions>\n            </DrawerHead>\n            <DrawerPanelBody>\n              <Stack className=\"ins-c-inventory__drawer--content\">\n                <StackItem>\n                  <SystemIssues isOpened={isExpanded} />\n                </StackItem>\n                <StackItem isFilled className=\"ins-c-inventory__drawer--facts\">\n                  <FactsInfo entity={entity} loaded={loaded} />\n                  {isExpanded && loaded && Wrapper && (\n                    <Wrapper store={store} appName={appName} />\n                  )}\n                </StackItem>\n              </Stack>\n            </DrawerPanelBody>\n          </DrawerPanelContent>\n        }\n      >\n        <DrawerContentBody>{children}</DrawerContentBody>\n      </DrawerContent>\n    </Drawer>\n  );\n};\n\nDetailWrapper.propTypes = {\n  children: PropTypes.any,\n  hideInvLink: PropTypes.bool,\n  showTags: PropTypes.bool,\n  appName: PropTypes.oneOf([\n    'general_information',\n    'advisor',\n    'insights',\n    'compliance',\n    'vulnerabilities',\n    'patch',\n  ]),\n  className: PropTypes.string,\n  Wrapper: PropTypes.elementType,\n  inventoryId: PropTypes.string.isRequired,\n};\n\nDetailWrapper.defaultProps = {\n  appName: 'general_information',\n};\n\nexport default DetailWrapper;\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Provider } from 'react-redux';\nimport { RBACProvider } from '@redhat-cloud-services/frontend-components/RBACProvider';\n\nimport * as storeMod from '../store/redux';\nimport * as utils from '../Utilities/index';\nimport * as apiMod from '../api/index';\nimport RenderWrapper from '../Utilities/Wrapper';\nconst { mergeWithDetail, ...rest } = storeMod;\n\nconst AsyncInventory = ({ component, onLoad, store, innerRef, ...props }) => {\n  useEffect(() => {\n    onLoad?.({\n      ...rest,\n      ...utils,\n      api: apiMod,\n      mergeWithDetail,\n    });\n  }, []);\n\n  return (\n    <RBACProvider appName=\"inventory\" checkResourceDefinitions>\n      <Provider store={store}>\n        <RenderWrapper\n          {...props}\n          isRbacEnabled\n          inventoryRef={innerRef}\n          store={store}\n          cmp={component}\n        />\n      </Provider>\n    </RBACProvider>\n  );\n};\n\nAsyncInventory.propTypes = {\n  store: PropTypes.object,\n  onLoad: PropTypes.func,\n  component: PropTypes.elementType.isRequired,\n  history: PropTypes.object,\n  innerRef: PropTypes.shape({\n    current: PropTypes.any,\n  }),\n};\n\nAsyncInventory.defaultProps = {\n  onLoad: () => undefined,\n};\n\nexport default AsyncInventory;\n","import {\n  ACTION_TYPES,\n  INVENTORY_ACTION_TYPES,\n  SELECT_ENTITY,\n  SET_INVENTORY_FILTER,\n  SET_PAGINATION,\n} from './action-types';\nimport systemProfileStore from './systemProfileStore';\nimport { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport { mergeArraysByKey } from '@redhat-cloud-services/frontend-components-utilities/helpers';\nimport { notificationsReducer } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport entitiesReducer, { defaultState as entitiesDefault } from './entities';\nimport entityDetailsReducer, {\n  entityDefaultState as entityDefault,\n  updateEntity,\n} from './entityDetails';\nimport groups from './groups';\nimport groupDetail from './groupDetail';\n\nexport { entitiesReducer, entityDetailsReducer };\n\nconst defaultState = { loaded: false, selected: new Map() };\n\nfunction entitiesLoaded(state, { payload }) {\n  return {\n    ...state,\n    rows: mergeArraysByKey([state.rows, payload.results]),\n    entities: mergeArraysByKey([state.entities, payload.results]),\n  };\n}\n\nfunction entityLoaded(state) {\n  return {\n    ...state,\n    loaded: true,\n  };\n}\n\nfunction entitySelected(state, { payload }) {\n  const selected = state.selected || new Map();\n  if (payload.selected) {\n    if (Array.isArray(payload.id)) {\n      payload.id.forEach((item) => {\n        selected.set(item.id, item);\n      });\n    } else if (payload.id === 0) {\n      state.rows.forEach((row) => selected.set(row.id, row));\n    } else {\n      const selectedRow =\n        state.rows && state.rows.find(({ id }) => id === payload.id);\n      selected.set(payload.id, { ...(selectedRow || {}), id: payload.id });\n    }\n  } else {\n    if (payload.id === 0) {\n      state.rows.forEach((row) => selected.delete(row.id));\n    } else if (payload.id === -1) {\n      selected.clear();\n    } else {\n      selected.delete(payload.id);\n    }\n  }\n\n  return {\n    ...state,\n    selected: new Map(selected),\n  };\n}\n\nfunction entityDeleted(state, { meta }) {\n  const selected = state.selected || new Map();\n  meta.systems.forEach((id) => selected.delete(id));\n\n  return {\n    ...state,\n    selected: new Map(selected),\n  };\n}\n\nfunction onEntitiesLoaded(state, { payload, meta }) {\n  if (meta?.lastDateRequest < state?.lastDateRequest) {\n    return state;\n  }\n\n  if (meta?.controller?.signal?.aborted === true) {\n    return defaultState;\n  }\n\n  return {\n    ...state,\n    rows: mergeArraysByKey([\n      state.rows,\n      payload.results.map((result) => {\n        return {\n          ...result,\n          selected: state.selected && state.selected.has(result.id),\n        };\n      }),\n    ]),\n  };\n}\n\nfunction onSetFilter(state, { payload }) {\n  return {\n    ...state,\n    activeFilters: payload.filtersList,\n  };\n}\n\nfunction onSetPagination(state, { payload }) {\n  const perPage = parseInt(payload.perPage, 10);\n  const page = parseInt(payload.page, 10);\n  return {\n    ...state,\n    perPage: isNaN(perPage) ? 50 : perPage,\n    page: isNaN(page) ? 1 : page,\n  };\n}\n\nlet reducers = {\n  notifications: notificationsReducer,\n  systemProfileStore,\n  groups,\n  groupDetail,\n};\n\nexport const tableReducer = applyReducerHash(\n  {\n    [ACTION_TYPES.GET_ENTITIES_FULFILLED]: entitiesLoaded,\n    [INVENTORY_ACTION_TYPES.LOAD_ENTITIES_FULFILLED]: onEntitiesLoaded,\n    [`${ACTION_TYPES.REMOVE_ENTITY}_FULFILLED`]: entityDeleted,\n    [SELECT_ENTITY]: entitySelected,\n    FILTER_SELECT: (state) => ({ ...state, selected: {} }),\n    [SET_INVENTORY_FILTER]: onSetFilter,\n    [SET_PAGINATION]: onSetPagination,\n    [ACTION_TYPES.UPDATE_DISPLAY_NAME_FULFILLED]: updateEntity,\n  },\n  defaultState\n);\n\nexport const entitesDetailReducer = () =>\n  applyReducerHash(\n    {\n      [INVENTORY_ACTION_TYPES.LOAD_ENTITY_FULFILLED]: entityLoaded,\n    },\n    defaultState\n  );\n\nexport function mergeWithEntities(\n  additionalReducers = (state) => state,\n  defaultState = {}\n) {\n  return {\n    entities: (state, payload) => ({\n      ...additionalReducers(\n        {\n          ...applyReducerHash(\n            {\n              ...entitiesReducer,\n            },\n            { ...entitiesDefault, ...defaultState }\n          )(state, payload),\n        },\n        payload\n      ),\n    }),\n  };\n}\n\nexport function mergeWithDetail(\n  additionalReducers = (state) => state,\n  defaultState = {}\n) {\n  return {\n    entityDetails: (state, payload) => ({\n      ...additionalReducers(\n        {\n          ...applyReducerHash(\n            {\n              ...entityDetailsReducer,\n            },\n            { ...entityDefault, ...defaultState }\n          )(state, payload),\n        },\n        payload\n      ),\n    }),\n  };\n}\n\nexport default reducers;\n","import { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport { ACTION_TYPES } from './action-types';\n\nexport const defaultState = { loaded: false };\n\nexport const sizes = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n\n// Kudos to https://stackoverflow.com/a/18650828/2560321\nexport const formatBytes = (bytes) => {\n  if (bytes === 0 || isNaN(Number(bytes))) {\n    return '0 B';\n  }\n\n  const index = Math.floor(Math.log(bytes) / Math.log(1024));\n  return `${parseFloat((bytes / Math.pow(1024, index)).toFixed(2))} ${\n    sizes[index]\n  }`;\n};\n\nexport function systemProfilePending(state) {\n  return {\n    ...state,\n    systemProfile: {\n      loaded: false,\n    },\n  };\n}\n\nexport function calculateRepos(repos) {\n  return (\n    repos &&\n    repos.reduce(\n      (acc, curr) => ({\n        ...acc,\n        ...(!('enabled' in curr) || curr.enabled\n          ? {\n              enabled: [...acc.enabled, curr],\n            }\n          : {\n              disabled: [...acc.disabled, curr],\n            }),\n      }),\n      { enabled: [], disabled: [] }\n    )\n  );\n}\n\nexport function calculateInterfaces(interfaces) {\n  return (\n    interfaces &&\n    interfaces.reduce(\n      (acc, curr) => ({\n        interfaces: [...acc.interfaces, curr],\n        ipv4: [...acc.ipv4, ...(curr.ipv4_addresses || [])].filter(Boolean),\n        ipv6: [...acc.ipv6, ...(curr.ipv6_addresses || [])].filter(Boolean),\n      }),\n      { interfaces: [], ipv4: [], ipv6: [] }\n    )\n  );\n}\n\nexport function onSystemProfile(state, { payload: { results } }) {\n  const systemProfile =\n    (results && results[0] && results[0].system_profile) || {};\n  const cloudProviderObj =\n    results &&\n    results[0] &&\n    typeof results[0].system_profile.cloud_provider !== 'undefined' &&\n    results[0].system_profile.cloud_provider;\n  return {\n    ...state,\n    disabledApps: [\n      ...(cloudProviderObj === 'aws' || cloudProviderObj === 'azure'\n        ? []\n        : ['ros']),\n    ],\n    systemProfile: {\n      loaded: true,\n      ...systemProfile,\n      ramSize:\n        systemProfile.system_memory_bytes &&\n        formatBytes(systemProfile.system_memory_bytes),\n      repositories: calculateRepos(systemProfile.yum_repos),\n      network: calculateInterfaces(systemProfile.network_interfaces),\n    },\n  };\n}\n\nexport default applyReducerHash(\n  {\n    [ACTION_TYPES.LOAD_SYSTEM_PROFILE_FULFILLED]: onSystemProfile,\n    [ACTION_TYPES.LOAD_SYSTEM_PROFILE_PENDING]: systemProfilePending,\n  },\n  {\n    systemProfile: defaultState,\n  }\n);\n"],"names":["BasicInfo","_ref","hideInvLink","showTags","displayName","useSelector","_ref2","entity","entityDetails","display_name","systemId","_ref3","id","tags","_ref4","React","Stack","hasGutter","StackItem","Split","SplitItem","isFilled","Title","headingLevel","size","className","href","concat","ChipGroup","length","map","item","key","Chip","isReadOnly","namespace","value","propTypes","PropTypes","defaultProps","SystemIssues","_cve$critical","_cve$important","_cve$moderate","_cve$low","_patch$bug","_patch$security","_patch$enhancement","_advisor$criticalCoun","_compliance$profiles","_compliance$profiles2","isOpened","dispatch","useDispatch","advisor","systemIssues","compliance","cve","_ref5","patch","_ref6","useEffect","getAdvisorData","getComplianceData","getPatchData","getVulnData","Level","LevelItem","isLoaded","critical","count","important","moderate","low","Skeleton","SkeletonSize","md","BugIcon","bug","SecurityIcon","security","EnhancementIcon","enhancement","criticalCount","profiles","DetailWrapper","children","Wrapper","appName","inventoryId","props","_objectWithoutProperties","_excluded","store","useStore","isExpanded","isToggleOpened","loaded","loadEntity","hasItems","Drawer","_extends","onExpand","toggleDrawer","DrawerContent","panelContent","DrawerPanelContent","DrawerHead","DrawerActions","DrawerCloseButton","onClick","DrawerPanelBody","FactsInfo","DrawerContentBody","isRequired","mergeWithDetail","storeMod","rest","AsyncInventory","component","onLoad","innerRef","_objectSpread","utils","api","apiMod","RBACProvider","checkResourceDefinitions","Provider","RenderWrapper","isRbacEnabled","inventoryRef","cmp","history","current","defaultState","selected","Map","entityLoaded","state","reducers","notifications","notificationsReducer","systemProfileStore","groups","groupDetail","tableReducer","applyReducerHash","_applyReducerHash","_defineProperty","ACTION_TYPES","GET_ENTITIES_FULFILLED","payload","rows","mergeArraysByKey","results","entities","INVENTORY_ACTION_TYPES","LOAD_ENTITIES_FULFILLED","_meta$controller","_meta$controller$sign","meta","lastDateRequest","controller","signal","aborted","result","has","REMOVE_ENTITY","systems","forEach","delete","SELECT_ENTITY","Array","isArray","set","row","selectedRow","find","clear","SET_INVENTORY_FILTER","activeFilters","filtersList","SET_PAGINATION","_ref7","perPage","parseInt","page","isNaN","UPDATE_DISPLAY_NAME_FULFILLED","updateEntity","entitesDetailReducer","LOAD_ENTITY_FULFILLED","mergeWithEntities","additionalReducers","arguments","undefined","entitiesReducer","entitiesDefault","entityDetailsReducer","entityDefault","sizes","formatBytes","bytes","Number","index","Math","floor","log","parseFloat","pow","toFixed","systemProfilePending","systemProfile","calculateRepos","repos","reduce","acc","curr","enabled","_toConsumableArray","disabled","calculateInterfaces","interfaces","ipv4","ipv4_addresses","filter","Boolean","ipv6","ipv6_addresses","onSystemProfile","system_profile","cloudProviderObj","cloud_provider","disabledApps","ramSize","system_memory_bytes","repositories","yum_repos","network","network_interfaces","LOAD_SYSTEM_PROFILE_FULFILLED","LOAD_SYSTEM_PROFILE_PENDING"],"sourceRoot":""}