{"version":3,"file":"js/7104.1666256024941.adb6434c24a8902ae963.js","mappings":"i0BAMA,IAAMA,GAAiBC,EAAAA,EAAAA,OAAK,kBAAM,0FAC5BC,GAAkBD,EAAAA,EAAAA,OAAK,kBAAM,0FAEtBE,EAAS,CAClBC,MAAO,IACPC,OAAQ,gBACRC,gBAAiB,0BAGRC,EAAS,WAClB,IAAQC,GAAgBC,EAAAA,EAAAA,YAAWC,EAAAA,IAA3BF,aACRG,EAAAA,EAAAA,YAAU,WACNH,IAAcI,SAAd,OACOC,EAAAA,KACAC,EAAAA,EAAAA,IAAkBC,EAAAA,OAE1B,CAACP,IACJ,IAAMQ,EAAe,IAAIC,gBAAgBC,SAASC,QAElD,OACI,kBAAC,EAAAC,SAAD,CAAUC,SAAS,IACf,kBAAC,EAAAC,OAAD,KACI,kBAAC,EAAAC,MAAD,CACIC,OAAK,EACLC,KAAMtB,EAAOC,MACbsB,OAAQ,gCAAM,kBAAC1B,EAAD,CACV2B,OAAQX,EAAaY,OAAO,UAC5BC,OAAQb,EAAaY,OAAO,UAC5BE,aAAcd,EAAaY,OAAO,kBAClCG,WAAU,UAAEf,EAAaY,OAAO,eAAtB,iBAAE,EAA8B,UAAhC,iBAAE,EAAkCI,aAApC,kBAAE,WAA0C,MAAKC,cAAjD,aAAE,SAAwDC,EAAAA,GAAY,IAChFC,gBAAiBnB,EAAaY,OAAO,oBACrCQ,KAAMpB,EAAaY,OAAO,QAC1BS,QAASrB,EAAaY,OAAO,eAEjCU,UAAU,cAEd,kBAAC,EAAAf,MAAD,CAAOC,OAAK,EAACC,KAAMtB,EAAOG,gBAAiBiC,UAAWrC,EAAiBoC,UAAU,cACjF,kBAAC,EAAAf,MAAD,CAAOC,OAAK,EAACC,KAAMtB,EAAOE,OAAQkC,UAAWrC,EAAiBoC,UAAU,cACxE,kBAAC,EAAAE,SAAD,CAAUf,KAAK,IAAIgB,GAAG,U,wMC5BhCC,EAAc,SAAC,GAAiE,IAC9EC,EADeC,EAA+D,EAA/DA,kBAAmBC,EAA4C,EAA5CA,YAAaC,EAA+B,EAA/BA,cAAeC,EAAgB,EAAhBA,UAE9DC,EAAc,SAQlB,OAPIC,MAAMC,QAAQJ,IACdH,EAA0C,IAAzBG,EAAcK,OAAeL,EAAc,GAAGM,aAA9C,UAAgEN,EAAcK,OAA9E,YACjBH,EAAuC,IAAzBF,EAAcK,OAAeH,EAAc,WAEzDL,EAAiBG,EAAcM,aAG5B,kBAAC,IAAD,CACHC,QAAQ,QACRC,MAAM,wBACNC,UAAU,iCACVC,OAAO,yBACPC,OAAQZ,EACRa,QAAS,kBAAMd,GAAkB,IACjCe,SAAUC,SAASC,uBAAuB,aAAa,IAAMD,SAASE,MAEtE,kBAAC,IAAD,CAAOC,WAAS,GACZ,kBAAC,IAAD,KAAW,kBAAC,KAAD,CAAyBC,KAAK,KAAKT,UAAU,iBACxD,kBAAC,IAAD,CAAWU,UAAQ,GACf,kBAAC,IAAD,CAAOF,WAAS,GACZ,kBAAC,IAAD,KACKpB,EADL,6BAEqBzB,SAASgD,KAF9B,2DAGSlB,EAHT,sCAKA,kBAAC,IAAD,6CAC0CA,EAD1C,gCAGA,kBAAC,IAAD,KACI,kBAAC,KAAD,yCAKhB,kBAAC,IAAD,CAAOe,WAAS,GACZ,kBAAC,IAAD,KACI,kBAAC,KAAD,CACIV,QAAQ,SACRG,OAAO,2BACPW,QAASpB,GAHb,UAOA,kBAAC,KAAD,CACIM,QAAQ,OACRG,OAAO,0BACPW,QAAS,kBAAMvB,GAAkB,KAHrC,cAYVwB,EAAmBC,IAAAA,MAAgB,CACrCC,GAAID,IAAAA,OACJE,YAAaF,IAAAA,SAGjB3B,EAAY8B,UAAY,CACpB3B,YAAawB,IAAAA,KACbvB,cAAeuB,IAAAA,UAAoB,CAACD,EAAkBC,IAAAA,QAAkBD,KACxExB,kBAAmByB,IAAAA,KACnBtB,UAAWsB,IAAAA,MAGf3B,EAAY+B,aAAe,CACvB5B,aAAa,EACbC,cAAe,GACfF,kBAAmB,aACnBG,UAAW,cAGf,W,kHCjEA,QArB6B,kBACzB,kBAAC,IAAD,CACI2B,SAAS,QACTC,QACI,kBAAC,IAAD,CAAMZ,WAAS,GACX,kBAAC,IAAD,sCAGA,kBAAC,IAAD,kGAOR,0BAAMR,UAAU,gDACZ,kBAAC,KAAD,U,yFCpBNqB,EAA2B,SAAC,GAAwB,IAAtBzC,EAAsB,EAAtBA,gBAChC,GAA8B,UAA1BA,MAAAA,OAAA,EAAAA,EAAiB0C,MAAiB,CAClC,IAAMC,EAAW3C,EAAgB4C,OAAmC,OAA1B5C,EAAgB6C,OAA1C,UACV7C,EAAgB4C,MADN,YACe5C,MAAAA,OADf,EACeA,EAAiB6C,QAAW,KAE3D,OAAO,sCACGF,GAId,OAAO,+BACF3C,MAAAA,OAAA,EAAAA,EAAiB0C,OAAQ,kBAIlCD,EAAyBJ,UAAY,CACjCrC,gBAAiBkC,IAAAA,MAAgB,CAC7BQ,KAAMR,IAAAA,OACNU,MAAOV,IAAAA,OACPW,MAAOX,IAAAA,UAIf,W,0HCpBMY,EAAgB,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAUC,EAApB,EAAoBA,SAApB,OAClB,0BACIjB,QAAS,SAACkB,GAAD,OAAOA,EAAEC,mBAClB/B,UAAU,6BACV,mCAA2B6B,EAA3B,gBAEA,kBAAC,IAAD,CAAUF,MAAOA,EAAOK,WAAa,kBAAMJ,EAASC,EAAUF,QAItED,EAAcT,UAAY,CACtBU,MAAOb,IAAAA,OACPc,SAAUd,IAAAA,KACVe,SAAUf,IAAAA,QAYd,SAAemB,EAAAA,EAAAA,UAAQ,iBAAO,MATN,SAACC,GAAD,MAAe,CACnCN,SAAU,SAACC,EAAUF,GACbE,IACAK,GAASC,EAAAA,EAAAA,KAAe,IACxBD,GAASN,EAAAA,EAAAA,IAASC,OAAUO,OAAWA,EAAWT,SAK9D,CAAoDD,I,6xBCtBpD,IAAMW,EAAY,SAAC,GAKb,IAJFC,EAIE,EAJFA,aACAC,EAGE,EAHFA,cACAC,EAEE,EAFFA,QACAC,EACE,EADFA,QAEMP,GAAWQ,EAAAA,EAAAA,eACjB,GAAgCC,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACA,GAA8CJ,EAAAA,EAAAA,UAAS,CACnD7D,QAAS,GACTD,KAAM,IAFV,eAAOmE,EAAP,KAAwBC,EAAxB,KAKMC,GAAgBC,EAAAA,EAAAA,cAAY,kBAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,cAAb,iBAAkCD,GAAYC,SAA9C,aAAiC,EAA6BH,iBAE1FI,GAAaH,EAAAA,EAAAA,cAAY,YAAiC,IAA9BC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,cACxC,OAAID,MAAAA,GAAAA,EAAUG,iBAAmBF,MAAAA,GAAAA,EAAeG,OACrCR,GAGJI,MAAAA,OAAA,EAAAA,EAAUK,oBAAqBT,IACvCU,EAAAA,cAEGC,GAASR,EAAAA,EAAAA,cAAY,gBAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,cAAb,OAAiCD,MAAAA,OAAA,EAAAA,EAAUQ,kBAAkBP,MAAAA,OAA5B,EAA4BA,EAAeO,mBAEjGL,GAAkBJ,EAAAA,EAAAA,cAAY,gBAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,cAAb,OAAiCD,MAAAA,OAAA,EAAAA,EAAUG,mBAAmBF,MAAAA,OAA7B,EAA6BA,EAAeG,WAC3GK,GAAOV,EAAAA,EAAAA,cAAY,YAAiC,UAA9BC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,cAC5BS,GAAaV,MAAAA,GAAA,UAAAA,EAAUG,uBAAV,eAA2BM,QAAQR,MAAAA,GAAnC,UAAmCA,EAAeG,cAAlD,aAAmC,EAAuBK,MAC7E,OAAIC,EACOA,MAAAA,OAAP,EAAOA,EAAYC,QACf,SAACC,GAAD,OAASC,OAAOC,OAAOF,GAAKG,MAAK,SAACC,GAAD,OAASA,MAAAA,OAAT,EAASA,EAAKC,SAASzB,SAC1D0B,OAAMtB,MAAAA,OAAA,EAAAA,EAAiBlE,WAAWkE,MAAAA,OAAA,EAAAA,EAAiBnE,MAAO,IAAImE,MAAAA,OAAA,EAAAA,EAAiBlE,UAAUkE,MAAAA,OAA3B,EAA2BA,EAAiBnE,OAGzGuE,MAAAA,GAAP,UAAOA,EAAUmB,eAAjB,aAAO,EAAmB7F,QAAO,SAAC8F,EAAD,OAAQX,EAAR,EAAQA,KAAR,wBAC1BW,IAD0B,OAE1BC,GAAAA,CAAQZ,EAAKa,KAAI,qBAAGV,YACvB,OAGFW,GAAYxB,EAAAA,EAAAA,cAAY,YAAiC,UAA9BC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,cACjCS,EAAU,QAAI,GAAAV,MAAAA,GAAA,UAAAA,EAAUG,uBAAV,eAA2BM,QAAQR,MAAAA,GAAnC,UAAmCA,EAAeG,cAAlD,aAAmC,EAAuBK,aAA9D,aAAG,EAAkEE,QACjF,SAACC,GAAD,OAASC,OAAOC,OAAOF,GAAKG,MAAK,SAACC,GAAD,OAASA,MAAAA,OAAT,EAASA,EAAKC,SAASzB,SAE5D,OAAOkB,EAAaA,EAAWlE,OAASwD,MAAAA,OAAvB,EAAuBA,EAAUwB,iBAGtDxH,EAAAA,EAAAA,YAAU,WACNyF,EAAYP,KACb,CAACA,IAEJ,IAAMuC,EAAY,SAACvB,EAAYV,GACtBW,EAGDN,GAAmB,kBAAMK,KAFzBpB,GAAS4C,EAAAA,EAAAA,IAAalC,EAAUU,EAAYb,KAM9CsC,GAAiBC,EAAAA,EAAAA,aAAYC,GAAAA,CAASJ,EAAW,KAAM,CAACtB,IAE9D,OACI,kBAAC,KAAD,QACIvD,UAAU,8BACVkF,WAAY,CACRC,cAAc,IAEdxB,GAAU,CACVA,OAAAA,EACAL,WAAY,EAAF,KACHA,GADG,IAEN3B,MAAOgD,IAEXS,MAAMvB,MAAAA,OAAA,EAAAA,EAAMa,KAAI,gBAAGW,EAAH,EAAGA,IAAKC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,UAAf,MAAgC,CAC5CxE,GAAI,GAAF,OAAKwE,EAAL,YAAkBF,EAAlB,YAAyBC,GAC3BxC,SAAUA,EAAS0C,MAAK,qBAAGzE,KAAgB,GAAL,OAAQwE,EAAR,YAAqBF,EAArB,YAA4BC,MAClEG,MAAO,CAACJ,EAAKC,EAAOC,SACjB,IAff,CAiBI5B,OAASA,EACT+B,MAAM,OACNxF,OAASgD,EACTyC,YAAa,WACT5C,EAAY,IACZF,EAAY,IACZN,IACAL,GAASC,EAAAA,EAAAA,KAAe,KAE5ByD,QAAS,CACL,CACIC,MAAO,cACPC,YAAa,cACbR,MAAO,cACPS,aAAc,CACVT,MAAO1C,EACPoD,SAAU,SAACC,EAAIX,GACXP,EAAezB,EAAYgC,GAC3BzC,EAAYyC,OAK5BY,aAAe,SAAC5C,GAAD,OAAgBuB,EAAUvB,EAAYV,IACrDuD,QAAU,CACN,CAAEpG,MAAO,QACT,CAAEA,MAAO,QAASqG,WAAY,EAACC,EAAAA,EAAAA,WAAU,MACzC,CAAEtG,MAAO,aAAcqG,WAAY,EAACC,EAAAA,EAAAA,WAAU,SAE7C9C,GAAmB,CACpB+C,SAAU,SAACxD,GAAD,OAAcC,EAAYD,IACpCA,SAAAA,EACAN,QAAS,kBAAMA,GAAWA,EAAQM,KAjD1C,CAmDIyD,WAAY,CAAExF,GAAI,oBAClBhB,MAAQwD,EAAe,UAChBA,EAAgB1D,aADA,aACiB8E,EADjB,sCAEOA,EAFP,SAQnCtC,EAAUpB,UAAY,CAClBuB,QAAS1B,IAAAA,KACTyB,cAAezB,IAAAA,KACfwB,aAAcxB,IAAAA,OACd0F,cAAe1F,IAAAA,MAAgB,CAC3B+C,KAAM/C,IAAAA,UAAoB,CACtBA,IAAAA,OACAA,IAAAA,QAAkBA,IAAAA,YAG1B2B,QAAS3B,IAAAA,MAGbuB,EAAUnB,aAAe,CACrBoB,aAAc,GACdC,cAAe,cAGnB,W,0KClJMkE,EAAgB,SAAC,GAAqE,IAA9DC,EAA8D,EAAnEC,IAAgBC,EAAmD,EAAnDA,cAAeC,EAAoC,EAApCA,aAAcC,EAAsB,EAAtBA,MAAUC,GAAY,YAChFC,GAAcC,EAAAA,EAAAA,IAA0B,CAC5C,gBACA,mBACA,yBAHID,UAKR,OACI,kBAACN,GAAD,UACQK,EACCF,GAAgB,CACjBK,IAAKL,GAHb,CAKIG,WAAWJ,GAAgBI,EAC3BF,MAAQA,MAKpBL,EAAcxF,UAAY,CACtB0F,IAAK7F,IAAAA,IACL+F,aAAc/F,IAAAA,IACdgG,MAAOhG,IAAAA,OACPqG,aAAcrG,IAAAA,KACd8F,cAAe9F,IAAAA,MAGnB,W,82BCxBO,IAAMsG,EAAc,iBACdC,EAAe,UACfC,EAAW,OACXC,EAAa,YACbC,EAAkB,kBAClBC,EAAU,mBACVC,EAAY,CACrB,CAAE7B,MAAO,QAASP,MAAO,SACzB,CAAEO,MAAO,QAASP,MAAO,SACzB,CAAEO,MAAO,gBAAiBP,MAAO,kBAExBqC,EAAa,CACtB,CAAE9B,MAAO,kBAAmBP,MAAO,SAAUsC,OAAQ,cAAeC,QAAS,eAC7E,CAAEhC,MAAO,uBAAwBP,MAAO,eACpCsC,OAAQ,0BAA2BC,QAAS,2BAChD,CAAEhC,MAAO,sBAAuBP,MAAO,UACvC,CAAEO,MAAO,gCAAiCP,MAAO,YAExCwC,GAAmBC,EAAAA,EAAAA,eAAc,IACjCC,EAAiB,CAC1BC,YAAa,CAAC,QAAS,UAGpB,SAASC,IAAiD,IAAnCnE,EAAmC,uDAA1B,GAAIoE,EAAsB,uDAAV,SACnD,OAAOpE,EAAOrF,QAAO,SAAC0J,EAAUC,GAAX,cACdD,GADc,cAEhBC,EAAMhD,IAAMgD,EAAMF,GAAWzJ,QAAO,SAAC8F,EAAK8D,GAAN,cAAqB9D,GAArB,cAA2B8D,EAAKjD,IAAM,CACvEkD,YAAY,EACZF,MAAOC,EAAKD,MACZG,KAAM,CACFC,KAAM,CACFzE,IAAK,CACDqB,IAAKiD,EAAKI,OACVpD,MAAOgD,EAAKhD,cAItB,QACN,IAGD,IAAMqD,EAAmB,SAAC7F,GAAD,OAAcA,EAASpE,QAAO,SAAC8F,EAAD,mBAAQiB,MAAR,GAAgBJ,EAAhB,KAAqBC,EAArB,KAA4BC,EAA5B,mBACvDf,GADuD,cAEzDe,EAFyD,OAGnDf,GAAIe,MAAAA,OAAA,EAAAA,EAAWxF,QAASwF,IAH2B,eAIrDF,MAAAA,OAAA,EAAAA,EAAKtF,QAASsF,EAAM,CACjBkD,YAAY,EACZF,MAAO,CAAE/C,OAAOC,MAAAA,OAAA,EAAAA,EAAWxF,QAASwF,EAAWM,OAAON,MAAAA,OAAA,EAAAA,EAAWxF,QAASwF,GAC1EiD,KAAM,CACFlD,OAAOD,MAAAA,OAAA,EAAAA,EAAKtF,QAASsF,EACrBoD,KAAM,CAAEzE,IAAK,CAAEqB,KAAKA,MAAAA,OAAA,EAAAA,EAAKtF,QAASsF,EAAKC,OAAOA,MAAAA,OAAA,EAAAA,EAAOvF,QAASuF,YAI1E,KAEG,SAASsD,IAA4B,IAAdhD,EAAc,uDAAJ,GACpC,OAAOA,EAAQlH,QAAO,SAAC8F,EAAKqE,GACxB,GAAIA,EAAUvD,QAAU8B,EACpB,cAAY5C,GAAZ,IAAiBsE,WAAYD,EAAU9E,SACpC,GAAI,eAAgB8E,EACvB,cACOrE,GADP,IAEIuE,WAAYb,EAAcW,EAAUE,cAI5C,IAAMC,EAAW,CAAC,cAAe,uBAAwB,WAAY,IACpExD,MAAK,SAAAgD,GAAI,OAAIvE,OAAOgF,KAAKJ,GAAWxE,SAASmE,MAE9C,cACOhE,GACAwE,IAAY,UAAGA,EAAWH,EAAUG,OAfxC,GAkBHF,WAAY,GACZC,WAAY,IACTf,IAIJ,IAAMkB,EAAc,SAACC,EAASC,EAAUC,GAAgB,sBACrDC,GAAeH,MAAAA,GAAA,UAAAA,EAASI,aAAT,eAAgB3J,QAASuJ,EAAQK,SAAWL,MAAAA,GAA5C,UAA4CA,EAASI,aAArD,aAA4C,EAAgBjF,QAC5E6E,MAAAA,OAAA,EAAAA,EAAStK,MAAO,GAAKsK,EAAQK,UAAUL,MAAAA,OAAA,EAAAA,EAAStK,MAAOsK,EAAQK,UAChEL,MAAAA,OAFiB,EAEjBA,EAASI,MAEPE,EAAS,EAAH,OACLN,EAAQO,UAAY,CACnBC,OAAQR,MAAAA,GAAF,UAAEA,EAASQ,cAAX,aAAE,EAAiBtE,IACzBuE,eAAgBT,MAAAA,GAAF,UAAEA,EAASQ,cAAX,iBAAE,EAAiBE,iBAAnB,aAAE,EAA4BC,gBAE7CX,GALK,IAMRvD,SAASuD,MAAAA,OAAA,EAAAA,EAASvD,WAAWuD,MAAAA,OAApB,EAAoBA,EAASY,eACtCC,SAASb,MAAAA,OAAA,EAAAA,EAASa,WAAWb,MAAAA,GAApB,UAAoBA,EAASQ,cAA7B,aAAoB,EAAiBtE,KAC9CuE,gBAAgBT,MAAAA,GAAA,UAAAA,EAASS,sBAAT,eAAyBE,iBAAiBX,MAAAA,GAA1C,UAA0CA,EAASQ,cAAnD,iBAA0C,EAAiBE,iBAA3D,aAA0C,EAA4BC,iBACnFR,MAAAA,OAAA,EAAAA,EAAc1J,QAAS,GAAK,CAC3BqK,UAAWd,MAAAA,OAAF,EAAEA,EAAStK,KACpBA,KAAM,IAId,OAAOqL,EAAAA,EAAAA,IAAaZ,EAAcG,EAAQ,CAAEL,SAAAA,GAAYC,IAG/Cc,EAAgB,SAACC,EAAOC,GAMjC,OALAD,EAAME,QAAQC,MAAK,SAAAC,GAEf,OADAH,IACOG,KAGJJ,GAGEK,EAAU,SAACC,GAAD,OAAYA,GAA2B,KAAlBA,MAAAA,OAAA,EAAAA,EAAO9K,SAEtC+K,EAAiB,SAACvM,EAAQE,EAAQE,EAAYD,EAAcK,GAA3C,MAAgE,EACzF6L,EAAQrM,IAAW,CAChB6J,YAAavI,MAAMC,QAAQvB,GAAUA,EAAS,CAACA,KAElDqM,EAAQjM,IAAe,CACpBuK,WAAYrJ,MAAMC,QAAQnB,GAAcA,EAAa,CAACA,KAEzDiM,EAAQnM,IAAW,CAChBsM,qBAAsBlL,MAAMC,QAAQrB,GAAUA,EAAS,CAACA,KAE3DmM,EAAQlM,IAAiB,CACtB+G,MAAO,iBACPvB,OAAQrE,MAAMC,QAAQpB,GAAgBA,EAAa,GAAKA,KAE1DkM,EAAQrM,KAAYqM,EAAQjM,KAAgBiM,EAAQlM,KAAkBkM,EAAQnM,IAAW,CACvFsM,qBAAsB,MAExBH,EAAQnM,KAAYmM,EAAQjM,KAAgBiM,EAAQlM,KAAkBkM,EAAQrM,IAAW,CACvF6J,YAAa,KAEhBwC,EAAQ7L,IAAoB,CACzBiM,SAAUnL,MAAMC,QAAQf,GAAmBA,EAAkB,CAACA,KAEpEmF,OAAO+G,UAEIC,EAAsB,WAG/B,OAFsB9D,EAAAA,EAAAA,IAA0B+D,EAAAA,IAAxChE,WAKCiE,EAAiB,WAG1B,OAFwB/N,EAAAA,EAAAA,YAAWC,EAAAA,IAA3BF,aAKCiO,EAAkB,CAAC,QAAS,QAAS,gBAAiB,Y,wDC9J5D,IAAMC,EAAgB,SAACC,GAAkC,IAAtBC,EAAsB,uDAAf,IAAIC,KAGjD,OAFAD,EAAKE,QAAQF,EAAKG,UAAyB,EAAbJ,GAEvBC,GAGEI,EAA2B,SAACC,GACrC,IAAMC,EAAgB,IAAIL,KAAKI,EAAkBE,iBAC3CC,EAAkB,IAAIP,KAEtBQ,EAAiBX,EAAc,GAC/BY,EAAiBZ,EAAc,GAErC,OAAIQ,EAAgBE,EACT,QACAE,EAAiBJ,GAAiBA,EAAgBE,EAClD,QAEFC,EAAiBH,GAAiBA,EAAgBI,EAChD,gBAEA,UAIFC,EAA6B,SAACC,GAEvC,SAAKA,GAGIA,EAAqBC,QACuC,WAA1DT,EAAyBQ,EAAqBC,W,uuCC9BtD,IAAMC,EAAqB,oBASrBC,EAAQ,IAAIC,EAAAA,cAASjK,EAAW+J,EAAoBG,EAAAA,IACpDzI,EAAO,IAAI0I,EAAAA,aAAQnK,EAAW+J,EAAoBG,EAAAA,IAClDE,EAAgB,IAAIC,EAAAA,sBAAiBrK,EAAW+J,EAAoBG,EAAAA,IAEpEI,EAAyB,SAAClE,GAAD,OAAU4D,EAAMO,gCAAgC,CAACnE,KAG1EoE,EAAU,SAAC,GAAD,UAAGC,MAAAA,OAAH,MAAW,GAAX,kCAEnBC,SAAUD,EACVA,MAAO,EAAF,eACEA,EAAMnO,cADR,aACE,OAAAmO,GAAe,SAACrI,EAAK8D,GAAN,cAAqB9D,GAArB,cAA2B8D,EAAK/C,UAAY+C,EAAKuE,UAAU,KAC1EE,GAAAA,CAAQF,GAAQ,SAAAG,GAAO,OAAI/I,OAAOC,OAAO8I,MAC3CtI,KAAI,SAAA8D,GAAI,MAAoB,iBAATA,EAAP,OACNA,GADM,IAGTyE,WAAYzE,EAAKyE,YAAczE,EAAK0E,QAEpCrN,aAAc2I,EAAK3I,cAAgB2I,EAAK2E,MAAQ3E,EAAKzH,KACpDyH,KACJ9J,QACG,SAAC8F,EAAK8D,GAAN,cAAqB9D,GAAyB,iBAAT8D,EAAqBA,EAAO,MAAO,QAKvE8E,EAAU,WAA8D,IAA7D5C,EAA6D,uDAAtD,CAAE6C,QAAS,IAA2C,yDAAP,GAA5BrD,EAAmC,EAAnCA,QAASJ,EAA0B,EAA1BA,eACvD,OAAIY,EAAK6C,QAAQzN,OAAS,EACfwM,EAAMkB,mBAAmB9C,EAAK6C,QAAQ3I,KAAI,qBAAG3D,MAAcyJ,EAAKhB,SAAU,EAAGQ,EAASJ,GAC5FW,MAAK,gBAAY1G,EAAZ,EAAGwJ,QAAH,cACC7C,GADD,IAEF6C,QAAS7C,EAAK6C,QAAQ3I,KAAI,SAAA6I,GAAG,cAAUA,GAAV,IAAe1J,KAAMA,EAAK0J,EAAIxM,KAAO,aAErEyM,OAAM,yBACAhD,GADA,IAEH6C,QAAS7C,EAAK6C,QAAQ3I,KAAI,SAAA6I,GAAG,cACtBA,GADsB,IAEzB1J,KAAM,aAKX2G,GAGEiD,EAAgB,SAAC1E,GAC1B,OAAOgE,GAAAA,CACHhE,GACA,gBAAG7E,EAAH,EAAGA,OAAkBqB,EAArB,EAAWmI,SAAX,OAAqCxJ,EAAOQ,KAAI,gBAAUiJ,EAAV,EAAGrI,MAAiBoD,EAApB,EAAoBA,OAApB,gBACzCnD,EAAY,GAAH,OAAMA,EAAN,KAAqB,IADW,OACNmD,GADM,OACGiF,EAAW,IAAH,OAAOA,GAAa,WAE9E,IAGIC,EAAyB,SAAC/C,GACnC,IAAI2B,EAAgB,GACdqB,EAAiBnO,MAAMC,QAAQkL,GAAYA,EAAW5G,OAAOC,OAAO2G,GAAY,IACrFkC,SAAQ,SAACe,GAAD,OAAoB7J,OAAOgF,KAAK6E,MAYzC,OAVID,MAAAA,OAAA,EAAAA,EAAgBjO,QAAS,IACzB4M,EAAcuB,iBAAmB,CAC7BC,KAAM,CACFzM,QAAS,CACL0M,GAAIJ,OAMblD,EAAAA,EAAAA,IAAe,CAAEuD,eAAgB1B,KAG/B2B,EAAiB,SAAC3J,GAAD,IAAMT,EAAN,uDAAe,GAAf,sBACvBS,GACiB,mBAAjBT,EAAOuB,OAA8B,CAAE8I,aAAcrK,EAAOA,SAC5D,eAAgBA,GAAU,CAAEgF,WAAYhF,EAAOgF,aAC/C,gBAAiBhF,GAAU,CAAEkE,YAAalE,EAAOkE,cACjD,yBAA0BlE,GAAU,CAAE6G,qBAAsB7G,EAAO6G,uBACnE,aAAc7G,GAAU,CAAE8G,SAAU9G,EAAO8G,YAG3C,SAAexB,EAAtB,sC,wCAAO,WAA2BE,EAA3B,EAUJH,GAVI,kGACHiF,EADG,EACHA,WACA3E,EAFG,EAEHA,SACA9D,EAHG,EAGHA,QACU9G,EAJP,EAIH0K,SACA3K,EALG,EAKHA,KACAmL,EANG,EAMHA,QACAJ,EAPG,EAOHA,eAPG,IAQH0E,OAAAA,OARG,MAQM,CAAEJ,eAAgB,CAAC,qBARzB,EASA/E,GATA,cAWCO,GAAYH,EAAM3J,OAAS,GAX5B,iCAYkBwM,EAAMmC,mBACnBhF,OACAnH,OACAA,OACAA,OACAA,OACAA,OACAA,OACAA,EACA,CAAEoM,YAAaH,GAAcA,EAAWI,QArB7C,UAYKjE,EAZL,QAwBK8D,IAAUrK,OAAOgF,KAAKqF,GAAQ1O,OAxBnC,0CA0B8BwM,EAAMO,gCACvBpD,OACAnH,OACAA,OACAA,OACAA,OACAA,OACAA,EACA,CACIoM,YAAaH,GAAcA,EAAWI,MACtCC,OAAO/D,EAAAA,EAAAA,IAAe2D,EAAQ,YApC/C,OA0BeK,EA1Bf,OAwCSnE,EAAO,EAAH,KACGA,GADH,IAEA6C,SAASuB,EAAAA,EAAAA,IAAiB,WACtBpE,SADsB,aACtB,EAAM6C,SACNsB,MAAAA,OAAA,EAAAA,EAAQtB,UAAW,IACpB,QA7ChB,kDAgDSwB,QAAQC,MAAR,MAhDT,YAoDQ1F,EApDR,kCAoDyBgE,EAAQ5C,GApDjC,iDAoDyCA,EApDzC,eAsDCA,EAAO,EAAH,KAFJA,EApDD,MAsDK,IAEA5E,QAAAA,EACAyH,QAAS7C,EAAK6C,QAAQ3I,KAAI,SAAAiK,GAAM,OAAI/B,EAAQ,EAAD,KACpC+B,GADoC,IAEvC9O,aAAc8O,EAAO9O,cAAgB8O,EAAOxB,MAAQwB,EAAO5N,WA3DpE,kBA+DQyJ,GA/DR,WAgESd,EAhET,0CAiEQ0C,EAAM2C,wBACT3M,OACAA,EACAwD,EAAQwI,kBACRhM,OACAA,OACAA,OACAA,EACAtD,EACAD,EACAmL,EACAJ,EACAhE,EAAQqC,YAZL,kBAcIwF,EAAc7H,EAAQmD,cAd1B,OAeII,EAAQtF,MAAQ,KAEvB+B,MAAAA,OAjBG,EAiBHA,EAASgF,0BACTxI,OACAA,EACA,CACIoM,YAAaH,GAAcA,EAAWI,MACtCC,MAAO,EAAF,OACGvF,EAAQpF,QAAUE,OAAOgF,KAAKE,EAAQpF,QAAQnE,SAAU+K,EAAAA,EAAAA,IAAexB,EAAQpF,SAC/E6J,EAAuBhI,EAAQiF,WAC/ByD,GAAUrK,OAAOgF,KAAKqF,GAAQ1O,SAAU+K,EAAAA,EAAAA,IAAe2D,EAAQ,aAI9E/D,MAAK,SAACC,GAAD,OAAUpB,EAAWgE,EAAQ5C,EAAM,CAAER,QAAAA,EAASJ,eAAAA,IAAoBY,KACvED,MAAK,wEAA6B,GAA7B,IAAG8C,QAAAA,OAAH,MAAa,GAAb,EAAoB7C,GAApB,0BACCA,GADD,IAEF5E,QAAAA,EACAyH,QAASA,EAAQ3I,KAAI,SAAAiK,GAAM,OAAI/B,EAAQ,EAAD,KAC/B+B,GAD+B,IAElC9O,aAAc8O,EAAO9O,cAAgB8O,EAAOxB,MAAQwB,EAAO5N,eApGpE,iCAyGI,CACHlC,KAAAA,EACA2K,SAAU1K,EACVuO,QAAS,KA5GV,0D,wBAgHA,SAAS5K,EAAQZ,EAAUjE,GAA6C,6DAApB,CAAE0F,WAAY,IAA7BA,EAAmC,EAAnCA,WACxC,OAAO8I,EAAMkB,mBACTzL,EACAyB,EAAWxE,SAAW,GACtBwE,EAAWzE,MAAQ,OACnBuD,OACAA,EACAxE,GAID,SAASoR,EAAWpR,GAAyB,IAAjB0F,EAAiB,uDAAJ,GAC5C,OAAOO,EAAKoL,cACR,GACA,MACA,MACA3L,EAAWxE,SAAW,GACtBwE,EAAWzE,MAAQ,EAEnBqM,EAAAA,GACAtN,OACAwE,OACAA,OACAA,OACAA,OACAA,OACAA,OACAA,OACAA,OACAA,GAID,SAAS8M,IAAiC,IAAbC,EAAa,uDAAJ,GACzC,OAAO3C,EAAc4C,mCAAd,MAAA5C,GAAa,OAAuC2C,I,eC5OlDE,EAAuB/C,EAAAA,GAEvBgD,EAAI,mCAAG,WAAOzN,GAAP,0GAEuC0N,QAAQC,IAAI,CAAC,EAAG,EAAG,EAAG,GAAG9K,KAAI,SAAC+K,GAAD,OAC5EnD,EAAAA,GAAAA,IAAA,yCACsCzK,EADtC,2CACiF4N,QAJzE,sCAELC,EAFK,KAEAC,EAFA,KAEUC,EAFV,KAEqBC,EAFrB,uBAOL,CAAEH,IAAAA,EAAKC,SAAAA,EAAUC,UAAAA,EAAWC,SAAAA,IAPvB,2DASL,IATK,0DAAH,sDAaJC,EAAK,mCAAG,WAAOjO,GAAP,0FAEAyK,EAAAA,GAAAA,IAAA,gCAAsCzK,IAFtC,iGAIN,IAJM,wDAAH,sDAQLkO,EAAO,mCAAG,WAAOlO,GAAP,0FAEFyK,EAAAA,GAAAA,IAAA,kCAAwCzK,EAAxC,cAFE,iGAIR,IAJQ,wDAAH,sDAQPmO,EAAU,mCAAG,WAAOnO,GAAP,0FAoBLyK,EAAAA,GAAAA,KAAc,0BAA2B,CAClD2D,cAAe,SACfvB,MAtBc,+ZAuBdwB,UAAW,CACPrO,SAAAA,KAxBU,iGA4BX,IA5BW,yDAAH,uD,wSCzBjBsO,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMxP,EAAT,EAASA,QAAT,OAChB,uBACIZ,UAAU,kCACVqQ,KAAI,UAAMC,OAAO3S,SAAS0S,KAAtB,YAA8BD,GAClCxP,QAAUA,GAEV,kBAAC,KAAD,QAIRuP,EAAYlP,UAAY,CACpBmP,KAAMtP,IAAAA,OAAAA,WACNF,QAASE,IAAAA,KAAAA,YAGb,IAAIyP,OAAmBnO,EAEjBoO,EAA+B,SAACzJ,GAClC,IAAQC,GAAcC,EAAAA,EAAAA,IAA0B,CAC5C,gBACA,wBACA,sBAHID,UAUR,OAJIA,IACAuJ,EAAmBvJ,GAGlBA,EAIE,kBAACmJ,EAAgBpJ,GAHb,MAMfyJ,EAA6BvP,UAAY,CACrCmP,KAAMtP,IAAAA,OAAAA,WACNF,QAASE,IAAAA,KAAAA,YAGb,IAAM2P,EAAoB,SAAC,GAAmC,IAAjCC,EAAiC,EAAjCA,iBAAqB3J,GAAY,YAC1D,OAAI4J,SAASC,OAAOC,QAAUH,GAAoBH,EACvC,kBAACJ,EAAgBpJ,GAGI,kBAArB2J,EACA,kBAACF,EAAiCzJ,GAGtC,MAGX0J,EAAkBxP,UAAY,CAC1ByP,iBAAkB5P,IAAAA,MAGtB,W,owCCvDMgQ,EAAAA,SAAAA,I,2mBACM,CACJnH,OAAQ,CAAEoH,MAAO,EAAGlH,UAAWmH,EAAAA,gBAAAA,KAC/BC,OAAQ,GACR3N,WAAY,CACRzE,KAAM,EACNC,QAAS,IAEbiL,cAAe,M,4BAGV,SAACK,EAAO2G,EAAOlH,GACpB,IAAQqH,EAAe,EAAKnK,MAApBmK,WACR,EAAKnK,MAAMoK,OAAO/G,EAAO8G,EAAaH,EAAQ,EAAIA,EAAOlH,GACzD,EAAKuH,SAAS,CACVzH,OAAQ,CACJoH,MAAAA,EACAlH,UAAAA,S,gCAKC,SAACwH,EAAQN,EAAO7Q,GACzB,IAAQ+Q,EAAW,EAAKK,MAAhBL,OACRA,EAAOF,GAAS7Q,EAChB,EAAKkR,SAAS,CACVH,OAAAA,Q,wCAIa,YAAuB,IAApBpS,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAC1B,EAAKsS,SAAS,CAAE9N,WAAY,EAAF,KAAO,EAAKgO,MAAMhO,YAAlB,IAA8BzE,KAAAA,EAAMC,QAAAA,U,+BAGtD,SAACuG,EAAKC,EAAOO,GACrB,IAAQkE,EAAkB,EAAKuH,MAAvBvH,cAEsBwH,GAAexH,EAApC1E,IAAT,OAA6C0E,EAA7C,CAAS1E,GAAT,SACA,EAAK+L,SAAS,CACVrH,cAAe,EAAF,KACNwH,GACiB,IAAjBjM,EAAM1F,SAAN,UACEyF,EAAM,CAAEA,IAAAA,EAAKC,MAAAA,EAAOO,MAAAA,KAG7BvC,WAAY,EAAF,KAAO,EAAKgO,MAAMhO,YAAlB,IAA8BzE,KAAM,U,oCAIrC,SAACoH,EAAD,EAAgBuL,GAAc,IAAxBC,GAAwB,eAC3C,EAAKL,SAAS,CACVrH,eAAe2H,EAAAA,EAAAA,IACXD,EACAD,EACA,EAAKF,MAAMvH,eAEfzG,WAAY,EAAF,KAAO,EAAKgO,MAAMhO,YAAlB,IAA8BzE,KAAM,S,uCAItD,WAAS,WACL,EAA6C8S,KAAK5K,MAA1CtB,EAAR,EAAQA,MAAOL,EAAf,EAAeA,KAAM8L,EAArB,EAAqBA,WAAYtL,EAAjC,EAAiCA,QACjC,EAAsD+L,KAAKL,MAAnD3H,EAAR,EAAQA,OAAQsH,EAAhB,EAAgBA,OAAQ3N,EAAxB,EAAwBA,WAAYyG,EAApC,EAAoCA,cAC9B6H,EAAmBV,EAAa,CAAEW,WAAYF,KAAKE,YAAe,GAClEC,GAAaC,EAAAA,EAAAA,IAAW3M,EAAM2E,GAC9BiI,EAAad,EAAanE,GAAAA,EAC5BkF,EAAAA,EAAAA,IAAYH,EAAYxO,IACxB,WAAoB+B,GAApB,IAAG6M,EAAH,EAAGA,MAAH,MAA4B,CAAC,EAAD,MAA5B,aAA4B,IAGpBhS,OAAQ+Q,EAAa,EAAN5L,KAAY,IAE/B,CACII,MAAO,CAAC,CAAE1F,MAAOmS,IACjBC,OAAc,EAAN9M,QAEX4M,EAAAA,EAAAA,IAAYH,EAAYxO,GACjC,OACI,kBAAC,EAAA8O,SAAD,KACI,kBAACC,EAAA,GAAD,QAAgB/O,WAAU,OACnBA,GADmB,IAEtBgP,UAAWR,EAAWlS,OACtB2S,UAAW,SAACtM,EAAIpH,GAAL,OAAc,EAAK2T,mBAAL,OAA6BlP,GAA7B,IAAyCzE,KAAAA,MAClE4T,gBAAiB,SAACxM,EAAInH,GAAL,OAAiB,EAAK0T,mBAAL,OAA6BlP,GAA7B,IAAyCzE,KAAM,EAAGC,QAAAA,SAEpF8G,GAAW,CACX8M,aAAc,CACVnJ,OAAOoJ,EAAAA,EAAAA,IAAgBlN,EAAOG,EAASmE,EAAe4H,KAAKiB,aARnE,CAWAC,oBAAqB,CACjBjN,QAAS3B,OAAOC,OAAO6F,GAAerF,KAAI,SAAAX,GAAM,cACzCA,GADyC,IAE5C2J,SAAU3J,EAAO8B,MACjBiN,MAAOpT,MAAMC,QAAQoE,EAAOuB,OAASvB,EAAOuB,MAAMZ,KAAI,SAAA8D,GAAI,MAAK,CAAElH,KAAMkH,MAAW,CAAC,CAAElH,KAAMyC,EAAOuB,aAEtGyN,SAAUpB,KAAKD,mBAIE,IAAjBjM,EAAM7F,OAAe,kBAAC,EAAAoT,OAAD,QACjB,aAAW,mCACXlT,QAAUmT,EAAAA,aAAAA,QACVxN,MAAQA,EACRL,KAAO4M,EACPrI,OAAM,OACCA,GADD,IAEFoH,MAAOG,GAA+B,IAAjBvH,EAAOoH,MAAc,EAAIpH,EAAOoH,QAEzDI,OAASQ,KAAKR,QACTS,GAEL,kBAAC,EAAAsB,YAAD,MACA,kBAAC,EAAAC,UAAD,OAEA,kBAACC,EAAA,EAAD,MAEQnB,EAAAA,EAAAA,IAAYH,EAAYxO,GACvBoB,KAAI,SAAC6I,EAAKlI,GAAN,OACD,kBAACgO,EAAA,EAAD,CAAMrU,UAAYsU,EAAAA,EAAAA,MAAqBjO,IAAMA,GACvCkI,EAAIxN,OAASwN,OAKvC,kBAACgG,EAAA,EAAD,CAAcC,UAAQ,EAACxT,UAAU,mCAC7B,kBAACyT,EAAA,GAAD,UACQnQ,EADR,CAEIgP,UAAWR,EAAWlS,OACtBE,QAAQ,SACRyS,UAAW,SAACtM,EAAIpH,GAAL,OAAc,EAAK2T,mBAAL,OAA6BlP,GAA7B,IAAyCzE,KAAAA,MAClE4T,gBAAiB,SAACxM,EAAInH,GAAL,OAAiB,EAAK0T,mBAAL,OAA6BlP,GAA7B,IAAyCzE,KAAM,EAAGC,QAAAA,e,EAnItGgS,CAAkBpK,EAAAA,WA4IxBoK,EAAU7P,UAAY,CAClBmE,KAAMtE,IAAAA,MACN2E,MAAO3E,IAAAA,MACPqQ,OAAQrQ,IAAAA,KACRoQ,WAAYpQ,IAAAA,KACZ8E,QAAS9E,IAAAA,QAAkBA,IAAAA,MAAgB,CACvCiQ,MAAOjQ,IAAAA,OACPf,MAAOe,IAAAA,OACP4S,KAAM5S,IAAAA,MAAgB,CAAC,OAAQ,WAAY,QAAS,UACpDqI,QAASrI,IAAAA,QAAkBA,IAAAA,MAAgB,CACvCwE,MAAOxE,IAAAA,UAAoB,CAACA,IAAAA,OAAkBA,IAAAA,OAC9C+E,MAAO/E,IAAAA,YAInBgQ,EAAU5P,aAAe,CACrBuE,MAAO,GACPL,KAAM,GACN+L,OAAQ,aACRxH,OAAQ,GACRuH,YAAY,GAGhB,W,8QC1JMyC,EAAc,SAACrO,EAAOsO,EAAUC,GAClC,OAAKvO,GAAmB,IAAVA,IAAgBsO,EACT,IAAVtO,EAAA,YAAmBsO,GAAnB,UAAmCtO,EAAnC,YAA4CuO,GAAU,GAAJ,OAAOD,EAAP,MAG/C,IAAVtO,EACO,OAGJA,GAAS,iBAGPwO,EAAY,SAAC,GAAD,QAAGtL,KAAQ5H,EAAX,EAAWA,QAAS0E,EAApB,EAAoBA,MAAOyO,EAA3B,EAA2BA,OAAQF,EAAnC,EAAmCA,OAAQD,EAA3C,EAA2CA,SAA3C,OACrB,uBACIhT,QAAU,SAAAwJ,GACNA,EAAM4J,iBACNpT,EAAQwJ,EAAO,CAAE9E,MAAAA,EAAOyO,OAAAA,KAE5B1D,KAAI,UAAMC,OAAO3S,SAAS0S,KAAK5R,MAAM,KAAK,GAAtC,YAA4CsV,IAE9CJ,EAAYrO,EAAOsO,EAAUC,KAIvCC,EAAU7S,UAAY,CAClBuH,KAAM1H,IAAAA,MAAgB,CAClBwE,MAAOxE,IAAAA,KACPiT,OAAQjT,IAAAA,OACRF,QAASE,IAAAA,KACT+S,OAAQ/S,IAAAA,OACR8S,SAAU9S,IAAAA,UAIlBgT,EAAU5S,aAAe,CACrBsH,KAAM,IAGV,IAAMyL,EAAc,SAAC,GAA0C,MAAxClU,EAAwC,EAAxCA,MAAOmU,EAAiC,EAAjCA,UAAW3K,EAAsB,EAAtBA,MAAO4K,EAAe,EAAfA,SACtCC,GAAWC,EAAAA,EAAAA,eAAczX,EAAAA,EAAAA,iBACzB0X,EAAUF,MAAAA,GAAH,UAAGA,EAAUjF,cAAb,aAAG,EAAkBmF,QAClC,OACI,kBAACC,EAAA,EAAD,CAAO/T,WAAS,GACZ,kBAACgU,EAAA,EAAD,KACI,kBAACpB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAMrU,UAAYsU,EAAAA,EAAAA,IACZvT,KAId,kBAACyU,EAAA,EAAD,CAAW9T,UAAQ,GACd6I,EAAM3J,OACF,kBAACwT,EAAA,EAAD,KACG,kBAACqB,EAAA,EAAD,CAAUzV,UAAY0V,EAAAA,EAAAA,IAChBnL,EAAM7E,KAAI,SAAC8D,EAAMnD,GAAP,OACR,kBAAC,EAAA+M,SAAD,CAAU/M,IAAMA,GACZ,kBAACsP,EAAAC,EAAD,CAAc5V,UAAY6V,EAAAA,EAAAA,IACpBrM,EAAKzI,OAEX,kBAAC4U,EAAAC,EAAD,CAAc5V,UAAY6V,EAAAA,EAAAA,IACpBX,GAAa,kBAACY,EAAA,EAAD,CAAUrU,KAAO+H,EAAK/H,MAAQsU,EAAAA,EAAAA,KAC3CT,GAAW9L,EAAK5H,SAAW4H,EAAKuL,SAAWO,GAAW9L,EAAK5H,WAC1DsT,IACC1L,EAAK5H,SAAW4H,EAAKlD,MACjB,kBAACwO,EAAD,CAAWtL,KAAOA,IAClBmL,EAAYnL,EAAKlD,MAAOkD,EAAKoL,SAAUpL,EAAKqL,gBAMtD,KACrBM,KAMjBF,EAAYhT,UAAY,CACpBlB,MAAOe,IAAAA,KAAAA,WACPoT,UAAWpT,IAAAA,KACXyI,MAAOzI,IAAAA,QAAkBA,IAAAA,MAAgB,CACrCf,MAAOe,IAAAA,KACPwE,MAAOxE,IAAAA,KACPF,QAASE,IAAAA,KACTL,KAAMK,IAAAA,MAAgBmD,OAAOC,OAAO6Q,EAAAA,IACpClB,OAAQ/S,IAAAA,OACR8S,SAAU9S,IAAAA,UAEdqT,SAAUrT,IAAAA,MAGdmT,EAAY/S,aAAe,CACvBgT,WAAW,EACX3K,MAAO,IAGX,W,ySC1GMyL,EAAuB,SAAC,GAAD,IACzBC,EADyB,EACzBA,aACAC,EAFyB,EAEzBA,SACAC,EAHyB,EAGzBA,cACAC,EAJyB,EAIzBA,eACAC,EALyB,EAKzBA,OACA7R,EANyB,EAMzBA,OACAgJ,EAPyB,EAOzBA,cACA8I,EARyB,EAQzBA,aARyB,OAUzB,kBAACrB,EAAA,EAAD,CACIlU,MAAM,gBACNmU,WAAae,EACb1L,MAAK,kBAEM2L,EAAW,CAAC,CACXnV,MAAO,gBACPuF,MAAOgQ,EAAaC,MAAQ,QAAU,WACrC,KALR,OAMMJ,EAAgB,CAAC,CAAEpV,MAAO,aAAcuF,MAAO9B,GAC9C,kBAACgS,EAAA,EAAD,CAAYnK,KAAM7H,EAAOiS,QAAS/B,KAAK,YACpC,KARV,OASM0B,EAAiB,CAAC,CAAErV,MAAO,cAAeuF,MAAO9B,GAChD,kBAACgS,EAAA,EAAD,CAAYnK,KAAO7H,EAAOkS,QAAUhC,KAAK,YACtC,KAXV,OAYM2B,EAAS,CAAC,CACTtV,MAAO,MACPuF,MAAOkH,MAAAA,GAAAA,EAAemJ,cAAgB,YAAc,kBACnD,QAKrBX,EAAqB/T,UAAY,CAC7BgU,aAAcnU,IAAAA,KACd0C,OAAQ1C,IAAAA,MAAgB,CACpB4U,QAAS5U,IAAAA,OACT2U,QAAS3U,IAAAA,SAEb0L,cAAe1L,IAAAA,MAAgB,CAC3B6U,cAAe7U,IAAAA,SAEnBwU,aAAcxU,IAAAA,OACd8U,YAAa9U,IAAAA,KACboU,SAAUpU,IAAAA,KACVsU,eAAgBtU,IAAAA,KAChBqU,cAAerU,IAAAA,KACfuU,OAAQvU,IAAAA,MAEZkU,EAAqB9T,aAAe,CAChC+T,cAAc,EACdK,aAAc,GACdM,YAAa,aACbV,UAAU,EACVE,gBAAgB,EAChBD,eAAe,EACfE,QAAQ,GAGL,IAAMQ,GAAmB5T,EAAAA,EAAAA,UAAQ,gBAEhCuB,EAFgC,EACpCH,cACIG,OAGAgJ,EALgC,EAIpCsJ,mBACItJ,cALgC,MAOjC,CACHhJ,OAAAA,EACAgJ,cAAAA,EACAyI,aAAczI,MAAAA,OAAF,EAAEA,EAAe7I,OAC7B2R,cAAcA,EAAAA,EAAAA,cAAa9R,MAXCvB,CAY5B+S,GAEJa,EAAiB5U,UAAY+T,EAAqB/T,UAClD4U,EAAiB3U,aAAe8T,EAAqB9T,c,sLCzEhC6U,EAAAA,SAAAA,I,2bACjB,WAAahP,GAAO,6BAChB,cAAMA,IACDuK,MAAQ,GAFG,E,qCAmBpB,WAAU,WACN,EAEIK,KAAK5K,MADLhH,EADJ,EACIA,MAAOG,EADX,EACWA,OAAQ8V,EADnB,EACmBA,SAAUC,EAD7B,EAC6BA,SAAUC,EADvC,EACuCA,UAAWC,EADlD,EACkDA,YAAaC,EAD/D,EAC+DA,aAAcC,EAD7E,EAC6EA,cAAeC,EAD5F,EAC4FA,YAEpFhR,EAAUqM,KAAKL,MAAfhM,MAER,OACI,kBAACiR,EAAA,EAAD,CACIzW,QAAQ,QACRC,MAAQA,EACRC,UAAU,gCACV,aAAakW,EAAY,GAAH,OAAMA,EAAN,YAA4B,cAClDjW,OAASkW,EACTjW,OAASA,EACTC,QAAU,SAAAiK,GAAK,OAAI4L,EAAS5L,IAC5BoM,QAAU,CACN,kBAACC,EAAA,GAAD,CAAQpR,IAAI,SAAS,cAAY,SAASvF,QAAQ,YAAYc,QAAUoV,EAAW/V,OAASmW,GAA5F,UAGA,kBAACK,EAAA,GAAD,CACIpR,IAAI,UACJ,cAAY,UACZvF,QAAQ,UACRc,QAAU,kBAAMqV,EAAS,EAAK3E,MAAMhM,QACpCrF,OAASoW,GALb,UAWJ,kBAACK,EAAA,GAAD,CACIpR,MAAQA,EACRoO,KAAK,OACLzT,OAASqW,EACTtQ,SAAW,SAAAV,GAAK,OAAI,EAAK8L,SAAS,CAAE9L,MAAAA,KACpC,aAAa4Q,Q,uCAjD7B,SAAiCnP,EAAOuK,GACpC,OAAKvK,EAAM7G,YAISkC,IAAhBkP,EAAMhM,MACC,KAGJ,CACHA,MAAOyB,EAAMzB,OAAS,IARf,CAAEA,WAAOlD,O,EARP2T,CAAuBrP,EAAAA,WA8D5CqP,EAAe9U,UAAY,CACvBlB,MAAOe,IAAAA,OACPZ,OAAQY,IAAAA,KACRkV,SAAUlV,IAAAA,KACVmV,SAAUnV,IAAAA,KACVoV,UAAWpV,IAAAA,OACXqV,YAAarV,IAAAA,OACbsV,aAActV,IAAAA,OACduV,cAAevV,IAAAA,OACfwV,YAAaxV,IAAAA,OACbwE,MAAOxE,IAAAA,QAGXiV,EAAe7U,aAAe,CAC1B8U,SAAU,aACVC,SAAU,aACV/V,QAAQ,EACRH,MAAO,GACPmW,UAAW,e,sECrCf,QAnBoB,SAAC1L,EAAMzJ,EAAIyH,EAAMzB,GAAjB,OAChB,yBAAK/G,UAAU,oBACX,yBAAKqF,IAAI,cAAcmD,MAAAA,OAAvB,EAAuBA,EAAMyE,YAC7B,yBAAK5H,IAAI,OAAOrF,UAAW+G,MAAAA,GAAAA,EAAO4P,SAAW,iBAAmB,IAC1D5P,MAAAA,GAAAA,EAAO4P,SACLnM,EACA,uBACIoM,OAAO,MACPvG,KAAI,UAAM1S,SAASkZ,UAAf,OAA2D,MAAjClZ,SAASkZ,SAASC,QAAQ,GAAa,GAAK,KAAtE,OAA4E/V,GAChFH,QAAU,SAAAwJ,IA/BX,SAACA,EAAO/E,EAAR,GAA4D,IAA7C1B,EAA6C,EAA7CA,OAAoBoT,EAAyB,EAArCC,WAAsBL,EAAe,EAAfA,SAC5D,GAAIhT,IAAWgT,EAAU,CACrB,IAAMM,EAAa7M,EAAM8M,SAAW9M,EAAM+M,SAA2B,IAAhB/M,EAAMgN,MAC3D,GAAIH,EACA,OACOF,GACPA,EAAS3M,EAAO/E,EAAK4R,GAI7B7M,EAAM4J,iBACN5J,EAAMrI,kBAqBciV,CAAW5M,EAAOrJ,EAAIgG,KAGxByD,O,4FCrCtB,QANiB,kBACb,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAS/J,KAAK,U,6iCCHf,IAAM9B,EAAa,SAAC6F,EAAK8D,GAC5B,MAA4BA,EAAK7J,MAAM,KAAvC,eAAK8G,EAAL,KAAgB8R,EAAhB,KACKA,IACDA,EAAW9R,EACXA,EAAY,MAGhB,MAA4B8R,EAAS5Y,MAAM,KAA3C,eAAO4G,EAAP,YAAYC,OAAZ,MAAoB,KAApB,EACMgS,EAAa9S,EAAI+S,WAAU,qBAAG7J,WAA4BnI,KAC1DiS,EAAUhT,EAAI8S,IAAe,CAC/B5J,SAAUnI,EACVF,IAAKE,EACLmO,KAAM,OACNxP,OAAQ,IAiBZ,OAfAsT,EAAQtT,OAAOuT,KAAK,CAChBnW,KAAM,GAAF,OAAK+D,GAAL,OAAWC,EAAQ,IAAH,OAAOA,GAAU,IACrCD,IAAK,GAAF,OAAKA,GAAL,OAAWC,EAAQ,IAAH,OAAOA,GAAU,IACpCoD,OAAQrD,EACRC,MAAAA,EACA+C,MAAO,CACHxC,MAAON,EACPD,MAAOC,EACPmO,KAAM,cAGTlP,EAAI8S,IACL9S,EAAIiT,KAAKD,GAGNhT,GAGEyN,EAAc,eAAC7M,EAAD,uDAAQ,GAAI9B,EAAZ,uDAAyB,GAAzB,OACvB8B,EACCd,OAAOhB,EAAWzE,KAAO,GAAKyE,EAAWxE,QAASwE,EAAWzE,KAAOyE,EAAWxE,UAGvE4Y,EAAS,SAACrM,GACnB,QAASsM,MAAMtM,IAASsM,MAAMrM,KAAKsM,MAAMvM,MAGhC0G,EAAa,eAAC3M,EAAD,uDAAQ,GAAI2E,EAAZ,uDAA4B,GAA5B,OACtB3E,EACCrB,QAAO,SAAAwJ,GAAG,OACiC,IAAxCtJ,OAAOC,OAAO6F,GAAenK,QAC7BqE,OAAOC,OAAO6F,GACb8N,OACG,SAAA9T,GACI,IAAM+T,EAAWvK,EAAIxJ,EAAOsB,OAASkI,EAAIxJ,EAAOsB,KAAK0S,WAAaxK,EAAIxJ,EAAOsB,MAC7E,OAAOyS,IACHpY,MAAMC,QAAQoE,EAAOuB,OACjBvB,EAAOuB,MAAMjB,SAASyT,IACsD,IAA5EA,EAASE,oBAAoBC,QAAQlU,EAAOuB,MAAM0S,6BAO7DrF,EAAkB,eAAClN,EAAD,uDAAS,GAAIG,EAAb,uDAAuB,GAAImE,EAA3B,uDAA2C,GAAI/D,EAA/C,uDAA0D,aAA1D,OAC3BJ,EAAQlB,KAAI,SAACX,EAAQsB,GACjB,IAAM6S,EAAYnU,EAAOgN,OAAS1L,EAC5B8S,EAAc1S,EAAMyS,KAAezS,EAAMyS,GAAWnY,OAAS0F,EAAMyS,IAEzE,MAAQ,CACJ5S,MAAO8S,OAAOF,GACdrS,MAAOsS,EACPzE,KAAM3P,EAAO2P,MAAQ,OACrB3N,aAAc,EAAF,CACRhF,GAAIgD,EAAOhD,IAAP,UAAgBoX,EAAhB,YAA+BD,GACnClS,SAAU,SAACC,EAAIoS,GAAL,OAAmBrS,EAASkS,EAAWG,EAAWF,IAC5D7S,MAAOyE,EAAcmO,IAAcnO,EAAcmO,GAAW5S,OACzDvB,EAAOoF,SAAW,CAAEI,MAAOxF,EAAOoF,eAMxCuI,EAAiB,WAAyD,IAAxDD,EAAwD,uDAA9C,GAAID,EAA0C,wDAAvBzH,EAAuB,uDAAP,GAC5E,GAAIyH,EACA,MAAO,GAEP,MAASC,EAAQpM,IAAMiT,EAAgCvO,EAAvD,GAAuCwO,GAAvC,OAAuDxO,EAAvD,YACMyO,EAAWF,GAAe5Y,MAAMC,QAAQ2Y,EAAYhT,QACtDgT,EAAYhT,MAAMvB,QAAO,SAAAyE,GAAI,OAAKiJ,EAAQqB,MAAMtN,MAAK,qBAAGlE,OAAoBkH,QAC1E6P,EAAYC,GAAe5Y,MAAMC,QAAQ2Y,EAAYhT,QAAUkT,GAAYA,EAAS5Y,OAAS,GAAjF,UACb6R,EAAQpM,IADK,OAEPiT,GAFO,IAGVhT,MAAOkT,KAEX,GACJ,cACOD,GACAF,IAKFI,EAAa3X,IAAAA,MAAgB,CACtCf,MAAOe,IAAAA,KACPwE,MAAOxE,IAAAA,KACP8S,SAAU9S,IAAAA,KACV+S,OAAQ/S,IAAAA,KACRF,QAASE,IAAAA,OAGAkK,EAA8B,CACvC,gBACA,wBACA,sB,m1BC9GJ,IAAM0N,EAAc,SAAClC,GAAY,MAC7B,OAAOA,MAAAA,GAAP,UAAOA,EAAS9X,cAAhB,aAAO,OAAA8X,GAAkB,SAAChS,EAAK8D,GAAN,oBAClB9D,GADkB,mBAEpB8D,EAAOA,IAFa,mBAGjBA,EAHiB,sBAGGA,EAHH,iCAIjBA,EAJiB,wBAIKA,EAJL,mCAKjBA,EALiB,uBAKIA,EALJ,oBAMrB,KASKqQ,EAAe,CACxB,eACA,aACA,sBACA,yBACA,sBACA,oBAGSC,EAAiB,CAC1B,gBACA,cACA,gBACA,sBACA,mBACA,mBACA,YACA,WACA,qBAGSC,EAAe,CACxB,+BACA,uBACA,6BACA,4BAGSC,EAAe,EAAH,O,MAAQC,EAAAA,CAlCjB,CACZ,YACA,gBACA,kBA+B4C,SAAAC,GAAC,OAAIA,MAAON,EAAYC,IAAkBD,EAAYE,IACzFK,EAAyBP,EAAYE,GACrCM,EAAqBR,EAAYG,GAEjCM,EAAsB,oDACtBC,EAAgB,gBAChBC,EAAuB,uBACvBC,EAAiB,iBACjBC,EAAmB,mBACnBC,EAAmB,mBAEnBC,EAAkB,kBAClBC,EAAc,cACdC,EAAkB,kBAClBC,EAAuB,uBACvBC,EAAgB,gBAChBC,EAAgB,gBAChBC,EAAmB,mBACnBC,EAAgB,gBAChBC,EAAmB,mBACnBC,EAAiB,iBACjBC,EAAgB,2B,kWC3DhBC,EAAiB,SAACvY,GAAD,MAAe,CACzC6R,KAAMwF,EAAAA,GAAAA,6BACN5O,SAASyF,EAAAA,EAAAA,SAAQlO,KAGRwY,EAAc,SAACxY,GAAD,MAAe,CACtC6R,KAAMwF,EAAAA,GAAAA,qBACN5O,SAASgF,EAAAA,EAAAA,MAAKzN,KAGLyY,EAAe,SAACzY,GAAD,MAAe,CACvC6R,KAAMwF,EAAAA,GAAAA,2BACN5O,SAASwF,EAAAA,EAAAA,OAAMjO,KAGN0Y,EAAoB,SAAC1Y,GAAD,MAAe,CAC5C6R,KAAMwF,EAAAA,GAAAA,yBACN5O,SAAS0F,EAAAA,EAAAA,YAAWnO,K,UCpBX2Y,EAAe,SAACC,EAASzZ,GAAV,MAA2B,CACnD0S,KAAMoF,EAAAA,GAAAA,cACNxO,QAAS8B,EAAAA,MAAAA,kBAAwBqO,GACjChS,KAAM,CACFiS,cAAe,CACXC,UAAW,CACP7a,QAAS,UACTC,MAAO,4BACP6a,YAAa,GAAF,OAAK5Z,EAAL,mCACX6Z,aAAa,IAGrBJ,QAAAA,KAIK7H,EAAY,SAACkI,GAAD,MAAkB,CACvCpH,KAAM2F,EAAAA,GACN/O,QAAS,CACLwQ,YAAAA,KAIKC,EAAqB,WAC9B,MAAQ,CACJrH,KAAMyF,EAAAA,KAID6B,EAAkB,SAACja,EAAIuE,EAAO2V,GAAZ,MAA2B,CACtDvH,KAAMoF,EAAAA,GAAAA,oBACNxO,QAAS8B,EAAAA,MAAAA,iBAAuB,CAACrL,GAAK,CAAElB,aAAcyF,IACtDmD,KAAM,CACF1H,GAAAA,EACAuE,MAAAA,EACA2V,UAAAA,EACAP,cAAe,CACXC,UAAW,CACP7a,QAAS,UACTC,MAAO,mCAAF,OAAqCgB,EAArC,gCAA+DuE,GACpEuV,aAAa,OAMhBK,EAAgB,SAACrc,EAAMC,GAAP,MAAoB,CAC7C4U,KAAM4F,EAAAA,GACNhP,QAAS,CACLzL,KAAAA,EAAMC,QAAAA,KAID0N,EAAgB,SAAC2O,GAAD,MAAa,CACtCzH,KAAMoF,EAAAA,GAAAA,oBACNxO,SAASoC,EAAAA,EAAAA,wBAAuByO,EAAQ,MAG/BC,EAAkB,SAACra,EAAIuE,EAAO2V,GAAZ,MAA2B,CACtDvH,KAAMoF,EAAAA,GAAAA,iBACNxO,QAAS8B,EAAAA,MAAAA,iBAAuB,CAACrL,GAAK,CAAEsa,aAAc/V,IACtDmD,KAAM,CACF1H,GAAAA,EACAuE,MAAAA,EACA2V,UAAAA,EACAP,cAAe,CACXC,UAAW,CACP7a,QAAS,UACTC,MAAO,oCACP8a,aAAa,Q,04BCjDtB,IAAMS,EAAe,CACxB3X,QAAQ,EACR4X,YAAY,EACZC,eAAe,EACfC,iBAAkB,GAClBC,wBAAwB,EACxBC,UAAW,GACXhS,OAAQ,CACJtE,IAAK,UACLwE,UAAW,SAIN+R,EAAiB,iBAAO,CACjC,CACIvW,IAAK,eACLwW,QAAS,eACT9b,MAAO,OACP+b,WAAYC,EAAAA,GAEhB,CACI1W,IAAK,OACLtF,MAAO,OACPgH,MAAO,CAAErB,MAAO,GAAIsW,UAAU,GAE9BF,WAAY,SAACxW,EAAOzD,GAAR,OAAqB,kBAAC,EAAAH,cAAD,CAAeC,MAAO2D,EAAM1F,OAAQiC,SAAUA,MAEnF,CACIwD,IAAK,iBACLwW,QAAS,mBACTI,UAAW,KACXlc,MAAO,kBAAC,IAAD,CAASqB,QAAS,mDAA+B,qCAExD0a,WAAY,SAACtP,GAAD,OAAmB,kBAAC,IAAD,CAA0B5N,gBAAiB4N,MAAAA,OAAF,EAAEA,EAAeuB,oBACzFhH,MAAO,CAAErB,MAAO,KAEpB,CACIL,IAAK,UACLwW,QAAS,UACT9b,MAAO,YAEP+b,WAAY,SACRxW,EACA4W,EAFQ,GAMF,IAFgBC,EAEhB,EAFFC,iBAAmDC,EAEjD,EAFwBC,wBAAqD/G,EAE7E,EAF4D3J,gBACtCK,EACtB,EADFsQ,uBAEJ,OAAOC,EAAAA,EAAqB,kBAAC,IAAD,CACxBL,OAAQA,EACRM,aAAcJ,EACd9G,MAAOA,EACPpX,OAAQ,gBAAGue,EAAH,EAAGA,IAAH,OAAa,kBAAC,aAAD,KACjB,kBAAC,IAAD,CAAYrR,KAAO/F,EAAQqX,WACvB,kBAAC,aAAD,KACI,6BAAOD,GADX,qBAKH1Q,EAAAA,EAAAA,IAA2BC,IAAyB,kBAAC,IAAD,SAXjC,IAc1B,kBAAC,IAAD,CAAYZ,KAAO/F,IAdO,KAc4B,IAAIgG,KAAKhG,GAAOsX,kBAE5E7V,MAAO,CAAErB,MAAO,OAyBxB,SAASmX,EAAevL,EAAxB,GAAuH,QAAtFhH,QAAW+C,EAA2E,EAA3EA,QAAmBvO,EAAwD,EAAlE0K,SAAmB3K,EAA+C,EAA/CA,KAAM8C,EAAyC,EAAzCA,MAAOmb,EAAkC,EAAlCA,MAAOnZ,EAA2B,EAA3BA,OAAQiC,EAAmB,EAAnBA,QAEhG,OAFmH,EAAR6C,KAElGsU,gBAAkBzL,EAAMyL,gBACtBzL,OAIIlP,IAAXuB,QAAkCvB,IAATvD,QAAkCuD,IAAZtD,EAInD,OACOwS,GADP,IAEIvH,cAAenE,GAAW,GAC1BjC,YAAmBvB,IAAXuB,GAAwBA,EAEhCyB,MAAMwJ,EAAAA,EAAAA,IAAiB,CAAC0C,EAAMlM,KAAMiI,IAAUtJ,QAAO,SAAAyE,GAAI,OAAK7E,GAAgB6E,EAAKiN,WACnF3W,aAAqBsD,IAAZtD,EAAwBA,EAAUwS,EAAMxS,QACjDD,UAAeuD,IAATvD,EAAqBA,EAAOyS,EAAMzS,KACxC8C,WAAiBS,IAAVT,EAAsBA,EAAQ2P,EAAM3P,MAC3Cmb,WAAiB1a,IAAV0a,EAAsBA,EAAQxL,EAAMwL,QAZpCxL,EAgBf,SAAS0L,EAAgB1L,EAAzB,GAA6C,IAAXhH,EAAW,EAAXA,QAC9B,cACOgH,GADP,IAEIxC,MAAOxE,IAoER,SAASlB,EAASkI,EAAlB,GAA4C,IAAjBhH,EAAiB,EAAjBA,QAAS7B,EAAQ,EAARA,KACvC,EAAqC6I,EAAMlM,KAAOkM,EAAMlM,KAAKI,MAAK,gBAAGzE,EAAH,EAAGA,GAAH,OAAY0H,EAAK5G,WAAad,KAAMuQ,EAAM9N,QAAU,GAArGD,GAAjB,EAAQM,MAAR,aACA,cACOyN,GADP,IAEI1N,gBAAgB,EAChBL,gBAAiB,EAAF,KACRA,GADQ,IAEXM,KAAMI,OAAOC,OAAOoG,EAAQ+C,SAAS,GACrC1I,UAAW8D,EAAK9D,UAChB9F,KAAMyL,EAAQzL,KACdC,QAASwL,EAAQd,SACjB+R,YAAY,MAkBjB,SAAS0B,EAAsB3L,EAA/B,GAA+D,IAAZpR,EAAY,EAAvBoK,QAAWpK,OACtD,cACOoR,GADP,IAEIpO,cAAehD,EACfqD,qBAAiBnB,IA2BzB,wBACK0W,EAAAA,GAAAA,oBAxBE,SAAiBxH,EAAjB,GAAiH,QAAvFhH,QAAW+C,EAA4E,EAA5EA,QAASyP,EAAmE,EAAnEA,MAAOje,EAA4D,EAA5DA,KAAgBC,EAA4C,EAAtD0K,SAE9D,OAFoH,EAAjCf,KAAQyU,oBAEjE5L,EAAM4L,oBACrB5L,EAGX,OACOA,GADP,IAEI/M,QAASN,OAAOkZ,QAAQC,GAAAA,CAAQ/P,GAAS,qBAAGrJ,IAAOuB,cAA8Bb,KAAI,qCAAmB,CACpGpD,KADiF,KAEjFuC,KAFiF,SAIrFJ,kBAAmB,CACf3E,QAAAA,EACAD,KAAAA,GAEJwe,oBAAqBP,EAAQhe,EAAUge,EAAQhe,EAAU,EACzD8F,aAAckY,EACdtB,eAAe,EACf5X,gBAAgB,QAIxB,SAEKkV,EAAAA,GAAAA,kBAAgC,SAACxH,EAAD,OAAU7I,EAAV,EAAUA,KAAV,cACxB6I,GADwB,IACjBkK,eAAe,EAAO5X,gBAAgB,EAAOsZ,oBAAqBzU,EAAKyU,0BAH3F,SAKKpE,EAAAA,GAAAA,uBArLL,SAAyBxH,EAAzB,GAA0C,IAAR7I,EAAQ,EAARA,KAC9B,cACO6I,GADP,IAEInL,SAASyI,EAAAA,EAAAA,IAAiB,CACtBgN,IAAiB7X,QAAO,kBAAqB,SAArB,EAAGsB,MAA4BoD,MAAAA,OAAlB,EAAkBA,EAAMW,aAC7DkI,EAAMnL,SACP,OACHf,KAAM,GACNzB,QAAQ,EACRoZ,gBAAiBtU,EAAKsU,sBAuK9B,SAMKjE,EAAAA,GAAAA,wBAAuC+D,IAN5C,SAOK/D,EAAAA,GAAAA,uBAAsCkE,IAP3C,SAQKlE,EAAAA,GAAAA,mBApDE,SAAyBxH,EAAzB,GAA0C,IAAR7I,EAAQ,EAARA,KACrC,EAAqC6I,EAAMlM,KAAOkM,EAAMlM,KAAKI,MAAK,gBAAGzE,EAAH,EAAGA,GAAH,OAAY0H,EAAK5G,WAAad,KAAMuQ,EAAM9N,QAAU,GAArGD,GAAjB,EAAQM,MAAR,aACA,cACOyN,GADP,IAEI1N,gBAAgB,EAChBL,gBAAiB,EAAF,KACRA,GADQ,IAEXoB,UAAW8D,EAAK9D,UAChB4W,YAAY,UAoCxB,SASKzC,EAAAA,GAAAA,oBAAmC1P,IATxC,SAUK0P,EAAAA,GAAAA,kBAAiCkE,IAVtC,SAWKlE,EAAAA,GAAAA,2BAAyC,SAACxH,GAAD,cAAiBA,GAAjB,IAAwBoK,wBAAwB,QAX9F,SAYK5C,EAAAA,GAAAA,6BAvHL,SAAwBxH,EAAxB,GAAyD,IAAbjE,EAAa,EAAxB/C,QAAW+C,QACxC,cACOiE,GADP,IAEImK,iBAAkBpO,EAAQ3I,KAAI,SAAA4Y,GAC1B,MAA+BA,EAAMhY,MAA7BhE,EAAR,EAAQA,KAAME,EAAd,EAAcA,MAAOC,EAArB,EAAqBA,MACf8b,EAAqB,GAAH,OAAM/b,EAAN,YAAeC,GACvC,MAAO,CAAEoE,MAAO,GAAF,OAAKvE,EAAL,YAAaic,GAAsBjY,MAAOiY,MAE5D7B,wBAAwB,QAmGhC,SAaKjC,EAAAA,GAAkBoD,IAbvB,SAcKhD,EAAAA,IAAgB,SAACvI,EAAOkM,GAAR,OAAmBX,EAAevL,EAAO,CACtDhH,QAAS,EAAF,KACAkT,EAAOlT,SADP,IAEH3G,QAAQ,UAjBpB,SAoBKmW,EAAAA,IAzGL,SAAsBxI,EAAtB,GAAkF,QAAnDhH,QAAmD,IAAxC9B,KAAQe,EAAgC,EAAhCA,MAAUf,GAAsB,YAAd1F,EAAc,EAAdA,SAChE,EAA6BwO,EAAvBvH,cAAAA,OAAN,MAAsB,GAAtB,EACA,GAAIjH,EAAU,CAMV,IAAMoB,GALN6F,EAAgB,GAAH,eACNA,GADM,CAETvB,IAFS,OAGNe,GAAgB,MAEM7E,KAAI,SAAA+Y,GAAM,OAAIA,EAAOnY,SAClDyE,EAAgBA,EAAchG,QAAO,SAACA,EAAQsB,GAAT,OAAiBnB,EAAOwZ,YAAY3Z,EAAOuB,SAAWD,UAE3F0E,EAAc4T,OAAO5T,EAAcrF,KAAI,SAAA+Y,GAAM,OAAIA,EAAOnY,SAAO2S,QAAQzP,EAAKlD,OAAQ,GAChFiE,GACAA,EAAMqU,SAAQ,SAAAC,GACV9T,EAAc4T,OAAO5T,EAAcrF,KAAI,SAAA+Y,GAAM,OAAIA,EAAOnY,SAAO2S,QAAQ4F,EAAQvY,OAAQ,MAKnG,cACOgM,GADP,IAEIvH,cAAAA,QAgER,SAqBKqP,EAAAA,IAjJL,SAAsB9H,EAAtB,GAA0C,IAAXhH,EAAW,EAAXA,QACrBlF,GAAO,OAAIkM,EAAMlM,MAUvB,MATiB,GAAG0Y,OAAOxT,GAClBsT,SAAQ,YAAsB,IAAnB7c,EAAmB,EAAnBA,GAAI+B,EAAe,EAAfA,SACdU,EAAS4B,EAAKI,MAAK,SAAAhC,GAAM,OAAIA,EAAOzC,KAAOA,KAC7CyC,EACAA,EAAOV,SAAWA,EAElBsC,EAAKwY,SAAQ,SAAApV,GAAI,OAAIA,EAAK1F,SAAWA,QAG7C,OACOwO,GADP,IAEIlM,KAAAA,QA+GR,SAsBKsU,EAAAA,IArHL,SAAoBpI,EAApB,GAA4D,QAA/BhH,QAAWjF,EAAoB,EAApBA,IAAKwE,EAAe,EAAfA,UACzC,cACOyH,GADP,IAEI3H,OAAQ,CACJtE,IAAAA,EACAwE,UAAAA,SA0FZ,SAuBKmQ,EAAAA,IA1LL,SAAsB1I,GAClB,cACOA,GADP,IAEIvH,cAAe,CAAC/B,EAAAA,UAgKxB,SAwBK+R,EAAAA,IAAmB,SAACzI,EAAD,OAAqB4C,EAArB,EAAU5J,QAAW4J,UAArB,cAA6C5C,GAA7C,IAAoD3N,QAASuQ,QAxBrF,SAyBK+F,EAAAA,GAAmBgD,IAzBxB,SA0BK/C,EAAAA,IAAiB,SAAC5I,EAAD,OAAUhH,EAAV,EAAUA,QAAV,cAA8BgH,GAA9B,IAAqCqK,UAAWrR,OA1BtE,I,8FCjQIyT,E,0EAJS5gB,GAAkB4K,EAAAA,EAAAA,eAAc,CACzC9K,YAAa,eAKV,SAAS+gB,IACZD,EAAqB,IAAIE,EAAAA,EADQ,2BAAZC,EAAY,yBAAZA,EAAY,gBAEjC,OAAO,IAAIC,EAAAA,GACP,GADG,CAGCJ,EAAmBK,gBACnBC,KACAC,EAAAA,EAAAA,SAAwB,CACpBC,oBAAqB,CAAC,SAAU,YANrC,OAQIL,M,gMCJf,QAfsB,WAClB,IAAQ/O,GAAWkF,EAAAA,EAAAA,eAAc,iBAAzBlF,OACR,OAAO,kBAACqP,EAAA,EAAD,CACHC,QAAQ,aACRC,OAAO,iBACP5X,OAAO6X,EAAAA,EAAAA,YACPC,YAAU,EACVC,UAAW,CACPC,OAAQC,UAAUC,SAAS1a,MAAM,EAAG,IAExC2a,YAAc9P,EAAO8P,YACrBC,qBAAmB,K,eCE3B,QAbyB,WACrB,IAAQ/P,GAAWkF,EAAAA,EAAAA,eAAc,iBAAzBlF,OACAlS,GAAgBC,EAAAA,EAAAA,YAAWC,EAAAA,IAA3BF,YAER,OAAO,kBAACuhB,EAAA,EAAD,CACHC,QAAQ,gBACRC,OAAO,iBACPzhB,YAAaA,EACbkiB,oBAAkB,EAClB3b,OAAS,CAAEzC,GAAIoO,EAAO8P,gBCE9B,EAZmB,WACf,OAAO,kBAACT,EAAA,EAAD,CACHC,QAAQ,UACRC,OAAO,iBACP5X,OAAO6X,EAAAA,EAAAA,YACPC,YAAU,EACVC,UAAW,CACPC,OAAQC,UAAUC,SAAS1a,MAAM,EAAG,O,eCGhD,QAViB,WACb,IAAQrH,GAAgBC,EAAAA,EAAAA,YAAWC,EAAAA,IAA3BF,YAER,OAAO,kBAACuhB,EAAA,EAAD,CACHC,QAAQ,QACRC,OAAO,iBACPzhB,YAAaA,KCOrB,EAZe,WACX,IAAQkS,GAAWkF,EAAAA,EAAAA,eAAc,iBAAzBlF,OACAlS,GAAgBC,EAAAA,EAAAA,YAAWC,EAAAA,IAA3BF,YAER,OAAO,kBAACuhB,EAAA,EAAD,CACHC,QAAQ,MACRC,OAAO,iBACPzhB,YAAcA,EACdgiB,YAAc9P,EAAO8P,e,snBC6DtB,SAASG,EAAU9N,EAAOoC,GAC7B,cACOpC,GADP,IAEIuH,aAAc,EAAF,KACLvH,MAAAA,OADK,EACLA,EAAOuH,cACPnF,IAAQ,UAAGA,EAAO,CAAE2L,UAAU,OAK7C,wBACKnG,EAAAA,GAAAA,sCAA0D,SAAC5H,GAAD,OAAW8N,EAAU9N,EAAO,eAD3F,SAEK4H,EAAAA,GAAAA,8BAAkD,SAAC5H,GAAD,OAAW8N,EAAU9N,EAAO,WAFnF,SAGK4H,EAAAA,GAAAA,oCAAwD,SAAC5H,GAAD,OAAW8N,EAAU9N,EAAO,aAHzF,SAIK4H,EAAAA,GAAAA,kCAAsD,SAAC5H,GAAD,OAAW8N,EAAU9N,EAAO,kBAJvF,SAKK4H,EAAAA,GAAAA,wCAtFE,SAAiB5H,EAAjB,GAAqC,IAAXhH,EAAW,EAAXA,QAC7B,cACOgH,GADP,IAEIuH,aAAc,EAAF,KACLvH,MAAAA,OADK,EACLA,EAAOuH,cADF,IAER9I,QAAS,CACLsP,UAAU,EACVC,cAAehV,MAAAA,OAAF,EAAEA,EAASvG,QAAO,SAAAyE,GAAI,OAAIA,MAAAA,OAAA,EAAAA,EAAM+W,aAAc,cA0E3E,SAMKrG,EAAAA,GAAAA,gCA1EE,SAAa5H,EAAb,GAAiC,oBAAXhH,EAAW,EAAXA,QACzB,cACOgH,GADP,IAEIuH,aAAc,EAAF,KACLvH,MAAAA,OADK,EACLA,EAAOuH,cADF,IAER2G,IAAK,CACDH,UAAU,EACVxP,SAAU,CACNlO,OAAO2I,MAAAA,GAAA,UAAAA,EAASuF,gBAAT,mBAAmBpH,YAAnB,eAAyBgX,cAAe,GAEnD9P,SAAU,CACNhO,OAAO2I,MAAAA,GAAA,UAAAA,EAASqF,gBAAT,mBAAmBlH,YAAnB,eAAyBgX,cAAe,GAEnD7P,UAAW,CACPjO,OAAO2I,MAAAA,GAAA,UAAAA,EAASsF,iBAAT,mBAAoBnH,YAApB,eAA0BgX,cAAe,GAEpD/P,IAAK,CACD/N,OAAO2I,MAAAA,GAAA,UAAAA,EAASoF,WAAT,mBAAcjH,YAAd,eAAoBgX,cAAe,YAmD9D,SAOKvG,EAAAA,GAAAA,sCAnDE,SAAe5H,EAAf,GAAmC,gBAAXhH,EAAW,EAAXA,QAC3B,cACOgH,GADP,IAEIuH,aAAc,EAAF,KACLvH,MAAAA,OADK,EACLA,EAAOuH,cADF,IAER/I,MAAO,CACHuP,UAAU,EACVK,IAAK,CACD/d,OAAO2I,MAAAA,GAAA,UAAAA,EAASE,YAAT,mBAAemV,kBAAf,eAA2BC,aAAc,GAEpDC,YAAa,CACTle,OAAO2I,MAAAA,GAAA,UAAAA,EAASE,YAAT,mBAAemV,kBAAf,eAA2BG,aAAc,GAEpDC,SAAU,CACNpe,OAAO2I,MAAAA,GAAA,UAAAA,EAASE,YAAT,mBAAemV,kBAAf,eAA2BK,aAAc,YA8BpE,SAQK9G,EAAAA,GAAAA,oCA/BE,SAAoB5H,EAApB,GAAwC,QAAXhH,EAAW,EAAXA,QAChC,cACOgH,GADP,IAEIuH,aAAc,EAAF,KACLvH,MAAAA,OADK,EACLA,EAAOuH,cADF,IAER7I,WAAY,CACRqP,UAAU,EACVY,SAAU3V,MAAAA,GAAF,UAAEA,EAASE,YAAX,iBAAE,EAAe0V,cAAjB,aAAE,EAAuBD,iBAgBjD,G,2kBCjFO,IAAME,EAAqB,CAAExc,QAAQ,GAsC5C,SAASyc,EAAkB9O,EAA3B,EAA4C+O,GAAc,IAAtB5X,EAAsB,EAAtBA,KAC1BnD,EAAQ+a,EAAe5X,MAAAA,OAAH,EAAGA,EAAMwS,UAAYxS,MAAAA,OAArB,EAAqBA,EAAMnD,MACrD,gBACOgM,GACAA,EAAMlM,MAAQ,CACbA,KAAMkM,EAAMlM,KAAKV,KAAI,SAAC6I,GAAD,OAASA,EAAIxM,MAAO0H,MAAAA,OAAX,EAAWA,EAAM1H,IAAjB,OACvBwM,GADuB,IAG1B8N,aAAc/V,IACbiI,OAEN+D,EAAM9N,QAAU,CACfA,OAAQ,OACD8N,EAAM9N,QADP,IAGF6X,aAAc/V,MAMvB,SAASgb,EAAahP,EAAtB,EAAuC+O,GAAc,IAAtB5X,EAAsB,EAAtBA,KAC5BnD,EAAQ+a,EAAe5X,MAAAA,OAAH,EAAGA,EAAMwS,UAAYxS,MAAAA,OAArB,EAAqBA,EAAMnD,MACrD,gBACOgM,GACAA,EAAMlM,MAAQ,CACbA,KAAMkM,EAAMlM,KAAKV,KAAI,SAAC6I,GAAD,OAASA,EAAIxM,MAAO0H,MAAAA,OAAX,EAAWA,EAAM1H,IAAjB,OACvBwM,GADuB,IAG1B1N,aAAcyF,IACbiI,OAEN+D,EAAM9N,QAAU,CACfA,OAAQ,OACD8N,EAAM9N,QADP,IAGF3D,aAAcyF,MAM9B,QAAe,kBACVwT,EAAAA,GAAAA,uBAAqC,kBAAMqH,MADhD,SAEKrH,EAAAA,GAAAA,qBAhFL,SAA6BxH,GACzB,cACOA,GADP,IAEI3N,QAAQ,QA2EhB,SAGKmV,EAAAA,GAAAA,uBA1EL,SAA4BxH,EAA5B,GAAgD,IAAXhH,EAAW,EAAXA,QACjC,cACOgH,GADP,IAEI3N,QAAQ,EACRH,OAAQ8G,EAAQ+C,QAAQ,SAmEhC,SAIKuM,EAAAA,IAnEL,SAA+BtI,EAA/B,GAAmD,IAAXhH,EAAW,EAAXA,QACpC,cACOgH,GADP,IAEIiP,UAAWjW,QA4DnB,SAKKwO,EAAAA,GAAAA,UAAyB1P,EAAAA,KAL9B,SAMK0P,EAAAA,GAAAA,mBAvDL,SAAyBxH,GACrB,cACOA,GADP,IAEI1N,gBAAgB,QA8CxB,SAOKkV,EAAAA,GAAAA,oBAAmC1P,EAAAA,KAPxC,SAQK6Q,EAAAA,GAAmBgD,EAAAA,KARxB,SASK9C,EAAAA,IAjEL,SAAsB7I,EAAtB,GAA0C,IAAXhH,EAAW,EAAXA,QAC3B,cACOgH,GADP,IAEIkP,eAAgBlW,MAAAA,OAAF,EAAEA,EAASmW,eAqDjC,SAUK3H,EAAAA,GAAAA,4BAA2CwH,IAVhD,SAWKxH,EAAAA,GAAAA,yBAAwCsH,IAX7C,SAYKtH,EAAAA,GAAAA,2BAAyC,SAACxH,EAAOhH,GAAR,OAAoBgW,EAAahP,EAAOhH,GAAS,OAZ/F,SAaKwO,EAAAA,GAAAA,wBAAsC,SAACxH,EAAOhH,GAAR,OAAoB8V,EAAkB9O,EAAOhH,GAAS,MAbjG,GAcOoW,G,2kBCzEP,IAAMpF,EAAe,CAAE3X,QAAQ,EAAOb,SAAU,IAAI6d,KAUpD,SAASC,EAAatP,GAClB,cACOA,GADP,IAEI3N,QAAQ,EACRkd,WAAY,CACR,CAAE9gB,MAAO,sBAAuBuB,KAAM,sBAAuBtC,UAAW8hB,EAAAA,SACxE,CAAE/gB,MAAO,UAAWuB,KAAM,UAAWtC,UAAW+hB,GAChD,CACIhhB,MAAO,gBACPuB,KAAM,kBACNtC,UAAWgiB,GAEf,CACIjhB,MAAO,aACPuB,KAAM,aACNtC,UAAWiiB,GAEf,CACIlhB,MAAO,QACPuB,KAAM,QACNtC,UAAWkiB,GAEf,CACInhB,MAAO,wBACPuB,KAAM,MACN6f,WAAW,EACXniB,UAAWoiB,IAEjBrd,OAAO+G,WA6BjB,SAASuW,EAAyB/P,EAAlC,GAAsD,MAAXhH,EAAW,EAAXA,QACvC,cACOgH,GADP,IAEIuP,WAAU,UAAEvP,EAAMuP,kBAAR,aAAE,EAAkBnc,KAAI,SAAClB,GAAD,MAA4B,QAAhBA,EAAOlC,KAAP,OACvCkC,GADuC,IAE1C2d,UAAW7W,IACV9G,OAgDb,IAAIlG,EAAW,CACXod,cAAe4G,EAAAA,GACfxL,mBAAAA,EAAAA,SAGStY,GAAe+jB,EAAAA,EAAAA,KAAgB,eAEnCzI,EAAAA,GAAAA,wBA9HT,SAAwBxH,EAAxB,GAA4C,IAAXhH,EAAW,EAAXA,QAC7B,cACOgH,GADP,IAEIlM,MAAMwJ,EAAAA,EAAAA,IAAiB,CAAC0C,EAAMlM,KAAMkF,EAAQ+C,UAC5CjK,UAAUwL,EAAAA,EAAAA,IAAiB,CAAC0C,EAAMlO,SAAUkH,EAAQ+C,gBAwHhB,SAGnC4L,EAAAA,GAAAA,yBAzCT,SAA0B3H,EAA1B,GAAoD,IAAjBhH,EAAiB,EAAjBA,QAAS7B,EAAQ,EAARA,KACxC,OAAIA,MAAAA,OAAA,EAAAA,EAAMsU,kBAAkBzL,MAAAA,OAAxB,EAAwBA,EAAOyL,iBACxBzL,EAGX,OACOA,GADP,IAEIlM,MAAMwJ,EAAAA,EAAAA,IAAiB,CAAC0C,EAAMlM,KAAMkF,EAAQ+C,QAAQ3I,KAAI,SAAAiK,GACpD,cACOA,GADP,IAEI7L,SAAUwO,EAAMxO,UAAYwO,EAAMxO,SAAS0e,IAAI7S,EAAO5N,iBA4B1B,mBAIhC+X,EAAAA,GAAAA,cAJgC,eAhD5C,SAAuBxH,EAAvB,GAAwC,IAAR7I,EAAQ,EAARA,KACtB3F,EAAWwO,EAAMxO,UAAa,IAAI6d,IAGxC,OAFAlY,EAAKgS,QAAQmD,SAAQ,SAAA7c,GAAE,OAAI+B,EAAS2e,OAAO1gB,MAE3C,OACOuQ,GADP,IAEIxO,SAAU,IAAI6d,IAAI7d,SA0CkB,SAKnCsW,EAAAA,IAzFT,SAAwB9H,EAAxB,GAA4C,IAAXhH,EAAW,EAAXA,QACvBxH,EAAWwO,EAAMxO,UAAa,IAAI6d,IACxC,GAAIrW,EAAQxH,SACR,GAAmB,IAAfwH,EAAQvJ,GACRuQ,EAAMlM,KAAKwY,SAAQ,SAAArQ,GAAG,OAAIzK,EAAS4e,IAAInU,EAAIxM,GAAIwM,UAC5C,CACH,IAAMoU,EAAcrQ,EAAMlM,MAAQkM,EAAMlM,KAAKI,MAAK,qBAAGzE,KAAgBuJ,EAAQvJ,MAC7E+B,EAAS4e,IAAIpX,EAAQvJ,GAArB,OAA8B4gB,GAAe,IAA7C,IAAiD5gB,GAAIuJ,EAAQvJ,WAG9C,IAAfuJ,EAAQvJ,GACRuQ,EAAMlM,KAAKwY,SAAQ,SAAArQ,GAAG,OAAIzK,EAAS2e,OAAOlU,EAAIxM,QACvB,IAAhBuJ,EAAQvJ,GACf+B,EAAS8e,QAET9e,EAAS2e,OAAOnX,EAAQvJ,IAIhC,cACOuQ,GADP,IAEIxO,SAAU,IAAI6d,IAAI7d,SA+DkB,0BAMrB,SAACwO,GAAD,SAAC,KAAgBA,GAAjB,IAAwBxO,SAAU,SANb,SAOnCuW,EAAAA,IA7BT,SAAqB/H,EAArB,GAAyC,IAAXhH,EAAW,EAAXA,QAC1B,cACOgH,GADP,IAEIvH,cAAeO,EAAQwQ,kBAmBa,SAQnCxB,EAAAA,IAvBT,SAAyBhI,EAAzB,GAA6C,IAAXhH,EAAW,EAAXA,QACxBxL,EAAU+iB,SAASvX,EAAQxL,QAAS,IACpCD,EAAOgjB,SAASvX,EAAQzL,KAAM,IACpC,cACOyS,GADP,IAEIxS,QAAS6Y,MAAM7Y,GAAW,GAAKA,EAC/BD,KAAM8Y,MAAM9Y,GAAQ,EAAIA,QASY,SASnCia,EAAAA,GAAAA,8BAA6CwH,GATV,GAWxChF,GAGSwG,EAAuB,wBAAMP,EAAAA,EAAAA,KAAgB,eAEjDtI,EAAAA,GAAAA,sBAA+C2H,IAFE,SAGjD3H,EAAAA,GAAAA,8BAAuDoI,GAHN,GAKtD/F,IAGG,SAAS/d,IAA4E,IAA1DwkB,EAA0D,uDAArC,SAACzQ,GAAD,OAAWA,GAAOgK,EAAmB,uDAAJ,GACpF,MAAQ,CACJlY,SAAU,SAACkO,EAAOhH,GAAR,YACHyX,EAAmB,MACfR,EAAAA,EAAAA,IAAiB,KACbS,EAAAA,IADY,EAAC,KAEZC,EAAAA,IAAoB3G,GAFzBiG,CAEyCjQ,EAAOhH,IACpDA,MAKR,SAAS4X,IAA0E,IAA1DH,EAA0D,uDAArC,SAACzQ,GAAD,OAAWA,GAAOgK,EAAmB,uDAAJ,GAClF,MAAQ,CACJjY,cAAe,SAACiO,EAAOhH,GAAR,YACRyX,EAAmB,MACfR,EAAAA,EAAAA,IAAiB,KACbY,GADY,EAAC,KAEZC,GAAkB9G,GAFvBiG,CAEuCjQ,EAAOhH,IAClDA,MAKf,W","sources":["webpack:///./src/Routes.js","webpack:///./src/Utilities/DeleteModal.js","webpack:///./src/Utilities/InsightsDisconnected.js","webpack:///./src/Utilities/OperatingSystemFormatter.js","webpack:///./src/Utilities/TagWithDialog.js","webpack:///./src/Utilities/TagsModal.js","webpack:///./src/Utilities/Wrapper.js","webpack:///./src/Utilities/constants.js","webpack:///./src/Utilities/sharedFunctions.js","webpack:///./src/api/api.js","webpack:///./src/api/systemIssues.js","webpack:///./src/components/GeneralInfo/EditButton/EditButton.js","webpack:///./src/components/GeneralInfo/InfoTable/InfoTable.js","webpack:///./src/components/GeneralInfo/LoadingCard/LoadingCard.js","webpack:///./src/components/GeneralInfo/SystemStatusCard/SystemStatusCard.js","webpack:///./src/components/GeneralInfo/TextInputModal/TextInputModal.js","webpack:///./src/components/InventoryTable/TitleColumn.js","webpack:///./src/components/SpinnerFallback.js","webpack:///./src/constants.js","webpack:///./src/store/action-types.js","webpack:///./src/store/system-issues-actions.js","webpack:///./src/store/actions.js","webpack:///./src/store/entities.js","webpack:///./src/store/index.js","webpack:///./src/components/SystemDetails/Compliance.js","webpack:///./src/components/SystemDetails/Vulnerability.js","webpack:///./src/components/SystemDetails/Advisor.js","webpack:///./src/components/SystemDetails/Patch.js","webpack:///./src/components/SystemDetails/Ros.js","webpack:///./src/store/systemIssues.js","webpack:///./src/store/entityDetails.js","webpack:///./src/store/reducers.js"],"sourcesContent":["import { Route, Redirect, Switch } from 'react-router-dom';\nimport React, { lazy, Suspense, useContext, useEffect } from 'react';\nimport { tagsMapper } from './constants';\nimport { reducers, RegistryContext, tableReducer } from './store';\nimport { mergeWithEntities } from './store/reducers';\n\nconst InventoryTable = lazy(() => import('./routes/InventoryTable'));\nconst InventoryDetail = lazy(() => import('./routes/InventoryDetail'));\n\nexport const routes = {\n    table: '/',\n    detail: '/:inventoryId',\n    detailWithModal: '/:inventoryId/:modalId'\n};\n\nexport const Routes = () => {\n    const { getRegistry } = useContext(RegistryContext);\n    useEffect(() => {\n        getRegistry().register({\n            ...reducers,\n            ...mergeWithEntities(tableReducer)\n        });\n    }, [getRegistry]);\n    const searchParams = new URLSearchParams(location.search);\n\n    return (\n        <Suspense fallback=\"\">\n            <Switch>\n                <Route\n                    exact\n                    path={routes.table}\n                    render={() => <InventoryTable\n                        status={searchParams.getAll('status')}\n                        source={searchParams.getAll('source')}\n                        filterbyName={searchParams.getAll('hostname_or_id')}\n                        tagsFilter={searchParams.getAll('tags')?.[0]?.split?.(',').reduce?.(tagsMapper, [])}\n                        operatingSystem={searchParams.getAll('operating_system')}\n                        page={searchParams.getAll('page')}\n                        perPage={searchParams.getAll('per_page')}\n                    />}\n                    rootClass='inventory'\n                />\n                <Route exact path={routes.detailWithModal} component={InventoryDetail} rootClass='inventory' />\n                <Route exact path={routes.detail} component={InventoryDetail} rootClass='inventory' />\n                <Redirect path=\"*\" to=\"/\" />\n            </Switch>\n        </Suspense>\n    );\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    ClipboardCopy,\n    Modal,\n    Split,\n    SplitItem,\n    Stack,\n    StackItem,\n    Level,\n    LevelItem,\n    Button\n} from '@patternfly/react-core';\n\nimport ExclamationTriangleIcon from  '@patternfly/react-icons/dist/js/icons/exclamation-triangle-icon';\n\nconst DeleteModal = ({ handleModalToggle, isModalOpen, currentSytems, onConfirm }) => {\n    let systemToRemove;\n    let systemLabel = 'system';\n    if (Array.isArray(currentSytems)) {\n        systemToRemove = currentSytems.length === 1 ? currentSytems[0].display_name : `${currentSytems.length} systems`;\n        systemLabel = currentSytems.length === 1 ? systemLabel : 'systems';\n    } else {\n        systemToRemove = currentSytems.display_name;\n    }\n\n    return <Modal\n        variant=\"small\"\n        title=\"Remove from inventory\"\n        className=\"ins-c-inventory__table--remove\"\n        ouiaId=\"inventory-delete-modal\"\n        isOpen={isModalOpen}\n        onClose={() => handleModalToggle(false)}\n        appendTo={document.getElementsByClassName('inventory')[0] || document.body}\n    >\n        <Split hasGutter>\n            <SplitItem><ExclamationTriangleIcon size=\"xl\" className=\"ins-m-alert\" /></SplitItem>\n            <SplitItem isFilled>\n                <Stack hasGutter>\n                    <StackItem>\n                        {systemToRemove} will be removed from\n                                    all {location.host} applications and services. You need to re-register\n                        the {systemLabel} to add it back to your inventory.\n                    </StackItem>\n                    <StackItem>\n                        To disable the daily upload for this {systemLabel}, use the following command:\n                    </StackItem>\n                    <StackItem>\n                        <ClipboardCopy>insights-client --unregister</ClipboardCopy>\n                    </StackItem>\n                </Stack>\n            </SplitItem>\n        </Split>\n        <Level hasGutter>\n            <LevelItem>\n                <Button\n                    variant=\"danger\"\n                    ouiaId=\"confirm-inventory-delete\"\n                    onClick={onConfirm}\n                >\n                    Remove\n                </Button>\n                <Button\n                    variant=\"link\"\n                    ouiaId=\"cancel-inventory-delete\"\n                    onClick={() => handleModalToggle(false)}\n                >\n                    Cancel\n                </Button>\n            </LevelItem>\n        </Level>\n    </Modal>;\n};\n\nconst ActiveSystemProp = PropTypes.shape({\n    id: PropTypes.string,\n    displayName: PropTypes.string\n});\n\nDeleteModal.propTypes = {\n    isModalOpen: PropTypes.bool,\n    currentSytems: PropTypes.oneOfType([ActiveSystemProp, PropTypes.arrayOf(ActiveSystemProp)]),\n    handleModalToggle: PropTypes.func,\n    onConfirm: PropTypes.func\n};\n\nDeleteModal.defaultProps = {\n    isModalOpen: false,\n    currentSytems: {},\n    handleModalToggle: () => undefined,\n    onConfirm: () => undefined\n};\n\nexport default DeleteModal;\n","import React from 'react';\n\nimport { Tooltip, Grid, GridItem } from '@patternfly/react-core';\nimport { DisconnectedIcon } from '@patternfly/react-icons';\n\nimport './InsightsDisconnected.scss';\n\nconst InsightsDisconnected = () => (\n    <Tooltip\n        maxWidth='14rem'\n        content={(\n            <Grid hasGutter>\n                <GridItem>\n                    Insights client not reporting\n                </GridItem>\n                <GridItem>\n                    From the main navigation, open\n                    &quot;Registration Assitant&quot; to learn\n                    how to set up Insights.\n                </GridItem>\n            </Grid>\n        )}>\n        <span className=\"pf-u-ml-sm ins-c-inventor__disconnected-icon\">\n            <DisconnectedIcon />\n        </span>\n    </Tooltip>\n);\n\nexport default InsightsDisconnected;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst OperatingSystemFormatter = ({ operatingSystem }) => {\n    if (operatingSystem?.name === 'RHEL') {\n        const version = (operatingSystem.major && operatingSystem.minor !== null)\n        && `${operatingSystem.major}.${operatingSystem?.minor}` || null;\n\n        return <span>\n            RHEL {version}\n        </span>;\n    }\n\n    return <span>\n        {operatingSystem?.name || 'Not available'}\n    </span>;\n};\n\nOperatingSystemFormatter.propTypes = {\n    operatingSystem: PropTypes.shape({\n        name: PropTypes.string,\n        major: PropTypes.number,\n        minor: PropTypes.number\n    })\n};\n\nexport default OperatingSystemFormatter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { TagCount } from '@redhat-cloud-services/frontend-components/TagCount';\nimport { loadTags, toggleTagModal } from '../store/actions';\n\nconst TagWithDialog = ({ count, loadTags, systemId }) => (\n    <span\n        onClick={(e) => e.stopPropagation()}\n        className=\"ins-c-inventory__list-tags\"\n        data-ouia-component-id={`${systemId}-tag-button`}\n    >\n        <TagCount count={count} onTagClick={ () => loadTags(systemId, count) } />\n    </span>\n);\n\nTagWithDialog.propTypes = {\n    count: PropTypes.number,\n    loadTags: PropTypes.func,\n    systemId: PropTypes.string\n};\n\nconst dispatchToProps = (dispatch) => ({\n    loadTags: (systemId, count) => {\n        if (systemId) {\n            dispatch(toggleTagModal(true));\n            dispatch(loadTags(systemId, undefined, undefined, count));\n        }\n    }\n});\n\nexport default connect(() => ({}), dispatchToProps)(TagWithDialog);\n","import React, { useState, useCallback, useEffect } from 'react';\nimport { useSelector, useDispatch, shallowEqual } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { toggleTagModal, fetchAllTags } from '../store/actions';\nimport { TagModal } from '@redhat-cloud-services/frontend-components/TagModal';\nimport { cellWidth } from '@patternfly/react-table';\nimport debounce from 'lodash/debounce';\nimport flatten from 'lodash/flatten';\n\nconst TagsModal = ({\n    filterTagsBy,\n    onToggleModal,\n    onApply,\n    getTags\n}) => {\n    const dispatch = useDispatch();\n    const [filterBy, setFilterBy] = useState('');\n    const [selected, setSelected] = useState([]);\n    const [statePagination, setStatePagination] = useState({\n        perPage: 10,\n        page: 1\n    });\n\n    const showTagDialog = useSelector(({ entities, entityDetails }) => (entities || entityDetails)?.showTagDialog);\n\n    const pagination = useSelector(({ entities, entityDetails }) => {\n        if (entities?.activeSystemTag || entityDetails?.entity) {\n            return statePagination;\n        }\n\n        return entities?.allTagsPagination || statePagination;\n    }, shallowEqual);\n\n    const loaded = useSelector(({ entities, entityDetails }) => entities?.tagModalLoaded || entityDetails?.tagModalLoaded);\n\n    const activeSystemTag = useSelector(({ entities, entityDetails }) => entities?.activeSystemTag || entityDetails?.entity);\n    const tags = useSelector(({ entities, entityDetails }) => {\n        const activeTags = entities?.activeSystemTag?.tags || entityDetails?.entity?.tags;\n        if (activeTags) {\n            return activeTags?.filter(\n                (tag) => Object.values(tag).some((val) => val?.includes(filterBy))\n            ).slice(statePagination?.perPage * (statePagination?.page - 1), statePagination?.perPage * statePagination?.page);\n        }\n\n        return entities?.allTags?.reduce((acc, { tags }) => ([\n            ...acc,\n            ...flatten(tags.map(({ tag }) => tag))\n        ]), []);\n    });\n\n    const tagsCount = useSelector(({ entities, entityDetails }) => {\n        const activeTags = (entities?.activeSystemTag?.tags || entityDetails?.entity?.tags)?.filter(\n            (tag) => Object.values(tag).some((val) => val?.includes(filterBy))\n        );\n        return activeTags ? activeTags.length : entities?.allTagsTotal;\n    });\n\n    useEffect(() => {\n        setFilterBy(filterTagsBy);\n    }, [filterTagsBy]);\n\n    const fetchTags = (pagination, filterBy) => {\n        if (!activeSystemTag) {\n            dispatch(fetchAllTags(filterBy, pagination, getTags));\n        } else {\n            setStatePagination(() => pagination);\n        }\n    };\n\n    const debouncedFetch = useCallback(debounce(fetchTags, 800), [activeSystemTag]);\n\n    return (\n        <TagModal\n            className=\"ins-c-inventory__tags-modal\"\n            tableProps={{\n                canSelectAll: false\n            }}\n            {...loaded && {\n                loaded,\n                pagination: {\n                    ...pagination,\n                    count: tagsCount\n                },\n                rows: tags?.map(({ key, value, namespace }) => ({\n                    id: `${namespace}/${key}=${value}`,\n                    selected: selected.find(({ id }) => id === `${namespace}/${key}=${value}`),\n                    cells: [key, value, namespace]\n                })) || []\n            }}\n            loaded={ loaded }\n            width=\"auto\"\n            isOpen={ showTagDialog }\n            toggleModal={() => {\n                setSelected([]);\n                setFilterBy('');\n                onToggleModal();\n                dispatch(toggleTagModal(false));\n            }}\n            filters={[\n                {\n                    label: 'Tags filter',\n                    placeholder: 'Filter tags',\n                    value: 'tags-filter',\n                    filterValues: {\n                        value: filterBy,\n                        onChange: (_e, value) => {\n                            debouncedFetch(pagination, value);\n                            setFilterBy(value);\n                        }\n                    }\n                }\n            ]}\n            onUpdateData={ (pagination) => fetchTags(pagination, filterBy) }\n            columns={ [\n                { title: 'Name' },\n                { title: 'Value', transforms: [cellWidth(30)] },\n                { title: 'Tag source', transforms: [cellWidth(30)] }\n            ] }\n            {...!activeSystemTag && {\n                onSelect: (selected) => setSelected(selected),\n                selected,\n                onApply: () => onApply && onApply(selected)\n            }}\n            bulkSelect={{ id: 'bulk-select-tags' }}\n            title={ activeSystemTag ?\n                `${activeSystemTag.display_name} (${tagsCount})` :\n                `All tags in inventory (${tagsCount})`\n            }\n        />\n    );\n};\n\nTagsModal.propTypes = {\n    onApply: PropTypes.func,\n    onToggleModal: PropTypes.func,\n    filterTagsBy: PropTypes.string,\n    customFilters: PropTypes.shape({\n        tags: PropTypes.oneOfType([\n            PropTypes.object,\n            PropTypes.arrayOf(PropTypes.string)\n        ])\n    }),\n    getTags: PropTypes.func\n};\n\nTagsModal.defaultProps = {\n    filterTagsBy: '',\n    onToggleModal: () => undefined\n};\n\nexport default TagsModal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { usePermissionsWithContext } from '@redhat-cloud-services/frontend-components-utilities/RBACHook';\n\nconst RenderWrapper = ({ cmp: Component, isRbacEnabled, inventoryRef, store, ...props }) => {\n    const { hasAccess } = usePermissionsWithContext([\n        'inventory:*:*',\n        'inventory:*:read',\n        'inventory:hosts:read'\n    ]);\n    return (\n        <Component\n            {...props}\n            { ...inventoryRef && {\n                ref: inventoryRef\n            }}\n            hasAccess={isRbacEnabled ? hasAccess : true}\n            store={ store }\n        />\n    );\n};\n\nRenderWrapper.propTypes = {\n    cmp: PropTypes.any,\n    inventoryRef: PropTypes.any,\n    store: PropTypes.object,\n    customRender: PropTypes.bool,\n    isRbacEnabled: PropTypes.bool\n};\n\nexport default RenderWrapper;\n","import { createContext, useContext } from 'react';\nimport { usePermissionsWithContext } from '@redhat-cloud-services/frontend-components-utilities/RBACHook';\nimport { INVENTORY_WRITE_PERMISSIONS } from '../constants';\nimport { RegistryContext } from '../store';\nimport { loadEntities } from '../store/actions';\n\nexport const TEXT_FILTER = 'hostname_or_id';\nexport const TEXTUAL_CHIP = 'textual';\nexport const TAG_CHIP = 'tags';\nexport const STALE_CHIP = 'staleness';\nexport const REGISTERED_CHIP = 'registered_with';\nexport const OS_CHIP = 'operating_system';\nexport const staleness = [\n    { label: 'Fresh', value: 'fresh' },\n    { label: 'Stale', value: 'stale' },\n    { label: 'Stale warning', value: 'stale_warning' }\n];\nexport const registered = [\n    { label: 'insights-client', value: 'puptoo', idName: 'Insights id', idValue: 'insights_id' },\n    { label: 'subscription-manager', value: 'rhsm-conduit',\n        idName: 'Subscription manager id', idValue: 'subscription_manager_id' },\n    { label: 'Satellite/Discovery', value: 'yupana' },\n    { label: 'insights-client not connected', value: '!puptoo' }\n];\nexport const InventoryContext = createContext({});\nexport const defaultFilters = {\n    staleFilter: ['fresh', 'stale']\n};\n\nexport function filterToGroup(filter = [], valuesKey = 'values') {\n    return filter.reduce((accGroup, group) => ({\n        ...accGroup,\n        [group.key]: group[valuesKey].reduce((acc, curr) => ({ ...acc, [curr.key]: {\n            isSelected: true,\n            group: curr.group,\n            item: {\n                meta: {\n                    tag: {\n                        key: curr.tagKey,\n                        value: curr.value\n                    }\n                }\n            }\n        } }), {})\n    }), {});\n}\n\nexport const arrayToSelection = (selected) => selected.reduce((acc, { cells: [key, value, namespace] }) => ({\n    ...acc,\n    [namespace]: {\n        ...acc[namespace?.title || namespace],\n        [key?.title || key]: {\n            isSelected: true,\n            group: { value: namespace?.title || namespace, label: namespace?.title || namespace },\n            item: {\n                value: key?.title || key,\n                meta: { tag: { key: key?.title || key, value: value?.title || value } }\n            }\n        }\n    }\n}), {});\n\nexport function reduceFilters(filters = []) {\n    return filters.reduce((acc, oneFilter) => {\n        if (oneFilter.value === TEXT_FILTER) {\n            return { ...acc, textFilter: oneFilter.filter };\n        } else if ('tagFilters' in oneFilter) {\n            return {\n                ...acc,\n                tagFilters: filterToGroup(oneFilter.tagFilters)\n            };\n        }\n\n        const foundKey = ['staleFilter', 'registeredWithFilter', 'osFilter', '']\n        .find(item => Object.keys(oneFilter).includes(item));\n\n        return {\n            ...acc,\n            ...foundKey && { [foundKey]: oneFilter[foundKey] }\n        };\n    }, {\n        textFilter: '',\n        tagFilters: {},\n        ...defaultFilters\n    });\n}\n\nexport const loadSystems = (options, showTags, getEntities) => {\n    const limitedItems = options?.items?.length > options.per_page ? options?.items?.slice(\n        (options?.page - 1) * options.per_page, options?.page * options.per_page\n    ) : options?.items;\n\n    const config = {\n        ...options.hasItems && {\n            sortBy: options?.sortBy?.key,\n            orderDirection: options?.sortBy?.direction?.toUpperCase()\n        },\n        ...options,\n        filters: options?.filters || options?.activeFilters,\n        orderBy: options?.orderBy || options?.sortBy?.key,\n        orderDirection: options?.orderDirection?.toUpperCase() || options?.sortBy?.direction?.toUpperCase(),\n        ...limitedItems?.length > 0 && {\n            itemsPage: options?.page,\n            page: 1\n        }\n    };\n\n    return loadEntities(limitedItems, config, { showTags }, getEntities);\n};\n\nexport const reloadWrapper = (event, callback) => {\n    event.payload.then(data => {\n        callback();\n        return data;\n    });\n\n    return event;\n};\n\nexport const isEmpty = (check) => !check || check?.length === 0;\n\nexport const generateFilter = (status, source, tagsFilter, filterbyName, operatingSystem) => ([\n    !isEmpty(status) && {\n        staleFilter: Array.isArray(status) ? status : [status]\n    },\n    !isEmpty(tagsFilter) && {\n        tagFilters: Array.isArray(tagsFilter) ? tagsFilter : [tagsFilter]\n    },\n    !isEmpty(source) && {\n        registeredWithFilter: Array.isArray(source) ? source : [source]\n    },\n    !isEmpty(filterbyName) && {\n        value: 'hostname_or_id',\n        filter: Array.isArray(filterbyName) ? filterbyName[0] : filterbyName\n    },\n    (!isEmpty(status) || !isEmpty(tagsFilter) || !isEmpty(filterbyName)) && isEmpty(source) && {\n        registeredWithFilter: []\n    },\n    (!isEmpty(source) || !isEmpty(tagsFilter) || !isEmpty(filterbyName)) && isEmpty(status) && {\n        staleFilter: []\n    },\n    !isEmpty(operatingSystem) && {\n        osFilter: Array.isArray(operatingSystem) ? operatingSystem : [operatingSystem]\n    }\n].filter(Boolean));\n\nexport const useWritePermissions = () => {\n    const { hasAccess } = usePermissionsWithContext(INVENTORY_WRITE_PERMISSIONS);\n\n    return hasAccess;\n};\n\nexport const useGetRegistry = () => {\n    const { getRegistry } = useContext(RegistryContext);\n\n    return getRegistry;\n};\n\nexport const allStaleFilters = ['fresh', 'stale', 'stale_warning', 'unknown'];\n","export const subtractWeeks = (numOfWeeks, date = new Date()) => {\n    date.setDate(date.getDate() - numOfWeeks * 7);\n\n    return date;\n};\n\nexport const verifyCollectorStaleness = (reporterStaleness) =>{\n    const stalenessDate = new Date(reporterStaleness.stale_timestamp);\n    const currentDateTime = new Date();\n\n    const twoWeeksPeriod = subtractWeeks(2);\n    const oneWeeksPeriod = subtractWeeks(1);\n\n    if (stalenessDate > currentDateTime) {\n        return 'Fresh';\n    } else if (oneWeeksPeriod < stalenessDate && stalenessDate < currentDateTime) {\n        return 'Stale';\n    }\n    else if (twoWeeksPeriod < stalenessDate && stalenessDate < oneWeeksPeriod) {\n        return 'Stale warning';\n    } else {\n        return 'Culled';\n    }\n};\n\nexport const verifyCulledInsightsClient = (perReporterStaleness) => {\n    //TODO: get rid of !perReporterStaleness condition when dependant apps have per_reporter_staleness info\n    if (!perReporterStaleness) {\n        return false;\n    }\n    else if (perReporterStaleness.puptoo) {\n        return verifyCollectorStaleness(perReporterStaleness.puptoo) === 'Culled';\n    } else {\n        return true;\n    }\n};\n","import 'abortcontroller-polyfill/dist/polyfill-patch-fetch';\nexport const INVENTORY_API_BASE = '/api/inventory/v1';\nimport flatMap from 'lodash/flatMap';\n\nimport instance from '@redhat-cloud-services/frontend-components-utilities/interceptors';\nimport { generateFilter, mergeArraysByKey } from '@redhat-cloud-services/frontend-components-utilities/helpers';\nimport { HostsApi, TagsApi, SystemProfileApi } from '@redhat-cloud-services/host-inventory-client';\nimport { allStaleFilters } from '../Utilities/constants';\n\nexport { instance };\nexport const hosts = new HostsApi(undefined, INVENTORY_API_BASE, instance);\nexport const tags = new TagsApi(undefined, INVENTORY_API_BASE, instance);\nexport const systemProfile = new SystemProfileApi(undefined, INVENTORY_API_BASE, instance);\n\nexport const getEntitySystemProfile = (item) => hosts.apiHostGetHostSystemProfileById([item]);\n\n/* eslint camelcase: off */\nexport const mapData = ({ facts = {}, ...oneResult }) => ({\n    ...oneResult,\n    rawFacts: facts,\n    facts: {\n        ...facts.reduce?.((acc, curr) => ({ ...acc, [curr.namespace]: curr.facts }), {}),\n        ...flatMap(facts, (oneFact => Object.values(oneFact)))\n        .map(item => typeof item !== 'string' ? ({\n            ...item,\n            // eslint-disable-next-line camelcase\n            os_release: item.os_release || item.release,\n            // eslint-disable-next-line camelcase\n            display_name: item.display_name || item.fqdn || item.id\n        }) : item)\n        .reduce(\n            (acc, curr) => ({ ...acc, ...(typeof curr !== 'string') ? curr : {} }), {}\n        )\n    }\n});\n\nexport const mapTags = (data = { results: [] }, { orderBy, orderDirection } = {}) => {\n    if (data.results.length > 0) {\n        return hosts.apiHostGetHostTags(data.results.map(({ id }) => id), data.per_page, 1, orderBy, orderDirection)\n        .then(({ results: tags }) => ({\n            ...data,\n            results: data.results.map(row => ({ ...row, tags: tags[row.id] || [] }))\n        }))\n        .catch(() => ({\n            ...data,\n            results: data.results.map(row => ({\n                ...row,\n                tags: []\n            }))\n        }));\n    }\n\n    return data;\n};\n\nexport const constructTags = (tagFilters) => {\n    return flatMap(\n        tagFilters,\n        ({ values, category: namespace }) => values.map(({ value: tagValue, tagKey }) => (\n            `${namespace ? `${namespace}/` : ''}${tagKey}${tagValue ? `=${tagValue}` : ''}`\n        ))\n    ) || '';\n};\n\nexport const calculateSystemProfile = (osFilter) => {\n    let systemProfile = {};\n    const osFilterValues = Array.isArray(osFilter) ? osFilter : Object.values(osFilter || {})\n    .flatMap((majorOsVersion) => Object.keys(majorOsVersion));\n\n    if (osFilterValues?.length > 0) {\n        systemProfile.operating_system = {\n            RHEL: {\n                version: {\n                    eq: osFilterValues\n                }\n            }\n        };\n    }\n\n    return generateFilter({ system_profile: systemProfile });\n};\n\nexport const filtersReducer = (acc, filter = {}) => ({\n    ...acc,\n    ...filter.value === 'hostname_or_id' && { hostnameOrId: filter.filter },\n    ...'tagFilters' in filter && { tagFilters: filter.tagFilters },\n    ...'staleFilter' in filter && { staleFilter: filter.staleFilter },\n    ...'registeredWithFilter' in filter && { registeredWithFilter: filter.registeredWithFilter },\n    ...'osFilter' in filter && { osFilter: filter.osFilter }\n});\n\nexport async function getEntities(items, {\n    controller,\n    hasItems,\n    filters,\n    per_page: perPage,\n    page,\n    orderBy,\n    orderDirection,\n    fields = { system_profile: ['operating_system'] },\n    ...options\n}, showTags) {\n    if (hasItems && items.length > 0) {\n        let data = await hosts.apiHostGetHostById(\n            items,\n            undefined,\n            undefined,\n            undefined,\n            undefined,\n            undefined,\n            undefined,\n            undefined,\n            { cancelToken: controller && controller.token }\n        );\n\n        if (fields && Object.keys(fields).length) {\n            try {\n                const result = await hosts.apiHostGetHostSystemProfileById(\n                    items,\n                    undefined,\n                    undefined,\n                    undefined,\n                    undefined,\n                    undefined,\n                    undefined,\n                    {\n                        cancelToken: controller && controller.token,\n                        query: generateFilter(fields, 'fields')\n                    }\n                );\n\n                data = {\n                    ...data,\n                    results: mergeArraysByKey([\n                        data?.results,\n                        result?.results || []\n                    ], 'id')\n                };\n            } catch (e) {\n                console.error(e); // eslint-disable-line\n            }\n        }\n\n        data = showTags ? await mapTags(data) : data;\n\n        data = {\n            ...data,\n            filters,\n            results: data.results.map(result => mapData({\n                ...result,\n                display_name: result.display_name || result.fqdn || result.id\n            }))\n        };\n\n        return data;\n    } else if (!hasItems) {\n        return hosts.apiHostGetHostList(\n            undefined,\n            undefined,\n            filters.hostnameOrId,\n            undefined,\n            undefined,\n            undefined,\n            undefined,\n            perPage,\n            page,\n            orderBy,\n            orderDirection,\n            filters.staleFilter,\n            [\n                ...constructTags(filters.tagFilters),\n                ...options.tags || []\n            ],\n            filters?.registeredWithFilter,\n            undefined,\n            undefined,\n            {\n                cancelToken: controller && controller.token,\n                query: {\n                    ...(options.filter && Object.keys(options.filter).length && generateFilter(options.filter)),\n                    ...(calculateSystemProfile(filters.osFilter)),\n                    ...(fields && Object.keys(fields).length && generateFilter(fields, 'fields'))\n                }\n            }\n        )\n        .then((data) => showTags ? mapTags(data, { orderBy, orderDirection }) : data)\n        .then(({ results = [], ...data } = {}) => ({\n            ...data,\n            filters,\n            results: results.map(result => mapData({\n                ...result,\n                display_name: result.display_name || result.fqdn || result.id\n            }))\n        }));\n    }\n\n    return {\n        page,\n        per_page: perPage,\n        results: []\n    };\n}\n\nexport function getTags(systemId, search, { pagination } = { pagination: {} }) {\n    return hosts.apiHostGetHostTags(\n        systemId,\n        pagination.perPage || 10,\n        pagination.page || 1,\n        undefined,\n        undefined,\n        search\n    );\n}\n\nexport function getAllTags(search, pagination = {}) {\n    return tags.apiTagGetTags(\n        [],\n        'tag',\n        'ASC',\n        pagination.perPage || 10,\n        pagination.page || 1,\n        //TODO: ask the backend to return all tags by default.\n        allStaleFilters,\n        search,\n        undefined,\n        undefined,\n        undefined,\n        undefined,\n        undefined,\n        undefined,\n        undefined,\n        undefined,\n        undefined\n    );\n}\n\nexport function getOperatingSystems(params = []) {\n    return systemProfile.apiSystemProfileGetOperatingSystem(...params);\n}\n","import instance from '@redhat-cloud-services/frontend-components-utilities/interceptors';\nexport const systemIssuesInstance = instance;\n\nexport const cves = async (systemId) => {\n    try {\n        const [low, moderate, important, critical] = await Promise.all([2, 4, 5, 7].map((impact) => (\n            instance.get(\n                `/api/vulnerability//v1/systems/${systemId}/cves?page=1&page_size=1&impact=${impact}`\n            )\n        )));\n        return { low, moderate, important, critical };\n    } catch (_e) {\n        return {};\n    }\n};\n\nexport const patch = async (systemId) => {\n    try {\n        return await instance.get(`/api/patch/v1/systems/${systemId}`);\n    } catch (_e) {\n        return {};\n    }\n};\n\nexport const advisor = async (systemId) => {\n    try {\n        return await instance.get(`/api/insights/v1/system/${systemId}/reports/`);\n    } catch (_e) {\n        return {};\n    }\n};\n\nexport const compliance = async (systemId) => {\n    const query = `query System($systemId: String!) {\n        system(id: $systemId) {\n            id\n            name\n            profiles {\n                id\n                name\n                refId\n                compliant\n                rulesFailed\n                rulesPassed\n                lastScanned\n                score\n                __typename\n            }\n            __typename\n        }\n    }`;\n    try {\n        return await instance.post('/api/compliance/graphql', {\n            operationName: 'System',\n            query,\n            variables: {\n                systemId\n            }\n        });\n    } catch (_e) {\n        return {};\n    }\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { usePermissionsWithContext } from '@redhat-cloud-services/frontend-components-utilities/RBACHook';\n\nimport { PencilAltIcon } from '@patternfly/react-icons';\n\nconst InnerButton = ({ link, onClick }) => (\n    <a\n        className=\"ins-c-inventory__detail--action\"\n        href={ `${window.location.href}/${link}` }\n        onClick={ onClick }\n    >\n        <PencilAltIcon />\n    </a>\n);\n\nInnerButton.propTypes = {\n    link: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired\n};\n\nlet permissionsCache = undefined;\n\nconst EditButtonUnknownPermissions = (props) => {\n    const { hasAccess } = usePermissionsWithContext([\n        'inventory:*:*',\n        'inventory:hosts:write',\n        'inventory:*:write'\n    ]);\n\n    if (hasAccess) {\n        permissionsCache = hasAccess;\n    }\n\n    if (!hasAccess) {\n        return null;\n    }\n\n    return <InnerButton {...props}/>;\n};\n\nEditButtonUnknownPermissions.propTypes = {\n    link: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired\n};\n\nconst EditButtonWrapper = ({ writePermissions, ...props }) => {\n    if (insights.chrome.isProd || writePermissions || permissionsCache) {\n        return <InnerButton {...props} />;\n    }\n\n    if (typeof writePermissions !== 'boolean') {\n        return <EditButtonUnknownPermissions {...props} />;\n    }\n\n    return null;\n};\n\nEditButtonWrapper.propTypes = {\n    writePermissions: PropTypes.bool\n};\n\nexport default EditButtonWrapper;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { TextContent, Text, TextVariants, Pagination } from '@patternfly/react-core';\nimport PrimaryToolbar from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport TableToolbar from '@redhat-cloud-services/frontend-components/TableToolbar';\nimport { Table, TableHeader, TableBody, TableVariant, SortByDirection } from '@patternfly/react-table';\nimport flatMap from 'lodash/flatMap';\nimport { prepareRows, filterRows, generateFilters, onDeleteFilter } from '../../../constants';\nclass InfoTable extends Component {\n    state = {\n        sortBy: { index: 0, direction: SortByDirection.asc },\n        opened: [],\n        pagination: {\n            page: 1,\n            perPage: 10\n        },\n        activeFilters: {}\n    };\n\n    onSort = (event, index, direction) => {\n        const { expandable } = this.props;\n        this.props.onSort(event, expandable ? index - 1 : index, direction);\n        this.setState({\n            sortBy: {\n                index,\n                direction\n            }\n        });\n    }\n\n    onCollapse = (_event, index, isOpen) => {\n        const { opened } = this.state;\n        opened[index] = isOpen;\n        this.setState({\n            opened\n        });\n    }\n\n    onUpdatePagination = ({ page, perPage }) => {\n        this.setState({ pagination: { ...this.state.pagination, page, perPage } });\n    }\n\n    setFilter = (key, value, label) => {\n        const { activeFilters } = this.state;\n        // eslint-disable-next-line no-unused-vars\n        const { [key]: currFilter, ...restFilter } = activeFilters;\n        this.setState({\n            activeFilters: {\n                ...restFilter,\n                ...value.length !== 0 && {\n                    [key]: { key, value, label }\n                }\n            },\n            pagination: { ...this.state.pagination, page: 1 }\n        });\n    }\n\n    onDeleteFilter = (_e, [deleted], deleteAll) => {\n        this.setState({\n            activeFilters: onDeleteFilter(\n                deleted,\n                deleteAll,\n                this.state.activeFilters\n            ),\n            pagination: { ...this.state.pagination, page: 1 }\n        });\n    }\n\n    render() {\n        const { cells, rows, expandable, filters } = this.props;\n        const { sortBy, opened, pagination, activeFilters } = this.state;\n        const collapsibleProps = expandable ? { onCollapse: this.onCollapse } : {};\n        const activeRows = filterRows(rows, activeFilters);\n        const mappedRows = expandable ? flatMap(\n            prepareRows(activeRows, pagination),\n            ({ child, ...row }, key) => [\n                {\n                    ...row,\n                    isOpen: opened[key * 2] || false\n                },\n                {\n                    cells: [{ title: child }],\n                    parent: key * 2\n                }\n            ]) : prepareRows(activeRows, pagination);\n        return (\n            <Fragment>\n                <PrimaryToolbar pagination={{\n                    ...pagination,\n                    itemCount: activeRows.length,\n                    onSetPage: (_e, page) => this.onUpdatePagination({ ...pagination, page }),\n                    onPerPageSelect: (_e, perPage) => this.onUpdatePagination({ ...pagination, page: 1, perPage })\n                }}\n                {...filters && {\n                    filterConfig: {\n                        items: generateFilters(cells, filters, activeFilters, this.setFilter)\n                    }\n                } }\n                activeFiltersConfig={{\n                    filters: Object.values(activeFilters).map(filter => ({\n                        ...filter,\n                        category: filter.label,\n                        chips: Array.isArray(filter.value) ? filter.value.map(item => ({ name: item })) : [{ name: filter.value }]\n                    })),\n                    onDelete: this.onDeleteFilter\n                }}\n                />\n                {\n                    cells.length !== 1 ? <Table\n                        aria-label=\"General information dialog table\"\n                        variant={ TableVariant.compact }\n                        cells={ cells }\n                        rows={ mappedRows }\n                        sortBy={ {\n                            ...sortBy,\n                            index: expandable && sortBy.index === 0 ? 1 : sortBy.index\n                        } }\n                        onSort={ this.onSort }\n                        { ...collapsibleProps }\n                    >\n                        <TableHeader />\n                        <TableBody />\n                    </Table> :\n                        <TextContent>\n                            {\n                                prepareRows(activeRows, pagination)\n                                .map((row, key) => (\n                                    <Text component={ TextVariants.small } key={ key }>\n                                        { row.title || row }\n                                    </Text>\n                                )) }\n                        </TextContent>\n                }\n                <TableToolbar isFooter className=\"ins-c-inventory__table--toolbar\">\n                    <Pagination\n                        {...pagination}\n                        itemCount={activeRows.length}\n                        variant=\"bottom\"\n                        onSetPage={(_e, page) => this.onUpdatePagination({ ...pagination, page })}\n                        onPerPageSelect={(_e, perPage) => this.onUpdatePagination({ ...pagination, page: 1, perPage })}\n                    />\n                </TableToolbar>\n            </Fragment>\n\n        );\n    }\n}\n\nInfoTable.propTypes = {\n    rows: PropTypes.array,\n    cells: PropTypes.array,\n    onSort: PropTypes.func,\n    expandable: PropTypes.bool,\n    filters: PropTypes.arrayOf(PropTypes.shape({\n        index: PropTypes.number,\n        title: PropTypes.string,\n        type: PropTypes.oneOf(['text', 'checkbox', 'radio', 'group']),\n        options: PropTypes.arrayOf(PropTypes.shape({\n            value: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n            label: PropTypes.node\n        }))\n    }))\n};\nInfoTable.defaultProps = {\n    cells: [],\n    rows: [],\n    onSort: () => undefined,\n    sortBy: {},\n    expandable: false\n};\n\nexport default InfoTable;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    Stack,\n    StackItem,\n    TextContent,\n    Text,\n    TextList,\n    TextVariants,\n    TextListItemVariants,\n    TextListVariants,\n    TextListItem\n} from '@patternfly/react-core';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components/Skeleton';\nimport { useRouteMatch } from 'react-router-dom';\nimport { routes } from '../../../Routes';\n\nconst valueToText = (value, singular, plural) => {\n    if ((value || value === 0) && singular) {\n        return value === 1 ? `1 ${singular}` : `${value} ${plural || `${singular}s`}`;\n    }\n\n    if (value === 0) {\n        return 'None';\n    }\n\n    return value || 'Not available';\n};\n\nexport const Clickable = ({ item: { onClick, value, target, plural, singular } }) => (\n    <a\n        onClick={ event => {\n            event.preventDefault();\n            onClick(event, { value, target });\n        } }\n        href={ `${window.location.href.split('#')[0]}/${target}` }\n    >\n        { valueToText(value, singular, plural) }\n    </a>\n);\n\nClickable.propTypes = {\n    item: PropTypes.shape({\n        value: PropTypes.node,\n        target: PropTypes.string,\n        onClick: PropTypes.func,\n        plural: PropTypes.string,\n        singular: PropTypes.string\n    })\n};\n\nClickable.defaultProps = {\n    item: {}\n};\n\nconst LoadingCard = ({ title, isLoading, items, children }) => {\n    const urlMatch = useRouteMatch(routes.detailWithModal);\n    const modalId = urlMatch?.params?.modalId;\n    return (\n        <Stack hasGutter>\n            <StackItem>\n                <TextContent>\n                    <Text component={ TextVariants.h1 }>\n                        { title }\n                    </Text>\n                </TextContent>\n            </StackItem>\n            <StackItem isFilled>\n                {items.length ?\n                    (<TextContent>\n                        <TextList component={ TextListVariants.dl }>\n                            { items.map((item, key) => (\n                                <Fragment key={ key }>\n                                    <TextListItem component={ TextListItemVariants.dt }>\n                                        { item.title }\n                                    </TextListItem>\n                                    <TextListItem component={ TextListItemVariants.dd }>\n                                        { isLoading && <Skeleton size={ item.size || SkeletonSize.sm } /> }\n                                        { modalId && item.onClick && item.target === modalId && item.onClick()}\n                                        { !isLoading && (\n                                            item.onClick && item.value ?\n                                                <Clickable item={ item }/> :\n                                                valueToText(item.value, item.singular, item.plural)\n                                        ) }\n                                    </TextListItem>\n                                </Fragment>\n                            )) }\n                        </TextList>\n                    </TextContent>) : null}\n                {children}\n            </StackItem>\n        </Stack>\n    );\n};\n\nLoadingCard.propTypes = {\n    title: PropTypes.node.isRequired,\n    isLoading: PropTypes.bool,\n    items: PropTypes.arrayOf(PropTypes.shape({\n        title: PropTypes.node,\n        value: PropTypes.node,\n        onClick: PropTypes.func,\n        size: PropTypes.oneOf(Object.values(SkeletonSize)),\n        plural: PropTypes.string,\n        singular: PropTypes.string\n    })),\n    children: PropTypes.node\n};\n\nLoadingCard.defaultProps = {\n    isLoading: true,\n    items: []\n};\n\nexport default LoadingCard;\n","/* eslint-disable camelcase */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport LoadingCard from '../LoadingCard';\nimport DateFormat from '@redhat-cloud-services/frontend-components/DateFormat';\nimport { systemStatus } from '../selectors';\n\nconst SystemStatusCardCore = ({\n    detailLoaded,\n    hasState,\n    hasRegistered,\n    hasLastCheckIn,\n    hasRHC,\n    entity,\n    systemProfile,\n    systemStatus\n}) => (\n    <LoadingCard\n        title=\"System status\"\n        isLoading={ !detailLoaded }\n        items={\n            [\n                ...hasState ? [{\n                    title: 'Current state',\n                    value: systemStatus.stale ? 'Stale' : 'Active'\n                }] : [],\n                ...hasRegistered ? [{ title: 'Registered', value: entity && (\n                    <DateFormat date={entity.created} type=\"exact\" />\n                ) }] : [],\n                ...hasLastCheckIn ? [{ title: 'Last upload', value: entity && (\n                    <DateFormat date={ entity.updated } type=\"exact\" />\n                ) }] : [],\n                ...hasRHC ? [{\n                    title: 'RHC',\n                    value: systemProfile?.rhc_client_id ? 'Connected' : 'Not available'\n                }] : []\n            ]\n        }\n    />);\n\nSystemStatusCardCore.propTypes = {\n    detailLoaded: PropTypes.bool,\n    entity: PropTypes.shape({\n        updated: PropTypes.string,\n        created: PropTypes.string\n    }),\n    systemProfile: PropTypes.shape({\n        rhc_client_id: PropTypes.string\n    }),\n    systemStatus: PropTypes.object,\n    handleClick: PropTypes.func,\n    hasState: PropTypes.bool,\n    hasLastCheckIn: PropTypes.bool,\n    hasRegistered: PropTypes.bool,\n    hasRHC: PropTypes.bool\n};\nSystemStatusCardCore.defaultProps = {\n    detailLoaded: false,\n    systemStatus: {},\n    handleClick: () => undefined,\n    hasState: true,\n    hasLastCheckIn: true,\n    hasRegistered: true,\n    hasRHC: true\n};\n\nexport const SystemStatusCard = connect(({\n    entityDetails: {\n        entity\n    },\n    systemProfileStore: {\n        systemProfile\n    }\n}) => ({\n    entity,\n    systemProfile,\n    detailLoaded: systemProfile?.loaded,\n    systemStatus: systemStatus(entity)\n}))(SystemStatusCardCore);\n\nSystemStatusCard.propTypes = SystemStatusCardCore.propTypes;\nSystemStatusCard.defaultProps = SystemStatusCardCore.defaultProps;\n\nexport default SystemStatusCard;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n    Button,\n    Modal,\n    TextInput\n} from '@patternfly/react-core';\n\nexport default class TextInputModal extends Component {\n    constructor (props) {\n        super(props);\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps (props, state) {\n        if (!props.isOpen) {\n            return { value: undefined };\n        }\n\n        if (state.value !== undefined) {\n            return null;\n        }\n\n        return {\n            value: props.value || ''\n        };\n    };\n\n    render () {\n        const {\n            title, isOpen, onCancel, onSubmit, ariaLabel, modalOuiaId, cancelOuiaId, confirmOuiaId, inputOuiaId\n        } = this.props;\n        const { value } = this.state;\n\n        return (\n            <Modal\n                variant=\"small\"\n                title={ title }\n                className=\"ins-c-inventory__detail--edit\"\n                aria-label={ ariaLabel ? `${ariaLabel} - modal` : 'input modal' }\n                ouiaId={ modalOuiaId }\n                isOpen={ isOpen }\n                onClose={ event => onCancel(event) }\n                actions={ [\n                    <Button key=\"cancel\" data-action=\"cancel\" variant=\"secondary\" onClick={ onCancel } ouiaId={ cancelOuiaId }>\n                        Cancel\n                    </Button>,\n                    <Button\n                        key=\"confirm\"\n                        data-action=\"confirm\"\n                        variant=\"primary\"\n                        onClick={ () => onSubmit(this.state.value) }\n                        ouiaId={ confirmOuiaId }\n                    >\n                        Save\n                    </Button>\n                ] }\n            >\n                <TextInput\n                    value={ value }\n                    type=\"text\"\n                    ouiaId={ inputOuiaId }\n                    onChange={ value => this.setState({ value }) }\n                    aria-label={ ariaLabel  }\n                />\n            </Modal>\n        );\n    }\n}\n\nTextInputModal.propTypes = {\n    title: PropTypes.string,\n    isOpen: PropTypes.bool,\n    onCancel: PropTypes.func,\n    onSubmit: PropTypes.func,\n    ariaLabel: PropTypes.string,\n    modalOuiaId: PropTypes.string,\n    cancelOuiaId: PropTypes.string,\n    confirmOuiaId: PropTypes.string,\n    inputOuiaId: PropTypes.string,\n    value: PropTypes.string\n};\n\nTextInputModal.defaultProps = {\n    onCancel: () => undefined,\n    onSubmit: () => undefined,\n    isOpen: false,\n    title: '',\n    ariaLabel: 'input text'\n};\n","/* eslint-disable camelcase */\n/* eslint-disable react/prop-types */\nimport React from 'react';\n\n/**\n * Helper function to proprly calculate what to do when user clicks on first cell.\n * Either full redirect if used with ctrl button or `onRowClick` from props is used.\n * @param {*} event html event, to find out if meta key was clicked.\n * @param {*} key inventory UUID.\n * @param {*} props additional props from `EntityTable` - loaded, onRowClick and noDetail.\n */\nconst onRowClick = (event, key, { loaded, onRowClick: rowClick, noDetail }) => {\n    if (loaded && !noDetail) {\n        const isMetaKey = (event.ctrlKey || event.metaKey || event.which === 2);\n        if (isMetaKey) {\n            return;\n        } else if (rowClick) {\n            rowClick(event, key, isMetaKey);\n        }\n    }\n\n    event.preventDefault();\n    event.stopPropagation();\n};\n\n/**\n * Helper function to generate first cell in plain inventory either with clickable detail or just data from attribut.\n * This is later on used in redux in `renderFunc`.\n * @param {React.node} data React node with information that will be shown to user as column title.\n * @param {string} id inventory UUID, used to navigate to correct URL.\n * @param {*} item row data, holds every information from redux store for currecnt row.\n * @param {*} props additional props passed from `EntityTable` - holds any props passed to inventory table.\n */\nconst TitleColumn = (data, id, item, props) => (\n    <div className=\"ins-composed-col\">\n        <div key=\"os_release\">{item?.os_release}</div>\n        <div key=\"data\" className={props?.noDetail ? 'ins-m-nodetail' : ''}>\n            { props?.noDetail ?\n                data :\n                <a\n                    widget=\"col\"\n                    href={ `${location.pathname}${location.pathname.substr(-1) === '/' ? '' : '/'}${id}` }\n                    onClick={ event => {\n                        onRowClick(event, id, props);\n                    }}\n                >\n                    { data }\n                </a> }\n        </div>\n    </div>\n);\n\nexport default TitleColumn;\n","import React from 'react';\nimport { Bullseye, Spinner } from '@patternfly/react-core';\n\nconst Fallback = () => (\n    <Bullseye>\n        <Spinner size=\"xl\" />\n    </Bullseye>\n);\n\nexport default Fallback;\n","import PropTypes from 'prop-types';\n\nexport const tagsMapper = (acc, curr) => {\n    let [namespace, keyValue] = curr.split('/');\n    if (!keyValue) {\n        keyValue = namespace;\n        namespace = null;\n    }\n\n    const [key, value = null] = keyValue.split('=');\n    const currTagKey = acc.findIndex(({ category }) => category === namespace);\n    const currTag = acc[currTagKey] || {\n        category: namespace,\n        key: namespace,\n        type: 'tags',\n        values: []\n    };\n    currTag.values.push({\n        name: `${key}${value ? `=${value}` : ''}`,\n        key: `${key}${value ? `=${value}` : ''}`,\n        tagKey: key,\n        value,\n        group: {\n            label: namespace,\n            value: namespace,\n            type: 'checkbox'\n        }\n    });\n    if (!acc[currTagKey]) {\n        acc.push(currTag);\n    }\n\n    return acc;\n};\n\nexport const prepareRows = (rows = [], pagination = {}) => (\n    rows\n    .slice((pagination.page - 1) * pagination.perPage, pagination.page * pagination.perPage)\n);\n\nexport const isDate = (date) => {\n    return !(isNaN(date) && isNaN(Date.parse(date)));\n};\n\nexport const filterRows = (rows = [], activeFilters = {}) => (\n    rows\n    .filter(row => (\n        Object.values(activeFilters).length === 0 ||\n        Object.values(activeFilters)\n        .every(\n            filter => {\n                const rowValue = row[filter.key] && (row[filter.key].sortValue || row[filter.key]);\n                return rowValue && (\n                    Array.isArray(filter.value) ?\n                        filter.value.includes(rowValue) :\n                        rowValue.toLocaleLowerCase().indexOf(filter.value.toLocaleLowerCase()) !== -1\n                );\n            }\n        )\n    ))\n);\n\nexport const generateFilters = (cells = [], filters = [], activeFilters = {}, onChange = () => undefined) => (\n    filters.map((filter, key) => {\n        const activeKey = filter.index || key;\n        const activeLabel = cells[activeKey] && (cells[activeKey].title || cells[activeKey]);\n\n        return ({\n            value: String(activeKey),\n            label: activeLabel,\n            type: filter.type || 'text',\n            filterValues: {\n                id: filter.id || `${activeLabel}-${activeKey}`,\n                onChange: (_e, newFilter) => onChange(activeKey, newFilter, activeLabel),\n                value: activeFilters[activeKey] && activeFilters[activeKey].value,\n                ...filter.options && { items: filter.options }\n            }\n        });\n    })\n);\n\nexport const onDeleteFilter = (deleted = {}, deleteAll = false, activeFilters = {}) => {\n    if (deleteAll) {\n        return {};\n    } else {\n        const { [deleted.key]: workingItem, ...filtersRest } = activeFilters;\n        const newValue = workingItem && Array.isArray(workingItem.value) &&\n            workingItem.value.filter(item => !deleted.chips.find(({ name }) => name === item));\n        const newFilter = workingItem && Array.isArray(workingItem.value) && newValue && newValue.length > 0 ? {\n            [deleted.key]: {\n                ...workingItem,\n                value: newValue\n            }\n        } : {};\n        return {\n            ...filtersRest,\n            ...newFilter\n        };\n    }\n};\n\nexport const extraShape = PropTypes.shape({\n    title: PropTypes.node,\n    value: PropTypes.node,\n    singular: PropTypes.node,\n    plural: PropTypes.node,\n    onClick: PropTypes.func\n});\n\nexport const INVENTORY_WRITE_PERMISSIONS = [\n    'inventory:*:*',\n    'inventory:hosts:write',\n    'inventory:*:write'\n];\n","import keyBy from 'lodash/keyBy';\n\nconst makeActions = (actions) => {\n    return actions?.reduce?.((acc, curr) => ({\n        ...acc,\n        [curr]: curr,\n        [`${curr}_PENDING`]: `${curr}_PENDING`,\n        [`${curr}_FULFILLED`]: `${curr}_FULFILLED`,\n        [`${curr}_REJECTED`]: `${curr}_REJECTED`\n    }), {});\n};\n\nconst actions = [\n    'ALERT_ADD',\n    'ALERT_DISMISS',\n    'REMOVE_ENTITY'\n];\n\nexport const asyncActions = [\n    'GET_ENTITIES',\n    'GET_ENTITY',\n    'UPDATE_DISPLAY_NAME',\n    'LOAD_WRITE_PERMISSIONS',\n    'LOAD_SYSTEM_PROFILE',\n    'SET_ANSIBLE_HOST'\n];\n\nexport const asyncInventory = [\n    'LOAD_ENTITIES',\n    'LOAD_ENTITY',\n    'REMOVE_ENTITY',\n    'LOAD_SYSTEM_PROFILE',\n    'SET_DISPLAY_NAME',\n    'SET_ANSIBLE_HOST',\n    'LOAD_TAGS',\n    'ALL_TAGS',\n    'OPERATING_SYSTEMS'\n];\n\nexport const systemIssues = [\n    'LOAD_ADVISOR_RECOMMENDATIONS',\n    'LOAD_APPLICABLE_CVES',\n    'LOAD_APPLICABLE_ADVISORIES',\n    'LOAD_COMPLIANCE_POLICIES'\n];\n\nexport const ACTION_TYPES = { ...keyBy(actions, k => k), ...makeActions(asyncActions), ...makeActions(asyncInventory) };\nexport const INVENTORY_ACTION_TYPES = makeActions(asyncInventory);\nexport const SYSTEM_ISSUE_TYPES = makeActions(systemIssues);\n\nexport const CLEAR_NOTIFICATIONS = '@@INSIGHTS-CORE/NOTIFICATIONS/CLEAR_NOTIFICATIONS';\nexport const SELECT_ENTITY = 'SELECT_ENTITY';\nexport const SET_INVENTORY_FILTER = 'SET_INVENTORY_FILTER';\nexport const SET_PAGINATION = 'SET_PAGINATION';\nexport const SET_DISPLAY_NAME = 'SET_DISPLAY_NAME';\nexport const SET_ANSIBLE_HOST = 'SET_ANSIBLE_HOST';\n\nexport const UPDATE_ENTITIES = 'UPDATE_ENTITIES';\nexport const CHANGE_SORT = 'CHANGE_SORT';\nexport const FILTER_ENTITIES = 'FILTER_ENTITIES';\nexport const APPLICATION_SELECTED = 'APPLICATION_SELECTED';\nexport const SHOW_ENTITIES = 'SHOW_ENTITIES';\nexport const FILTER_SELECT = 'FILTER_SELECT';\nexport const ENTITIES_LOADING = 'ENTITIES_LOADING';\nexport const CLEAR_FILTERS = 'CLEAR_FILTERS';\nexport const TOGGLE_TAG_MODAL = 'TOGGLE_TAG_MODAL';\nexport const CONFIG_CHANGED = 'CONFIG_CHANGED';\nexport const TOGGLE_DRAWER = 'TOGGLE_INVENTORY_DRAWER';\n","import { SYSTEM_ISSUE_TYPES } from './action-types';\nimport {\n    cves,\n    compliance,\n    advisor,\n    patch\n} from '../api';\n\nexport const getAdvisorData = (systemId) => ({\n    type: SYSTEM_ISSUE_TYPES.LOAD_ADVISOR_RECOMMENDATIONS,\n    payload: advisor(systemId)\n});\n\nexport const getVulnData = (systemId) => ({\n    type: SYSTEM_ISSUE_TYPES.LOAD_APPLICABLE_CVES,\n    payload: cves(systemId)\n});\n\nexport const getPatchData = (systemId) => ({\n    type: SYSTEM_ISSUE_TYPES.LOAD_APPLICABLE_ADVISORIES,\n    payload: patch(systemId)\n});\n\nexport const getComplianceData = (systemId) => ({\n    type: SYSTEM_ISSUE_TYPES.LOAD_COMPLIANCE_POLICIES,\n    payload: compliance(systemId)\n});\n","import { ACTION_TYPES, CLEAR_NOTIFICATIONS, SET_INVENTORY_FILTER, SET_PAGINATION } from './action-types';\nimport { hosts, getEntitySystemProfile } from '../api';\nexport * from './system-issues-actions';\nexport * from './inventory-actions';\n\nexport const deleteEntity = (systems, displayName) => ({\n    type: ACTION_TYPES.REMOVE_ENTITY,\n    payload: hosts.apiHostDeleteById(systems),\n    meta: {\n        notifications: {\n            fulfilled: {\n                variant: 'success',\n                title: 'Delete operation finished',\n                description: `${displayName} has been successfully removed.`,\n                dismissable: true\n            }\n        },\n        systems\n    }\n});\n\nexport const setFilter = (filtersList) => ({\n    type: SET_INVENTORY_FILTER,\n    payload: {\n        filtersList\n    }\n});\n\nexport const clearNotifications = () => {\n    return ({\n        type: CLEAR_NOTIFICATIONS\n    });\n};\n\nexport const editDisplayName = (id, value, origValue) => ({\n    type: ACTION_TYPES.UPDATE_DISPLAY_NAME,\n    payload: hosts.apiHostPatchById([id], { display_name: value }), // eslint-disable-line camelcase\n    meta: {\n        id,\n        value,\n        origValue,\n        notifications: {\n            fulfilled: {\n                variant: 'success',\n                title: `Display name for entity with ID ${id} has been changed to ${value}`,\n                dismissable: true\n            }\n        }\n    }\n});\n\nexport const setPagination = (page, perPage) => ({\n    type: SET_PAGINATION,\n    payload: {\n        page, perPage\n    }\n});\n\nexport const systemProfile = (itemId) => ({\n    type: ACTION_TYPES.LOAD_SYSTEM_PROFILE,\n    payload: getEntitySystemProfile(itemId, {})\n});\n\nexport const editAnsibleHost = (id, value, origValue) => ({\n    type: ACTION_TYPES.SET_ANSIBLE_HOST,\n    payload: hosts.apiHostPatchById([id], { ansible_host: value }), // eslint-disable-line camelcase\n    meta: {\n        id,\n        value,\n        origValue,\n        notifications: {\n            fulfilled: {\n                variant: 'success',\n                title: 'Ansible hostname has been updated',\n                dismissable: true\n            }\n        }\n    }\n});\n","import React from 'react';\nimport {\n    ACTION_TYPES,\n    SELECT_ENTITY,\n    CHANGE_SORT,\n    SHOW_ENTITIES,\n    FILTER_SELECT,\n    UPDATE_ENTITIES,\n    ENTITIES_LOADING,\n    CLEAR_FILTERS,\n    TOGGLE_TAG_MODAL,\n    CONFIG_CHANGED\n} from './action-types';\nimport { mergeArraysByKey } from '@redhat-cloud-services/frontend-components-utilities/helpers';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport { CullingInformation } from '@redhat-cloud-services/frontend-components/CullingInfo';\nimport { TagWithDialog } from '../Utilities/index';\nimport groupBy from 'lodash/groupBy';\nimport TitleColumn from '../components/InventoryTable/TitleColumn';\nimport InsightsDisconnected from '../Utilities/InsightsDisconnected';\nimport OperatingSystemFormatter from '../Utilities/OperatingSystemFormatter';\nimport { Tooltip } from '@patternfly/react-core';\nimport { defaultFilters } from '../Utilities/constants';\nimport { verifyCulledInsightsClient } from '../Utilities/sharedFunctions';\n\nexport const defaultState = {\n    loaded: false,\n    tagsLoaded: false,\n    allTagsLoaded: false,\n    operatingSystems: [],\n    operatingSystemsLoaded: false,\n    invConfig: {},\n    sortBy: {\n        key: 'updated',\n        direction: 'desc'\n    }\n};\n\nexport const defaultColumns = () => ([\n    {\n        key: 'display_name',\n        sortKey: 'display_name',\n        title: 'Name',\n        renderFunc: TitleColumn\n    },\n    {\n        key: 'tags',\n        title: 'Tags',\n        props: { width: 10, isStatic: true },\n        // eslint-disable-next-line react/display-name\n        renderFunc: (value, systemId) => <TagWithDialog count={value.length} systemId={systemId} />\n    },\n    {\n        key: 'system_profile',\n        sortKey: 'operating_system',\n        dataLabel: 'OS',\n        title: <Tooltip content={<span>Operating system</span>}><span>OS</span></Tooltip>,\n        // eslint-disable-next-line react/display-name\n        renderFunc: (systemProfile) => <OperatingSystemFormatter operatingSystem={systemProfile?.operating_system} />,\n        props: { width: 10 }\n    },\n    {\n        key: 'updated',\n        sortKey: 'updated',\n        title: 'Last seen',\n        // eslint-disable-next-line react/display-name\n        renderFunc: (\n            value,\n            _id,\n            {\n                culled_timestamp: culled, stale_warning_timestamp: staleWarn, stale_timestamp: stale,\n                per_reporter_staleness: perReporterStaleness\n            }) => {\n            return CullingInformation ? <CullingInformation\n                culled={culled}\n                staleWarning={staleWarn}\n                stale={stale}\n                render={({ msg }) => <React.Fragment>\n                    <DateFormat date={ value } extraTitle={ (\n                        <React.Fragment>\n                            <div>{ msg }</div>\n                        Last seen:{` `}\n                        </React.Fragment>\n                    ) }/>\n                    {verifyCulledInsightsClient(perReporterStaleness) && <InsightsDisconnected />}\n                </React.Fragment>\n                }\n            > <DateFormat date={ value } /> </CullingInformation> : new Date(value).toLocaleString();\n        },\n        props: { width: 10 }\n    }\n]);\n\nfunction entitiesPending(state, { meta }) {\n    return {\n        ...state,\n        columns: mergeArraysByKey([\n            defaultColumns().filter(({ key }) => key !== 'tags' || meta?.showTags),\n            state.columns\n        ], 'key'),\n        rows: [],\n        loaded: false,\n        lastDateRequest: meta.lastDateRequest\n    };\n}\n\nfunction clearFilters(state) {\n    return {\n        ...state,\n        activeFilters: [defaultFilters]\n    };\n}\n\n// eslint-disable-next-line camelcase\nfunction entitiesLoaded(state, { payload: { results, per_page: perPage, page, count, total, loaded, filters }, meta }) {\n    // Older requests should not rewrite the state\n    if (meta.lastDateRequest < state.lastDateRequest) {\n        return state;\n    }\n\n    // Data are loaded and APi returned malicious data\n    if (loaded === undefined && (page === undefined || perPage === undefined)) {\n        return state;\n    }\n\n    return {\n        ...state,\n        activeFilters: filters || [],\n        loaded: loaded === undefined || loaded,\n        // filter data only if we are loaded\n        rows: mergeArraysByKey([state.rows, results]).filter(item => !loaded ? true : item.created),\n        perPage: perPage !== undefined ? perPage : state.perPage,\n        page: page !== undefined ? page : state.page,\n        count: count !== undefined ? count : state.count,\n        total: total !== undefined ? total : state.total\n    };\n}\n\nfunction loadingRejected(state, { payload }) {\n    return {\n        ...state,\n        error: payload\n    };\n}\n\nfunction selectEntity(state, { payload }) {\n    const rows = [...state.rows];\n    const toSelect = [].concat(payload);\n    toSelect.forEach(({ id, selected }) => {\n        const entity = rows.find(entity => entity.id === id);\n        if (entity) {\n            entity.selected = selected;\n        } else {\n            rows.forEach(item => item.selected = selected);\n        }\n    });\n    return {\n        ...state,\n        rows\n    };\n}\n\nfunction versionsLoaded(state, { payload: { results } }) {\n    return {\n        ...state,\n        operatingSystems: results.map(entry => {\n            const { name, major, minor } = entry.value;\n            const versionStringified = `${major}.${minor}`;\n            return { label: `${name} ${versionStringified}`, value: versionStringified };\n        }),\n        operatingSystemsLoaded: true\n    };\n}\n\nfunction changeSort(state, { payload: { key, direction } }) {\n    return {\n        ...state,\n        sortBy: {\n            key,\n            direction\n        }\n    };\n}\n\nfunction selectFilter(state, { payload: { item: { items, ...item }, selected } }) {\n    let { activeFilters = [] } = state;\n    if (selected) {\n        activeFilters = [\n            ...activeFilters,\n            item,\n            ...items ? items : []\n        ];\n        const values = activeFilters.map(active => active.value);\n        activeFilters = activeFilters.filter((filter, key) => values.lastIndexOf(filter.value) === key);\n    } else {\n        activeFilters.splice(activeFilters.map(active => active.value).indexOf(item.value), 1);\n        if (items) {\n            items.forEach(subItem => {\n                activeFilters.splice(activeFilters.map(active => active.value).indexOf(subItem.value), 1);\n            });\n        }\n    }\n\n    return {\n        ...state,\n        activeFilters\n    };\n}\n\nexport function showTags(state, { payload, meta }) {\n    const { tags, ...activeSystemTag } = state.rows ? state.rows.find(({ id }) => meta.systemId === id) : state.entity || {};\n    return {\n        ...state,\n        tagModalLoaded: true,\n        activeSystemTag: {\n            ...activeSystemTag,\n            tags: Object.values(payload.results)[0],\n            tagsCount: meta.tagsCount,\n            page: payload.page,\n            perPage: payload.per_page,\n            tagsLoaded: true\n        }\n    };\n}\n\nexport function showTagsPending(state, { meta }) {\n    const { tags, ...activeSystemTag } = state.rows ? state.rows.find(({ id }) => meta.systemId === id) : state.entity || {};\n    return {\n        ...state,\n        tagModalLoaded: false,\n        activeSystemTag: {\n            ...activeSystemTag,\n            tagsCount: meta.tagsCount,\n            tagsLoaded: false\n        }\n    };\n}\n\nexport function toggleTagModalReducer(state, { payload: { isOpen } }) {\n    return {\n        ...state,\n        showTagDialog: isOpen,\n        activeSystemTag: undefined\n    };\n}\n\nexport function allTags(state, { payload: { results, total, page, per_page: perPage }, meta: { lastDateRequestTags } }) {\n    // only the latest request can change state\n    if (lastDateRequestTags < state.lastDateRequestTags) {\n        return state;\n    }\n\n    return {\n        ...state,\n        allTags: Object.entries(groupBy(results, ({ tag: { namespace } }) => namespace)).map(([key, value]) => ({\n            name: key,\n            tags: value\n        })),\n        allTagsPagination: {\n            perPage,\n            page\n        },\n        additionalTagsCount: total > perPage ? total - perPage : 0,\n        allTagsTotal: total,\n        allTagsLoaded: true,\n        tagModalLoaded: true\n    };\n}\n\nexport default {\n    [ACTION_TYPES.ALL_TAGS_FULFILLED]: allTags,\n    [ACTION_TYPES.ALL_TAGS_PENDING]: (state, { meta }) => (\n        { ...state, allTagsLoaded: false, tagModalLoaded: false, lastDateRequestTags: meta.lastDateRequestTags }\n    ),\n    [ACTION_TYPES.LOAD_ENTITIES_PENDING]: entitiesPending,\n    [ACTION_TYPES.LOAD_ENTITIES_FULFILLED]: entitiesLoaded,\n    [ACTION_TYPES.LOAD_ENTITIES_REJECTED]: loadingRejected,\n    [ACTION_TYPES.LOAD_TAGS_PENDING]: showTagsPending,\n    [ACTION_TYPES.LOAD_TAGS_FULFILLED]: showTags,\n    [ACTION_TYPES.ALL_TAGS_REJECTED]: loadingRejected,\n    [ACTION_TYPES.OPERATING_SYSTEMS_PENDING]: (state) => ({ ...state, operatingSystemsLoaded: false }),\n    [ACTION_TYPES.OPERATING_SYSTEMS_FULFILLED]: versionsLoaded,\n    [UPDATE_ENTITIES]: entitiesLoaded,\n    [SHOW_ENTITIES]: (state, action) => entitiesLoaded(state, {\n        payload: {\n            ...action.payload,\n            loaded: false\n        }\n    }),\n    [FILTER_SELECT]: selectFilter,\n    [SELECT_ENTITY]: selectEntity,\n    [CHANGE_SORT]: changeSort,\n    [CLEAR_FILTERS]: clearFilters,\n    [ENTITIES_LOADING]: (state, { payload: { isLoading } }) => ({ ...state, loaded: !isLoading }),\n    [TOGGLE_TAG_MODAL]: toggleTagModalReducer,\n    [CONFIG_CHANGED]: (state, { payload }) => ({ ...state, invConfig: payload })\n};\n","\nimport { createContext } from 'react';\nimport MiddlewareListener from '@redhat-cloud-services/frontend-components-utilities/MiddlewareListener';\nimport { ReducerRegistry } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport notificationsMiddleware from '@redhat-cloud-services/frontend-components-notifications/notificationsMiddleware';\nimport promise  from 'redux-promise-middleware';\nexport { default as reducers, tableReducer, entitesDetailReducer } from './reducers';\n\nexport const RegistryContext = createContext({\n    getRegistry: () => {}\n});\n\nlet middlewareListener;\n\nexport function init (...middleware) {\n    middlewareListener = new MiddlewareListener();\n    return new ReducerRegistry(\n        {},\n        [\n            middlewareListener.getMiddleware(),\n            promise,\n            notificationsMiddleware({\n                errorDescriptionKey: ['detail', 'stack']\n            }),\n            ...middleware\n        ]\n    );\n}\n\nexport function addNewListener ({ actionType, callback }) {\n    return middlewareListener.addNew({\n        on: actionType,\n        callback\n    });\n}\n","import React from 'react';\nimport { useStore } from 'react-redux';\nimport { useRouteMatch } from 'react-router-dom';\nimport AsyncComponent from '@redhat-cloud-services/frontend-components/AsyncComponent';\n\nconst ComplianceTab = () => {\n    const { params } = useRouteMatch('/:inventoryId');\n    return <AsyncComponent\n        appName=\"compliance\"\n        module=\"./SystemDetail\"\n        store={useStore()}\n        customItnl\n        intlProps={{\n            locale: navigator.language.slice(0, 2)\n        }}\n        inventoryId={ params.inventoryId }\n        remediationsEnabled\n    />;\n};\n\nexport default ComplianceTab;\n","import React, { useContext } from 'react';\nimport { useRouteMatch } from 'react-router-dom';\nimport { RegistryContext } from '../../store';\nimport AsyncComponent from '@redhat-cloud-services/frontend-components/AsyncComponent';\n\nconst VulnerabilityTab = () => {\n    const { params } = useRouteMatch('/:inventoryId');\n    const { getRegistry } = useContext(RegistryContext);\n\n    return <AsyncComponent\n        appName=\"vulnerability\"\n        module=\"./SystemDetail\"\n        getRegistry={getRegistry}\n        customItnlProvider\n        entity={ { id: params.inventoryId } }\n    />;\n};\n\nexport default VulnerabilityTab;\n","import React from 'react';\nimport { useStore } from 'react-redux';\nimport AsyncComponent from '@redhat-cloud-services/frontend-components/AsyncComponent';\n\nconst AdvisorTab = () => {\n    return <AsyncComponent\n        appName=\"advisor\"\n        module=\"./SystemDetail\"\n        store={useStore()}\n        customItnl\n        intlProps={{\n            locale: navigator.language.slice(0, 2)\n        }}\n    />;\n};\n\nexport default AdvisorTab;\n","import React, { useContext } from 'react';\nimport { RegistryContext } from '../../store';\nimport AsyncComponent from '@redhat-cloud-services/frontend-components/AsyncComponent';\n\nconst PatchTab = () => {\n    const { getRegistry } = useContext(RegistryContext);\n\n    return <AsyncComponent\n        appName=\"patch\"\n        module=\"./SystemDetail\"\n        getRegistry={getRegistry}\n    />;\n};\n\nexport default PatchTab;\n","import React, { useContext } from 'react';\nimport { useRouteMatch } from 'react-router-dom';\nimport { RegistryContext } from '../../store';\nimport AsyncComponent from '@redhat-cloud-services/frontend-components/AsyncComponent';\n\nconst RosTab = () => {\n    const { params } = useRouteMatch('/:inventoryId');\n    const { getRegistry } = useContext(RegistryContext);\n\n    return <AsyncComponent\n        appName=\"ros\"\n        module=\"./SystemDetail\"\n        getRegistry={ getRegistry }\n        inventoryId={ params.inventoryId }\n    />;\n};\n\nexport default RosTab;\n","/* eslint-disable camelcase */\nimport { SYSTEM_ISSUE_TYPES } from './action-types';\n\nexport function advisor(state, { payload }) {\n    return {\n        ...state,\n        systemIssues: {\n            ...state?.systemIssues,\n            advisor: {\n                isLoaded: true,\n                criticalCount: payload?.filter(item => item?.total_risk >= 4)\n            }\n        }\n    };\n}\n\nexport function cve(state, { payload }) {\n    return {\n        ...state,\n        systemIssues: {\n            ...state?.systemIssues,\n            cve: {\n                isLoaded: true,\n                critical: {\n                    count: payload?.critical?.meta?.total_items || 0\n                },\n                moderate: {\n                    count: payload?.moderate?.meta?.total_items || 0\n                },\n                important: {\n                    count: payload?.important?.meta?.total_items || 0\n                },\n                low: {\n                    count: payload?.low?.meta?.total_items || 0\n                }\n            }\n        }\n    };\n}\n\nexport function patch(state, { payload }) {\n    return {\n        ...state,\n        systemIssues: {\n            ...state?.systemIssues,\n            patch: {\n                isLoaded: true,\n                bug: {\n                    count: payload?.data?.attributes?.rhba_count || 0\n                },\n                enhancement: {\n                    count: payload?.data?.attributes?.rhea_count || 0\n                },\n                security: {\n                    count: payload?.data?.attributes?.rhsa_count || 0\n                }\n            }\n        }\n    };\n}\n\nexport function compliance(state, { payload }) {\n    return {\n        ...state,\n        systemIssues: {\n            ...state?.systemIssues,\n            compliance: {\n                isLoaded: true,\n                profiles: payload?.data?.system?.profiles\n            }\n        }\n    };\n}\n\nexport function isPending(state, type) {\n    return {\n        ...state,\n        systemIssues: {\n            ...state?.systemIssues,\n            ...type && { [type]: { isLoaded: false } }\n        }\n    };\n}\n\nexport default {\n    [SYSTEM_ISSUE_TYPES.LOAD_ADVISOR_RECOMMENDATIONS_PENDING]: (state) => isPending(state, 'advisor'),\n    [SYSTEM_ISSUE_TYPES.LOAD_APPLICABLE_CVES_PENDING]: (state) => isPending(state, 'cve'),\n    [SYSTEM_ISSUE_TYPES.LOAD_APPLICABLE_ADVISORIES_PENDING]: (state) => isPending(state, 'patch'),\n    [SYSTEM_ISSUE_TYPES.LOAD_COMPLIANCE_POLICIES_PENDING]: (state) => isPending(state, 'compliance'),\n    [SYSTEM_ISSUE_TYPES.LOAD_ADVISOR_RECOMMENDATIONS_FULFILLED]: advisor,\n    [SYSTEM_ISSUE_TYPES.LOAD_APPLICABLE_CVES_FULFILLED]: cve,\n    [SYSTEM_ISSUE_TYPES.LOAD_APPLICABLE_ADVISORIES_FULFILLED]: patch,\n    [SYSTEM_ISSUE_TYPES.LOAD_COMPLIANCE_POLICIES_FULFILLED]: compliance\n};\n","import { ACTION_TYPES, APPLICATION_SELECTED, TOGGLE_TAG_MODAL, TOGGLE_DRAWER } from './action-types';\nimport { showTags, toggleTagModalReducer } from './entities';\nimport systemIssuesReducer from './systemIssues';\nexport const entityDefaultState = { loaded: false };\n\nfunction entityDetailPending(state) {\n    return {\n        ...state,\n        loaded: false\n    };\n}\n\nfunction entityDetailLoaded(state, { payload }) {\n    return {\n        ...state,\n        loaded: true,\n        entity: payload.results[0]\n    };\n}\n\nfunction onApplicationSelected(state, { payload }) {\n    return {\n        ...state,\n        activeApp: payload\n    };\n}\n\nfunction toggleDrawer(state, { payload }) {\n    return  {\n        ...state,\n        isToggleOpened: payload?.isOpened\n    };\n}\n\nfunction showTagsPending(state) {\n    return {\n        ...state,\n        tagModalLoaded: false\n    };\n}\n\nfunction updateAnsibleName(state, { meta }, useOrigValue) {\n    const value = useOrigValue ? meta?.origValue : meta?.value;\n    return {\n        ...state,\n        ...state.rows && {\n            rows: state.rows.map((row) => row.id === meta?.id ? ({\n                ...row,\n                // eslint-disable-next-line camelcase\n                ansible_host: value\n            }) : row)\n        },\n        ...state.entity && {\n            entity: {\n                ...state.entity,\n                // eslint-disable-next-line camelcase\n                ansible_host: value\n            }\n        }\n    };\n}\n\nexport function updateEntity(state, { meta }, useOrigValue) {\n    const value = useOrigValue ? meta?.origValue : meta?.value;\n    return {\n        ...state,\n        ...state.rows && {\n            rows: state.rows.map((row) => row.id === meta?.id ? ({\n                ...row,\n                // eslint-disable-next-line camelcase\n                display_name: value\n            }) : row)\n        },\n        ...state.entity && {\n            entity: {\n                ...state.entity,\n                // eslint-disable-next-line camelcase\n                display_name: value\n            }\n        }\n    };\n}\n\nexport default {\n    [ACTION_TYPES.LOAD_ENTITIES_PENDING]: () => entityDefaultState,\n    [ACTION_TYPES.LOAD_ENTITY_PENDING]: entityDetailPending,\n    [ACTION_TYPES.LOAD_ENTITY_FULFILLED]: entityDetailLoaded,\n    [APPLICATION_SELECTED]: onApplicationSelected,\n    [ACTION_TYPES.LOAD_TAGS]: showTags,\n    [ACTION_TYPES.LOAD_TAGS_PENDING]: showTagsPending,\n    [ACTION_TYPES.LOAD_TAGS_FULFILLED]: showTags,\n    [TOGGLE_TAG_MODAL]: toggleTagModalReducer,\n    [TOGGLE_DRAWER]: toggleDrawer,\n    [ACTION_TYPES.UPDATE_DISPLAY_NAME_PENDING]: updateEntity,\n    [ACTION_TYPES.SET_ANSIBLE_HOST_PENDING]: updateAnsibleName,\n    [ACTION_TYPES.UPDATE_DISPLAY_NAME_ERROR]: (state, payload) => updateEntity(state, payload, true),\n    [ACTION_TYPES.SET_ANSIBLE_HOST_ERROR]: (state, payload) => updateAnsibleName(state, payload, true),\n    ...systemIssuesReducer\n};\n","import {\n    INVENTORY_ACTION_TYPES,\n    ACTION_TYPES,\n    SELECT_ENTITY,\n    SET_INVENTORY_FILTER,\n    SET_PAGINATION\n} from './action-types';\nimport systemProfileStore from './systemProfileStore';\nimport {\n    ComplianceTab,\n    VulnerabilityTab,\n    AdvisorTab,\n    GeneralInformationTab,\n    PatchTab,\n    RosTab\n} from '../components/SystemDetails';\nimport { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport { mergeArraysByKey } from '@redhat-cloud-services/frontend-components-utilities/helpers';\nimport { notificationsReducer } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport entitiesReducer, { defaultState as entitiesDefault } from './entities';\nimport entityDetailsReducer, { entityDefaultState as entityDefault, updateEntity } from './entityDetails';\n\nexport { entitiesReducer, entityDetailsReducer };\n\nconst defaultState = { loaded: false, selected: new Map() };\n\nfunction entitiesLoaded(state, { payload }) {\n    return {\n        ...state,\n        rows: mergeArraysByKey([state.rows, payload.results]),\n        entities: mergeArraysByKey([state.entities, payload.results])\n    };\n}\n\nfunction entityLoaded(state) {\n    return {\n        ...state,\n        loaded: true,\n        activeApps: [\n            { title: 'General information', name: 'general_information', component: GeneralInformationTab },\n            { title: 'Advisor', name: 'advisor', component: AdvisorTab },\n            {\n                title: 'Vulnerability',\n                name: 'vulnerabilities',\n                component: VulnerabilityTab\n            },\n            {\n                title: 'Compliance',\n                name: 'compliance',\n                component: ComplianceTab\n            },\n            {\n                title: 'Patch',\n                name: 'patch',\n                component: PatchTab\n            },\n            {\n                title: 'Resource Optimization',\n                name: 'ros',\n                isVisible: false,\n                component: RosTab\n            }\n        ].filter(Boolean)\n    };\n}\n\nfunction entitySelected(state, { payload }) {\n    const selected = state.selected || (new Map());\n    if (payload.selected) {\n        if (payload.id === 0) {\n            state.rows.forEach(row => selected.set(row.id, row));\n        } else {\n            const selectedRow = state.rows && state.rows.find(({ id }) => id === payload.id);\n            selected.set(payload.id, { ...selectedRow || {}, id: payload.id });\n        }\n    } else {\n        if (payload.id === 0) {\n            state.rows.forEach(row => selected.delete(row.id));\n        } else if (payload.id === -1) {\n            selected.clear();\n        } else {\n            selected.delete(payload.id);\n        }\n    }\n\n    return {\n        ...state,\n        selected: new Map(selected)\n    };\n}\n\nfunction resourceOptTabVisibility(state, { payload }) {\n    return {\n        ...state,\n        activeApps: state.activeApps?.map((entity) => entity.name === 'ros' ? ({\n            ...entity,\n            isVisible: payload\n        }) : entity\n        )\n    };\n}\n\nfunction entityDeleted(state, { meta }) {\n    const selected = state.selected || (new Map());\n    meta.systems.forEach(id => selected.delete(id));\n\n    return {\n        ...state,\n        selected: new Map(selected)\n    };\n}\n\nfunction onEntitiesLoaded(state, { payload, meta }) {\n    if (meta?.lastDateRequest < state?.lastDateRequest) {\n        return state;\n    }\n\n    return {\n        ...state,\n        rows: mergeArraysByKey([state.rows, payload.results.map(result => {\n            return {\n                ...result,\n                selected: state.selected && state.selected.has(result.id)\n            };\n        })])\n    };\n}\n\nfunction onSetFilter(state, { payload }) {\n    return {\n        ...state,\n        activeFilters: payload.filtersList\n    };\n}\n\nfunction onSetPagination(state, { payload }) {\n    const perPage = parseInt(payload.perPage, 10);\n    const page = parseInt(payload.page, 10);\n    return {\n        ...state,\n        perPage: isNaN(perPage) ? 50 : perPage,\n        page: isNaN(page) ? 1 : page\n    };\n}\n\nlet reducers = {\n    notifications: notificationsReducer,\n    systemProfileStore\n};\n\nexport const tableReducer = applyReducerHash(\n    {\n        [ACTION_TYPES.GET_ENTITIES_FULFILLED]: entitiesLoaded,\n        [INVENTORY_ACTION_TYPES.LOAD_ENTITIES_FULFILLED]: onEntitiesLoaded,\n        [`${ACTION_TYPES.REMOVE_ENTITY}_FULFILLED`]: entityDeleted,\n        [SELECT_ENTITY]: entitySelected,\n        FILTER_SELECT: (state) => ({ ...state, selected: {} }),\n        [SET_INVENTORY_FILTER]: onSetFilter,\n        [SET_PAGINATION]: onSetPagination,\n        [ACTION_TYPES.UPDATE_DISPLAY_NAME_FULFILLED]: updateEntity\n    },\n    defaultState\n);\n\nexport const entitesDetailReducer = () => applyReducerHash(\n    {\n        [INVENTORY_ACTION_TYPES.LOAD_ENTITY_FULFILLED]: entityLoaded,\n        [INVENTORY_ACTION_TYPES.LOAD_SYSTEM_PROFILE_FULFILLED]: resourceOptTabVisibility\n    },\n    defaultState\n);\n\nexport function mergeWithEntities(additionalReducers = (state) => state, defaultState = {}) {\n    return ({\n        entities: (state, payload) => ({\n            ...additionalReducers({\n                ...applyReducerHash({\n                    ...entitiesReducer\n                }, { ...entitiesDefault, ...defaultState })(state, payload)\n            }, payload)\n        })\n    });\n}\n\nexport function mergeWithDetail(additionalReducers = (state) => state, defaultState = {}) {\n    return ({\n        entityDetails: (state, payload) => ({\n            ...additionalReducers({\n                ...applyReducerHash({\n                    ...entityDetailsReducer\n                }, { ...entityDefault, ...defaultState })(state, payload)\n            }, payload)\n        })\n    });\n}\n\nexport default reducers;\n"],"names":["InventoryTable","lazy","InventoryDetail","routes","table","detail","detailWithModal","Routes","getRegistry","useContext","RegistryContext","useEffect","register","reducers","mergeWithEntities","tableReducer","searchParams","URLSearchParams","location","search","Suspense","fallback","Switch","Route","exact","path","render","status","getAll","source","filterbyName","tagsFilter","split","reduce","tagsMapper","operatingSystem","page","perPage","rootClass","component","Redirect","to","DeleteModal","systemToRemove","handleModalToggle","isModalOpen","currentSytems","onConfirm","systemLabel","Array","isArray","length","display_name","variant","title","className","ouiaId","isOpen","onClose","appendTo","document","getElementsByClassName","body","hasGutter","size","isFilled","host","onClick","ActiveSystemProp","PropTypes","id","displayName","propTypes","defaultProps","maxWidth","content","OperatingSystemFormatter","name","version","major","minor","TagWithDialog","count","loadTags","systemId","e","stopPropagation","onTagClick","connect","dispatch","toggleTagModal","undefined","TagsModal","filterTagsBy","onToggleModal","onApply","getTags","useDispatch","useState","filterBy","setFilterBy","selected","setSelected","statePagination","setStatePagination","showTagDialog","useSelector","entities","entityDetails","pagination","activeSystemTag","entity","allTagsPagination","shallowEqual","loaded","tagModalLoaded","tags","activeTags","filter","tag","Object","values","some","val","includes","slice","allTags","acc","flatten","map","tagsCount","allTagsTotal","fetchTags","fetchAllTags","debouncedFetch","useCallback","debounce","tableProps","canSelectAll","rows","key","value","namespace","find","cells","width","toggleModal","filters","label","placeholder","filterValues","onChange","_e","onUpdateData","columns","transforms","cellWidth","onSelect","bulkSelect","customFilters","RenderWrapper","Component","cmp","isRbacEnabled","inventoryRef","store","props","hasAccess","usePermissionsWithContext","ref","customRender","TEXT_FILTER","TEXTUAL_CHIP","TAG_CHIP","STALE_CHIP","REGISTERED_CHIP","OS_CHIP","staleness","registered","idName","idValue","InventoryContext","createContext","defaultFilters","staleFilter","filterToGroup","valuesKey","accGroup","group","curr","isSelected","item","meta","tagKey","arrayToSelection","reduceFilters","oneFilter","textFilter","tagFilters","foundKey","keys","loadSystems","options","showTags","getEntities","limitedItems","items","per_page","config","hasItems","sortBy","orderDirection","direction","toUpperCase","activeFilters","orderBy","itemsPage","loadEntities","reloadWrapper","event","callback","payload","then","data","isEmpty","check","generateFilter","registeredWithFilter","osFilter","Boolean","useWritePermissions","INVENTORY_WRITE_PERMISSIONS","useGetRegistry","allStaleFilters","subtractWeeks","numOfWeeks","date","Date","setDate","getDate","verifyCollectorStaleness","reporterStaleness","stalenessDate","stale_timestamp","currentDateTime","twoWeeksPeriod","oneWeeksPeriod","verifyCulledInsightsClient","perReporterStaleness","puptoo","INVENTORY_API_BASE","hosts","HostsApi","instance","TagsApi","systemProfile","SystemProfileApi","getEntitySystemProfile","apiHostGetHostSystemProfileById","mapData","facts","rawFacts","flatMap","oneFact","os_release","release","fqdn","mapTags","results","apiHostGetHostTags","row","catch","constructTags","category","tagValue","calculateSystemProfile","osFilterValues","majorOsVersion","operating_system","RHEL","eq","system_profile","filtersReducer","hostnameOrId","controller","fields","apiHostGetHostById","cancelToken","token","query","result","mergeArraysByKey","console","error","apiHostGetHostList","getAllTags","apiTagGetTags","getOperatingSystems","params","apiSystemProfileGetOperatingSystem","systemIssuesInstance","cves","Promise","all","impact","low","moderate","important","critical","patch","advisor","compliance","operationName","variables","InnerButton","link","href","window","permissionsCache","EditButtonUnknownPermissions","EditButtonWrapper","writePermissions","insights","chrome","isProd","InfoTable","index","SortByDirection","opened","expandable","onSort","setState","_event","state","restFilter","deleteAll","deleted","onDeleteFilter","this","collapsibleProps","onCollapse","activeRows","filterRows","mappedRows","prepareRows","child","parent","Fragment","PrimaryToolbar","itemCount","onSetPage","onUpdatePagination","onPerPageSelect","filterConfig","generateFilters","setFilter","activeFiltersConfig","chips","onDelete","Table","TableVariant","TableHeader","TableBody","TextContent","Text","TextVariants","TableToolbar","isFooter","Pagination","type","valueToText","singular","plural","Clickable","target","preventDefault","LoadingCard","isLoading","children","urlMatch","useRouteMatch","modalId","Stack","StackItem","TextList","TextListVariants","TextListItem","T","TextListItemVariants","Skeleton","SkeletonSize","SystemStatusCardCore","detailLoaded","hasState","hasRegistered","hasLastCheckIn","hasRHC","systemStatus","stale","DateFormat","created","updated","rhc_client_id","handleClick","SystemStatusCard","systemProfileStore","TextInputModal","onCancel","onSubmit","ariaLabel","modalOuiaId","cancelOuiaId","confirmOuiaId","inputOuiaId","Modal","actions","Button","TextInput","noDetail","widget","pathname","substr","rowClick","onRowClick","isMetaKey","ctrlKey","metaKey","which","keyValue","currTagKey","findIndex","currTag","push","isDate","isNaN","parse","every","rowValue","sortValue","toLocaleLowerCase","indexOf","activeKey","activeLabel","String","newFilter","workingItem","filtersRest","newValue","extraShape","makeActions","asyncActions","asyncInventory","systemIssues","ACTION_TYPES","keyBy","k","INVENTORY_ACTION_TYPES","SYSTEM_ISSUE_TYPES","CLEAR_NOTIFICATIONS","SELECT_ENTITY","SET_INVENTORY_FILTER","SET_PAGINATION","SET_DISPLAY_NAME","SET_ANSIBLE_HOST","UPDATE_ENTITIES","CHANGE_SORT","FILTER_ENTITIES","APPLICATION_SELECTED","SHOW_ENTITIES","FILTER_SELECT","ENTITIES_LOADING","CLEAR_FILTERS","TOGGLE_TAG_MODAL","CONFIG_CHANGED","TOGGLE_DRAWER","getAdvisorData","getVulnData","getPatchData","getComplianceData","deleteEntity","systems","notifications","fulfilled","description","dismissable","filtersList","clearNotifications","editDisplayName","origValue","setPagination","itemId","editAnsibleHost","ansible_host","defaultState","tagsLoaded","allTagsLoaded","operatingSystems","operatingSystemsLoaded","invConfig","defaultColumns","sortKey","renderFunc","TitleColumn","isStatic","dataLabel","_id","culled","culled_timestamp","staleWarn","stale_warning_timestamp","per_reporter_staleness","CullingInformation","staleWarning","msg","extraTitle","toLocaleString","entitiesLoaded","total","lastDateRequest","loadingRejected","toggleTagModalReducer","lastDateRequestTags","entries","groupBy","additionalTagsCount","entry","versionStringified","action","active","lastIndexOf","splice","forEach","subItem","concat","middlewareListener","init","MiddlewareListener","middleware","ReducerRegistry","getMiddleware","promise","notificationsMiddleware","errorDescriptionKey","AsyncComponent","appName","module","useStore","customItnl","intlProps","locale","navigator","language","inventoryId","remediationsEnabled","customItnlProvider","isPending","isLoaded","criticalCount","total_risk","cve","total_items","bug","attributes","rhba_count","enhancement","rhea_count","security","rhsa_count","profiles","system","entityDefaultState","updateAnsibleName","useOrigValue","updateEntity","activeApp","isToggleOpened","isOpened","systemIssuesReducer","Map","entityLoaded","activeApps","GeneralInformationTab","AdvisorTab","VulnerabilityTab","ComplianceTab","PatchTab","isVisible","RosTab","resourceOptTabVisibility","notificationsReducer","applyReducerHash","has","delete","set","selectedRow","clear","parseInt","entitesDetailReducer","additionalReducers","entitiesReducer","entitiesDefault","mergeWithDetail","entityDetailsReducer","entityDefault"],"sourceRoot":""}