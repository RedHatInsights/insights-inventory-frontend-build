{"version":3,"file":"js/1319.15fbe9033312ffc455cd.js","mappings":"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","sources":["webpack:///./src/App.js","webpack:///./src/AppEntry.js","webpack:///./src/Routes.js","webpack:///./src/bootstrap.js","webpack:///./src/components/GeneralInfo/BiosCard/BiosCard.js","webpack:///./src/components/GeneralInfo/CollectionCard/CollectionCard.js","webpack:///./src/components/GeneralInfo/ConfigurationCard/ConfigurationCard.js","webpack:///./src/components/GeneralInfo/InfrastructureCard/InfrastructureCard.js","webpack:///./src/components/GeneralInfo/OperatingSystemCard/OperatingSystemCard.js","webpack:///./src/components/GeneralInfo/SystemCard/SystemCard.js","webpack:///./src/components/GeneralInfo/dataMapper/dataMapper.js","webpack:///./src/components/PermissionsLoader.js","webpack:///./src/components/SystemDetails/Advisor.js","webpack:///./src/components/SystemDetails/Compliance.js","webpack:///./src/components/SystemDetails/GeneralInfo.js","webpack:///./src/components/SystemDetails/Patch.js","webpack:///./src/components/SystemDetails/Ros.js","webpack:///./src/components/SystemDetails/Vulnerability.js","webpack:///./src/config.js","webpack:///./src/hooks/useInventoryWritePermissions.js","webpack:///./src/store/entityDetails.js","webpack:///./src/store/index.js","webpack:///./src/store/permissions/reducer.js","webpack:///./src/store/reducers.js","webpack:///./src/store/systemIssues.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Routes } from './Routes';\nimport './App.scss';\nimport { INVENTORY_ROOT } from './config';\nimport { NotificationsPortal } from '@redhat-cloud-services/frontend-components-notifications/';\nimport PermissionLoader from './components/PermissionsLoader';\n\nconst App = () => {\n    const history = useHistory();\n    useEffect(() => {\n        insights.chrome.init();\n        insights.chrome.identifyApp(INVENTORY_ROOT);\n        return insights.chrome.on(\n            'APP_NAVIGATION',\n            event => {\n                if (event.navId === 'inventory') {\n                    history.push(`/${location.search}${location.hash}`);\n                } else {\n                    history.push(`/${event.navId}${location.search}${location.hash}`);\n                }\n            }\n        );\n    }, []);\n\n    return (\n        <div className=\"inventory\">\n            <NotificationsPortal />\n            <PermissionLoader />\n            <Routes />\n        </div>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { init, RegistryContext } from './store';\nimport App from './App';\nimport { getBaseName } from '@redhat-cloud-services/frontend-components-utilities/helpers';\nimport logger from 'redux-logger';\n\nconst InventoryApp = () => {\n    const registry = IS_DEV ? init(logger) : init();\n    return <RegistryContext.Provider value={{\n        getRegistry: () => registry\n    }}>\n        <Provider store={registry.getStore()}>\n            <Router basename={getBaseName(window.location.pathname)}>\n                <App />\n            </Router>\n        </Provider>\n    </RegistryContext.Provider>;\n};\n\nInventoryApp.propTypes = {\n    useLogger: PropTypes.bool\n};\n\nInventoryApp.defaultProps = {\n    useLogger: false\n};\n\nexport default InventoryApp;\n","import { Route, Switch, matchPath, useHistory } from 'react-router-dom';\nimport React, { lazy, Suspense, useContext, useEffect } from 'react';\nimport { tagsMapper } from './constants';\nimport { reducers, RegistryContext, tableReducer } from './store';\nimport { mergeWithEntities } from './store/reducers';\n\nconst InventoryTable = lazy(() => import('./routes/InventoryTable'));\nconst InventoryDetail = lazy(() => import('./routes/InventoryDetail'));\n\nexport const routes = {\n    table: '/',\n    detail: '/:inventoryId'\n};\n\nfunction checkPaths(technology, app) {\n    return Object\n    .values(routes)\n    .some(\n        route => {\n            return matchPath(location.href, { path: `${document.baseURI}${technology}/${app}${route}` });\n        }\n    );\n}\n\nexport const Routes = () => {\n    const { getRegistry } = useContext(RegistryContext);\n    useEffect(() => {\n        getRegistry().register({\n            ...reducers,\n            ...mergeWithEntities(tableReducer)\n        });\n    }, [getRegistry]);\n    const history = useHistory();\n    const pathName = window.location.pathname.split('/');\n    const searchParams = new URLSearchParams(location.search);\n    pathName.shift();\n\n    if (pathName[0] === 'beta') {\n        pathName.shift();\n    }\n\n    if (!checkPaths(pathName[0], pathName[1])) {\n        history.push(`${routes.table}${location.search}${location.hash}`);\n    }\n\n    return (\n        <Suspense fallback=\"\">\n            <Switch>\n                <Route\n                    exact\n                    path={routes.table}\n                    render={() => <InventoryTable\n                        status={searchParams.getAll('status')}\n                        source={searchParams.getAll('source')}\n                        filterbyName={searchParams.getAll('hostname_or_id')}\n                        tagsFilter={searchParams.getAll('tags')?.[0]?.split?.(',').reduce?.(tagsMapper, [])}\n                        page={searchParams.getAll('page')}\n                        perPage={searchParams.getAll('per_page')}\n                    />}\n                    rootClass='inventory'\n                />\n                <Route path={routes.detail} component={InventoryDetail} rootClass='inventory' />\n            </Switch>\n        </Suspense>\n    );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport InventoryApp from './AppEntry';\n\nReactDOM.render(\n    <InventoryApp />,\n    document.getElementById('root')\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport LoadingCard from '../LoadingCard';\nimport { biosSelector } from '../selectors';\nimport DateFormat from '@redhat-cloud-services/frontend-components/DateFormat';\nimport { extraShape, isDate } from '../../../constants';\n\nconst BiosCard = ({ bios, detailLoaded, hasVendor, hasVersion, handleClick, hasReleaseDate, extra }) => (<LoadingCard\n    title=\"BIOS\"\n    isLoading={ !detailLoaded }\n    items={ [\n        ...hasVendor ? [{ title: 'Vendor', value: bios.vendor }] : [],\n        ...hasVersion ? [{ title: 'Version', value: bios.version }] : [],\n        ...hasReleaseDate ? [{ title: 'Release date', value: (isDate(bios.releaseDate) ?\n            <DateFormat date={ new Date(bios.releaseDate) } type=\"onlyDate\" /> :\n            'Not available'\n        ) }] : [],\n        ...extra.map(({ onClick, ...item }) => ({\n            ...item,\n            ...onClick && { onClick: (e) => onClick(e, handleClick) }\n        }))\n    ] }\n/>);\n\nBiosCard.propTypes = {\n    detailLoaded: PropTypes.bool,\n    handleClick: PropTypes.func,\n    bios: PropTypes.shape({\n        vendor: PropTypes.string,\n        version: PropTypes.string,\n        releaseDate: PropTypes.string,\n        csm: PropTypes.arrayOf(PropTypes.string)\n    }),\n    hasVendor: PropTypes.bool,\n    hasVersion: PropTypes.bool,\n    hasReleaseDate: PropTypes.bool,\n    extra: PropTypes.arrayOf(extraShape)\n};\nBiosCard.defaultProps = {\n    detailLoaded: false,\n    handleClick: () => undefined,\n    extra: [],\n    hasVendor: true,\n    hasVersion: true,\n    hasReleaseDate: true\n};\n\nexport default connect(({\n    systemProfileStore: {\n        systemProfile\n    }\n}) => ({\n    detailLoaded: systemProfile && systemProfile.loaded,\n    bios: biosSelector(systemProfile)\n}))(BiosCard);\n","/* eslint-disable camelcase */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { Tooltip } from '@patternfly/react-core';\n\nimport LoadingCard from '../LoadingCard';\nimport { collectionInformationSelector } from '../selectors';\nimport DateFormat from '@redhat-cloud-services/frontend-components/DateFormat';\nimport { extraShape } from '../../../constants';\n\nconst VersionTooltip = ({ egg, client }) => (\n    <Tooltip\n        content={\n            <React.Fragment>\n                <p>RPM version: { client || 'Not available' }</p>\n                <p>Dynamic update version: { egg || 'Not available' }</p>\n            </React.Fragment>\n        }\n    >\n        <span>{ client || egg || 'Not available' }</span>\n    </Tooltip>\n);\n\nVersionTooltip.propTypes = {\n    egg: PropTypes.string,\n    client: PropTypes.string\n};\n\nconst CollectionCard = ({\n    detailLoaded,\n    collectionInformation,\n    entity,\n    handleClick,\n    hasClient,\n    hasLastCheckIn,\n    hasRegistered,\n    hasInsightsId,\n    hasReporter,\n    hasMachineId,\n    extra\n}) => (<LoadingCard\n    title=\"Collection information\"\n    isLoading={ !detailLoaded }\n    items={ [\n        ...hasClient ? [{\n            title: 'Insights client',\n            value: <VersionTooltip egg={collectionInformation.egg} client={collectionInformation.client}/>\n        }] : [],\n        ...hasLastCheckIn ? [{ title: 'Last check-in', value: entity && (\n            DateFormat ?\n                <DateFormat date={ entity.updated } type=\"onlyDate\" /> :\n                new Date(entity.updated).toLocaleString()\n        ) }] : [],\n        ...hasRegistered ? [{ title: 'Registered', value: entity && (\n            DateFormat ?\n                <DateFormat date={entity.created} type=\"onlyDate\" /> :\n                new Date(entity.created).toLocaleString()\n        ) }] : [],\n        ...hasInsightsId ? [{ title: 'Insights id', value: entity && entity.insights_id }] : [],\n        ...hasReporter ? [{ title: 'Reporter', value: entity && entity.reporter }] : [],\n        ...hasMachineId ? [{ title: 'RHEL machine id', value: entity && entity.rhel_machine_id }] : [],\n        ...extra.map(({ onClick, ...item }) => ({\n            ...item,\n            ...onClick && { onClick: (e) => onClick(e, handleClick) }\n        }))\n    ] }\n/>);\n\nCollectionCard.propTypes = {\n    detailLoaded: PropTypes.bool,\n    entity: PropTypes.shape({\n        updated: PropTypes.string,\n        created: PropTypes.string,\n        insights_id: PropTypes.string,\n        reporter: PropTypes.string,\n        rhel_machine_id: PropTypes.string\n    }),\n    handleClick: PropTypes.func,\n    collectionInformation: PropTypes.shape({\n        client: PropTypes.string,\n        egg: PropTypes.string\n    }),\n    hasClient: PropTypes.bool,\n    hasLastCheckIn: PropTypes.bool,\n    hasRegistered: PropTypes.bool,\n    hasInsightsId: PropTypes.bool,\n    hasReporter: PropTypes.bool,\n    hasMachineId: PropTypes.bool,\n    extra: PropTypes.arrayOf(extraShape)\n};\nCollectionCard.defaultProps = {\n    detailLoaded: false,\n    handleClick: () => undefined,\n    hasClient: true,\n    hasEgg: true,\n    hasLastCheckIn: true,\n    hasRegistered: true,\n    hasInsightsId: true,\n    hasReporter: true,\n    hasMachineId: true,\n    extra: []\n};\n\nexport default connect(({\n    entityDetails: {\n        entity\n    },\n    systemProfileStore: {\n        systemProfile\n    }\n}) => ({\n    entity,\n    detailLoaded: systemProfile && systemProfile.loaded,\n    collectionInformation: collectionInformationSelector(systemProfile)\n}))(CollectionCard);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport LoadingCard from '../LoadingCard';\nimport { generalMapper, repositoriesMapper } from '../dataMapper';\nimport { configurationSelector } from '../selectors';\nimport { extraShape } from '../../../constants';\n\nexport function enabledRepos(repositories) {\n    if (repositories) {\n        return [\n            repositories.enabled && repositories.enabled.length > 0 && `${repositories.enabled.length} enabled`,\n            repositories.disabled && repositories.disabled.length > 0 && `${repositories.disabled.length} disabled`\n        ].filter(Boolean).join(' / ');\n    }\n}\n\nconst ConfigurationCard = ({\n    detailLoaded,\n    configuration,\n    handleClick,\n    hasPackages,\n    hasServices,\n    hasProcesses,\n    hasRepositories,\n    extra\n}) => (<LoadingCard\n    title=\"Configuration\"\n    isLoading={ !detailLoaded }\n    items={ [\n        ...hasPackages ? [{\n            title: 'Installed packages',\n            value: configuration.packages?.length,\n            singular: 'package',\n            target: 'installed_packages',\n            onClick: () => {\n                handleClick(\n                    'Installed packages',\n                    generalMapper(configuration.packages, 'Package name')\n                );\n            }\n        }] : [],\n        ...hasServices ? [{\n            title: 'Services',\n            value: configuration.services?.length,\n            singular: 'service',\n            target: 'services',\n            onClick: () => {\n                handleClick(\n                    'Services',\n                    generalMapper(configuration.services, 'Service name')\n                );\n            }\n        }] : [],\n        ...hasProcesses ? [{\n            title: 'Running processes',\n            value: configuration.processes?.length,\n            singular: 'process',\n            plural: 'processes',\n            target: 'running_processes',\n            onClick: () => {\n                handleClick(\n                    'Running processes',\n                    generalMapper(configuration.processes, 'Process name')\n                );\n            }\n        }] : [],\n        ...hasRepositories ? [{\n            title: 'Repositories',\n            value: enabledRepos(configuration.repositories),\n            target: 'repositories',\n            onClick: () => {\n                handleClick(\n                    'Repositories',\n                    repositoriesMapper(configuration.repositories),\n                    'medium'\n                );\n            }\n        }] : [],\n        ...extra.map(({ onClick, ...item }) => ({\n            ...item,\n            ...onClick && { onClick: (e) => onClick(e, handleClick) }\n        }))\n    ] }\n/>);\n\nConfigurationCard.propTypes = {\n    detailLoaded: PropTypes.bool,\n    handleClick: PropTypes.func,\n    configuration: PropTypes.shape({\n        packages: PropTypes.arrayOf(PropTypes.string),\n        services: PropTypes.arrayOf(PropTypes.string),\n        processes: PropTypes.arrayOf(PropTypes.string),\n        repositories: PropTypes.shape({\n            enabled: PropTypes.arrayOf(PropTypes.shape({\n                // eslint-disable-next-line camelcase\n                base_url: PropTypes.string,\n                name: PropTypes.string,\n                enabled: PropTypes.bool,\n                gpgcheck: PropTypes.bool\n            })),\n            disabled: PropTypes.arrayOf(PropTypes.shape({\n                // eslint-disable-next-line camelcase\n                base_url: PropTypes.string,\n                name: PropTypes.string,\n                enabled: PropTypes.bool,\n                gpgcheck: PropTypes.bool\n            }))\n        })\n    }),\n    hasPackages: PropTypes.bool,\n    hasServices: PropTypes.bool,\n    hasProcesses: PropTypes.bool,\n    hasRepositories: PropTypes.bool,\n    extra: PropTypes.arrayOf(extraShape)\n};\nConfigurationCard.defaultProps = {\n    detailLoaded: false,\n    handleClick: () => undefined,\n    hasPackages: true,\n    hasServices: true,\n    hasProcesses: true,\n    hasRepositories: true,\n    extra: []\n};\n\nexport default connect(({\n    systemProfileStore: {\n        systemProfile\n    }\n}) => ({\n    detailLoaded: systemProfile && systemProfile.loaded,\n    configuration: configurationSelector(systemProfile)\n}))(ConfigurationCard);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport LoadingCard from '../LoadingCard';\nimport { generalMapper, interfaceMapper } from '../dataMapper';\nimport { infrastructureSelector } from '../selectors';\nimport { extraShape } from '../../../constants';\n\nconst InfrastructureCard = ({\n    infrastructure,\n    handleClick,\n    detailLoaded,\n    hasType,\n    hasVendor,\n    hasIPv4,\n    hasIPv6,\n    hasInterfaces,\n    extra\n}) => (<LoadingCard\n    title=\"Infrastructure\"\n    isLoading={ !detailLoaded }\n    items={ [\n        ...hasType ? [{ title: 'Type', value: infrastructure.type }] : [],\n        ...hasVendor ? [{ title: 'Vendor', value: infrastructure.vendor }] : [],\n        ...hasIPv4 ? [{\n            title: 'IPv4 addresses',\n            value: infrastructure.ipv4?.length,\n            plural: 'addresses',\n            singular: 'address',\n            target: 'ipv4',\n            onClick: () => {\n                handleClick(\n                    'IPv4',\n                    generalMapper(infrastructure.ipv4, 'IP address')\n                );\n            }\n        }] : [],\n        ...hasIPv6 ? [{\n            title: 'IPv6 addresses',\n            value: infrastructure.ipv6?.length,\n            plural: 'addresses',\n            singular: 'address',\n            onClick: () => {\n                handleClick(\n                    'IPv6',\n                    generalMapper(infrastructure.ipv6, 'IP address')\n                );\n            }\n        }] : [],\n        ...hasInterfaces ? [{\n            title: 'Interfaces/NICs',\n            value: infrastructure.nics?.length,\n            singular: 'NIC',\n            target: 'interfaces',\n            onClick: () => {\n                handleClick(\n                    'Interfaces/NICs',\n                    interfaceMapper(infrastructure.nics),\n                    'medium'\n                );\n            }\n        }] : [],\n        ...extra.map(({ onClick, ...item }) => ({\n            ...item,\n            ...onClick && { onClick: (e) => onClick(e, handleClick) }\n        }))\n    ] }\n/>);\n\nInfrastructureCard.propTypes = {\n    detailLoaded: PropTypes.bool,\n    handleClick: PropTypes.func,\n    infrastructure: PropTypes.shape({\n        type: PropTypes.string,\n        vendor: PropTypes.string,\n        ipv4: PropTypes.array,\n        ipv6: PropTypes.array,\n        nics: PropTypes.array\n    }),\n    hasType: PropTypes.bool,\n    hasVendor: PropTypes.bool,\n    hasIPv4: PropTypes.bool,\n    hasIPv6: PropTypes.bool,\n    hasInterfaces: PropTypes.bool,\n    extra: PropTypes.arrayOf(extraShape)\n};\nInfrastructureCard.defaultProps = {\n    detailLoaded: false,\n    handleClick: () => undefined,\n    hasType: true,\n    hasVendor: true,\n    hasIPv4: true,\n    hasIPv6: true,\n    hasInterfaces: true,\n    extra: []\n};\n\nexport default connect(({\n    entityDetails: {\n        entity\n    },\n    systemProfileStore: {\n        systemProfile\n    }\n}) => ({\n    detailLoaded: systemProfile && systemProfile.loaded,\n    infrastructure: infrastructureSelector(systemProfile, entity)\n}))(InfrastructureCard);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport LoadingCard from '../LoadingCard';\nimport { generalMapper } from '../dataMapper';\nimport { operatingSystem } from '../selectors';\nimport DateFormat from '@redhat-cloud-services/frontend-components/DateFormat';\nimport { extraShape, isDate } from '../../../constants';\nimport OperatingSystemFormatter from '../../../Utilities/OperatingSystemFormatter';\n\nconst OperatingSystemCard = ({\n    systemInfo,\n    detailLoaded,\n    handleClick,\n    hasRelease,\n    hasKernelRelease,\n    hasArchitecture,\n    hasLastBoot,\n    hasKernelModules,\n    extra\n}) => (\n    <LoadingCard\n        title=\"Operating system\"\n        isLoading={ !detailLoaded }\n        items={ [\n            ...hasRelease ? [{ title: 'Release', value: <OperatingSystemFormatter operatingSystem={systemInfo.release} /> }] : [],\n            ...hasKernelRelease ? [{ title: 'Kernel release', value: systemInfo.kernelRelease }] : [],\n            ...hasArchitecture ? [{ title: 'Architecture', value: systemInfo.architecture }] : [],\n            ...hasLastBoot ? [{ title: 'Last boot time', value: (isDate(systemInfo.bootTime) ?\n                <DateFormat date={ systemInfo.bootTime } type=\"onlyDate\" /> :\n                'Not available'\n            )\n            }] : [],\n            ...hasKernelModules ? [{\n                title: 'Kernel modules',\n                value: systemInfo.kernelModules?.length,\n                singular: 'module',\n                target: 'kernel_modules',\n                onClick: () => {\n                    handleClick(\n                        'Kernel modules',\n                        generalMapper(systemInfo.kernelModules, 'Module')\n                    );\n                }\n            }] : [],\n            ...extra.map(({ onClick, ...item }) => ({\n                ...item,\n                ...onClick && { onClick: (e) => onClick(e, handleClick) }\n            }))\n        ] }\n    />\n);\n\nOperatingSystemCard.propTypes = {\n    detailLoaded: PropTypes.bool,\n    handleClick: PropTypes.func,\n    systemInfo: PropTypes.shape({\n        release: PropTypes.string,\n        architecture: PropTypes.string,\n        kernelRelease: PropTypes.string,\n        bootTime: PropTypes.string,\n        kernelModules: PropTypes.arrayOf(PropTypes.string)\n    }),\n    hasRelease: PropTypes.bool,\n    hasKernelRelease: PropTypes.bool,\n    hasArchitecture: PropTypes.bool,\n    hasLastBoot: PropTypes.bool,\n    hasKernelModules: PropTypes.bool,\n    extra: PropTypes.arrayOf(extraShape)\n};\nOperatingSystemCard.defaultProps = {\n    detailLoaded: false,\n    handleClick: () => undefined,\n    hasRelease: true,\n    hasKernelRelease: true,\n    hasArchitecture: true,\n    hasLastBoot: true,\n    hasKernelModules: true,\n    extra: []\n};\n\nexport default connect(({\n    entityDetails: {\n        entity\n    },\n    systemProfileStore: {\n        systemProfile\n    }\n}) => ({\n    detailLoaded: systemProfile && systemProfile.loaded,\n    systemInfo: operatingSystem(systemProfile, entity)\n}))(OperatingSystemCard);\n","import React, { Fragment, Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport LoadingCard from '../LoadingCard';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport { propertiesSelector } from '../selectors';\nimport { editDisplayName, editAnsibleHost, systemProfile } from '../../../store/actions';\nimport TextInputModal from '../TextInputModal';\nimport { loadEntity } from '../../../store/actions';\nimport { Popover, Button } from '@patternfly/react-core';\nimport EditButton from '../EditButton';\nimport { generalMapper } from '../dataMapper';\nimport { extraShape } from '../../../constants';\n\nconst TitleWithPopover = ({ title, content }) => (\n    <React.Fragment>\n        <span>{ title }</span>\n        <Popover\n            headerContent={<div>{ title }</div>}\n            bodyContent={<div>{ content }</div>}>\n            <Button\n                variant=\"plain\"\n                aria-label={`Action for ${title}`}\n                className='ins-active-general_information__popover-icon'>\n                <OutlinedQuestionCircleIcon />\n            </Button>\n        </Popover>\n    </React.Fragment>\n);\n\nclass SystemCard extends Component {\n    state = {\n        isDisplayNameModalOpen: false,\n        isAnsibleHostModalOpen: false\n    };\n\n    onCancel = () => {\n        this.setState({\n            isDisplayNameModalOpen: false,\n            isAnsibleHostModalOpen: false\n        });\n    };\n\n    onSubmit = (fn) => (value) => {\n        const { entity } = this.props;\n        fn(entity.id, value);\n        this.onCancel();\n    }\n\n    onShowDisplayModal = (event) => {\n        event.preventDefault();\n        this.setState({\n            isDisplayNameModalOpen: true\n        });\n    };\n\n    onShowAnsibleModal = (event) => {\n        event.preventDefault();\n        this.setState({\n            isAnsibleHostModalOpen: true\n        });\n    };\n\n    getAnsibleHost = () => {\n        const { entity } = this.props;\n        return entity.ansible_host || entity.fqdn || entity.id;\n    };\n\n    render() {\n        const {\n            detailLoaded,\n            entity,\n            properties,\n            setDisplayName,\n            setAnsibleHost,\n            writePermissions,\n            handleClick,\n            hasHostName,\n            hasDisplayName,\n            hasAnsibleHostname,\n            hasSAP,\n            hasCPUs,\n            hasSockets,\n            hasCores,\n            hasCPUFlags,\n            hasRAM,\n            extra\n        } = this.props;\n        const { isDisplayNameModalOpen, isAnsibleHostModalOpen } = this.state;\n        return (\n            <Fragment>\n                <LoadingCard\n                    title=\"System properties\"\n                    isLoading={ !detailLoaded }\n                    items={ [\n                        ...hasHostName ? [{\n                            title: <TitleWithPopover\n                                title='Host name'\n                                content='Name imported from the system.'/>,\n                            value: entity.fqdn, size: 'md'\n                        }] : [],\n                        ...hasDisplayName ? [{\n                            title: <TitleWithPopover\n                                title='Display name'\n                                content='System name displayed in an inventory list.'/>,\n                            value: (\n                                <Fragment>\n                                    { entity.display_name }\n                                    <EditButton\n                                        writePermissions={writePermissions}\n                                        link=\"display_name\"\n                                        onClick={this.onShowDisplayModal}\n                                    />\n                                </Fragment>\n                            ), size: 'md'\n                        }] : [],\n                        ...hasAnsibleHostname ? [{\n                            title: <TitleWithPopover\n                                title='Ansible hostname'\n                                content='Hostname that is used in playbooks by Remediations.'/>,\n                            value: (\n                                <Fragment>\n                                    { this.getAnsibleHost() }\n                                    <EditButton\n                                        writePermissions={writePermissions}\n                                        link=\"ansible_name\"\n                                        onClick={this.onShowAnsibleModal}\n                                    />\n                                </Fragment>\n                            ), size: 'md'\n                        }] : [],\n                        ...hasSAP ? [{\n                            title: 'SAP',\n                            value: properties.sapIds?.length,\n                            singular: 'identifier',\n                            target: 'sap_sids',\n                            onClick: () => {\n                                handleClick(\n                                    'SAP IDs (SID)',\n                                    generalMapper(properties.sapIds, 'SID')\n                                );\n                            }\n                        }] : [],\n                        ...hasCPUs ? [{ title: 'Number of CPUs', value: properties.cpuNumber }] : [],\n                        ...hasSockets ? [{ title: 'Sockets', value: properties.sockets }] : [],\n                        ...hasCores ? [{ title: 'Cores per socket', value: properties.coresPerSocket }] : [],\n                        ...hasCPUFlags ? [{\n                            title: 'CPU flags',\n                            value: properties?.cpuFlags?.length,\n                            singular: 'flag',\n                            target: 'flag',\n                            onClick: () => handleClick('CPU flags', generalMapper(properties.cpuFlags, 'flag name'))\n                        }] : [],\n                        ...hasRAM ? [{ title: 'RAM', value: properties.ramSize }] : [],\n                        ...extra.map(({ onClick, ...item }) => ({\n                            ...item,\n                            ...onClick && { onClick: (e) => onClick(e, handleClick) }\n                        }))\n                    ] }\n                />\n                <TextInputModal\n                    isOpen={ isDisplayNameModalOpen }\n                    title='Edit display name'\n                    value={ entity && entity.display_name }\n                    ariaLabel='Host inventory display name'\n                    modalOuiaId=\"edit-display-name-modal\"\n                    cancelOuiaId=\"cancel-edit-display-name\"\n                    confirmOuiaId=\"confirm-edit-display-name\"\n                    inputOuiaId=\"input-edit-display-name\"\n                    onCancel={ this.onCancel }\n                    onSubmit={ this.onSubmit(setDisplayName) }\n                />\n                <TextInputModal\n                    isOpen={ isAnsibleHostModalOpen }\n                    title='Edit Ansible host'\n                    value={ entity && this.getAnsibleHost() }\n                    ariaLabel='Ansible host'\n                    modalOuiaId=\"edit-ansible-name-modal\"\n                    cancelOuiaId=\"cancel-edit-ansible-name\"\n                    confirmOuiaId=\"confirm-edit-ansible-name\"\n                    inputOuiaId=\"input-edit-ansible-name\"\n                    onCancel={ this.onCancel }\n                    onSubmit={ this.onSubmit(setAnsibleHost) }\n                />\n            </Fragment>\n        );\n    }\n}\n\nSystemCard.propTypes = {\n    detailLoaded: PropTypes.bool,\n    entity: PropTypes.shape({\n        // eslint-disable-next-line camelcase\n        display_name: PropTypes.string,\n        // eslint-disable-next-line camelcase\n        ansible_host: PropTypes.string,\n        fqdn: PropTypes.string,\n        id: PropTypes.string\n    }),\n    properties: PropTypes.shape({\n        cpuNumber: PropTypes.number,\n        sockets: PropTypes.number,\n        coresPerSocket: PropTypes.number,\n        ramSize: PropTypes.string,\n        storage: PropTypes.arrayOf(PropTypes.shape({\n            device: PropTypes.string,\n            // eslint-disable-next-line camelcase\n            mount_point: PropTypes.string,\n            options: PropTypes.shape({}),\n            type: PropTypes.string\n        })),\n        sapIds: PropTypes.arrayOf(PropTypes.string),\n        cpuFlags: PropTypes.array\n    }),\n    setDisplayName: PropTypes.func,\n    setAnsibleHost: PropTypes.func,\n    writePermissions: PropTypes.bool,\n    handleClick: PropTypes.func,\n    hasHostName: PropTypes.bool,\n    hasDisplayName: PropTypes.bool,\n    hasAnsibleHostname: PropTypes.bool,\n    hasSAP: PropTypes.bool,\n    hasCPUs: PropTypes.bool,\n    hasSockets: PropTypes.bool,\n    hasCores: PropTypes.bool,\n    hasCPUFlags: PropTypes.bool,\n    hasRAM: PropTypes.bool,\n    extra: PropTypes.arrayOf(extraShape)\n};\nSystemCard.defaultProps = {\n    detailLoaded: false,\n    entity: {},\n    properties: {},\n    hasHostName: true,\n    hasDisplayName: true,\n    hasAnsibleHostname: true,\n    hasSAP: true,\n    hasCPUs: true,\n    hasSockets: true,\n    hasCores: true,\n    hasCPUFlags: true,\n    hasRAM: true,\n    extra: []\n};\n\nTitleWithPopover.propTypes = {\n    title: PropTypes.string.isRequired,\n    content: PropTypes.string.isRequired\n};\n\nfunction mapDispatchToProps(dispatch) {\n    const reloadWrapper = (id, event) => {\n        event.payload.then(data => {\n            dispatch(systemProfile(id, { hasItems: true }));\n            dispatch(loadEntity(id, { hasItems: true }, { showTags: true }));\n            return data;\n        });\n\n        return event;\n    };\n\n    return {\n        setDisplayName: (id, value) => {\n            dispatch(reloadWrapper(id, editDisplayName(id, value)));\n        },\n\n        setAnsibleHost: (id, value) => {\n            dispatch(reloadWrapper(id, editAnsibleHost(id, value)));\n        }\n    };\n}\n\nexport default connect(({\n    entityDetails: {\n        entity\n    },\n    systemProfileStore: {\n        systemProfile\n    }\n}) => ({\n    entity,\n    detailLoaded: systemProfile && systemProfile.loaded,\n    properties: propertiesSelector(systemProfile, entity)\n}), mapDispatchToProps)(SystemCard);\n","/* eslint-disable camelcase */\n\nimport React from 'react';\nimport {\n    CheckCircleIcon,\n    TimesIcon,\n    OutlinedQuestionCircleIcon,\n    OutlinedArrowAltCircleUpIcon,\n    OutlinedArrowAltCircleDownIcon\n} from '@patternfly/react-icons';\nimport { sortable } from '@patternfly/react-table';\nimport { Tooltip } from '@patternfly/react-core';\n\nexport const statusHelper = {\n    UP: <Tooltip content=\"Service is running\">\n        <OutlinedArrowAltCircleUpIcon className=\"ins-c-inventory__detail--up\" />\n    </Tooltip>,\n    DOWN: <Tooltip content=\"Service has stopped\">\n        <OutlinedArrowAltCircleDownIcon className=\"ins-c-inventory__detail--down\" />\n    </Tooltip>\n};\n\nexport const enabledHelper = {\n    true: <Tooltip content=\"Source enabled\">\n        <CheckCircleIcon className=\"ins-c-inventory__detail--enabled\" />\n    </Tooltip>,\n    false: <Tooltip content=\"Source disabled\">\n        <TimesIcon className=\"ins-c-inventory__detail--disabled\" />\n    </Tooltip>\n};\n\nexport const diskMapper = (devices = []) => ({\n    cells: [\n        {\n            title: 'Device',\n            transforms: [sortable]\n        },\n        {\n            title: 'Label',\n            transforms: [sortable]\n        },\n        {\n            title: 'Mount point',\n            transforms: [sortable]\n        },\n        {\n            title: 'Type',\n            transforms: [sortable]\n        }\n    ],\n    rows: devices.map(({\n        device,\n        label,\n        mountpoint,\n        options,\n        mounttype\n    }) => {\n        const calculatedOptions = (options && options.options) || options;\n        return ({\n            isOpen: false,\n            child: <div>\n                {\n                    calculatedOptions &&\n                    Object.entries(calculatedOptions.value || calculatedOptions)\n                    .map(([oneKey, option]) => `${oneKey}=${option.value || option}`).join(',  ')\n                }\n            </div>,\n            cells: [\n                (device && device.value) || device,\n                label,\n                (mountpoint && mountpoint.value) || mountpoint,\n                (mounttype && mounttype.value) || mounttype\n            ]\n        });\n    }),\n    expandable: true\n});\n\nexport const productsMapper = (products = []) => ({\n    cells: [\n        {\n            title: 'Name',\n            transforms: [sortable]\n        },\n        'Status'\n    ],\n    rows: products.map(product => ([\n        product.name,\n        {\n            title: statusHelper[product.status] ||\n            <Tooltip content=\"Unknown service status\">\n                <OutlinedQuestionCircleIcon className=\"ins-c-inventory__detail--unknown\" />\n            </Tooltip>\n        }\n    ]))\n});\n\nexport const interfaceMapper = (data = []) => ({\n    cells: [\n        {\n            title: 'MAC address',\n            transforms: [sortable]\n        },\n        {\n            title: 'MTU',\n            transforms: [sortable]\n        },\n        {\n            title: 'Name',\n            transforms: [sortable]\n        },\n        'State',\n        {\n            title: 'Type',\n            transforms: [sortable]\n        }\n    ],\n    rows: data.map(item => ([\n        item.mac_address,\n        item.mtu,\n        item.name,\n        {\n            title: statusHelper[item.state] ||\n            <Tooltip content=\"Unknown service status\">\n                <OutlinedQuestionCircleIcon className=\"ins-c-inventory__detail--unknown\" />\n            </Tooltip>\n        },\n        item.type\n    ]))\n});\n\nexport const repositoriesMapper = ({ enabled, disabled } = { enabled: [], disabled: [] }) => ({\n    cells: [\n        {\n            title: 'Name',\n            transforms: [sortable]\n        },\n        {\n            title: 'Enabled',\n            transforms: [sortable]\n        },\n        {\n            title: 'GPG check',\n            transforms: [sortable]\n        }\n    ],\n    rows: [...enabled, ...disabled].map(repository => ([\n        {\n            title: repository.name,\n            sortValue: repository.name\n        },\n        {\n            title: enabledHelper[Boolean(repository.enabled)],\n            sortValue: `${repository.enabled}`\n        },\n        {\n            title: enabledHelper[Boolean(repository.gpgcheck)],\n            sortValue: `${repository.gpgcheck}`\n        }\n    ])),\n    filters: [\n        { type: 'textual' },\n        {\n            type: 'checkbox',\n            options: [\n                { label: 'Is enabled', value: 'true' },\n                { label: 'Not enabled', value: 'false' }\n            ]\n        },\n        {\n            type: 'checkbox',\n            options: [\n                { label: 'Is enabled', value: 'true' },\n                { label: 'Not enabled', value: 'false' }\n            ]\n        }\n    ]\n});\n\nexport const generalMapper = (data = [], title = '') => ({\n    cells: [{\n        title,\n        transforms: [sortable]\n    }],\n    rows: data.map(item => ([item])),\n    filters: [{ type: 'textual' }]\n});\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport useInventoryWritePermissions from '../hooks/useInventoryWritePermissions';\nimport { ACTION_TYPES } from '../store/action-types';\n\nconst PermissionLoader = () => {\n    const { isLoading, hasAccess } = useInventoryWritePermissions();\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch({ type: `${ACTION_TYPES.LOAD_WRITE_PERMISSIONS}_PENDING` });\n    }, []);\n\n    useEffect(() => {\n        if (!isLoading) {\n            dispatch({ type: `${ACTION_TYPES.LOAD_WRITE_PERMISSIONS}_FULFILLED`, payload: { writePermissions: hasAccess } });\n        }\n    }, [isLoading]);\n\n    return null;\n};\n\nexport default PermissionLoader;\n","import React from 'react';\nimport { useStore } from 'react-redux';\nimport AsyncComponent from '@redhat-cloud-services/frontend-components/AsyncComponent';\n\nconst AdvisorTab = () => {\n    return <AsyncComponent\n        appName=\"advisor\"\n        module=\"./SystemDetail\"\n        store={useStore()}\n        customItnl\n        intlProps={{\n            locale: navigator.language\n        }}\n    />;\n};\n\nexport default AdvisorTab;\n","import React from 'react';\nimport { useStore } from 'react-redux';\nimport { useRouteMatch } from 'react-router-dom';\nimport AsyncComponent from '@redhat-cloud-services/frontend-components/AsyncComponent';\n\nconst ComplianceTab = () => {\n    const { params } = useRouteMatch('/:inventoryId');\n    return <AsyncComponent\n        appName=\"compliance\"\n        module=\"./SystemDetail\"\n        store={useStore()}\n        customItnl\n        intlProps={{\n            locale: navigator.language\n        }}\n        inventoryId={ params.inventoryId }\n        remediationsEnabled\n    />;\n};\n\nexport default ComplianceTab;\n","import React, { useEffect, useState, Fragment } from 'react';\nimport { Provider } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport GeneralInformation from '../GeneralInfo/GeneralInformation';\nexport { default as TextInputModal } from '../GeneralInfo/TextInputModal';\nimport fallback from '../SpinnerFallback';\nimport systemProfileStore from '../../store/systemProfileStore';\n\nconst GeneralInfoTab = ({ getRegistry, ...props }) => {\n    const [Wrapper, setWrapper] = useState();\n    useEffect(() => {\n        if (getRegistry) {\n            getRegistry()?.register?.({ systemProfileStore });\n        }\n\n        setWrapper(() => getRegistry ? Provider : Fragment);\n    }, []);\n    return Wrapper ? <Wrapper\n        {...getRegistry && {\n            store: getRegistry().getStore()\n        }}\n    >\n        <GeneralInformation {...props} />\n    </Wrapper> : fallback;\n};\n\nGeneralInfoTab.propTypes = {\n    getRegistry: PropTypes.func\n};\n\nexport default GeneralInfoTab;\n","import React, { useContext } from 'react';\nimport { RegistryContext } from '../../store';\nimport AsyncComponent from '@redhat-cloud-services/frontend-components/AsyncComponent';\n\nconst PatchTab = () => {\n    const { getRegistry } = useContext(RegistryContext);\n\n    return <AsyncComponent\n        appName=\"patch\"\n        module=\"./SystemDetail\"\n        getRegistry={getRegistry}\n    />;\n};\n\nexport default PatchTab;\n","import React, { useContext } from 'react';\nimport { useRouteMatch } from 'react-router-dom';\nimport { RegistryContext } from '../../store';\nimport AsyncComponent from '@redhat-cloud-services/frontend-components/AsyncComponent';\n\nconst RosTab = () => {\n    const { params } = useRouteMatch('/:inventoryId');\n    const { getRegistry } = useContext(RegistryContext);\n\n    return <AsyncComponent\n        appName=\"ros\"\n        module=\"./SystemDetail\"\n        getRegistry={ getRegistry }\n        inventoryId={ params.inventoryId }\n    />;\n};\n\nexport default RosTab;\n","import React, { useContext } from 'react';\nimport { useRouteMatch } from 'react-router-dom';\nimport { RegistryContext } from '../../store';\nimport AsyncComponent from '@redhat-cloud-services/frontend-components/AsyncComponent';\n\nconst VulnerabilityTab = () => {\n    const { params } = useRouteMatch('/:inventoryId');\n    const { getRegistry } = useContext(RegistryContext);\n\n    return <AsyncComponent\n        appName=\"vulnerability\"\n        module=\"./SystemDetail\"\n        getRegistry={getRegistry}\n        customItnlProvider\n        entity={ { id: params.inventoryId } }\n    />;\n};\n\nexport default VulnerabilityTab;\n","\nexport const INVENTORY_API_BASE = '/api/inventory/v1';\nexport const INVENTORY_ROOT = 'inventory';\n","import { usePermissions } from '@redhat-cloud-services/frontend-components-utilities/RBACHook';\n\nconst useInventoryWritePermissions = () => {\n    const { hasAccess, ...rest } = usePermissions('inventory', [\n        'inventory:*:*',\n        'inventory:hosts:write',\n        'inventory:*:write'\n    ]);\n\n    return { ...rest, hasAccess };\n};\n\nexport default useInventoryWritePermissions;\n","import { ACTION_TYPES, APPLICATION_SELECTED, TOGGLE_TAG_MODAL, TOGGLE_DRAWER } from './action-types';\nimport { showTags, toggleTagModalReducer } from './entities';\nimport systemIssuesReducer from './systemIssues';\nexport const entityDefaultState = { loaded: false };\n\nfunction entityDetailPending(state) {\n    return {\n        ...state,\n        loaded: false\n    };\n}\n\nfunction entityDetailLoaded(state, { payload }) {\n    return {\n        ...state,\n        loaded: true,\n        entity: payload.results[0]\n    };\n}\n\nfunction onApplicationSelected(state, { payload }) {\n    return {\n        ...state,\n        activeApp: payload\n    };\n}\n\nfunction toggleDrawer(state, { payload }) {\n    return  {\n        ...state,\n        isToggleOpened: payload?.isOpened\n    };\n}\n\nfunction showTagsPending(state) {\n    return {\n        ...state,\n        tagModalLoaded: false\n    };\n}\n\nexport default {\n    [ACTION_TYPES.LOAD_ENTITIES_PENDING]: () => entityDefaultState,\n    [ACTION_TYPES.LOAD_ENTITY_PENDING]: entityDetailPending,\n    [ACTION_TYPES.LOAD_ENTITY_FULFILLED]: entityDetailLoaded,\n    [APPLICATION_SELECTED]: onApplicationSelected,\n    [ACTION_TYPES.LOAD_TAGS]: showTags,\n    [ACTION_TYPES.LOAD_TAGS_PENDING]: showTagsPending,\n    [ACTION_TYPES.LOAD_TAGS_FULFILLED]: showTags,\n    [TOGGLE_TAG_MODAL]: toggleTagModalReducer,\n    [TOGGLE_DRAWER]: toggleDrawer,\n    ...systemIssuesReducer\n};\n","\nimport { createContext } from 'react';\nimport MiddlewareListener from '@redhat-cloud-services/frontend-components-utilities/MiddlewareListener';\nimport { ReducerRegistry } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport notificationsMiddleware from '@redhat-cloud-services/frontend-components-notifications/notificationsMiddleware';\nimport promise  from 'redux-promise-middleware';\nexport { default as reducers, tableReducer, entitesDetailReducer } from './reducers';\n\nexport const RegistryContext = createContext({\n    getRegistry: () => {}\n});\n\nlet middlewareListener;\n\nexport function init (...middleware) {\n    middlewareListener = new MiddlewareListener();\n    return new ReducerRegistry(\n        {},\n        [\n            middlewareListener.getMiddleware(),\n            promise,\n            notificationsMiddleware({\n                errorDescriptionKey: ['detail', 'stack']\n            }),\n            ...middleware\n        ]\n    );\n}\n\nexport function addNewListener ({ actionType, callback }) {\n    return middlewareListener.addNew({\n        on: actionType,\n        callback\n    });\n}\n","import { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport { ACTION_TYPES } from '../action-types';\n\nconst loadWritePermissionsPending = (state) => ({\n    ...state,\n    loadingFailed: false,\n    loading: true,\n    writePermissions: undefined\n});\n\nconst loadWritePermissionsFulfilled = (state, { payload }) => ({\n    ...state,\n    loading: false,\n    loadingFailed: false,\n    writePermissions: payload.writePermissions\n});\n\nconst loadWritePermissionsFailed = (state) => ({\n    ...state,\n    loading: false,\n    loadingFailed: true\n});\n\nconst defaultPermissionState = {\n    loading: true,\n    writePermissions: false,\n    loadingFailed: false\n};\n\nconst permissionsReducer = applyReducerHash(\n    {\n        [`${ACTION_TYPES.LOAD_WRITE_PERMISSIONS}_PENDING`]: loadWritePermissionsPending,\n        [`${ACTION_TYPES.LOAD_WRITE_PERMISSIONS}_FULFILLED`]: loadWritePermissionsFulfilled,\n        [`${ACTION_TYPES.LOAD_WRITE_PERMISSIONS}_FAILED`]: loadWritePermissionsFailed\n    },\n    defaultPermissionState\n);\n\nexport default permissionsReducer;\n","import { INVENTORY_ACTION_TYPES, ACTION_TYPES, SELECT_ENTITY, SET_INVENTORY_FILTER, SET_PAGINATION } from './action-types';\nimport systemProfileStore from './systemProfileStore';\nimport {\n    ComplianceTab,\n    VulnerabilityTab,\n    AdvisorTab,\n    GeneralInformationTab,\n    PatchTab,\n    RosTab\n} from '../components/SystemDetails';\nimport { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport { mergeArraysByKey } from '@redhat-cloud-services/frontend-components-utilities/helpers';\nimport { notificationsReducer } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport entitiesReducer, { defaultState as entitiesDefault } from './entities';\nimport entityDetailsReducer, { entityDefaultState as entityDefault } from './entityDetails';\n\nexport { entitiesReducer, entityDetailsReducer };\n\nimport permissionsReducer from './permissions/reducer';\n\nconst defaultState = { loaded: false, selected: new Map() };\n\nfunction entitiesLoaded(state, { payload }) {\n    return {\n        ...state,\n        rows: mergeArraysByKey([state.rows, payload.results]),\n        entities: mergeArraysByKey([state.entities, payload.results])\n    };\n}\n\nfunction updateEntity(state, { meta }) {\n    return {\n        ...state,\n        rows: state.rows.map((row) => row.id === meta?.id ? ({\n            ...row,\n            // eslint-disable-next-line camelcase\n            display_name: meta?.value\n        }) : row)\n    };\n}\n\nfunction entityLoaded(state) {\n    return {\n        ...state,\n        loaded: true,\n        activeApps: [\n            { title: 'General information', name: 'general_information', component: GeneralInformationTab },\n            { title: 'Advisor', name: 'advisor', component: AdvisorTab },\n            {\n                title: 'Vulnerability',\n                name: 'vulnerabilities',\n                component: VulnerabilityTab\n            },\n            {\n                title: 'Compliance',\n                name: 'compliance',\n                component: ComplianceTab\n            },\n            {\n                title: 'Patch',\n                name: 'patch',\n                component: PatchTab\n            },\n            (!insights.chrome.isProd || (insights.chrome.isProd && insights?.chrome?.isBeta())) && {\n                title: 'Resource Optimization',\n                name: 'ros',\n                component: RosTab\n            }\n        ].filter(Boolean)\n    };\n}\n\nfunction entitySelected(state, { payload }) {\n    const selected = state.selected || (new Map());\n    if (payload.selected) {\n        if (payload.id === 0) {\n            state.rows.forEach(row => selected.set(row.id, row));\n        } else {\n            const selectedRow = state.rows && state.rows.find(({ id }) => id === payload.id);\n            selected.set(payload.id, { ...selectedRow || {}, id: payload.id });\n        }\n    } else {\n        if (payload.id === 0) {\n            state.rows.forEach(row => selected.delete(row.id));\n        } else if (payload.id === -1) {\n            selected.clear();\n        } else {\n            selected.delete(payload.id);\n        }\n    }\n\n    return {\n        ...state,\n        selected: new Map(selected)\n    };\n}\n\nfunction entityDeleted(state, { meta }) {\n    const selected = state.selected || (new Map());\n    meta.systems.forEach(id => selected.delete(id));\n\n    return {\n        ...state,\n        selected: new Map(selected)\n    };\n}\n\nfunction onEntitiesLoaded(state, { payload, meta }) {\n    if (meta?.lastDateRequest < state?.lastDateRequest) {\n        return state;\n    }\n\n    return {\n        ...state,\n        rows: mergeArraysByKey([state.rows, payload.results.map(result => {\n            return {\n                ...result,\n                selected: state.selected && state.selected.has(result.id)\n            };\n        })])\n    };\n}\n\nfunction onSetFilter(state, { payload }) {\n    return {\n        ...state,\n        activeFilters: payload.filtersList\n    };\n}\n\nfunction onSetPagination(state, { payload }) {\n    const perPage = parseInt(payload.perPage, 10);\n    const page = parseInt(payload.page, 10);\n    return {\n        ...state,\n        perPage: isNaN(perPage) ? 50 : perPage,\n        page: isNaN(page) ? 1 : page\n    };\n}\n\nlet reducers = {\n    notifications: notificationsReducer,\n    systemProfileStore,\n    permissionsReducer\n};\n\nexport const tableReducer = applyReducerHash(\n    {\n        [ACTION_TYPES.GET_ENTITIES_FULFILLED]: entitiesLoaded,\n        [INVENTORY_ACTION_TYPES.LOAD_ENTITIES_FULFILLED]: onEntitiesLoaded,\n        [`${ACTION_TYPES.REMOVE_ENTITY}_FULFILLED`]: entityDeleted,\n        [SELECT_ENTITY]: entitySelected,\n        FILTER_SELECT: (state) => ({ ...state, selected: {} }),\n        [SET_INVENTORY_FILTER]: onSetFilter,\n        [SET_PAGINATION]: onSetPagination,\n        [ACTION_TYPES.UPDATE_DISPLAY_NAME_FULFILLED]: updateEntity\n    },\n    defaultState\n);\n\nexport const entitesDetailReducer = () => applyReducerHash(\n    {\n        [INVENTORY_ACTION_TYPES.LOAD_ENTITY_FULFILLED]: entityLoaded\n    },\n    defaultState\n);\n\nexport function mergeWithEntities(additionalReducers = (state) => state, defaultState = {}) {\n    return ({\n        entities: (state, payload) => ({\n            ...additionalReducers({\n                ...applyReducerHash({\n                    ...entitiesReducer\n                }, { ...entitiesDefault, ...defaultState })(state, payload)\n            }, payload)\n        })\n    });\n}\n\nexport function mergeWithDetail(additionalReducers = (state) => state, defaultState = {}) {\n    return ({\n        entityDetails: (state, payload) => ({\n            ...additionalReducers({\n                ...applyReducerHash({\n                    ...entityDetailsReducer\n                }, { ...entityDefault, ...defaultState })(state, payload)\n            }, payload)\n        })\n    });\n}\n\nexport default reducers;\n","/* eslint-disable camelcase */\nimport { SYSTEM_ISSUE_TYPES } from './action-types';\n\nexport function advisor(state, { payload }) {\n    return {\n        ...state,\n        systemIssues: {\n            ...state?.systemIssues,\n            advisor: {\n                isLoaded: true,\n                criticalCount: payload?.filter(item => item?.total_risk >= 4)\n            }\n        }\n    };\n}\n\nexport function cve(state, { payload }) {\n    return {\n        ...state,\n        systemIssues: {\n            ...state?.systemIssues,\n            cve: {\n                isLoaded: true,\n                critical: {\n                    count: payload?.critical?.meta?.total_items || 0\n                },\n                moderate: {\n                    count: payload?.moderate?.meta?.total_items || 0\n                },\n                important: {\n                    count: payload?.important?.meta?.total_items || 0\n                },\n                low: {\n                    count: payload?.low?.meta?.total_items || 0\n                }\n            }\n        }\n    };\n}\n\nexport function patch(state, { payload }) {\n    return {\n        ...state,\n        systemIssues: {\n            ...state?.systemIssues,\n            patch: {\n                isLoaded: true,\n                bug: {\n                    count: payload?.data?.attributes?.rhba_count || 0\n                },\n                enhancement: {\n                    count: payload?.data?.attributes?.rhea_count || 0\n                },\n                security: {\n                    count: payload?.data?.attributes?.rhsa_count || 0\n                }\n            }\n        }\n    };\n}\n\nexport function compliance(state, { payload }) {\n    return {\n        ...state,\n        systemIssues: {\n            ...state?.systemIssues,\n            compliance: {\n                isLoaded: true,\n                profiles: payload?.data?.system?.profiles\n            }\n        }\n    };\n}\n\nexport function isPending(state, type) {\n    return {\n        ...state,\n        systemIssues: {\n            ...state?.systemIssues,\n            ...type && { [type]: { isLoaded: false } }\n        }\n    };\n}\n\nexport default {\n    [SYSTEM_ISSUE_TYPES.LOAD_ADVISOR_RECOMMENDATIONS_PENDING]: (state) => isPending(state, 'advisor'),\n    [SYSTEM_ISSUE_TYPES.LOAD_APPLICABLE_CVES_PENDING]: (state) => isPending(state, 'cve'),\n    [SYSTEM_ISSUE_TYPES.LOAD_APPLICABLE_ADVISORIES_PENDING]: (state) => isPending(state, 'patch'),\n    [SYSTEM_ISSUE_TYPES.LOAD_COMPLIANCE_POLICIES_PENDING]: (state) => isPending(state, 'compliance'),\n    [SYSTEM_ISSUE_TYPES.LOAD_ADVISOR_RECOMMENDATIONS_FULFILLED]: advisor,\n    [SYSTEM_ISSUE_TYPES.LOAD_APPLICABLE_CVES_FULFILLED]: cve,\n    [SYSTEM_ISSUE_TYPES.LOAD_APPLICABLE_ADVISORIES_FULFILLED]: patch,\n    [SYSTEM_ISSUE_TYPES.LOAD_COMPLIANCE_POLICIES_FULFILLED]: compliance\n};\n"],"names":["history","useHistory","useEffect","insights","chrome","init","identifyApp","INVENTORY_ROOT","on","event","navId","push","location","search","hash","className","InventoryApp","registry","value","getRegistry","Provider","store","getStore","basename","getBaseName","window","pathname","propTypes","useLogger","PropTypes","defaultProps","InventoryTable","lazy","InventoryDetail","routes","table","detail","Routes","useContext","RegistryContext","register","reducers","mergeWithEntities","tableReducer","technology","app","pathName","split","searchParams","URLSearchParams","shift","Object","values","some","route","matchPath","href","path","document","baseURI","Suspense","fallback","Switch","Route","exact","render","status","getAll","source","filterbyName","tagsFilter","reduce","tagsMapper","page","perPage","rootClass","component","ReactDOM","getElementById","BiosCard","bios","detailLoaded","hasVendor","hasVersion","handleClick","hasReleaseDate","extra","title","isLoading","items","vendor","version","isDate","releaseDate","date","Date","type","map","onClick","e","csm","extraShape","connect","systemProfile","systemProfileStore","loaded","biosSelector","VersionTooltip","egg","client","content","CollectionCard","collectionInformation","entity","hasClient","hasLastCheckIn","hasRegistered","hasInsightsId","hasReporter","hasMachineId","DateFormat","updated","toLocaleString","created","insights_id","reporter","rhel_machine_id","hasEgg","entityDetails","collectionInformationSelector","enabledRepos","repositories","enabled","length","disabled","filter","Boolean","join","ConfigurationCard","configuration","hasPackages","hasServices","hasProcesses","hasRepositories","packages","singular","target","generalMapper","services","processes","plural","repositoriesMapper","base_url","name","gpgcheck","configurationSelector","InfrastructureCard","infrastructure","hasType","hasIPv4","hasIPv6","hasInterfaces","ipv4","ipv6","nics","interfaceMapper","infrastructureSelector","OperatingSystemCard","systemInfo","hasRelease","hasKernelRelease","hasArchitecture","hasLastBoot","hasKernelModules","operatingSystem","release","kernelRelease","architecture","bootTime","kernelModules","TitleWithPopover","headerContent","bodyContent","variant","SystemCard","isDisplayNameModalOpen","isAnsibleHostModalOpen","setState","fn","props","id","onCancel","preventDefault","ansible_host","fqdn","this","properties","setDisplayName","setAnsibleHost","writePermissions","hasHostName","hasDisplayName","hasAnsibleHostname","hasSAP","hasCPUs","hasSockets","hasCores","hasCPUFlags","hasRAM","state","Fragment","size","display_name","link","onShowDisplayModal","getAnsibleHost","onShowAnsibleModal","sapIds","cpuNumber","sockets","coresPerSocket","cpuFlags","ramSize","isOpen","ariaLabel","modalOuiaId","cancelOuiaId","confirmOuiaId","inputOuiaId","onSubmit","Component","storage","device","mount_point","options","propertiesSelector","dispatch","reloadWrapper","payload","then","data","hasItems","loadEntity","showTags","editDisplayName","editAnsibleHost","statusHelper","UP","DOWN","enabledHelper","true","false","cells","transforms","sortable","rows","item","mac_address","mtu","repository","sortValue","filters","label","useInventoryWritePermissions","hasAccess","useDispatch","ACTION_TYPES","appName","module","useStore","customItnl","intlProps","locale","navigator","language","params","useRouteMatch","inventoryId","remediationsEnabled","GeneralInfoTab","useState","Wrapper","setWrapper","customItnlProvider","usePermissions","entityDefaultState","results","APPLICATION_SELECTED","activeApp","tagModalLoaded","TOGGLE_TAG_MODAL","toggleTagModalReducer","TOGGLE_DRAWER","isToggleOpened","isOpened","systemIssuesReducer","middlewareListener","createContext","MiddlewareListener","middleware","ReducerRegistry","getMiddleware","promise","notificationsMiddleware","errorDescriptionKey","applyReducerHash","loadingFailed","loading","undefined","defaultState","selected","Map","entityLoaded","activeApps","GeneralInformationTab","AdvisorTab","VulnerabilityTab","ComplianceTab","PatchTab","isProd","isBeta","RosTab","notifications","notificationsReducer","permissionsReducer","mergeArraysByKey","entities","INVENTORY_ACTION_TYPES","meta","lastDateRequest","result","has","systems","forEach","delete","SELECT_ENTITY","row","set","selectedRow","find","clear","SET_INVENTORY_FILTER","activeFilters","filtersList","SET_PAGINATION","parseInt","isNaN","entitesDetailReducer","additionalReducers","entitiesReducer","entitiesDefault","mergeWithDetail","entityDetailsReducer","entityDefault","isPending","systemIssues","isLoaded","SYSTEM_ISSUE_TYPES","advisor","criticalCount","total_risk","cve","critical","count","total_items","moderate","important","low","patch","bug","attributes","rhba_count","enhancement","rhea_count","security","rhsa_count","compliance","profiles","system"],"sourceRoot":""}