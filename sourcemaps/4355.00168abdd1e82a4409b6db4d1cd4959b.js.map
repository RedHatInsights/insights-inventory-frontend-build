{"version":3,"file":"js/4355.1657201829710.4ccc538ae016254c17fa.js","mappings":"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","sources":["webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/DateFormat/helper.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/DateFormat/DateFormat.js","webpack:///./src/components/GeneralInfo/DataCollectorsCard/DataCollectorsCard.js","webpack:///./src/components/GeneralInfo/LoadingCard/LoadingCard.js","webpack:///./src/components/GeneralInfo/selectors/selectors.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport React from 'react';\nimport { Tooltip } from '@patternfly/react-core';\nvar second = 1000;\nvar minute = second * 60;\nvar hour = minute * 60;\nvar day = hour * 24;\nvar month = day * 30;\nvar year = day * 365;\nvar formatTime = function (number, unit) { return \"\".concat(number, \" \").concat(number > 1 ? \"\".concat(unit, \"s\") : unit, \" ago\"); };\nvar relativeTimeTable = [\n    { rightBound: Infinity, description: function (date) { return formatTime(Math.round(date / year), 'year'); } },\n    { rightBound: year, description: function (date) { return formatTime(Math.round(date / month), 'month'); } },\n    { rightBound: month, description: function (date) { return formatTime(Math.round(date / day), 'day'); } },\n    { rightBound: day, description: function (date) { return formatTime(Math.round(date / hour), 'hour'); } },\n    { rightBound: hour, description: function (date) { return formatTime(Math.round(date / minute), 'minute'); } },\n    { rightBound: minute, description: function () { return 'Just now'; } },\n];\nvar exact = function (value) { return value.toUTCString().split(',')[1].slice(0, -7).trim(); };\nexport var addTooltip = function (date, element, tooltipProps, extraTitle) {\n    if (extraTitle === void 0) { extraTitle = ''; }\n    return (React.createElement(Tooltip, __assign({}, tooltipProps, { content: React.createElement(\"div\", null,\n            extraTitle,\n            date) }), element));\n};\nexport var dateStringByType = function (type) {\n    return ({\n        exact: function (date) { return exact(date) + ' UTC'; },\n        onlyDate: function (date) { return exact(date).slice(0, -6); },\n        relative: function (date) {\n            return relativeTimeTable.reduce(function (acc, i) { return (i.rightBound > Date.now() - date.getTime() ? i.description(Date.now() - date.getTime()) : acc); }, exact(date));\n        },\n        invalid: function () { return 'Invalid date'; },\n    }[type]);\n};\nexport var dateByType = function (type, tooltipProps, extraTitle) {\n    return ({\n        exact: function (date) { return dateStringByType(type)(date); },\n        onlyDate: function (date) { return dateStringByType(type)(date); },\n        relative: function (date) { return addTooltip(dateStringByType('exact')(date), React.createElement(\"span\", null, dateStringByType(type)(date)), tooltipProps, extraTitle); },\n        invalid: function () { return 'Invalid date'; },\n    }[type]);\n};\n//# sourceMappingURL=helper.js.map","import React from 'react';\nimport { dateByType } from './helper';\nvar DateFormat = function (_a) {\n    var date = _a.date, _b = _a.type, type = _b === void 0 ? 'relative' : _b, extraTitle = _a.extraTitle, tooltipProps = _a.tooltipProps;\n    var dateObj = date instanceof Date ? date : new Date(date);\n    var invalid = date === undefined || date === null || dateObj.toString() === 'Invalid Date';\n    var dateType = invalid ? 'invalid' : type;\n    return React.createElement(React.Fragment, null, dateByType(dateType, tooltipProps, extraTitle)(dateObj));\n};\nexport default DateFormat;\n//# sourceMappingURL=DateFormat.js.map","/* eslint-disable camelcase */\nimport React, { useState, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport LoadingCard from '../LoadingCard';\nimport DateFormat from '@redhat-cloud-services/frontend-components/DateFormat';\nimport { TableComposable, Thead, Tr, Th, Tbody, Td, TableVariant, ExpandableRowContent } from '@patternfly/react-table';\nimport { Flex, FlexItem } from '@patternfly/react-core';\nimport { getDefaultCollectors } from '../selectors/selectors';\n\nconst DataCollectorsCard = ({\n    detailLoaded,\n    collectors,\n    entity,\n    dataMapper\n}) => {\n    const [expandedNames, setExpandedNames] = useState([]);\n    const setExpanded = useCallback((collector, isExpanding = true) => setExpandedNames(prevExpanded => {\n        const otherExpandedNames = prevExpanded.filter(r => r !== collector.name);\n        return isExpanding ? [...otherExpandedNames, collector.name] : otherExpandedNames;\n    }), []);\n    const isExpanded = (collector) => expandedNames.includes(collector.name);\n    const data = collectors ?? getDefaultCollectors(entity);\n    return (<LoadingCard\n        title=\"Data collectors\"\n        isLoading={ !detailLoaded }\n    >\n        <TableComposable\n            aria-label=\"Data collectors\"\n            variant={TableVariant.compact}\n            borders={false}\n        >\n            <Thead>\n                <Tr className=\"ins-c__no-border\">\n                    <Th />\n                    <Th>Name</Th>\n                    <Th>Status</Th>\n                    <Th>Last upload</Th>\n                </Tr>\n            </Thead>\n            {dataMapper ? dataMapper(data, isExpanded, setExpanded) : data.map((collector, rowIndex) => (\n                <Tbody key={collector.name} isExpanded={isExpanded(collector)}>\n                    <Tr>\n                        {collector.details.name ?\n                            <Td\n                                expand={\n                                    collector.details\n                                        ? {\n                                            rowIndex,\n                                            isExpanded: isExpanded(collector),\n                                            onToggle: () => setExpanded(collector, !isExpanded(collector))\n                                        }\n                                        : undefined\n                                }\n                                style={{ paddingLeft: 0 }}\n                            /> : <Td />}\n                        <Td dataLabel=\"Name\">{collector.name}</Td>\n                        <Td dataLabel=\"Status\">{collector.status ? 'Active' : 'N/A'}</Td>\n                        <Td dataLabel=\"Last upload\">\n                            {collector.updated ?\n                                <DateFormat date={ collector.updated } type=\"exact\" /> :\n                                'N/A'\n                            }</Td>\n                    </Tr>\n                    {collector.details && collector.details.name && (\n                        <Tr isExpanded={isExpanded(collector)}>\n                            <Td />\n                            <Td colSpan={3}>\n                                <ExpandableRowContent>\n                                    <Flex>\n                                        <FlexItem className=\"ins-c__flex-row-margin\">\n                                            {`${collector.details.name}:`}\n                                        </FlexItem>\n                                        <FlexItem grow={{ default: 'grow' }}>\n                                            {collector.details.id ?? 'N/A'}\n                                        </FlexItem>\n                                    </Flex>\n                                </ExpandableRowContent>\n                            </Td>\n                        </Tr>\n                    )}\n                </Tbody>))}\n        </TableComposable>\n    </LoadingCard>);\n};\n\nDataCollectorsCard.propTypes = {\n    detailLoaded: PropTypes.bool,\n    collectors: PropTypes.array,\n    dataMapper: PropTypes.func,\n    entity: PropTypes.shape({\n        per_reporter_staleness: PropTypes.object\n    })\n};\nDataCollectorsCard.defaultProps = {\n    detailLoaded: false\n};\n\nexport default connect(({\n    entityDetails: {\n        entity\n    },\n    systemProfileStore: {\n        systemProfile\n    }\n}) => ({\n    entity,\n    systemProfile,\n    detailLoaded: systemProfile?.loaded,\n    defaultCollectors: getDefaultCollectors(entity)\n}))(DataCollectorsCard);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    Stack,\n    StackItem,\n    TextContent,\n    Text,\n    TextList,\n    TextVariants,\n    TextListItemVariants,\n    TextListVariants,\n    TextListItem\n} from '@patternfly/react-core';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components/Skeleton';\n\nconst valueToText = (value, singular, plural) => {\n    if ((value || value === 0) && singular) {\n        return value === 1 ? `1 ${singular}` : `${value} ${plural || `${singular}s`}`;\n    }\n\n    if (value === 0) {\n        return 'None';\n    }\n\n    return value || 'Not available';\n};\n\nexport const Clickable = ({ item: { onClick, value, target, plural, singular } }) => (\n    <a\n        onClick={ event => {\n            event.preventDefault();\n            onClick(event, { value, target });\n        } }\n        href={ `${window.location.href}/${target}` }\n    >\n        { valueToText(value, singular, plural) }\n    </a>\n);\n\nClickable.propTypes = {\n    item: PropTypes.shape({\n        value: PropTypes.node,\n        target: PropTypes.string,\n        onClick: PropTypes.func,\n        plural: PropTypes.string,\n        singular: PropTypes.string\n    })\n};\n\nClickable.defaultProps = {\n    item: {}\n};\n\nconst LoadingCard = ({ title, isLoading, items, children }) => {\n    return (\n        <Stack hasGutter>\n            <StackItem>\n                <TextContent>\n                    <Text component={ TextVariants.h1 }>\n                        { title }\n                    </Text>\n                </TextContent>\n            </StackItem>\n            <StackItem isFilled>\n                {items.length ?\n                    (<TextContent>\n                        <TextList component={ TextListVariants.dl }>\n                            { items.map((item, key) => (\n                                <Fragment key={ key }>\n                                    <TextListItem component={ TextListItemVariants.dt }>\n                                        { item.title }\n                                    </TextListItem>\n                                    <TextListItem component={ TextListItemVariants.dd }>\n                                        { isLoading && <Skeleton size={ item.size || SkeletonSize.sm } /> }\n                                        { !isLoading && (\n                                            item.onClick && item.value ?\n                                                <Clickable item={ item }/> :\n                                                valueToText(item.value, item.singular, item.plural)\n                                        ) }\n                                    </TextListItem>\n                                </Fragment>\n                            )) }\n                        </TextList>\n                    </TextContent>) : null}\n                {children}\n            </StackItem>\n        </Stack>\n    );\n};\n\nLoadingCard.propTypes = {\n    title: PropTypes.node.isRequired,\n    isLoading: PropTypes.bool,\n    items: PropTypes.arrayOf(PropTypes.shape({\n        title: PropTypes.node,\n        value: PropTypes.node,\n        onClick: PropTypes.func,\n        size: PropTypes.oneOf(Object.values(SkeletonSize)),\n        plural: PropTypes.string,\n        singular: PropTypes.string\n    })),\n    children: PropTypes.node\n};\n\nLoadingCard.defaultProps = {\n    isLoading: true,\n    items: []\n};\n\nexport default LoadingCard;\n","/* eslint-disable camelcase */\nimport { registered } from '../../../Utilities/index';\n\nfunction safeParser(toParse, key) {\n    try {\n        return JSON.parse(toParse);\n    } catch {\n        return { [key]: toParse };\n    }\n}\n\nexport const propertiesSelector = ({\n    number_of_cpus,\n    number_of_sockets,\n    cores_per_socket,\n    ramSize,\n    disk_devices,\n    sap_sids,\n    cpu_flags\n} = {}, { facts } = { }) => ({\n    cpuNumber: number_of_cpus || facts?.rhsm?.CPU_CORES,\n    sockets: number_of_sockets || facts?.rhsm?.CPU_SOCKETS,\n    coresPerSocket: cores_per_socket || (\n        facts?.rhsm?.CPU_CORES\n            && facts?.rhsm?.CPU_CORES\n            && Number(facts?.rhsm?.CPU_CORES, 10) / Number(facts?.rhsm?.CPU_SOCKETS, 10)\n    ),\n    ramSize: ramSize || (facts?.rhsm?.MEMORY && `${facts?.rhsm?.MEMORY} GB`),\n    storage: disk_devices && disk_devices.map(({ device, label, mount_point, options, type }) => ({\n        ...device && safeParser(device, 'device'),\n        label,\n        ...mount_point && safeParser(mount_point, 'mountpoint'),\n        ...options && safeParser(options, 'options'),\n        ...type && safeParser(type, 'mounttype')\n    })\n    ),\n    sapIds: sap_sids,\n    cpuFlags: cpu_flags\n});\n\nexport const operatingSystem = ({\n    arch,\n    operating_system,\n    os_kernel_version,\n    last_boot_time,\n    kernel_modules\n} = {}, { facts } = {}) => ({\n    release: operating_system,\n    kernelRelease: os_kernel_version,\n    architecture: arch || facts?.rhsm?.ARCHITECTURE,\n    bootTime: last_boot_time,\n    kernelModules: kernel_modules\n});\n\nexport const biosSelector = ({\n    bios_vendor,\n    bios_version,\n    bios_release_date\n} = {}) => ({\n    vendor: bios_vendor,\n    version: bios_version,\n    releaseDate: bios_release_date\n});\n\nexport const infrastructureSelector = ({\n    infrastructure_type,\n    infrastructure_vendor,\n    network = {}\n} = {}, { facts } = {}) => ({\n    type: infrastructure_type || (\n        facts?.rhsm?.IS_VIRTUAL !== undefined && (facts?.rhsm?.IS_VIRTUAL ? 'virtual' : 'physical')\n    ) || undefined,\n    vendor: infrastructure_vendor,\n    ipv4: network.ipv4,\n    ipv6: network.ipv6,\n    nics: network.interfaces\n});\n\nexport const configurationSelector = ({\n    installed_packages,\n    enabled_services,\n    running_processes,\n    repositories\n} = {}) => ({\n    packages: installed_packages,\n    services: enabled_services,\n    processes: running_processes,\n    repositories\n});\n\nexport const collectionInformationSelector = ({\n    insights_client_version,\n    insights_egg_version\n} = {}) => ({\n    client: insights_client_version,\n    egg: insights_egg_version\n});\n\nexport const getDefaultCollectors = (entity) =>\n    registered?.filter(reporter => reporter.label !== 'insights-client not connected')\n    .map(reporter => ({\n        name: reporter.label,\n        status: entity?.per_reporter_staleness[reporter.value]?.check_in_succeeded,\n        updated: entity?.per_reporter_staleness[reporter.value]?.last_check_in,\n        details: {\n            name: reporter.idName,\n            id: entity?.[reporter.idValue]\n        }\n    }));\n\nexport const systemStatus = ({\n    stale_timestamp\n} = {}) => ({\n    stale: new Date() > new Date(stale_timestamp)\n});\n"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","hour","minute","day","month","year","formatTime","number","unit","concat","relativeTimeTable","rightBound","Infinity","description","date","Math","round","second","exact","value","toUTCString","split","slice","trim","dateStringByType","type","onlyDate","relative","reduce","acc","Date","now","getTime","invalid","_a","_b","extraTitle","tooltipProps","dateObj","dateType","toString","element","Tooltip","content","addTooltip","dateByType","DataCollectorsCard","detailLoaded","collectors","entity","dataMapper","useState","expandedNames","setExpandedNames","setExpanded","useCallback","collector","isExpanding","prevExpanded","otherExpandedNames","filter","r","name","isExpanded","includes","data","getDefaultCollectors","title","isLoading","TableComposable","variant","TableVariant","borders","Thead","Tr","className","Th","map","rowIndex","Tbody","key","details","Td","expand","onToggle","undefined","style","paddingLeft","dataLabel","status","updated","colSpan","ExpandableRowContent","grow","default","id","propTypes","PropTypes","per_reporter_staleness","defaultProps","connect","entityDetails","systemProfile","systemProfileStore","loaded","defaultCollectors","valueToText","singular","plural","Clickable","item","onClick","target","event","preventDefault","href","window","location","LoadingCard","items","children","Stack","hasGutter","StackItem","TextContent","Text","component","TextVariants","isFilled","TextList","TextListVariants","Fragment","TextListItem","T","TextListItemVariants","Skeleton","size","SkeletonSize","values","safeParser","toParse","JSON","parse","propertiesSelector","number_of_cpus","number_of_sockets","cores_per_socket","ramSize","disk_devices","sap_sids","cpu_flags","facts","cpuNumber","rhsm","CPU_CORES","sockets","CPU_SOCKETS","coresPerSocket","Number","MEMORY","storage","device","label","mount_point","options","sapIds","cpuFlags","operatingSystem","arch","operating_system","os_kernel_version","last_boot_time","kernel_modules","release","kernelRelease","architecture","ARCHITECTURE","bootTime","kernelModules","biosSelector","bios_vendor","bios_version","bios_release_date","vendor","version","releaseDate","infrastructureSelector","infrastructure_type","infrastructure_vendor","network","IS_VIRTUAL","ipv4","ipv6","nics","interfaces","configurationSelector","installed_packages","enabled_services","running_processes","repositories","packages","services","processes","collectionInformationSelector","insights_client_version","insights_egg_version","client","egg","registered","reporter","check_in_succeeded","last_check_in","idName","idValue","systemStatus","stale_timestamp","stale"],"sourceRoot":""}