{"version":3,"file":"js/3561.70aecc4a6303de13075d.js","mappings":"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","sources":["webpack:///./src/Utilities/InsightsDisconnected.js","webpack:///./src/Utilities/OperatingSystemFormatter.js","webpack:///./src/components/InventoryTable/TitleColumn.js","webpack:///./src/store/entities.js","webpack:///./src/store/systemIssues.js","webpack:///./src/store/entityDetails.js","webpack:///./src/store/groupDetail.js","webpack:///./src/store/groups.js"],"sourcesContent":["import React from 'react';\n\nimport { Grid, GridItem, Tooltip } from '@patternfly/react-core';\nimport { DisconnectedIcon } from '@patternfly/react-icons';\n\nimport './InsightsDisconnected.scss';\n\nconst InsightsDisconnected = () => (\n  <Tooltip\n    maxWidth=\"14rem\"\n    content={\n      <Grid hasGutter>\n        <GridItem>Insights client not reporting</GridItem>\n        <GridItem>\n          From the main navigation, open &quot;Registration Assistant&quot; to\n          learn how to set up Insights.\n        </GridItem>\n      </Grid>\n    }\n  >\n    <span className=\"pf-u-ml-sm ins-c-inventor__disconnected-icon\">\n      <DisconnectedIcon />\n    </span>\n  </Tooltip>\n);\n\nexport default InsightsDisconnected;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst OperatingSystemFormatter = ({ operatingSystem }) => {\n  if (operatingSystem?.name === 'RHEL') {\n    const version =\n      (operatingSystem.major &&\n        operatingSystem.minor !== null &&\n        `${operatingSystem.major}.${operatingSystem?.minor}`) ||\n      null;\n\n    return <span>RHEL {version}</span>;\n  }\n\n  return <span>{operatingSystem?.name || 'Not available'}</span>;\n};\n\nOperatingSystemFormatter.propTypes = {\n  operatingSystem: PropTypes.shape({\n    name: PropTypes.string,\n    major: PropTypes.number,\n    minor: PropTypes.number,\n  }),\n};\n\nexport default OperatingSystemFormatter;\n","/* eslint-disable camelcase */\n/* eslint-disable react/prop-types */\nimport React from 'react';\n\n/**\n * Helper function to proprly calculate what to do when user clicks on first cell.\n * Either full redirect if used with ctrl button or `onRowClick` from props is used.\n * @param {*} event html event, to find out if meta key was clicked.\n * @param {*} key inventory UUID.\n * @param {*} props additional props from `EntityTable` - loaded, onRowClick and noDetail.\n */\nconst onRowClick = (event, key, { loaded, onRowClick: rowClick, noDetail }) => {\n  if (loaded && !noDetail) {\n    const isMetaKey = event.ctrlKey || event.metaKey || event.which === 2;\n    if (isMetaKey) {\n      return;\n    } else if (rowClick) {\n      rowClick(event, key, isMetaKey);\n    }\n  }\n\n  event.preventDefault();\n  event.stopPropagation();\n};\n\n/**\n * Helper function to generate first cell in plain inventory either with clickable detail or just data from attribut.\n * This is later on used in redux in `renderFunc`.\n * @param {React.node} data React node with information that will be shown to user as column title.\n * @param {string} id inventory UUID, used to navigate to correct URL.\n * @param {*} item row data, holds every information from redux store for currecnt row.\n * @param {*} props additional props passed from `EntityTable` - holds any props passed to inventory table.\n */\nconst TitleColumn = (data, id, item, props) => (\n  <div className=\"ins-composed-col sentry-mask data-hj-suppress\">\n    <div key=\"os_release\">{item?.os_release}</div>\n    <div key=\"data\" className={props?.noDetail ? 'ins-m-nodetail' : ''}>\n      {props?.noDetail ? (\n        data\n      ) : (\n        <a\n          // eslint-disable-next-line react/no-unknown-property\n          widget=\"col\"\n          href={`${location.pathname}${\n            location.pathname.substr(-1) === '/' ? '' : '/'\n          }${id}`}\n          onClick={(event) => {\n            onRowClick(event, id, props);\n          }}\n        >\n          {data}\n        </a>\n      )}\n    </div>\n  </div>\n);\n\nexport default TitleColumn;\n","import React from 'react';\nimport {\n  ACTION_TYPES,\n  CHANGE_SORT,\n  CLEAR_ENTITIES,\n  CLEAR_FILTERS,\n  CONFIG_CHANGED,\n  ENTITIES_LOADING,\n  FILTER_SELECT,\n  SELECT_ENTITY,\n  SHOW_ENTITIES,\n  TOGGLE_TAG_MODAL,\n  UPDATE_ENTITIES,\n} from './action-types';\nimport { mergeArraysByKey } from '@redhat-cloud-services/frontend-components-utilities/helpers';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport { CullingInformation } from '@redhat-cloud-services/frontend-components/CullingInfo';\nimport { TagWithDialog } from '../Utilities/index';\nimport groupBy from 'lodash/groupBy';\nimport TitleColumn from '../components/InventoryTable/TitleColumn';\nimport InsightsDisconnected from '../Utilities/InsightsDisconnected';\nimport OperatingSystemFormatter from '../Utilities/OperatingSystemFormatter';\nimport { Tooltip } from '@patternfly/react-core';\nimport { verifyCulledInsightsClient } from '../Utilities/sharedFunctions';\nimport { fitContent } from '@patternfly/react-table';\nimport isEmpty from 'lodash/isEmpty';\n\nexport const defaultState = {\n  loaded: false,\n  tagsLoaded: false,\n  allTagsLoaded: false,\n  operatingSystems: [],\n  operatingSystemsLoaded: false,\n  groups: [],\n  invConfig: {},\n  sortBy: {\n    key: 'updated',\n    direction: 'desc',\n  },\n};\n\nexport const defaultColumns = (groupsEnabled = false) => [\n  {\n    key: 'display_name',\n    sortKey: 'display_name',\n    title: 'Name',\n    renderFunc: TitleColumn,\n  },\n  ...(groupsEnabled\n    ? [\n        {\n          key: 'groups',\n          sortKey: 'groups',\n          title: 'Group',\n          props: { width: 10, isStatic: true },\n          // eslint-disable-next-line camelcase\n          renderFunc: (groups) => (isEmpty(groups) ? 'N/A' : groups[0].name), // currently, one group at maximum is supported\n          transforms: [fitContent],\n        },\n      ]\n    : []),\n  {\n    key: 'tags',\n    title: 'Tags',\n    props: { width: 10, isStatic: true },\n    // eslint-disable-next-line react/display-name\n    renderFunc: (value, systemId) => (\n      <TagWithDialog count={value.length} systemId={systemId} />\n    ),\n  },\n  {\n    key: 'system_profile',\n    sortKey: 'operating_system',\n    dataLabel: 'OS',\n    title: (\n      <Tooltip content={<span>Operating system</span>}>\n        <span>OS</span>\n      </Tooltip>\n    ),\n    // eslint-disable-next-line react/display-name\n    renderFunc: (systemProfile) => (\n      <OperatingSystemFormatter\n        operatingSystem={systemProfile?.operating_system}\n      />\n    ),\n    props: { width: 10 },\n  },\n  {\n    key: 'updated',\n    sortKey: 'updated',\n    title: 'Last seen',\n    // eslint-disable-next-line react/display-name\n    renderFunc: (\n      value,\n      _id,\n      {\n        culled_timestamp: culled,\n        stale_warning_timestamp: staleWarn,\n        stale_timestamp: stale,\n        per_reporter_staleness: perReporterStaleness,\n      }\n    ) => {\n      return CullingInformation ? (\n        <CullingInformation\n          culled={culled}\n          staleWarning={staleWarn}\n          stale={stale}\n          render={({ msg }) => (\n            <React.Fragment>\n              <DateFormat\n                date={value}\n                extraTitle={\n                  <React.Fragment>\n                    <div>{msg}</div>\n                    Last seen:{` `}\n                  </React.Fragment>\n                }\n              />\n              {verifyCulledInsightsClient(perReporterStaleness) && (\n                <InsightsDisconnected />\n              )}\n            </React.Fragment>\n          )}\n        >\n          {' '}\n          <DateFormat date={value} />{' '}\n        </CullingInformation>\n      ) : (\n        new Date(value).toLocaleString()\n      );\n    },\n    props: { width: 10 },\n    transforms: [fitContent],\n  },\n];\n\nfunction entitiesPending(state, { meta }) {\n  return {\n    ...state,\n    ...((state.columns && {\n      columns: mergeArraysByKey(\n        [\n          defaultColumns().filter(\n            ({ key }) => key !== 'tags' || meta?.showTags\n          ),\n          state.columns,\n        ],\n        'key'\n      ),\n    }) ||\n      {}),\n    rows: [],\n    loaded: false,\n    lastDateRequest: meta.lastDateRequest,\n  };\n}\n\nfunction clearFilters(state) {\n  return {\n    ...state,\n    activeFilters: [],\n  };\n}\n\nconst clearEntities = () => {\n  return defaultState;\n};\n\n// eslint-disable-next-line camelcase\nfunction entitiesLoaded(\n  state,\n  {\n    payload: {\n      results,\n      per_page: perPage,\n      page,\n      count,\n      total,\n      loaded,\n      filters,\n    },\n    meta,\n  }\n) {\n  // Older requests should not rewrite the state\n  if (meta.lastDateRequest < state.lastDateRequest) {\n    return state;\n  }\n\n  // Data are loaded and APi returned malicious data\n  if (loaded === undefined && (page === undefined || perPage === undefined)) {\n    return state;\n  }\n\n  return {\n    ...state,\n    activeFilters: filters || [],\n    loaded: loaded === undefined || loaded,\n    // filter data only if we are loaded\n    rows: mergeArraysByKey([state.rows, results]).filter((item) =>\n      !loaded ? true : item.created\n    ),\n    perPage: perPage !== undefined ? perPage : state.perPage,\n    page: page !== undefined ? page : state.page,\n    count: count !== undefined ? count : state.count,\n    total: total !== undefined ? total : state.total,\n  };\n}\n\nfunction loadingRejected(state, { payload }) {\n  return {\n    ...state,\n    error: payload,\n  };\n}\n\nfunction selectEntity(state, { payload }) {\n  const rows = [...state.rows];\n  let toSelect = [];\n  if (Array.isArray(payload.id)) {\n    toSelect = payload.id.map((item) => {\n      return {\n        id: item,\n        selected: payload?.selected,\n      };\n    });\n  } else {\n    toSelect = [].concat(payload);\n  }\n\n  toSelect.forEach(({ id, selected }) => {\n    const entity = rows.find((entity) => entity.id === id);\n    if (entity) {\n      entity.selected = selected;\n    } else {\n      rows.forEach((item) => (item.selected = selected));\n    }\n  });\n  return {\n    ...state,\n    rows,\n  };\n}\n\nfunction versionsLoaded(state, { payload: { results } }) {\n  return {\n    ...state,\n    operatingSystems: (results || []).map((entry) => {\n      const { name, major, minor } = entry.value;\n      const versionStringified = `${major}.${minor}`;\n      return {\n        label: `${name} ${versionStringified}`,\n        value: versionStringified,\n      };\n    }),\n    operatingSystemsLoaded: true,\n  };\n}\n\nfunction changeSort(state, { payload: { key, direction } }) {\n  return {\n    ...state,\n    sortBy: {\n      key,\n      direction,\n    },\n  };\n}\n\nfunction groupsLoaded(state, { payload }) {\n  return {\n    ...state,\n    groups: payload.results,\n  };\n}\n\nfunction selectFilter(\n  state,\n  {\n    payload: {\n      item: { items, ...item },\n      selected,\n    },\n  }\n) {\n  let { activeFilters = [] } = state;\n  if (selected) {\n    activeFilters = [...activeFilters, item, ...(items ? items : [])];\n    const values = activeFilters.map((active) => active.value);\n    activeFilters = activeFilters.filter(\n      (filter, key) => values.lastIndexOf(filter.value) === key\n    );\n  } else {\n    activeFilters.splice(\n      activeFilters.map((active) => active.value).indexOf(item.value),\n      1\n    );\n    if (items) {\n      items.forEach((subItem) => {\n        activeFilters.splice(\n          activeFilters.map((active) => active.value).indexOf(subItem.value),\n          1\n        );\n      });\n    }\n  }\n\n  return {\n    ...state,\n    activeFilters,\n  };\n}\n\nexport function showTags(state, { payload, meta }) {\n  const { tags, ...activeSystemTag } = state.rows\n    ? state.rows.find(({ id }) => meta.systemId === id)\n    : state.entity || {};\n  return {\n    ...state,\n    tagModalLoaded: true,\n    activeSystemTag: {\n      ...activeSystemTag,\n      tags: Object.values(payload.results)[0],\n      tagsCount: meta.tagsCount,\n      page: payload.page,\n      perPage: payload.per_page,\n      tagsLoaded: true,\n    },\n  };\n}\n\nexport function showTagsPending(state, { meta }) {\n  const { tags, ...activeSystemTag } = state.rows\n    ? state.rows.find(({ id }) => meta.systemId === id)\n    : state.entity || {};\n  return {\n    ...state,\n    tagModalLoaded: false,\n    activeSystemTag: {\n      ...activeSystemTag,\n      tagsCount: meta.tagsCount,\n      tagsLoaded: false,\n    },\n  };\n}\n\nexport function toggleTagModalReducer(state, { payload: { isOpen } }) {\n  return {\n    ...state,\n    showTagDialog: isOpen,\n    activeSystemTag: undefined,\n  };\n}\n\nexport function allTags(\n  state,\n  {\n    payload: { results, total, page, per_page: perPage },\n    meta: { lastDateRequestTags },\n  }\n) {\n  // only the latest request can change state\n  if (lastDateRequestTags < state.lastDateRequestTags) {\n    return state;\n  }\n\n  return {\n    ...state,\n    allTags: Object.entries(\n      groupBy(results, ({ tag: { namespace } }) => namespace)\n    ).map(([key, value]) => ({\n      name: key,\n      tags: value,\n    })),\n    allTagsPagination: {\n      perPage,\n      page,\n    },\n    additionalTagsCount: total > perPage ? total - perPage : 0,\n    allTagsTotal: total,\n    allTagsLoaded: true,\n    tagModalLoaded: true,\n  };\n}\n\nexport default {\n  [ACTION_TYPES.ALL_TAGS_FULFILLED]: allTags,\n  [ACTION_TYPES.ALL_TAGS_PENDING]: (state, { meta }) => ({\n    ...state,\n    allTagsLoaded: false,\n    tagModalLoaded: false,\n    lastDateRequestTags: meta.lastDateRequestTags,\n  }),\n  [ACTION_TYPES.LOAD_ENTITIES_PENDING]: entitiesPending,\n  [ACTION_TYPES.LOAD_ENTITIES_FULFILLED]: entitiesLoaded,\n  [ACTION_TYPES.LOAD_ENTITIES_REJECTED]: loadingRejected,\n  [ACTION_TYPES.LOAD_TAGS_PENDING]: showTagsPending,\n  [ACTION_TYPES.LOAD_TAGS_FULFILLED]: showTags,\n  [ACTION_TYPES.ALL_TAGS_REJECTED]: loadingRejected,\n  [ACTION_TYPES.OPERATING_SYSTEMS_PENDING]: (state) => ({\n    ...state,\n    operatingSystemsLoaded: false,\n  }),\n  [ACTION_TYPES.OPERATING_SYSTEMS_FULFILLED]: versionsLoaded,\n  [UPDATE_ENTITIES]: entitiesLoaded,\n  [SHOW_ENTITIES]: (state, action) =>\n    entitiesLoaded(state, {\n      payload: {\n        ...action.payload,\n        loaded: false,\n      },\n    }),\n  [FILTER_SELECT]: selectFilter,\n  [SELECT_ENTITY]: selectEntity,\n  [CHANGE_SORT]: changeSort,\n  [CLEAR_FILTERS]: clearFilters,\n  [ENTITIES_LOADING]: (state, { payload: { isLoading } }) => ({\n    ...state,\n    loaded: !isLoading,\n  }),\n  [TOGGLE_TAG_MODAL]: toggleTagModalReducer,\n  [CONFIG_CHANGED]: (state, { payload }) => ({ ...state, invConfig: payload }),\n  [CLEAR_ENTITIES]: clearEntities,\n  [ACTION_TYPES.GROUPS_FOR_ENTITIES_PENDING]: (state) => ({\n    ...state,\n    groups: [],\n  }),\n  [ACTION_TYPES.GROUPS_FOR_ENTITIES_FULFILLED]: (state, action) =>\n    groupsLoaded(state, { payload: { ...action.payload } }),\n};\n","/* eslint-disable camelcase */\nimport { SYSTEM_ISSUE_TYPES } from './action-types';\n\nexport function advisor(state, { payload }) {\n  return {\n    ...state,\n    systemIssues: {\n      ...state?.systemIssues,\n      advisor: {\n        isLoaded: true,\n        criticalCount: payload?.filter((item) => item?.total_risk >= 4),\n      },\n    },\n  };\n}\n\nexport function cve(state, { payload }) {\n  return {\n    ...state,\n    systemIssues: {\n      ...state?.systemIssues,\n      cve: {\n        isLoaded: true,\n        critical: {\n          count: payload?.critical?.meta?.total_items || 0,\n        },\n        moderate: {\n          count: payload?.moderate?.meta?.total_items || 0,\n        },\n        important: {\n          count: payload?.important?.meta?.total_items || 0,\n        },\n        low: {\n          count: payload?.low?.meta?.total_items || 0,\n        },\n      },\n    },\n  };\n}\n\nexport function patch(state, { payload }) {\n  return {\n    ...state,\n    systemIssues: {\n      ...state?.systemIssues,\n      patch: {\n        isLoaded: true,\n        bug: {\n          count: payload?.data?.attributes?.rhba_count || 0,\n        },\n        enhancement: {\n          count: payload?.data?.attributes?.rhea_count || 0,\n        },\n        security: {\n          count: payload?.data?.attributes?.rhsa_count || 0,\n        },\n      },\n    },\n  };\n}\n\nexport function compliance(state, { payload }) {\n  return {\n    ...state,\n    systemIssues: {\n      ...state?.systemIssues,\n      compliance: {\n        isLoaded: true,\n        profiles: payload?.data?.system?.profiles,\n      },\n    },\n  };\n}\n\nexport function isPending(state, type) {\n  return {\n    ...state,\n    systemIssues: {\n      ...state?.systemIssues,\n      ...(type && { [type]: { isLoaded: false } }),\n    },\n  };\n}\n\nexport default {\n  [SYSTEM_ISSUE_TYPES.LOAD_ADVISOR_RECOMMENDATIONS_PENDING]: (state) =>\n    isPending(state, 'advisor'),\n  [SYSTEM_ISSUE_TYPES.LOAD_APPLICABLE_CVES_PENDING]: (state) =>\n    isPending(state, 'cve'),\n  [SYSTEM_ISSUE_TYPES.LOAD_APPLICABLE_ADVISORIES_PENDING]: (state) =>\n    isPending(state, 'patch'),\n  [SYSTEM_ISSUE_TYPES.LOAD_COMPLIANCE_POLICIES_PENDING]: (state) =>\n    isPending(state, 'compliance'),\n  [SYSTEM_ISSUE_TYPES.LOAD_ADVISOR_RECOMMENDATIONS_FULFILLED]: advisor,\n  [SYSTEM_ISSUE_TYPES.LOAD_APPLICABLE_CVES_FULFILLED]: cve,\n  [SYSTEM_ISSUE_TYPES.LOAD_APPLICABLE_ADVISORIES_FULFILLED]: patch,\n  [SYSTEM_ISSUE_TYPES.LOAD_COMPLIANCE_POLICIES_FULFILLED]: compliance,\n};\n","import { ACTION_TYPES, TOGGLE_DRAWER, TOGGLE_TAG_MODAL } from './action-types';\nimport { showTags, toggleTagModalReducer } from './entities';\nimport systemIssuesReducer from './systemIssues';\nexport const entityDefaultState = { loaded: false };\n\nfunction entityDetailPending(state) {\n  return {\n    ...state,\n    loaded: false,\n  };\n}\n\nfunction entityDetailLoaded(state, { payload }) {\n  return {\n    ...state,\n    loaded: true,\n    entity: payload.results[0],\n  };\n}\n\nfunction toggleDrawer(state, { payload }) {\n  return {\n    ...state,\n    isToggleOpened: payload?.isOpened,\n  };\n}\n\nfunction showTagsPending(state) {\n  return {\n    ...state,\n    tagModalLoaded: false,\n  };\n}\n\nfunction updateAnsibleName(state, { meta }, useOrigValue) {\n  const value = useOrigValue ? meta?.origValue : meta?.value;\n  return {\n    ...state,\n    ...(state.rows && {\n      rows: state.rows.map((row) =>\n        row.id === meta?.id\n          ? {\n              ...row,\n              // eslint-disable-next-line camelcase\n              ansible_host: value,\n            }\n          : row\n      ),\n    }),\n    ...(state.entity && {\n      entity: {\n        ...state.entity,\n        // eslint-disable-next-line camelcase\n        ansible_host: value,\n      },\n    }),\n  };\n}\n\nexport function updateEntity(state, { meta }, useOrigValue) {\n  const value = useOrigValue ? meta?.origValue : meta?.value;\n  return {\n    ...state,\n    ...(state.rows && {\n      rows: state.rows.map((row) =>\n        row.id === meta?.id\n          ? {\n              ...row,\n              // eslint-disable-next-line camelcase\n              display_name: value,\n            }\n          : row\n      ),\n    }),\n    ...(state.entity && {\n      entity: {\n        ...state.entity,\n        // eslint-disable-next-line camelcase\n        display_name: value,\n      },\n    }),\n  };\n}\n\nexport default {\n  [ACTION_TYPES.LOAD_ENTITIES_PENDING]: () => entityDefaultState,\n  [ACTION_TYPES.LOAD_ENTITY_PENDING]: entityDetailPending,\n  [ACTION_TYPES.LOAD_ENTITY_FULFILLED]: entityDetailLoaded,\n  [ACTION_TYPES.LOAD_TAGS]: showTags,\n  [ACTION_TYPES.LOAD_TAGS_PENDING]: showTagsPending,\n  [ACTION_TYPES.LOAD_TAGS_FULFILLED]: showTags,\n  [TOGGLE_TAG_MODAL]: toggleTagModalReducer,\n  [TOGGLE_DRAWER]: toggleDrawer,\n  [ACTION_TYPES.UPDATE_DISPLAY_NAME_PENDING]: updateEntity,\n  [ACTION_TYPES.SET_ANSIBLE_HOST_PENDING]: updateAnsibleName,\n  [ACTION_TYPES.UPDATE_DISPLAY_NAME_ERROR]: (state, payload) =>\n    updateEntity(state, payload, true),\n  [ACTION_TYPES.SET_ANSIBLE_HOST_ERROR]: (state, payload) =>\n    updateAnsibleName(state, payload, true),\n  ...systemIssuesReducer,\n};\n","import { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport { ACTION_TYPES } from './action-types';\n\nexport const initialState = {\n  loading: false,\n  rejected: false,\n  fulfilled: false,\n  uninitialized: true,\n  error: null,\n  data: null,\n};\n\nexport default applyReducerHash(\n  {\n    [ACTION_TYPES.GROUP_DETAIL_PENDING]: (state) => {\n      return {\n        ...state,\n        loading: true,\n        uninitialized: false,\n      };\n    },\n    [ACTION_TYPES.GROUP_DETAIL_FULFILLED]: (state, { payload }) => {\n      return {\n        ...state,\n        loading: false,\n        rejected: false,\n        uninitialized: false,\n        fulfilled: true,\n        data: payload,\n      };\n    },\n    [ACTION_TYPES.GROUP_DETAIL_REJECTED]: (state, { payload }) => {\n      return {\n        ...state,\n        loading: false,\n        rejected: true,\n        uninitialized: false,\n        fulfilled: false,\n        error: payload,\n      };\n    },\n  },\n  initialState\n);\n","import { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport { ACTION_TYPES } from './action-types';\n\nexport const initialState = {\n  loading: false,\n  rejected: false,\n  fulfilled: false,\n  uninitialized: true,\n  error: null,\n  data: null,\n};\n\nexport default applyReducerHash(\n  {\n    [ACTION_TYPES.GROUPS_PENDING]: (state) => {\n      return {\n        ...state,\n        loading: true,\n        uninitialized: false,\n      };\n    },\n    [ACTION_TYPES.GROUPS_FULFILLED]: (state, { payload }) => {\n      return {\n        ...state,\n        loading: false,\n        rejected: false,\n        uninitialized: false,\n        fulfilled: true,\n        data: payload,\n      };\n    },\n    [ACTION_TYPES.GROUPS_REJECTED]: (state, { payload }) => {\n      return {\n        ...state,\n        loading: false,\n        rejected: true,\n        uninitialized: false,\n        fulfilled: false,\n        error: payload,\n      };\n    },\n  },\n  initialState\n);\n"],"names":["maxWidth","content","hasGutter","className","OperatingSystemFormatter","operatingSystem","name","version","major","minor","propTypes","PropTypes","data","id","item","props","key","os_release","noDetail","widget","href","location","pathname","substr","onClick","event","loaded","rowClick","onRowClick","isMetaKey","ctrlKey","metaKey","which","preventDefault","stopPropagation","defaultState","tagsLoaded","allTagsLoaded","operatingSystems","operatingSystemsLoaded","groups","invConfig","sortBy","direction","defaultColumns","groupsEnabled","sortKey","title","renderFunc","TitleColumn","width","isStatic","isEmpty","transforms","fitContent","value","systemId","TagWithDialog","count","length","dataLabel","systemProfile","operating_system","_id","culled","culled_timestamp","staleWarn","stale_warning_timestamp","stale","stale_timestamp","perReporterStaleness","per_reporter_staleness","CullingInformation","staleWarning","render","msg","date","extraTitle","verifyCulledInsightsClient","Date","toLocaleString","entitiesLoaded","state","payload","results","perPage","per_page","page","total","filters","meta","lastDateRequest","undefined","activeFilters","rows","mergeArraysByKey","filter","created","loadingRejected","error","showTags","find","entity","activeSystemTag","tags","tagModalLoaded","Object","values","tagsCount","toggleTagModalReducer","isOpen","showTagDialog","ACTION_TYPES","lastDateRequestTags","allTags","entries","groupBy","tag","namespace","map","allTagsPagination","additionalTagsCount","allTagsTotal","columns","entry","versionStringified","label","UPDATE_ENTITIES","SHOW_ENTITIES","action","FILTER_SELECT","items","selected","active","lastIndexOf","splice","indexOf","forEach","subItem","SELECT_ENTITY","Array","isArray","concat","CHANGE_SORT","CLEAR_FILTERS","ENTITIES_LOADING","isLoading","TOGGLE_TAG_MODAL","CONFIG_CHANGED","CLEAR_ENTITIES","groupsLoaded","isPending","type","systemIssues","isLoaded","SYSTEM_ISSUE_TYPES","advisor","criticalCount","total_risk","cve","critical","total_items","moderate","important","low","patch","bug","attributes","rhba_count","enhancement","rhea_count","security","rhsa_count","compliance","profiles","system","entityDefaultState","updateAnsibleName","useOrigValue","origValue","row","ansible_host","updateEntity","display_name","TOGGLE_DRAWER","isToggleOpened","isOpened","systemIssuesReducer","applyReducerHash","loading","uninitialized","rejected","fulfilled"],"sourceRoot":""}