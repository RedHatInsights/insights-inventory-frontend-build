{"version":3,"file":"js/exposed-./BiosCard.28f11b9fb56aa8e8a230.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Text/Text.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Text/TextContent.js","webpack:///./node_modules/@patternfly/react-styles/css/components/Content/content.mjs","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/DateFormat/helper.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/DateFormat/DateFormat.js","webpack:///./src/components/GeneralInfo/BiosCard/BiosCard.js"],"sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Content/content';\nimport { useOUIAProps } from '../../helpers';\nexport var TextVariants;\n(function (TextVariants) {\n    TextVariants[\"h1\"] = \"h1\";\n    TextVariants[\"h2\"] = \"h2\";\n    TextVariants[\"h3\"] = \"h3\";\n    TextVariants[\"h4\"] = \"h4\";\n    TextVariants[\"h5\"] = \"h5\";\n    TextVariants[\"h6\"] = \"h6\";\n    TextVariants[\"p\"] = \"p\";\n    TextVariants[\"a\"] = \"a\";\n    TextVariants[\"small\"] = \"small\";\n    TextVariants[\"blockquote\"] = \"blockquote\";\n    TextVariants[\"pre\"] = \"pre\";\n})(TextVariants || (TextVariants = {}));\nexport const Text = (_a) => {\n    var { children = null, className = '', component = TextVariants.p, isVisitedLink = false, ouiaId, ouiaSafe = true } = _a, props = __rest(_a, [\"children\", \"className\", \"component\", \"isVisitedLink\", \"ouiaId\", \"ouiaSafe\"]);\n    const Component = component;\n    const ouiaProps = useOUIAProps(Text.displayName, ouiaId, ouiaSafe);\n    return (React.createElement(Component, Object.assign({}, ouiaProps, props, { \"data-pf-content\": true, className: css(isVisitedLink && component === TextVariants.a && styles.modifiers.visited, className) }), children));\n};\nText.displayName = 'Text';\n//# sourceMappingURL=Text.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Content/content';\nimport { css } from '@patternfly/react-styles';\nexport const TextContent = (_a) => {\n    var { children, className = '', isVisited = false } = _a, props = __rest(_a, [\"children\", \"className\", \"isVisited\"]);\n    return (React.createElement(\"div\", Object.assign({}, props, { className: css(styles.content, isVisited && styles.modifiers.visited, className) }), children));\n};\nTextContent.displayName = 'TextContent';\n//# sourceMappingURL=TextContent.js.map","import './content.css';\nexport default {\n  \"content\": \"pf-c-content\",\n  \"modifiers\": {\n    \"visited\": \"pf-m-visited\",\n    \"plain\": \"pf-m-plain\",\n    \"overpassFont\": \"pf-m-overpass-font\"\n  }\n};","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { jsxs as _jsxs, jsx as _jsx } from \"react/jsx-runtime\";\nimport { Tooltip } from '@patternfly/react-core';\nvar second = 1000;\nvar minute = second * 60;\nvar hour = minute * 60;\nvar day = hour * 24;\nvar month = day * 30;\nvar year = day * 365;\nvar formatTime = function (number, unit) { return \"\".concat(number, \" \").concat(number > 1 ? \"\".concat(unit, \"s\") : unit, \" ago\"); };\nvar relativeTimeTable = [\n    { rightBound: Infinity, description: function (date) { return formatTime(Math.round(date / year), 'year'); } },\n    { rightBound: year, description: function (date) { return formatTime(Math.round(date / month), 'month'); } },\n    { rightBound: month, description: function (date) { return formatTime(Math.round(date / day), 'day'); } },\n    { rightBound: day, description: function (date) { return formatTime(Math.round(date / hour), 'hour'); } },\n    { rightBound: hour, description: function (date) { return formatTime(Math.round(date / minute), 'minute'); } },\n    { rightBound: minute, description: function () { return 'Just now'; } },\n];\nvar exact = function (value) { return value.toUTCString().split(',')[1].slice(0, -7).trim(); };\nexport var addTooltip = function (date, element, tooltipProps, extraTitle) {\n    if (extraTitle === void 0) { extraTitle = ''; }\n    return (_jsx(Tooltip, __assign({}, tooltipProps, { content: _jsxs(\"div\", { children: [extraTitle, date] }) }, { children: element })));\n};\nexport var dateStringByType = function (type) {\n    return ({\n        exact: function (date) { return exact(date) + ' UTC'; },\n        onlyDate: function (date) { return exact(date).slice(0, -6); },\n        relative: function (date) {\n            return relativeTimeTable.reduce(function (acc, i) { return (i.rightBound > Date.now() - date.getTime() ? i.description(Date.now() - date.getTime()) : acc); }, exact(date));\n        },\n        invalid: function () { return 'Invalid date'; },\n    }[type]);\n};\nexport var dateByType = function (type, tooltipProps, extraTitle) {\n    return ({\n        exact: function (date) { return dateStringByType(type)(date); },\n        onlyDate: function (date) { return dateStringByType(type)(date); },\n        relative: function (date) { return addTooltip(dateStringByType('exact')(date), _jsx(\"span\", { children: dateStringByType(type)(date) }), tooltipProps, extraTitle); },\n        invalid: function () { return 'Invalid date'; },\n    }[type]);\n};\n//# sourceMappingURL=helper.js.map","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react';\nimport { dateByType } from './helper';\nvar DateFormat = function (_a) {\n    var date = _a.date, _b = _a.type, type = _b === void 0 ? 'relative' : _b, extraTitle = _a.extraTitle, tooltipProps = _a.tooltipProps;\n    var dateObj = date instanceof Date ? date : new Date(date);\n    var invalid = date === undefined || date === null || dateObj.toString() === 'Invalid Date';\n    var dateType = invalid ? 'invalid' : type;\n    return _jsx(React.Fragment, { children: dateByType(dateType, tooltipProps, extraTitle)(dateObj) });\n};\nexport default DateFormat;\n//# sourceMappingURL=DateFormat.js.map","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport LoadingCard from '../LoadingCard';\nimport { biosSelector } from '../selectors';\nimport DateFormat from '@redhat-cloud-services/frontend-components/DateFormat';\nimport { extraShape, isDate } from '../../../constants';\n\nconst BiosCardCore = ({\n  bios,\n  detailLoaded,\n  hasVendor,\n  hasVersion,\n  handleClick,\n  hasReleaseDate,\n  extra,\n}) => (\n  <LoadingCard\n    title=\"BIOS\"\n    isLoading={!detailLoaded}\n    items={[\n      ...(hasVendor ? [{ title: 'Vendor', value: bios.vendor }] : []),\n      ...(hasVersion ? [{ title: 'Version', value: bios.version }] : []),\n      ...(hasReleaseDate\n        ? [\n            {\n              title: 'Release date',\n              value: isDate(bios.releaseDate) ? (\n                <DateFormat date={new Date(bios.releaseDate)} type=\"onlyDate\" />\n              ) : (\n                'Not available'\n              ),\n            },\n          ]\n        : []),\n      ...extra.map(({ onClick, ...item }) => ({\n        ...item,\n        ...(onClick && { onClick: (e) => onClick(e, handleClick) }),\n      })),\n    ]}\n  />\n);\n\nBiosCardCore.propTypes = {\n  detailLoaded: PropTypes.bool,\n  handleClick: PropTypes.func,\n  bios: PropTypes.shape({\n    vendor: PropTypes.string,\n    version: PropTypes.string,\n    releaseDate: PropTypes.string,\n    csm: PropTypes.arrayOf(PropTypes.string),\n  }),\n  hasVendor: PropTypes.bool,\n  hasVersion: PropTypes.bool,\n  hasReleaseDate: PropTypes.bool,\n  extra: PropTypes.arrayOf(extraShape),\n};\nBiosCardCore.defaultProps = {\n  detailLoaded: false,\n  handleClick: () => undefined,\n  extra: [],\n  hasVendor: true,\n  hasVersion: true,\n  hasReleaseDate: true,\n};\n\nexport const BiosCard = connect(\n  ({ systemProfileStore: { systemProfile } }) => ({\n    detailLoaded: systemProfile && systemProfile.loaded,\n    bios: biosSelector(systemProfile),\n  })\n)(BiosCardCore);\n\nBiosCard.propTypes = BiosCardCore.propTypes;\nBiosCard.defaultProps = BiosCardCore.defaultProps;\n\nexport default BiosCard;\n"],"names":["TextVariants","Text","_a","children","className","component","p","isVisitedLink","ouiaId","ouiaSafe","props","__rest","Component","ouiaProps","displayName","Object","assign","a","modifiers","visited","TextContent","isVisited","content","__assign","t","s","i","n","arguments","length","prototype","hasOwnProperty","call","apply","this","hour","minute","day","month","year","formatTime","number","unit","concat","relativeTimeTable","rightBound","Infinity","description","date","Math","round","second","exact","value","toUTCString","split","slice","trim","dateStringByType","type","onlyDate","relative","reduce","acc","Date","now","getTime","invalid","dateByType","tooltipProps","extraTitle","element","Tooltip","addTooltip","_b","dateObj","dateType","toString","BiosCardCore","bios","detailLoaded","hasVendor","hasVersion","handleClick","hasReleaseDate","extra","title","isLoading","items","vendor","version","isDate","releaseDate","map","onClick","e","propTypes","PropTypes","csm","extraShape","defaultProps","BiosCard","connect","systemProfile","systemProfileStore","loaded","biosSelector"],"sourceRoot":""}