{"version":3,"file":"js/exposed-./RootApp.c936a6cc47d5ca83cbe1.js","mappings":"oMAkCA,QA1BY,WACR,IAAMA,GAAUC,EAAAA,EAAAA,cACVC,GAASC,EAAAA,EAAAA,KAcf,OAbAC,EAAAA,EAAAA,YAAU,WACN,OAAOF,EAAOG,GACV,kBACA,SAAAC,GACwB,cAAhBA,EAAMC,MACNP,EAAQQ,KAAK,IAAD,OAAKC,SAASC,QAAM,OAAGD,SAASE,OAE5CX,EAAQQ,KAAK,IAAD,OAAKF,EAAMC,OAAK,OAAGE,SAASC,QAAM,OAAGD,SAASE,MAElE,GAER,GAAG,IAGC,yBAAKC,UAAU,aACX,kBAAC,EAAAC,oBAAmB,MACpB,kBAAC,IAAY,CAACC,QAAQ,aAClB,kBAAC,IAAM,OAIvB,C,gKCAA,QAtBqB,WACjB,IAAMC,GAAWC,EAAAA,EAAAA,UAAQ,WACrB,IAAMC,GAAoCC,EAAAA,EAAAA,MAC1C,MAAO,CACHC,SAAU,SAACC,GAAW,OAAKH,EAAMI,gBAAeC,EAAAA,EAAAA,IAAeF,GAAa,EAC5EF,SAAU,kBAAMD,CAAK,EAE7B,GAAG,IAEH,OAAQF,EACJ,kBAAC,aAAwB,CAACQ,MAAO,CAC7BC,YAAa,kBAAMT,CAAQ,IAE3B,kBAAC,EAAAU,SAAQ,CAACR,MAAOF,EAASG,YACtB,kBAAC,gBAAM,CAACQ,UAAUC,EAAAA,EAAAA,IAAYC,OAAOnB,SAASoB,WAC1C,kBAAC,IAAG,SAIhB,kBAAC,IAAQ,KACjB,C,uJClBA,QARiB,WAAH,OACV,kBAACC,EAAA,EAAU,KACP,kBAACC,EAAA,EAAc,KACX,kBAACC,EAAA,EAAa,OAET,ECFjB,IAAMC,GAAiBC,EAAAA,EAAAA,OAAK,kBAAM,mMAAiC,IAC7DC,GAAkBD,EAAAA,EAAAA,OAAK,kBAAM,8HAAkC,IAC/DE,GAAkBF,EAAAA,EAAAA,OAAK,kBAAM,gJAAkC,IAC/DG,GAAuBH,EAAAA,EAAAA,OAAK,kBAAM,qKAAuC,IAElEI,EAAS,CAClBC,MAAO,IACPC,OAAQ,gBACRC,gBAAiB,yBACjBC,OAAQ,UACRC,YAAa,oBAGJC,EAAS,WAClB,IAAMC,GAAe7B,EAAAA,EAAAA,UAAQ,kBAAM8B,EAAAA,EAAAA,KAAiB,GAAE,IAChDC,GAAgBC,EAAAA,EAAAA,GAAe,2BAErC,OACI,kBAAC,EAAAC,SAAQ,CAACC,SAAS,IACf,kBAAC,EAAAC,OAAM,KACH,kBAAC,EAAAC,MAAK,CACFC,OAAK,EACLC,KAAMhB,EAAOC,MACbgB,OAAQ,kBACJ,kBAAC,KAAa,QACVC,IAAKvB,EACLwB,eAAa,GACTZ,GACN,EACNa,UAAU,cAEd,kBAAC,EAAAN,MAAK,CACFC,OAAK,EACLC,KAAMhB,EAAOI,OACbiB,UAAWZ,EAAgBX,EAAkBwB,EAC7CF,UAAU,cAEd,kBAAC,EAAAN,MAAK,CACFC,OAAK,EACLC,KAAMhB,EAAOK,YACbgB,UAAWZ,EAAgBV,EAAuBuB,EAClDF,UAAU,cAEd,kBAAC,EAAAN,MAAK,CAACC,OAAK,EAACC,KAAMhB,EAAOG,gBAAiBkB,UAAWxB,EAAiBuB,UAAU,cACjF,kBAAC,EAAAN,MAAK,CAACC,OAAK,EAACC,KAAMhB,EAAOE,OAAQmB,UAAWxB,EAAiBuB,UAAU,cACxE,kBAAC,EAAAG,SAAQ,CAACP,KAAK,IAAIQ,GAAG,OAItC,C,iFC/CA,QANiB,WAAH,OACV,kBAAC,IAAQ,KACL,kBAAC,IAAO,CAACC,KAAK,OACP,C,iDCGXC,E,0pBAEJ,IAAMC,EAAc,EAAH,OACVC,EAAAA,KACAC,EAAAA,EAAAA,IAAkBC,EAAAA,KAClBC,EAAAA,EAAAA,KAAgBC,EAAAA,EAAAA,IAAqBC,EAAAA,MAGtCC,EAAuFC,EAAAA,GAEhFvD,EAAW,WACpB8C,EAAqB,IAAIU,EAAAA,EAAqB,2BADtBC,EAAU,yBAAVA,EAAU,gBAElC,OAAOC,EAAAA,EAAAA,KAAYC,EAAAA,EAAAA,IAAgBZ,GAAc,CAAC,EAAGO,EAAiBM,EAAAA,GAAAA,WAAgB,EAAD,CACjFd,EAAmBe,gBACnBC,KACAC,EAAAA,EAAAA,SAAwB,CACpBC,cAAe,CAAC,WAChBC,oBAAqB,CAAC,2BACxB,OACCR,KAEX,EAEarD,EAAiB,WAAH,IAAIF,EAAc,UAAH,6CAAG,CAAC,EAAC,OAC3CyD,EAAAA,EAAAA,IAAgB,EAAD,KACRZ,GACA7C,GACL,C,mCC9BN,SAJwBgE,E,SAAAA,eAAc,CAClC5D,YAAa,WAAQ,G","sources":["webpack:///./src/App.js","webpack:///./src/AppEntry.js","webpack:///./src/components/LostPage.js","webpack:///./src/Routes.js","webpack:///./src/components/SpinnerFallback.js","webpack:///./src/store/index.js","webpack:///./src/store/registeryContext.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Routes } from './Routes';\nimport './App.scss';\nimport { NotificationsPortal } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { RBACProvider } from '@redhat-cloud-services/frontend-components/RBACProvider';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\n\nconst App = () => {\n    const history = useHistory();\n    const chrome = useChrome();\n    useEffect(() => {\n        return chrome.on(\n            'APP_NAVIGATION',\n            event => {\n                if (event.navId === 'inventory') {\n                    history.push(`/${location.search}${location.hash}`);\n                } else {\n                    history.push(`/${event.navId}${location.search}${location.hash}`);\n                }\n            }\n        );\n    }, []);\n\n    return (\n        <div className=\"inventory\">\n            <NotificationsPortal />\n            <RBACProvider appName=\"inventory\">\n                <Routes />\n            </RBACProvider>\n        </div>\n    );\n};\n\nexport default App;\n","import React, { useMemo } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { getStore, updateReducers } from './store';\nimport RegistryContext from './store/registeryContext';\nimport App from './App';\nimport { getBaseName } from '@redhat-cloud-services/frontend-components-utilities/helpers';\nimport logger from 'redux-logger';\nimport Fallback from './components/SpinnerFallback';\n\nconst InventoryApp = () => {\n    const registry = useMemo(() => {\n        const store = IS_DEV ? getStore(logger) : getStore();\n        return {\n            register: (newReducers) => store.replaceReducer(updateReducers(newReducers)),\n            getStore: () => store\n        };\n    }, []);\n\n    return (registry ? (\n        <RegistryContext.Provider value={{\n            getRegistry: () => registry\n        }}>\n            <Provider store={registry.getStore()}>\n                <Router basename={getBaseName(window.location.pathname)}>\n                    <App />\n                </Router>\n            </Provider>\n        </RegistryContext.Provider>\n    ) : <Fallback />);\n};\n\nexport default InventoryApp;\n","import { EmptyState, EmptyStateBody } from '@patternfly/react-core';\nimport { InvalidObject } from '@redhat-cloud-services/frontend-components';\nimport React from 'react';\n\nconst LostPage = () => (\n    <EmptyState>\n        <EmptyStateBody>\n            <InvalidObject />\n        </EmptyStateBody>\n    </EmptyState>\n);\n\nexport default LostPage;\n","import { Route, Redirect, Switch } from 'react-router-dom';\nimport React, { lazy, Suspense, useMemo } from 'react';\nimport { getSearchParams } from './constants';\nimport RenderWrapper from './Utilities/Wrapper';\nimport useFeatureFlag from './Utilities/useFeatureFlag';\nimport LostPage from './components/LostPage';\n\nconst InventoryTable = lazy(() => import('./routes/InventoryTable'));\nconst InventoryDetail = lazy(() => import('./routes/InventoryDetail'));\nconst InventoryGroups = lazy(() => import('./routes/InventoryGroups'));\nconst InventoryGroupDetail = lazy(() => import('./routes/InventoryGroupDetail'));\n\nexport const routes = {\n    table: '/',\n    detail: '/:inventoryId',\n    detailWithModal: '/:inventoryId/:modalId',\n    groups: '/groups',\n    groupDetail: '/groups/:groupId'\n};\n\nexport const Routes = () => {\n    const searchParams = useMemo(() => getSearchParams(), []);\n    const groupsEnabled = useFeatureFlag('hbi.ui.inventory-groups');\n\n    return (\n        <Suspense fallback=\"\">\n            <Switch>\n                <Route\n                    exact\n                    path={routes.table}\n                    render={() =>\n                        <RenderWrapper\n                            cmp={InventoryTable}\n                            isRbacEnabled\n                            {...searchParams}\n                        />}\n                    rootClass='inventory'\n                />\n                <Route\n                    exact\n                    path={routes.groups}\n                    component={groupsEnabled ? InventoryGroups : LostPage}\n                    rootClass=\"inventory\"\n                />\n                <Route\n                    exact\n                    path={routes.groupDetail}\n                    component={groupsEnabled ? InventoryGroupDetail : LostPage}\n                    rootClass=\"inventory\"\n                />\n                <Route exact path={routes.detailWithModal} component={InventoryDetail} rootClass='inventory' />\n                <Route exact path={routes.detail} component={InventoryDetail} rootClass='inventory' />\n                <Redirect path=\"*\" to=\"/\" />\n            </Switch>\n        </Suspense>\n    );\n};\n","import React from 'react';\nimport { Bullseye, Spinner } from '@patternfly/react-core';\n\nconst Fallback = () => (\n    <Bullseye>\n        <Spinner size=\"xl\" />\n    </Bullseye>\n);\n\nexport default Fallback;\n","\nimport MiddlewareListener from '@redhat-cloud-services/frontend-components-utilities/MiddlewareListener';\nimport notificationsMiddleware from '@redhat-cloud-services/frontend-components-notifications/notificationsMiddleware';\nimport promise  from 'redux-promise-middleware';\nimport reducers, { entitesDetailReducer, mergeWithDetail, mergeWithEntities, tableReducer } from './reducers';\nexport { default as reducers, tableReducer, entitesDetailReducer } from './reducers';\nimport { applyMiddleware, combineReducers, compose, legacy_createStore as createStore } from 'redux';\nimport { INVENTORY_ACTION_TYPES } from './action-types';\n\nlet middlewareListener;\n\nconst appReducers = {\n    ...reducers,\n    ...mergeWithEntities(tableReducer),\n    ...mergeWithDetail(entitesDetailReducer(INVENTORY_ACTION_TYPES))\n};\n\nconst composeEnhancers = IS_DEV ? (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose) : compose;\n\nexport const getStore = (...middleware) => {\n    middlewareListener = new MiddlewareListener();\n    return createStore(combineReducers(appReducers), {}, composeEnhancers(applyMiddleware(...[\n        middlewareListener.getMiddleware(),\n        promise,\n        notificationsMiddleware({\n            errorTitleKey: ['message'],\n            errorDescriptionKey: ['response.data.detail']\n        }),\n        ...middleware\n    ])));\n};\n\nexport const updateReducers = (newReducers = {}) =>\n    combineReducers({\n        ...appReducers,\n        ...newReducers\n    });\n\nexport function addNewListener ({ actionType, callback }) {\n    return middlewareListener.addNew({\n        on: actionType,\n        callback\n    });\n}\n","import { createContext } from 'react';\n\nconst RegistryContext = createContext({\n    getRegistry: () => { }\n});\n\nexport default RegistryContext;\n"],"names":["history","useHistory","chrome","useChrome","useEffect","on","event","navId","push","location","search","hash","className","NotificationsPortal","appName","registry","useMemo","store","getStore","register","newReducers","replaceReducer","updateReducers","value","getRegistry","Provider","basename","getBaseName","window","pathname","EmptyState","EmptyStateBody","InvalidObject","InventoryTable","lazy","InventoryDetail","InventoryGroups","InventoryGroupDetail","routes","table","detail","detailWithModal","groups","groupDetail","Routes","searchParams","getSearchParams","groupsEnabled","useFeatureFlag","Suspense","fallback","Switch","Route","exact","path","render","cmp","isRbacEnabled","rootClass","component","LostPage","Redirect","to","size","middlewareListener","appReducers","reducers","mergeWithEntities","tableReducer","mergeWithDetail","entitesDetailReducer","INVENTORY_ACTION_TYPES","composeEnhancers","compose","MiddlewareListener","middleware","createStore","combineReducers","applyMiddleware","getMiddleware","promise","notificationsMiddleware","errorTitleKey","errorDescriptionKey","createContext"],"sourceRoot":""}