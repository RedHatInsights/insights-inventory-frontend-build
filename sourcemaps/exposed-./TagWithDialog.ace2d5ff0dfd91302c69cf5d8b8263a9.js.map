{"version":3,"file":"js/exposed-./TagWithDialog.a957c6fdc9e83fece07a.js","mappings":"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","sources":["webpack:///./node_modules/@redhat-cloud-services/frontend-components-notifications/esm/redux/actions/notifications.js","webpack:///./src/modules/AsyncInventory.js","webpack:///./src/modules/TagWithDialog.js","webpack:///./src/store/reducers.js","webpack:///./src/store/systemProfileStore.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { ADD_NOTIFICATION, CLEAR_NOTIFICATIONS, REMOVE_NOTIFICATION } from './action-types';\nfunction generateID(type) {\n    return 'cloud-services' + type + '-' + new Date().getTime() + Math.random().toString(36).slice(2);\n}\nexport var addNotification = function (notification) { return ({\n    type: ADD_NOTIFICATION,\n    payload: __assign({ id: generateID('notification') }, notification),\n}); };\nexport var removeNotification = function (index) { return ({\n    type: REMOVE_NOTIFICATION,\n    payload: index,\n}); };\nexport var clearNotifications = function () { return ({\n    type: CLEAR_NOTIFICATIONS,\n}); };\nexport default {\n    addNotification: addNotification,\n    removeNotification: removeNotification,\n    clearNotifications: clearNotifications,\n};\n//# sourceMappingURL=notifications.js.map","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Provider } from 'react-redux';\nimport { Router } from 'react-router-dom';\nimport { RBACProvider } from '@redhat-cloud-services/frontend-components/RBACProvider';\n\nimport * as storeMod from '../store/redux';\nimport * as utils from '../Utilities/index';\nimport * as apiMod from '../api/index';\nimport RenderWrapper from '../Utilities/Wrapper';\nconst { mergeWithDetail, ...rest } = storeMod;\n\nconst AsyncInventory = ({\n  component,\n  onLoad,\n  store,\n  history,\n  innerRef,\n  ...props\n}) => {\n  useEffect(() => {\n    onLoad?.({\n      ...rest,\n      ...utils,\n      api: apiMod,\n      mergeWithDetail,\n    });\n  }, []);\n\n  return (\n    <RBACProvider appName=\"inventory\" checkResourceDefinitions>\n      <Provider store={store}>\n        <Router history={history}>\n          <RenderWrapper\n            {...props}\n            isRbacEnabled\n            inventoryRef={innerRef}\n            store={store}\n            cmp={component}\n          />\n        </Router>\n      </Provider>\n    </RBACProvider>\n  );\n};\n\nAsyncInventory.propTypes = {\n  store: PropTypes.object,\n  onLoad: PropTypes.func,\n  component: PropTypes.elementType.isRequired,\n  history: PropTypes.object,\n  innerRef: PropTypes.shape({\n    current: PropTypes.any,\n  }),\n};\n\nAsyncInventory.defaultProps = {\n  onLoad: () => undefined,\n};\n\nexport default AsyncInventory;\n","import React from 'react';\nimport AsyncInventory from './AsyncInventory';\nimport TagWithDialogCmp from '../Utilities/TagWithDialog';\n\nconst BaseTagWithDialog = (props) => (\n  <AsyncInventory {...props} component={TagWithDialogCmp} />\n);\n\nconst TagWithDialog = React.forwardRef((props, ref) => (\n  <BaseTagWithDialog {...props} innerRef={ref} />\n));\n\nexport default TagWithDialog;\n","import {\n  ACTION_TYPES,\n  INVENTORY_ACTION_TYPES,\n  SELECT_ENTITY,\n  SET_INVENTORY_FILTER,\n  SET_PAGINATION,\n} from './action-types';\nimport systemProfileStore from './systemProfileStore';\nimport { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport { mergeArraysByKey } from '@redhat-cloud-services/frontend-components-utilities/helpers';\nimport { notificationsReducer } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport entitiesReducer, { defaultState as entitiesDefault } from './entities';\nimport entityDetailsReducer, {\n  entityDefaultState as entityDefault,\n  updateEntity,\n} from './entityDetails';\nimport groups from './groups';\nimport groupDetail from './groupDetail';\n\nexport { entitiesReducer, entityDetailsReducer };\n\nconst defaultState = { loaded: false, selected: new Map() };\n\nfunction entitiesLoaded(state, { payload }) {\n  return {\n    ...state,\n    rows: mergeArraysByKey([state.rows, payload.results]),\n    entities: mergeArraysByKey([state.entities, payload.results]),\n  };\n}\n\nfunction entityLoaded(state) {\n  return {\n    ...state,\n    loaded: true,\n  };\n}\n\nfunction entitySelected(state, { payload }) {\n  const selected = state.selected || new Map();\n  if (payload.selected) {\n    if (Array.isArray(payload.id)) {\n      payload.id.forEach((item) => {\n        selected.set(item.id, item);\n      });\n    } else if (payload.id === 0) {\n      state.rows.forEach((row) => selected.set(row.id, row));\n    } else {\n      const selectedRow =\n        state.rows && state.rows.find(({ id }) => id === payload.id);\n      selected.set(payload.id, { ...(selectedRow || {}), id: payload.id });\n    }\n  } else {\n    if (payload.id === 0) {\n      state.rows.forEach((row) => selected.delete(row.id));\n    } else if (payload.id === -1) {\n      selected.clear();\n    } else {\n      selected.delete(payload.id);\n    }\n  }\n\n  return {\n    ...state,\n    selected: new Map(selected),\n  };\n}\n\nfunction entityDeleted(state, { meta }) {\n  const selected = state.selected || new Map();\n  meta.systems.forEach((id) => selected.delete(id));\n\n  return {\n    ...state,\n    selected: new Map(selected),\n  };\n}\n\nfunction onEntitiesLoaded(state, { payload, meta }) {\n  if (meta?.lastDateRequest < state?.lastDateRequest) {\n    return state;\n  }\n\n  return {\n    ...state,\n    rows: mergeArraysByKey([\n      state.rows,\n      payload.results.map((result) => {\n        return {\n          ...result,\n          selected: state.selected && state.selected.has(result.id),\n        };\n      }),\n    ]),\n  };\n}\n\nfunction onSetFilter(state, { payload }) {\n  return {\n    ...state,\n    activeFilters: payload.filtersList,\n  };\n}\n\nfunction onSetPagination(state, { payload }) {\n  const perPage = parseInt(payload.perPage, 10);\n  const page = parseInt(payload.page, 10);\n  return {\n    ...state,\n    perPage: isNaN(perPage) ? 50 : perPage,\n    page: isNaN(page) ? 1 : page,\n  };\n}\n\nlet reducers = {\n  notifications: notificationsReducer,\n  systemProfileStore,\n  groups,\n  groupDetail,\n};\n\nexport const tableReducer = applyReducerHash(\n  {\n    [ACTION_TYPES.GET_ENTITIES_FULFILLED]: entitiesLoaded,\n    [INVENTORY_ACTION_TYPES.LOAD_ENTITIES_FULFILLED]: onEntitiesLoaded,\n    [`${ACTION_TYPES.REMOVE_ENTITY}_FULFILLED`]: entityDeleted,\n    [SELECT_ENTITY]: entitySelected,\n    FILTER_SELECT: (state) => ({ ...state, selected: {} }),\n    [SET_INVENTORY_FILTER]: onSetFilter,\n    [SET_PAGINATION]: onSetPagination,\n    [ACTION_TYPES.UPDATE_DISPLAY_NAME_FULFILLED]: updateEntity,\n  },\n  defaultState\n);\n\nexport const entitesDetailReducer = () =>\n  applyReducerHash(\n    {\n      [INVENTORY_ACTION_TYPES.LOAD_ENTITY_FULFILLED]: entityLoaded,\n    },\n    defaultState\n  );\n\nexport function mergeWithEntities(\n  additionalReducers = (state) => state,\n  defaultState = {}\n) {\n  return {\n    entities: (state, payload) => ({\n      ...additionalReducers(\n        {\n          ...applyReducerHash(\n            {\n              ...entitiesReducer,\n            },\n            { ...entitiesDefault, ...defaultState }\n          )(state, payload),\n        },\n        payload\n      ),\n    }),\n  };\n}\n\nexport function mergeWithDetail(\n  additionalReducers = (state) => state,\n  defaultState = {}\n) {\n  return {\n    entityDetails: (state, payload) => ({\n      ...additionalReducers(\n        {\n          ...applyReducerHash(\n            {\n              ...entityDetailsReducer,\n            },\n            { ...entityDefault, ...defaultState }\n          )(state, payload),\n        },\n        payload\n      ),\n    }),\n  };\n}\n\nexport default reducers;\n","import { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport { ACTION_TYPES } from './action-types';\n\nexport const defaultState = { loaded: false };\n\nexport const sizes = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n\n// Kudos to https://stackoverflow.com/a/18650828/2560321\nexport const formatBytes = (bytes) => {\n  if (bytes === 0 || isNaN(Number(bytes))) {\n    return '0 B';\n  }\n\n  const index = Math.floor(Math.log(bytes) / Math.log(1024));\n  return `${parseFloat((bytes / Math.pow(1024, index)).toFixed(2))} ${\n    sizes[index]\n  }`;\n};\n\nexport function systemProfilePending(state) {\n  return {\n    ...state,\n    systemProfile: {\n      loaded: false,\n    },\n  };\n}\n\nexport function calculateRepos(repos) {\n  return (\n    repos &&\n    repos.reduce(\n      (acc, curr) => ({\n        ...acc,\n        ...(!('enabled' in curr) || curr.enabled\n          ? {\n              enabled: [...acc.enabled, curr],\n            }\n          : {\n              disabled: [...acc.disabled, curr],\n            }),\n      }),\n      { enabled: [], disabled: [] }\n    )\n  );\n}\n\nexport function calculateInterfaces(interfaces) {\n  return (\n    interfaces &&\n    interfaces.reduce(\n      (acc, curr) => ({\n        interfaces: [...acc.interfaces, curr],\n        ipv4: [...acc.ipv4, ...(curr.ipv4_addresses || [])].filter(Boolean),\n        ipv6: [...acc.ipv6, ...(curr.ipv6_addresses || [])].filter(Boolean),\n      }),\n      { interfaces: [], ipv4: [], ipv6: [] }\n    )\n  );\n}\n\nexport function onSystemProfile(state, { payload: { results } }) {\n  const systemProfile =\n    (results && results[0] && results[0].system_profile) || {};\n  const cloudProviderObj =\n    results &&\n    results[0] &&\n    typeof results[0].system_profile.cloud_provider !== 'undefined' &&\n    results[0].system_profile.cloud_provider;\n  return {\n    ...state,\n    disabledApps: [\n      ...(cloudProviderObj === 'aws' || cloudProviderObj === 'azure'\n        ? []\n        : ['ros']),\n    ],\n    systemProfile: {\n      loaded: true,\n      ...systemProfile,\n      ramSize:\n        systemProfile.system_memory_bytes &&\n        formatBytes(systemProfile.system_memory_bytes),\n      repositories: calculateRepos(systemProfile.yum_repos),\n      network: calculateInterfaces(systemProfile.network_interfaces),\n    },\n  };\n}\n\nexport default applyReducerHash(\n  {\n    [ACTION_TYPES.LOAD_SYSTEM_PROFILE_FULFILLED]: onSystemProfile,\n    [ACTION_TYPES.LOAD_SYSTEM_PROFILE_PENDING]: systemProfilePending,\n  },\n  {\n    systemProfile: defaultState,\n  }\n);\n"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","addNotification","notification","type","payload","id","Date","getTime","Math","random","toString","slice","mergeWithDetail","storeMod","rest","AsyncInventory","component","onLoad","store","history","innerRef","props","useEffect","utils","api","apiMod","RBACProvider","appName","checkResourceDefinitions","Provider","Router","isRbacEnabled","inventoryRef","cmp","propTypes","PropTypes","isRequired","current","defaultProps","BaseTagWithDialog","TagWithDialogCmp","React","ref","defaultState","loaded","selected","Map","entityLoaded","state","reducers","notifications","notificationsReducer","systemProfileStore","groups","groupDetail","tableReducer","applyReducerHash","ACTION_TYPES","GET_ENTITIES_FULFILLED","rows","mergeArraysByKey","results","entities","INVENTORY_ACTION_TYPES","LOAD_ENTITIES_FULFILLED","meta","lastDateRequest","map","result","has","REMOVE_ENTITY","systems","forEach","delete","SELECT_ENTITY","Array","isArray","item","set","row","selectedRow","find","clear","SET_INVENTORY_FILTER","activeFilters","filtersList","SET_PAGINATION","perPage","parseInt","page","isNaN","UPDATE_DISPLAY_NAME_FULFILLED","updateEntity","entitesDetailReducer","LOAD_ENTITY_FULFILLED","mergeWithEntities","additionalReducers","entitiesReducer","entitiesDefault","entityDetails","entityDetailsReducer","entityDefault","sizes","formatBytes","bytes","Number","index","floor","log","parseFloat","pow","toFixed","systemProfilePending","systemProfile","calculateRepos","repos","reduce","acc","curr","enabled","disabled","calculateInterfaces","interfaces","ipv4","ipv4_addresses","filter","Boolean","ipv6","ipv6_addresses","onSystemProfile","system_profile","cloudProviderObj","cloud_provider","disabledApps","ramSize","system_memory_bytes","repositories","yum_repos","network","network_interfaces","LOAD_SYSTEM_PROFILE_FULFILLED","LOAD_SYSTEM_PROFILE_PENDING"],"sourceRoot":""}