{"version":3,"file":"js/exposed-./RootApp.cdc7edfbd162e38d68bd.js","mappings":"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","sources":["webpack:///./node_modules/@redhat-cloud-services/frontend-components-notifications/esm/redux/actions/notifications.js","webpack:///./src/App.js","webpack:///./src/AppEntry.js","webpack:///./src/components/LostPage.js","webpack:///./src/Routes.js","webpack:///./src/Utilities/useFeatureFlag.js","webpack:///./src/components/SpinnerFallback.js","webpack:///./src/store/index.js","webpack:///./src/store/reducers.js","webpack:///./src/store/registeryContext.js","webpack:///./src/store/systemProfileStore.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { ADD_NOTIFICATION, CLEAR_NOTIFICATIONS, REMOVE_NOTIFICATION } from './action-types';\nfunction generateID(type) {\n    return 'cloud-services' + type + '-' + new Date().getTime() + Math.random().toString(36).slice(2);\n}\nexport var addNotification = function (notification) { return ({\n    type: ADD_NOTIFICATION,\n    payload: __assign({ id: generateID('notification') }, notification),\n}); };\nexport var removeNotification = function (index) { return ({\n    type: REMOVE_NOTIFICATION,\n    payload: index,\n}); };\nexport var clearNotifications = function () { return ({\n    type: CLEAR_NOTIFICATIONS,\n}); };\nexport default {\n    addNotification: addNotification,\n    removeNotification: removeNotification,\n    clearNotifications: clearNotifications,\n};\n//# sourceMappingURL=notifications.js.map","/* eslint-disable rulesdir/disallow-fec-relative-imports */\nimport React, { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Routes } from './Routes';\nimport './App.scss';\nimport { NotificationsPortal } from '@redhat-cloud-services/frontend-components-notifications/';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\nimport { RBACProvider } from '@redhat-cloud-services/frontend-components/RBACProvider';\n\nconst App = () => {\n  const history = useHistory();\n  const chrome = useChrome();\n  useEffect(() => {\n    return chrome.on('APP_NAVIGATION', (event) => {\n      if (event.navId === 'inventory') {\n        history.push(`/${location.search}${location.hash}`);\n      } else {\n        history.push(`/${event.navId}${location.search}${location.hash}`);\n      }\n    });\n  }, []);\n\n  return (\n    <div className=\"inventory\">\n      <NotificationsPortal />\n      <RBACProvider appName=\"inventory\" checkResourceDefinitions>\n        <Routes />\n      </RBACProvider>\n    </div>\n  );\n};\n\nexport default App;\n","import React, { useMemo } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { getStore, updateReducers } from './store';\nimport RegistryContext from './store/registeryContext';\nimport App from './App';\nimport { getBaseName } from '@redhat-cloud-services/frontend-components-utilities/helpers';\nimport logger from 'redux-logger';\nimport Fallback from './components/SpinnerFallback';\n\nconst InventoryApp = () => {\n  const registry = useMemo(() => {\n    const store = IS_DEV ? getStore(logger) : getStore();\n    return {\n      register: (newReducers) =>\n        store.replaceReducer(updateReducers(newReducers)),\n      getStore: () => store,\n    };\n  }, []);\n\n  return registry ? (\n    <RegistryContext.Provider\n      value={{\n        getRegistry: () => registry,\n      }}\n    >\n      <Provider store={registry.getStore()}>\n        <Router basename={getBaseName(window.location.pathname)}>\n          <App />\n        </Router>\n      </Provider>\n    </RegistryContext.Provider>\n  ) : (\n    <Fallback />\n  );\n};\n\nexport default InventoryApp;\n","import { EmptyState, EmptyStateBody } from '@patternfly/react-core';\nimport InvalidObject from '@redhat-cloud-services/frontend-components/InvalidObject';\nimport React from 'react';\n\nconst LostPage = () => (\n  <EmptyState>\n    <EmptyStateBody>\n      <InvalidObject />\n    </EmptyStateBody>\n  </EmptyState>\n);\n\nexport default LostPage;\n","import { Redirect, Route, Switch } from 'react-router-dom';\nimport React, { Suspense, lazy, useMemo } from 'react';\nimport { getSearchParams } from './constants';\nimport RenderWrapper from './Utilities/Wrapper';\nimport useFeatureFlag from './Utilities/useFeatureFlag';\nimport LostPage from './components/LostPage';\n\nconst InventoryTable = lazy(() => import('./routes/InventoryTable'));\nconst InventoryDetail = lazy(() => import('./routes/InventoryDetail'));\nconst InventoryGroups = lazy(() => import('./routes/InventoryGroups'));\nconst InventoryGroupDetail = lazy(() =>\n  import('./routes/InventoryGroupDetail')\n);\nconst EdgeInventoryUpdate = lazy(() => import('./routes/SystemUpdate'));\n\nexport const routes = {\n  table: '/',\n  detail: '/:inventoryId',\n  detailWithModal: '/:inventoryId/:modalId',\n  groups: '/groups',\n  groupDetail: '/groups/:groupId',\n  update: '/:inventoryId/update',\n  edgeInventory: '/manage-edge-inventory',\n};\n\nexport const Routes = () => {\n  const searchParams = useMemo(() => getSearchParams(), []);\n  const groupsEnabled = useFeatureFlag('hbi.ui.inventory-groups');\n\n  return (\n    <Suspense fallback=\"\">\n      <Switch>\n        <Route\n          exact\n          path={routes.update}\n          component={EdgeInventoryUpdate}\n          rootClass=\"inventory\"\n        />\n        <Route\n          exact\n          path={routes.table}\n          render={() => (\n            <RenderWrapper cmp={InventoryTable} {...searchParams} />\n          )}\n          rootClass=\"inventory\"\n        />\n        <Route\n          exact\n          path={routes.edgeInventory}\n          render={() => (\n            <RenderWrapper\n              cmp={InventoryTable}\n              isRbacEnabled\n              {...searchParams}\n            />\n          )}\n          rootClass=\"inventory\"\n        />\n        <Route\n          exact\n          path={routes.groups}\n          component={groupsEnabled ? InventoryGroups : LostPage}\n          rootClass=\"inventory\"\n        />\n        <Route\n          exact\n          path={routes.groupDetail}\n          component={groupsEnabled ? InventoryGroupDetail : LostPage}\n          rootClass=\"inventory\"\n        />\n        <Route\n          exact\n          path={routes.detailWithModal}\n          component={InventoryDetail}\n          rootClass=\"inventory\"\n        />\n        <Route\n          exact\n          path={routes.detail}\n          component={InventoryDetail}\n          rootClass=\"inventory\"\n        />\n        <Route\n          exact\n          path={routes.manageEdgeInventoryUrlName}\n          component={InventoryTable}\n          rootClass=\"inventory\"\n        />\n        <Redirect path=\"*\" to=\"/\" />\n      </Switch>\n    </Suspense>\n  );\n};\n","import { useFlag, useFlagsStatus } from '@unleash/proxy-client-react';\n\nexport default (flag) => {\n  const { flagsReady } = useFlagsStatus();\n  const isFlagEnabled = useFlag(flag);\n  return flagsReady ? isFlagEnabled : false;\n};\n","import React from 'react';\nimport { Bullseye, Spinner } from '@patternfly/react-core';\n\nconst Fallback = () => (\n  <Bullseye>\n    <Spinner size=\"xl\" />\n  </Bullseye>\n);\n\nexport default Fallback;\n","import MiddlewareListener from '@redhat-cloud-services/frontend-components-utilities/MiddlewareListener';\nimport notificationsMiddleware from '@redhat-cloud-services/frontend-components-notifications/notificationsMiddleware';\nimport promise from 'redux-promise-middleware';\nimport reducers, {\n  entitesDetailReducer,\n  mergeWithDetail,\n  mergeWithEntities,\n  tableReducer,\n} from './reducers';\nexport {\n  default as reducers,\n  tableReducer,\n  entitesDetailReducer,\n} from './reducers';\nimport {\n  applyMiddleware,\n  combineReducers,\n  compose,\n  legacy_createStore as createStore,\n} from 'redux';\nimport { INVENTORY_ACTION_TYPES } from './action-types';\n\nlet middlewareListener;\n\nconst appReducers = {\n  ...reducers,\n  ...mergeWithEntities(tableReducer),\n  ...mergeWithDetail(entitesDetailReducer(INVENTORY_ACTION_TYPES)),\n};\n\nconst composeEnhancers = IS_DEV\n  ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n  : compose;\n\nexport const getStore = (...middleware) => {\n  middlewareListener = new MiddlewareListener();\n  return createStore(\n    combineReducers(appReducers),\n    {},\n    composeEnhancers(\n      applyMiddleware(\n        ...[\n          middlewareListener.getMiddleware(),\n          promise,\n          notificationsMiddleware({\n            errorTitleKey: ['message'],\n            errorDescriptionKey: ['response.data.detail'],\n          }),\n          ...middleware,\n        ]\n      )\n    )\n  );\n};\n\nexport const updateReducers = (newReducers = {}) =>\n  combineReducers({\n    ...appReducers,\n    ...newReducers,\n  });\n\nexport function addNewListener({ actionType, callback }) {\n  return middlewareListener.addNew({\n    on: actionType,\n    callback,\n  });\n}\n","import {\n  ACTION_TYPES,\n  INVENTORY_ACTION_TYPES,\n  SELECT_ENTITY,\n  SET_INVENTORY_FILTER,\n  SET_PAGINATION,\n} from './action-types';\nimport systemProfileStore from './systemProfileStore';\nimport { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport { mergeArraysByKey } from '@redhat-cloud-services/frontend-components-utilities/helpers';\nimport { notificationsReducer } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport entitiesReducer, { defaultState as entitiesDefault } from './entities';\nimport entityDetailsReducer, {\n  entityDefaultState as entityDefault,\n  updateEntity,\n} from './entityDetails';\nimport groups from './groups';\nimport groupDetail from './groupDetail';\n\nexport { entitiesReducer, entityDetailsReducer };\n\nconst defaultState = { loaded: false, selected: new Map() };\n\nfunction entitiesLoaded(state, { payload }) {\n  return {\n    ...state,\n    rows: mergeArraysByKey([state.rows, payload.results]),\n    entities: mergeArraysByKey([state.entities, payload.results]),\n  };\n}\n\nfunction entityLoaded(state) {\n  return {\n    ...state,\n    loaded: true,\n  };\n}\n\nfunction entitySelected(state, { payload }) {\n  const selected = state.selected || new Map();\n  if (payload.selected) {\n    if (Array.isArray(payload.id)) {\n      payload.id.forEach((item) => {\n        selected.set(item.id, item);\n      });\n    } else if (payload.id === 0) {\n      state.rows.forEach((row) => selected.set(row.id, row));\n    } else {\n      const selectedRow =\n        state.rows && state.rows.find(({ id }) => id === payload.id);\n      selected.set(payload.id, { ...(selectedRow || {}), id: payload.id });\n    }\n  } else {\n    if (payload.id === 0) {\n      state.rows.forEach((row) => selected.delete(row.id));\n    } else if (payload.id === -1) {\n      selected.clear();\n    } else {\n      selected.delete(payload.id);\n    }\n  }\n\n  return {\n    ...state,\n    selected: new Map(selected),\n  };\n}\n\nfunction entityDeleted(state, { meta }) {\n  const selected = state.selected || new Map();\n  meta.systems.forEach((id) => selected.delete(id));\n\n  return {\n    ...state,\n    selected: new Map(selected),\n  };\n}\n\nfunction onEntitiesLoaded(state, { payload, meta }) {\n  if (meta?.lastDateRequest < state?.lastDateRequest) {\n    return state;\n  }\n\n  return {\n    ...state,\n    rows: mergeArraysByKey([\n      state.rows,\n      payload.results.map((result) => {\n        return {\n          ...result,\n          selected: state.selected && state.selected.has(result.id),\n        };\n      }),\n    ]),\n  };\n}\n\nfunction onSetFilter(state, { payload }) {\n  return {\n    ...state,\n    activeFilters: payload.filtersList,\n  };\n}\n\nfunction onSetPagination(state, { payload }) {\n  const perPage = parseInt(payload.perPage, 10);\n  const page = parseInt(payload.page, 10);\n  return {\n    ...state,\n    perPage: isNaN(perPage) ? 50 : perPage,\n    page: isNaN(page) ? 1 : page,\n  };\n}\n\nlet reducers = {\n  notifications: notificationsReducer,\n  systemProfileStore,\n  groups,\n  groupDetail,\n};\n\nexport const tableReducer = applyReducerHash(\n  {\n    [ACTION_TYPES.GET_ENTITIES_FULFILLED]: entitiesLoaded,\n    [INVENTORY_ACTION_TYPES.LOAD_ENTITIES_FULFILLED]: onEntitiesLoaded,\n    [`${ACTION_TYPES.REMOVE_ENTITY}_FULFILLED`]: entityDeleted,\n    [SELECT_ENTITY]: entitySelected,\n    FILTER_SELECT: (state) => ({ ...state, selected: {} }),\n    [SET_INVENTORY_FILTER]: onSetFilter,\n    [SET_PAGINATION]: onSetPagination,\n    [ACTION_TYPES.UPDATE_DISPLAY_NAME_FULFILLED]: updateEntity,\n  },\n  defaultState\n);\n\nexport const entitesDetailReducer = () =>\n  applyReducerHash(\n    {\n      [INVENTORY_ACTION_TYPES.LOAD_ENTITY_FULFILLED]: entityLoaded,\n    },\n    defaultState\n  );\n\nexport function mergeWithEntities(\n  additionalReducers = (state) => state,\n  defaultState = {}\n) {\n  return {\n    entities: (state, payload) => ({\n      ...additionalReducers(\n        {\n          ...applyReducerHash(\n            {\n              ...entitiesReducer,\n            },\n            { ...entitiesDefault, ...defaultState }\n          )(state, payload),\n        },\n        payload\n      ),\n    }),\n  };\n}\n\nexport function mergeWithDetail(\n  additionalReducers = (state) => state,\n  defaultState = {}\n) {\n  return {\n    entityDetails: (state, payload) => ({\n      ...additionalReducers(\n        {\n          ...applyReducerHash(\n            {\n              ...entityDetailsReducer,\n            },\n            { ...entityDefault, ...defaultState }\n          )(state, payload),\n        },\n        payload\n      ),\n    }),\n  };\n}\n\nexport default reducers;\n","import { createContext } from 'react';\n\nconst RegistryContext = createContext({\n  getRegistry: () => {},\n});\n\nexport default RegistryContext;\n","import { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport { ACTION_TYPES } from './action-types';\n\nexport const defaultState = { loaded: false };\n\nexport const sizes = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n\n// Kudos to https://stackoverflow.com/a/18650828/2560321\nexport const formatBytes = (bytes) => {\n  if (bytes === 0 || isNaN(Number(bytes))) {\n    return '0 B';\n  }\n\n  const index = Math.floor(Math.log(bytes) / Math.log(1024));\n  return `${parseFloat((bytes / Math.pow(1024, index)).toFixed(2))} ${\n    sizes[index]\n  }`;\n};\n\nexport function systemProfilePending(state) {\n  return {\n    ...state,\n    systemProfile: {\n      loaded: false,\n    },\n  };\n}\n\nexport function calculateRepos(repos) {\n  return (\n    repos &&\n    repos.reduce(\n      (acc, curr) => ({\n        ...acc,\n        ...(!('enabled' in curr) || curr.enabled\n          ? {\n              enabled: [...acc.enabled, curr],\n            }\n          : {\n              disabled: [...acc.disabled, curr],\n            }),\n      }),\n      { enabled: [], disabled: [] }\n    )\n  );\n}\n\nexport function calculateInterfaces(interfaces) {\n  return (\n    interfaces &&\n    interfaces.reduce(\n      (acc, curr) => ({\n        interfaces: [...acc.interfaces, curr],\n        ipv4: [...acc.ipv4, ...(curr.ipv4_addresses || [])].filter(Boolean),\n        ipv6: [...acc.ipv6, ...(curr.ipv6_addresses || [])].filter(Boolean),\n      }),\n      { interfaces: [], ipv4: [], ipv6: [] }\n    )\n  );\n}\n\nexport function onSystemProfile(state, { payload: { results } }) {\n  const systemProfile =\n    (results && results[0] && results[0].system_profile) || {};\n  const cloudProviderObj =\n    results &&\n    results[0] &&\n    typeof results[0].system_profile.cloud_provider !== 'undefined' &&\n    results[0].system_profile.cloud_provider;\n  return {\n    ...state,\n    disabledApps: [\n      ...(cloudProviderObj === 'aws' || cloudProviderObj === 'azure'\n        ? []\n        : ['ros']),\n    ],\n    systemProfile: {\n      loaded: true,\n      ...systemProfile,\n      ramSize:\n        systemProfile.system_memory_bytes &&\n        formatBytes(systemProfile.system_memory_bytes),\n      repositories: calculateRepos(systemProfile.yum_repos),\n      network: calculateInterfaces(systemProfile.network_interfaces),\n    },\n  };\n}\n\nexport default applyReducerHash(\n  {\n    [ACTION_TYPES.LOAD_SYSTEM_PROFILE_FULFILLED]: onSystemProfile,\n    [ACTION_TYPES.LOAD_SYSTEM_PROFILE_PENDING]: systemProfilePending,\n  },\n  {\n    systemProfile: defaultState,\n  }\n);\n"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","addNotification","notification","type","payload","id","Date","getTime","Math","random","toString","slice","history","useHistory","chrome","useChrome","useEffect","on","event","navId","push","location","search","hash","className","NotificationsPortal","appName","checkResourceDefinitions","registry","useMemo","store","getStore","register","newReducers","replaceReducer","updateReducers","Provider","value","getRegistry","basename","getBaseName","window","pathname","EmptyState","EmptyStateBody","InvalidObject","InventoryTable","lazy","InventoryDetail","InventoryGroups","InventoryGroupDetail","EdgeInventoryUpdate","routes","table","detail","detailWithModal","groups","groupDetail","update","edgeInventory","Routes","searchParams","getSearchParams","groupsEnabled","useFeatureFlag","Suspense","fallback","Switch","Route","exact","path","component","rootClass","render","cmp","isRbacEnabled","LostPage","manageEdgeInventoryUrlName","Redirect","to","flag","flagsReady","useFlagsStatus","isFlagEnabled","useFlag","size","middlewareListener","appReducers","reducers","mergeWithEntities","tableReducer","mergeWithDetail","entitesDetailReducer","INVENTORY_ACTION_TYPES","composeEnhancers","compose","MiddlewareListener","middleware","createStore","combineReducers","applyMiddleware","getMiddleware","promise","notificationsMiddleware","errorTitleKey","errorDescriptionKey","defaultState","loaded","selected","Map","entityLoaded","state","notifications","notificationsReducer","systemProfileStore","applyReducerHash","ACTION_TYPES","GET_ENTITIES_FULFILLED","rows","mergeArraysByKey","results","entities","LOAD_ENTITIES_FULFILLED","meta","lastDateRequest","map","result","has","REMOVE_ENTITY","systems","forEach","delete","SELECT_ENTITY","Array","isArray","item","set","row","selectedRow","find","clear","SET_INVENTORY_FILTER","activeFilters","filtersList","SET_PAGINATION","perPage","parseInt","page","isNaN","UPDATE_DISPLAY_NAME_FULFILLED","updateEntity","LOAD_ENTITY_FULFILLED","additionalReducers","entitiesReducer","entitiesDefault","entityDetails","entityDetailsReducer","entityDefault","createContext","sizes","formatBytes","bytes","Number","index","floor","log","parseFloat","pow","toFixed","systemProfilePending","systemProfile","calculateRepos","repos","reduce","acc","curr","enabled","disabled","calculateInterfaces","interfaces","ipv4","ipv4_addresses","filter","Boolean","ipv6","ipv6_addresses","onSystemProfile","system_profile","cloudProviderObj","cloud_provider","disabledApps","ramSize","system_memory_bytes","repositories","yum_repos","network","network_interfaces","LOAD_SYSTEM_PROFILE_FULFILLED","LOAD_SYSTEM_PROFILE_PENDING"],"sourceRoot":""}