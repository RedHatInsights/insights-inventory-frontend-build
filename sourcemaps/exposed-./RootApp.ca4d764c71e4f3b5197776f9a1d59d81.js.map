{"version":3,"file":"js/exposed-./RootApp.07d67aa736dde4432cb1.js","mappings":"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","sources":["webpack:///./node_modules/@redhat-cloud-services/frontend-components-notifications/esm/redux/actions/notifications.js","webpack:///./src/App.js","webpack:///./src/AppEntry.js","webpack:///./src/Routes.js","webpack:///./src/Utilities/useFeatureFlag.js","webpack:///./src/components/LostPage.js","webpack:///./src/components/SpinnerFallback.js","webpack:///./src/store/index.js","webpack:///./src/store/reducers.js","webpack:///./src/store/registeryContext.js","webpack:///./src/store/systemProfileStore.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { ADD_NOTIFICATION, CLEAR_NOTIFICATIONS, REMOVE_NOTIFICATION } from './action-types';\nfunction generateID(type) {\n    return 'cloud-services' + type + '-' + new Date().getTime() + Math.random().toString(36).slice(2);\n}\nexport var addNotification = function (notification) { return ({\n    type: ADD_NOTIFICATION,\n    payload: __assign({ id: generateID('notification') }, notification),\n}); };\nexport var removeNotification = function (index) { return ({\n    type: REMOVE_NOTIFICATION,\n    payload: index,\n}); };\nexport var clearNotifications = function () { return ({\n    type: CLEAR_NOTIFICATIONS,\n}); };\nexport default {\n    addNotification: addNotification,\n    removeNotification: removeNotification,\n    clearNotifications: clearNotifications,\n};\n//# sourceMappingURL=notifications.js.map","/* eslint-disable rulesdir/disallow-fec-relative-imports */\nimport React from 'react';\nimport { Routes } from './Routes';\nimport './App.scss';\nimport { NotificationsPortal } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { RBACProvider } from '@redhat-cloud-services/frontend-components/RBACProvider';\n\nconst App = () => {\n  return (\n    <div className=\"inventory\">\n      <NotificationsPortal />\n      <RBACProvider\n        appName={null /* fetch permissions from all scopes */}\n        checkResourceDefinitions\n      >\n        <Routes />\n      </RBACProvider>\n    </div>\n  );\n};\n\nexport default App;\n","import React, { useMemo } from 'react';\nimport { Provider } from 'react-redux';\nimport { getStore, updateReducers } from './store';\nimport RegistryContext from './store/registeryContext';\nimport App from './App';\nimport logger from 'redux-logger';\nimport Fallback from './components/SpinnerFallback';\n\nconst InventoryApp = () => {\n  const registry = useMemo(() => {\n    const store = IS_DEV ? getStore(logger) : getStore();\n    return {\n      register: (newReducers) =>\n        store.replaceReducer(updateReducers(newReducers)),\n      getStore: () => store,\n    };\n  }, []);\n\n  return registry ? (\n    <RegistryContext.Provider\n      value={{\n        getRegistry: () => registry,\n      }}\n    >\n      <Provider store={registry.getStore()}>\n        <App />\n      </Provider>\n    </RegistryContext.Provider>\n  ) : (\n    <Fallback />\n  );\n};\n\nexport default InventoryApp;\n","import React, { Suspense, lazy, useEffect, useMemo, useState } from 'react';\nimport { Navigate, useRoutes } from 'react-router-dom';\nimport { getSearchParams } from './constants';\nimport RenderWrapper from './Utilities/Wrapper';\nimport useFeatureFlag from './Utilities/useFeatureFlag';\nimport LostPage from './components/LostPage';\nimport axios from 'axios';\nimport { Bullseye, Spinner } from '@patternfly/react-core';\nimport AsynComponent from '@redhat-cloud-services/frontend-components/AsyncComponent';\nimport ErrorState from '@redhat-cloud-services/frontend-components/ErrorState';\n\nconst InventoryTable = lazy(() => import('./routes/InventoryTable'));\nconst InventoryDetail = lazy(() => import('./routes/InventoryDetail'));\nconst InventoryGroups = lazy(() => import('./routes/InventoryGroups'));\nconst InventoryHostStaleness = lazy(() =>\n  import('./routes/InventoryHostStaleness')\n);\n\nconst InventoryGroupDetail = lazy(() =>\n  import('./routes/InventoryGroupDetail')\n);\nconst EdgeInventoryUpdate = lazy(() => import('./routes/SystemUpdate'));\n\nexport const routes = {\n  table: '/',\n  detail: '/:inventoryId',\n  detailWithModal: '/:inventoryId/:modalId',\n  groups: '/groups',\n  groupDetail: '/groups/:groupId',\n  update: '/:inventoryId/update',\n  edgeInventory: '/manage-edge-inventory',\n  staleness: '/staleness-and-deletion',\n};\nconst INVENTORY_TOTAL_FETCH_URL = '/api/inventory/v1/hosts';\n\nexport const Routes = () => {\n  const searchParams = useMemo(() => getSearchParams(), []);\n  const groupsEnabled = useFeatureFlag('hbi.ui.inventory-groups');\n  const [hasSystems, setHasSystems] = useState(true);\n  useEffect(() => {\n    try {\n      axios\n        .get(`${INVENTORY_TOTAL_FETCH_URL}?page=1&per_page=1`)\n        .then(({ data }) => {\n          setHasSystems(data.total > 0);\n        });\n    } catch (e) {\n      console.log(e);\n    }\n  }, [hasSystems]);\n\n  let element = useRoutes([\n    {\n      path: '/',\n      element: <RenderWrapper cmp={InventoryTable} {...searchParams} />,\n    },\n    { path: '/:inventoryId', element: <InventoryDetail /> },\n    { path: '/:inventoryId/:modalId', element: <InventoryDetail /> },\n    {\n      path: '/groups',\n      element: groupsEnabled ? <InventoryGroups /> : <LostPage />,\n    },\n    {\n      path: '/groups/:groupId',\n      element: groupsEnabled ? <InventoryGroupDetail /> : <LostPage />,\n    },\n    {\n      path: '/:inventoryId/update',\n      element: <EdgeInventoryUpdate />,\n    },\n    {\n      path: '/manage-edge-inventory',\n      element: (\n        <RenderWrapper\n          cmp={InventoryTable}\n          isRbacEnabled\n          {...searchParams}\n          isImmutableTabOpen\n        />\n      ),\n    },\n    {\n      path: '*',\n      element: <Navigate to=\"/\" replace />,\n    },\n    {\n      path: '/staleness-and-deletion',\n      element: groupsEnabled ? <InventoryHostStaleness /> : <LostPage />,\n    },\n  ]);\n\n  return !hasSystems ? (\n    <Suspense\n      fallback={\n        <Bullseye>\n          <Spinner size=\"xl\" />\n        </Bullseye>\n      }\n    >\n      <AsynComponent\n        appId={'inventory_zero_state'}\n        appName=\"dashboard\"\n        module=\"./AppZeroState\"\n        scope=\"dashboard\"\n        ErrorComponent={<ErrorState />}\n        app=\"Inventory\"\n      />\n    </Suspense>\n  ) : (\n    element\n  );\n};\n","import { useFlag, useFlagsStatus } from '@unleash/proxy-client-react';\n\nexport default (flag) => {\n  const { flagsReady } = useFlagsStatus();\n  const isFlagEnabled = useFlag(flag);\n  return flagsReady ? isFlagEnabled : false;\n};\n","import { EmptyState, EmptyStateBody } from '@patternfly/react-core';\nimport InvalidObject from '@redhat-cloud-services/frontend-components/InvalidObject';\nimport React from 'react';\n\nconst LostPage = () => (\n  <EmptyState>\n    <EmptyStateBody>\n      <InvalidObject />\n    </EmptyStateBody>\n  </EmptyState>\n);\n\nexport default LostPage;\n","import React from 'react';\nimport { Bullseye, Spinner } from '@patternfly/react-core';\n\nconst Fallback = () => (\n  <Bullseye>\n    <Spinner size=\"xl\" />\n  </Bullseye>\n);\n\nexport default Fallback;\n","import MiddlewareListener from '@redhat-cloud-services/frontend-components-utilities/MiddlewareListener';\nimport notificationsMiddleware from '@redhat-cloud-services/frontend-components-notifications/notificationsMiddleware';\nimport promise from 'redux-promise-middleware';\nimport reducers, {\n  entitesDetailReducer,\n  mergeWithDetail,\n  mergeWithEntities,\n  tableReducer,\n} from './reducers';\nexport {\n  default as reducers,\n  tableReducer,\n  entitesDetailReducer,\n} from './reducers';\nimport {\n  applyMiddleware,\n  combineReducers,\n  compose,\n  legacy_createStore as createStore,\n} from 'redux';\nimport { INVENTORY_ACTION_TYPES } from './action-types';\n\nlet middlewareListener;\n\nconst appReducers = {\n  ...reducers,\n  ...mergeWithEntities(tableReducer),\n  ...mergeWithDetail(entitesDetailReducer(INVENTORY_ACTION_TYPES)),\n};\n\nconst composeEnhancers = IS_DEV\n  ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n  : compose;\n\nexport const getStore = (...middleware) => {\n  middlewareListener = new MiddlewareListener();\n  return createStore(\n    combineReducers(appReducers),\n    {},\n    composeEnhancers(\n      applyMiddleware(\n        ...[\n          middlewareListener.getMiddleware(),\n          promise,\n          notificationsMiddleware({\n            errorTitleKey: ['message'],\n            errorDescriptionKey: ['response.data.detail'],\n          }),\n          ...middleware,\n        ]\n      )\n    )\n  );\n};\n\nexport const updateReducers = (newReducers = {}) =>\n  combineReducers({\n    ...appReducers,\n    ...newReducers,\n  });\n\nexport function addNewListener({ actionType, callback }) {\n  return middlewareListener.addNew({\n    on: actionType,\n    callback,\n  });\n}\n","import {\n  ACTION_TYPES,\n  INVENTORY_ACTION_TYPES,\n  SELECT_ENTITY,\n  SET_INVENTORY_FILTER,\n  SET_PAGINATION,\n} from './action-types';\nimport systemProfileStore from './systemProfileStore';\nimport { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport { mergeArraysByKey } from '@redhat-cloud-services/frontend-components-utilities/helpers';\nimport { notificationsReducer } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport entitiesReducer, { defaultState as entitiesDefault } from './entities';\nimport entityDetailsReducer, {\n  entityDefaultState as entityDefault,\n  updateEntity,\n} from './entityDetails';\nimport groups from './groups';\nimport groupDetail from './groupDetail';\n\nexport { entitiesReducer, entityDetailsReducer };\n\nconst defaultState = { loaded: false, selected: new Map() };\n\nfunction entitiesLoaded(state, { payload }) {\n  return {\n    ...state,\n    rows: mergeArraysByKey([state.rows, payload.results]),\n    entities: mergeArraysByKey([state.entities, payload.results]),\n  };\n}\n\nfunction entityLoaded(state) {\n  return {\n    ...state,\n    loaded: true,\n  };\n}\n\nfunction entitySelected(state, { payload }) {\n  const selected = state.selected || new Map();\n  if (payload.selected) {\n    if (Array.isArray(payload.id)) {\n      payload.id.forEach((item) => {\n        selected.set(item.id, item);\n      });\n    } else if (payload.id === 0) {\n      state.rows.forEach((row) => selected.set(row.id, row));\n    } else {\n      const selectedRow =\n        state.rows && state.rows.find(({ id }) => id === payload.id);\n      selected.set(payload.id, { ...(selectedRow || {}), id: payload.id });\n    }\n  } else {\n    if (payload.id === 0) {\n      state.rows.forEach((row) => selected.delete(row.id));\n    } else if (payload.id === -1) {\n      selected.clear();\n    } else {\n      selected.delete(payload.id);\n    }\n  }\n\n  return {\n    ...state,\n    selected: new Map(selected),\n  };\n}\n\nfunction entityDeleted(state, { meta }) {\n  const selected = state.selected || new Map();\n  meta.systems.forEach((id) => selected.delete(id));\n\n  return {\n    ...state,\n    selected: new Map(selected),\n  };\n}\n\nfunction onEntitiesLoaded(state, { payload, meta }) {\n  if (meta?.lastDateRequest < state?.lastDateRequest) {\n    return state;\n  }\n\n  if (meta?.controller?.signal?.aborted === true) {\n    return defaultState;\n  }\n\n  return {\n    ...state,\n    rows: mergeArraysByKey([\n      state.rows,\n      payload.results.map((result) => {\n        return {\n          ...result,\n          selected: state.selected && state.selected.has(result.id),\n        };\n      }),\n    ]),\n  };\n}\n\nfunction onSetFilter(state, { payload }) {\n  return {\n    ...state,\n    activeFilters: payload.filtersList,\n  };\n}\n\nfunction onSetPagination(state, { payload }) {\n  const perPage = parseInt(payload.perPage, 10);\n  const page = parseInt(payload.page, 10);\n  return {\n    ...state,\n    perPage: isNaN(perPage) ? 50 : perPage,\n    page: isNaN(page) ? 1 : page,\n  };\n}\n\nlet reducers = {\n  notifications: notificationsReducer,\n  systemProfileStore,\n  groups,\n  groupDetail,\n};\n\nexport const tableReducer = applyReducerHash(\n  {\n    [ACTION_TYPES.GET_ENTITIES_FULFILLED]: entitiesLoaded,\n    [INVENTORY_ACTION_TYPES.LOAD_ENTITIES_FULFILLED]: onEntitiesLoaded,\n    [`${ACTION_TYPES.REMOVE_ENTITY}_FULFILLED`]: entityDeleted,\n    [SELECT_ENTITY]: entitySelected,\n    FILTER_SELECT: (state) => ({ ...state, selected: {} }),\n    [SET_INVENTORY_FILTER]: onSetFilter,\n    [SET_PAGINATION]: onSetPagination,\n    [ACTION_TYPES.UPDATE_DISPLAY_NAME_FULFILLED]: updateEntity,\n  },\n  defaultState\n);\n\nexport const entitesDetailReducer = () =>\n  applyReducerHash(\n    {\n      [INVENTORY_ACTION_TYPES.LOAD_ENTITY_FULFILLED]: entityLoaded,\n    },\n    defaultState\n  );\n\nexport function mergeWithEntities(\n  additionalReducers = (state) => state,\n  defaultState = {}\n) {\n  return {\n    entities: (state, payload) => ({\n      ...additionalReducers(\n        {\n          ...applyReducerHash(\n            {\n              ...entitiesReducer,\n            },\n            { ...entitiesDefault, ...defaultState }\n          )(state, payload),\n        },\n        payload\n      ),\n    }),\n  };\n}\n\nexport function mergeWithDetail(\n  additionalReducers = (state) => state,\n  defaultState = {}\n) {\n  return {\n    entityDetails: (state, payload) => ({\n      ...additionalReducers(\n        {\n          ...applyReducerHash(\n            {\n              ...entityDetailsReducer,\n            },\n            { ...entityDefault, ...defaultState }\n          )(state, payload),\n        },\n        payload\n      ),\n    }),\n  };\n}\n\nexport default reducers;\n","import { createContext } from 'react';\n\nconst RegistryContext = createContext({\n  getRegistry: () => {},\n});\n\nexport default RegistryContext;\n","import { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport { ACTION_TYPES } from './action-types';\n\nexport const defaultState = { loaded: false };\n\nexport const sizes = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n\n// Kudos to https://stackoverflow.com/a/18650828/2560321\nexport const formatBytes = (bytes) => {\n  if (bytes === 0 || isNaN(Number(bytes))) {\n    return '0 B';\n  }\n\n  const index = Math.floor(Math.log(bytes) / Math.log(1024));\n  return `${parseFloat((bytes / Math.pow(1024, index)).toFixed(2))} ${\n    sizes[index]\n  }`;\n};\n\nexport function systemProfilePending(state) {\n  return {\n    ...state,\n    systemProfile: {\n      loaded: false,\n    },\n  };\n}\n\nexport function calculateRepos(repos) {\n  return (\n    repos &&\n    repos.reduce(\n      (acc, curr) => ({\n        ...acc,\n        ...(!('enabled' in curr) || curr.enabled\n          ? {\n              enabled: [...acc.enabled, curr],\n            }\n          : {\n              disabled: [...acc.disabled, curr],\n            }),\n      }),\n      { enabled: [], disabled: [] }\n    )\n  );\n}\n\nexport function calculateInterfaces(interfaces) {\n  return (\n    interfaces &&\n    interfaces.reduce(\n      (acc, curr) => ({\n        interfaces: [...acc.interfaces, curr],\n        ipv4: [...acc.ipv4, ...(curr.ipv4_addresses || [])].filter(Boolean),\n        ipv6: [...acc.ipv6, ...(curr.ipv6_addresses || [])].filter(Boolean),\n      }),\n      { interfaces: [], ipv4: [], ipv6: [] }\n    )\n  );\n}\n\nexport function onSystemProfile(state, { payload: { results } }) {\n  const systemProfile =\n    (results && results[0] && results[0].system_profile) || {};\n  const cloudProviderObj =\n    results &&\n    results[0] &&\n    typeof results[0].system_profile.cloud_provider !== 'undefined' &&\n    results[0].system_profile.cloud_provider;\n  return {\n    ...state,\n    disabledApps: [\n      ...(cloudProviderObj === 'aws' || cloudProviderObj === 'azure'\n        ? []\n        : ['ros']),\n    ],\n    systemProfile: {\n      loaded: true,\n      ...systemProfile,\n      ramSize:\n        systemProfile.system_memory_bytes &&\n        formatBytes(systemProfile.system_memory_bytes),\n      repositories: calculateRepos(systemProfile.yum_repos),\n      network: calculateInterfaces(systemProfile.network_interfaces),\n    },\n  };\n}\n\nexport default applyReducerHash(\n  {\n    [ACTION_TYPES.LOAD_SYSTEM_PROFILE_FULFILLED]: onSystemProfile,\n    [ACTION_TYPES.LOAD_SYSTEM_PROFILE_PENDING]: systemProfilePending,\n  },\n  {\n    systemProfile: defaultState,\n  }\n);\n"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","addNotification","notification","type","payload","id","Date","getTime","Math","random","toString","slice","React","className","NotificationsPortal","RBACProvider","appName","checkResourceDefinitions","Routes","registry","useMemo","store","getStore","register","newReducers","replaceReducer","updateReducers","RegistryContext","Provider","value","getRegistry","App","Fallback","InventoryTable","lazy","InventoryDetail","InventoryGroups","InventoryHostStaleness","InventoryGroupDetail","EdgeInventoryUpdate","searchParams","getSearchParams","groupsEnabled","useFeatureFlag","_useState","useState","_useState2","_slicedToArray","hasSystems","setHasSystems","useEffect","axios","concat","then","_ref","data","total","e","console","log","element","useRoutes","path","RenderWrapper","_extends","cmp","LostPage","isRbacEnabled","isImmutableTabOpen","Navigate","to","replace","Suspense","fallback","Bullseye","Spinner","size","AsynComponent","appId","module","scope","ErrorComponent","ErrorState","app","flag","flagsReady","useFlagsStatus","isFlagEnabled","useFlag","EmptyState","EmptyStateBody","InvalidObject","middlewareListener","appReducers","_objectSpread","reducers","mergeWithEntities","tableReducer","mergeWithDetail","entitesDetailReducer","INVENTORY_ACTION_TYPES","composeEnhancers","compose","MiddlewareListener","_len","middleware","Array","_key","createStore","combineReducers","applyMiddleware","getMiddleware","promise","notificationsMiddleware","errorTitleKey","errorDescriptionKey","undefined","defaultState","loaded","selected","Map","entityLoaded","state","notifications","notificationsReducer","systemProfileStore","groups","groupDetail","applyReducerHash","_applyReducerHash","_defineProperty","ACTION_TYPES","GET_ENTITIES_FULFILLED","rows","mergeArraysByKey","results","entities","LOAD_ENTITIES_FULFILLED","_ref5","_meta$controller","_meta$controller$sign","meta","lastDateRequest","controller","signal","aborted","map","result","has","REMOVE_ENTITY","_ref4","systems","forEach","delete","SELECT_ENTITY","_ref2","isArray","item","set","row","selectedRow","find","_ref3","clear","SET_INVENTORY_FILTER","_ref6","activeFilters","filtersList","SET_PAGINATION","_ref7","perPage","parseInt","page","isNaN","UPDATE_DISPLAY_NAME_FULFILLED","updateEntity","LOAD_ENTITY_FULFILLED","additionalReducers","entitiesReducer","entitiesDefault","entityDetails","entityDetailsReducer","entityDefault","createContext","sizes","formatBytes","bytes","Number","index","floor","parseFloat","pow","toFixed","systemProfilePending","systemProfile","calculateRepos","repos","reduce","acc","curr","enabled","_toConsumableArray","disabled","calculateInterfaces","interfaces","ipv4","ipv4_addresses","filter","Boolean","ipv6","ipv6_addresses","onSystemProfile","system_profile","cloudProviderObj","cloud_provider","disabledApps","ramSize","system_memory_bytes","repositories","yum_repos","network","network_interfaces","LOAD_SYSTEM_PROFILE_FULFILLED","LOAD_SYSTEM_PROFILE_PENDING"],"sourceRoot":""}