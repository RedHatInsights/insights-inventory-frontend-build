{"version":3,"file":"js/9399.1b2996db74db2bc5d640.js","mappings":"8tBAEA,IAAMA,EAA6B,wBAE7BC,EAAsB,SAACC,GAC3B,MAAO,CACLC,QAAS,SAACC,GACRF,EAAS,EAAD,IACHG,EAAAA,EAAAA,IAAgB,EAAD,CAChBC,QAAS,QACNF,KAGT,EACAG,WAAY,SAACC,GACXN,EAAS,EAAD,IACHG,EAAAA,EAAAA,IAAgB,EAAD,CAChBC,QAAS,WACNE,KAGT,EACAC,WAAY,SAACD,GACXN,EAAS,EAAD,IACHG,EAAAA,EAAAA,IAAgB,EAAD,CAChBC,QAAS,WACNE,KAGT,EACAE,IAAK,SAACC,EAAYD,GAChBR,EAAS,EAAD,IACHG,EAAAA,EAAAA,IAAgB,EAAD,GAChBC,QAAS,UACNK,GAAU,IAEbC,YAAaF,SAAAA,EAAKG,MAAK,UAChBF,EAAWC,YAAW,aAAKF,EAAIG,OAClCF,EAAWC,gBAGrB,EAEJ,C,mFC7BA,SAASE,IAA0B,IAAXC,EAAO,UAAH,6CAAG,GAC7B,MAAO,GAAP,OAAUA,EAAKC,OAAS,EAAI,IAAH,OAAOD,GAAS,GAC3C,C,qCCNME,EAAsB,WAC1B,IAAMf,GAAWgB,EAAAA,EAAAA,eACXC,GAAmBlB,EAAAA,EAAAA,GAAoBC,GAC7C,OACE,kBAACkB,EAAA,EAAc,CACbC,QAAQ,OACRC,OAAO,cACPC,aAAcC,EAAAA,YACdC,aAAcC,EAAAA,YACdC,gBAAgB,EAChBC,WAAYd,EAAe,IAC3Be,QAAS7B,EAAAA,EACTmB,iBAAkBA,GAGxB,EAEAF,EAAoBa,aAAe,CACjCC,gBAAgB,GAElB,S","sources":["webpack:///./src/Utilities/edge.js","webpack:///./src/Utilities/path.js","webpack:///./src/components/InventoryTabs/ImmutableDevices/EdgeDevicesTab.js"],"sourcesContent":["import { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\n\nconst manageEdgeInventoryUrlName = 'manage-edge-inventory';\n\nconst getNotificationProp = (dispatch) => {\n  return {\n    hasInfo: (hasInfoMessage) => {\n      dispatch({\n        ...addNotification({\n          variant: 'info',\n          ...hasInfoMessage,\n        }),\n      });\n    },\n    hasSuccess: (hasSuccessMessage) => {\n      dispatch({\n        ...addNotification({\n          variant: 'success',\n          ...hasSuccessMessage,\n        }),\n      });\n    },\n    hasWarning: (hasSuccessMessage) => {\n      dispatch({\n        ...addNotification({\n          variant: 'warning',\n          ...hasSuccessMessage,\n        }),\n      });\n    },\n    err: (errMessage, err) => {\n      dispatch({\n        ...addNotification({\n          variant: 'danger',\n          ...errMessage,\n          // Add error message from API, if present\n          description: err?.Title\n            ? `${errMessage.description}: ${err.Title}`\n            : errMessage.description,\n        }),\n      });\n    },\n  };\n};\n\nexport { getNotificationProp, manageEdgeInventoryUrlName };\n","function getBaseName(pathname) {\n  let release = '/';\n  const pathName = pathname.split('/');\n\n  pathName.shift();\n\n  if (pathName[0] === 'preview') {\n    pathName.shift();\n    release = `/preview/`;\n  }\n\n  return `${release}`;\n}\n\nfunction resolveRelPath(path = '') {\n  return `${path.length > 0 ? `/${path}` : ''}`;\n}\n\nexport { getBaseName, resolveRelPath };\n","import React from 'react';\nimport AsyncComponent from '@redhat-cloud-services/frontend-components/AsyncComponent';\nimport { resolveRelPath } from '../../../Utilities/path';\nimport {\n  getNotificationProp,\n  manageEdgeInventoryUrlName,\n} from '../../../Utilities/edge';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\n\nconst ImmutableDevicesTab = () => {\n  const dispatch = useDispatch();\n  const notificationProp = getNotificationProp(dispatch);\n  return (\n    <AsyncComponent\n      appName=\"edge\"\n      module=\"./Inventory\"\n      navigateProp={useNavigate}\n      locationProp={useLocation}\n      showHeaderProp={false}\n      pathPrefix={resolveRelPath('')}\n      urlName={manageEdgeInventoryUrlName}\n      notificationProp={notificationProp}\n    />\n  );\n};\n\nImmutableDevicesTab.defaultProps = {\n  initialLoading: true,\n};\nexport default ImmutableDevicesTab;\n"],"names":["manageEdgeInventoryUrlName","getNotificationProp","dispatch","hasInfo","hasInfoMessage","addNotification","variant","hasSuccess","hasSuccessMessage","hasWarning","err","errMessage","description","Title","resolveRelPath","path","length","ImmutableDevicesTab","useDispatch","notificationProp","AsyncComponent","appName","module","navigateProp","useNavigate","locationProp","useLocation","showHeaderProp","pathPrefix","urlName","defaultProps","initialLoading"],"sourceRoot":""}