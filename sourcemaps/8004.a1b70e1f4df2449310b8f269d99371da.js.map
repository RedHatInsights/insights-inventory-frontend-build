{"version":3,"file":"js/8004.f96b3c874fb90026a0d4.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/outlined-arrow-alt-circle-down-icon.js","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/outlined-arrow-alt-circle-up-icon.js","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/outlined-question-circle-icon.js","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/pencil-alt-icon.js","webpack:///./src/components/GeneralInfo/LoadingCard/LoadingCard.js","webpack:///./src/components/GeneralInfo/EditButton/EditButton.js","webpack:///./src/components/GeneralInfo/SystemCard/SystemCard.js","webpack:///./src/components/GeneralInfo/TextInputModal/TextInputModal.js","webpack:///./src/components/GeneralInfo/dataMapper/dataMapper.js","webpack:///./src/components/GeneralInfo/selectors/selectors.js"],"sourcesContent":["import { createIcon } from '../createIcon';\n\nexport const OutlinedArrowAltCircleDownIconConfig = {\n  name: 'OutlinedArrowAltCircleDownIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm0 448c-110.5 0-200-89.5-200-200S145.5 56 256 56s200 89.5 200 200-89.5 200-200 200zm-32-316v116h-67c-10.7 0-16 12.9-8.5 20.5l99 99c4.7 4.7 12.3 4.7 17 0l99-99c7.6-7.6 2.2-20.5-8.5-20.5h-67V140c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const OutlinedArrowAltCircleDownIcon = createIcon(OutlinedArrowAltCircleDownIconConfig);\n\nexport default OutlinedArrowAltCircleDownIcon;","import { createIcon } from '../createIcon';\n\nexport const OutlinedArrowAltCircleUpIconConfig = {\n  name: 'OutlinedArrowAltCircleUpIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M256 504c137 0 248-111 248-248S393 8 256 8 8 119 8 256s111 248 248 248zm0-448c110.5 0 200 89.5 200 200s-89.5 200-200 200S56 366.5 56 256 145.5 56 256 56zm20 328h-40c-6.6 0-12-5.4-12-12V256h-67c-10.7 0-16-12.9-8.5-20.5l99-99c4.7-4.7 12.3-4.7 17 0l99 99c7.6 7.6 2.2 20.5-8.5 20.5h-67v116c0 6.6-5.4 12-12 12z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const OutlinedArrowAltCircleUpIcon = createIcon(OutlinedArrowAltCircleUpIconConfig);\n\nexport default OutlinedArrowAltCircleUpIcon;","import { createIcon } from '../createIcon';\n\nexport const OutlinedQuestionCircleIconConfig = {\n  name: 'OutlinedQuestionCircleIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M256 8C119.043 8 8 119.083 8 256c0 136.997 111.043 248 248 248s248-111.003 248-248C504 119.083 392.957 8 256 8zm0 448c-110.532 0-200-89.431-200-200 0-110.495 89.472-200 200-200 110.491 0 200 89.471 200 200 0 110.53-89.431 200-200 200zm107.244-255.2c0 67.052-72.421 68.084-72.421 92.863V300c0 6.627-5.373 12-12 12h-45.647c-6.627 0-12-5.373-12-12v-8.659c0-35.745 27.1-50.034 47.579-61.516 17.561-9.845 28.324-16.541 28.324-29.579 0-17.246-21.999-28.693-39.784-28.693-23.189 0-33.894 10.977-48.942 29.969-4.057 5.12-11.46 6.071-16.666 2.124l-27.824-21.098c-5.107-3.872-6.251-11.066-2.644-16.363C184.846 131.491 214.94 112 261.794 112c49.071 0 101.45 38.304 101.45 88.8zM298 368c0 23.159-18.841 42-42 42s-42-18.841-42-42 18.841-42 42-42 42 18.841 42 42z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const OutlinedQuestionCircleIcon = createIcon(OutlinedQuestionCircleIconConfig);\n\nexport default OutlinedQuestionCircleIcon;","import { createIcon } from '../createIcon';\n\nexport const PencilAltIconConfig = {\n  name: 'PencilAltIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M497.9 142.1l-46.1 46.1c-4.7 4.7-12.3 4.7-17 0l-111-111c-4.7-4.7-4.7-12.3 0-17l46.1-46.1c18.7-18.7 49.1-18.7 67.9 0l60.1 60.1c18.8 18.7 18.8 49.1 0 67.9zM284.2 99.8L21.6 362.4.4 483.9c-2.9 16.4 11.4 30.6 27.8 27.8l121.5-21.3 262.6-262.6c4.7-4.7 4.7-12.3 0-17l-111-111c-4.8-4.7-12.4-4.7-17.1 0zM124.1 339.9c-5.5-5.5-5.5-14.3 0-19.8l154-154c5.5-5.5 14.3-5.5 19.8 0s5.5 14.3 0 19.8l-154 154c-5.5 5.5-14.3 5.5-19.8 0zM88 424h48v36.3l-64.5 11.3-31.1-31.1L51.7 376H88v48z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const PencilAltIcon = createIcon(PencilAltIconConfig);\n\nexport default PencilAltIcon;","import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  CardBody,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextList,\n  TextListItem,\n  TextListItemVariants,\n  TextListVariants,\n  TextVariants,\n} from '@patternfly/react-core';\nimport {\n  Skeleton,\n  SkeletonSize,\n} from '@redhat-cloud-services/frontend-components/Skeleton';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst valueToText = (value, singular, plural) => {\n  if ((value || value === 0) && singular) {\n    return value === 1\n      ? `1 ${singular}`\n      : `${value} ${plural || `${singular}s`}`;\n  }\n\n  if (value === 0) {\n    return 'None';\n  }\n\n  return value || 'Not available';\n};\n\nexport const Clickable = ({ value, target, plural, singular, onClick }) => {\n  const { pathname } = useLocation();\n  // const { modalId } = useParams(); is causing regression when using LoadingCard derived components in Federated mode\n  const modalId = pathname.split('/').pop();\n  useEffect(() => {\n    if (target === modalId) {\n      onClick({ value, target });\n    }\n  }, [modalId, target]);\n\n  return (\n    <Link to={`${pathname}/${target}`}>\n      {valueToText(value, singular, plural)}\n    </Link>\n  );\n};\n\nClickable.propTypes = {\n  value: PropTypes.node,\n  target: PropTypes.string,\n  onClick: PropTypes.func,\n  plural: PropTypes.string,\n  singular: PropTypes.string,\n};\n\nconst LoadingCard = ({ title, isLoading, items, children }) => (\n  <Card ouiaId=\"system-properties-card\">\n    <CardBody>\n      <Stack hasGutter>\n        <StackItem>\n          <TextContent>\n            <Text component={TextVariants.h1}>{title}</Text>\n          </TextContent>\n        </StackItem>\n        <StackItem isFilled>\n          {items.length ? (\n            <TextContent>\n              <TextList component={TextListVariants.dl}>\n                {items.map(\n                  (\n                    {\n                      onClick,\n                      value,\n                      target,\n                      plural,\n                      singular,\n                      size,\n                      title: itemTitle,\n                      customClass,\n                    },\n                    key\n                  ) => (\n                    <Fragment key={key}>\n                      <TextListItem\n                        component={TextListItemVariants.dt}\n                        data-ouia-component-id={`${\n                          typeof itemTitle === 'string'\n                            ? itemTitle\n                            : itemTitle?.props?.title\n                        } title`}\n                      >\n                        {itemTitle}\n                      </TextListItem>\n                      <TextListItem\n                        className={customClass}\n                        component={TextListItemVariants.dd}\n                        data-ouia-component-id={`${\n                          typeof itemTitle === 'string'\n                            ? itemTitle\n                            : itemTitle?.props?.title\n                        } value`}\n                      >\n                        {isLoading && (\n                          <Skeleton size={size || SkeletonSize.sm} />\n                        )}\n                        {!isLoading &&\n                          (onClick && value ? (\n                            <div>\n                              <Clickable\n                                onClick={onClick}\n                                value={value}\n                                target={target}\n                                plural={plural}\n                                singular={singular}\n                              />\n                            </div>\n                          ) : (\n                            valueToText(value, singular, plural)\n                          ))}\n                      </TextListItem>\n                    </Fragment>\n                  )\n                )}\n              </TextList>\n            </TextContent>\n          ) : null}\n          {children}\n        </StackItem>\n      </Stack>\n    </CardBody>\n  </Card>\n);\n\nLoadingCard.propTypes = {\n  title: PropTypes.node.isRequired,\n  isLoading: PropTypes.bool,\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.node,\n      value: PropTypes.node,\n      onClick: PropTypes.func,\n      size: PropTypes.oneOf(Object.values(SkeletonSize)),\n      plural: PropTypes.string,\n      singular: PropTypes.string,\n      customClass: PropTypes.string,\n    })\n  ),\n  children: PropTypes.node,\n};\n\nLoadingCard.defaultProps = {\n  isLoading: true,\n  items: [],\n};\n\nexport default LoadingCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { usePermissionsWithContext } from '@redhat-cloud-services/frontend-components-utilities/RBACHook';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\n\nimport { PencilAltIcon } from '@patternfly/react-icons';\nimport {\n  NO_MODIFY_HOST_TOOLTIP_MESSAGE,\n  REQUIRED_PERMISSION_TO_MODIFY_HOST_IN_GROUP,\n} from '../../../constants';\nimport { useSelector } from 'react-redux';\nimport { Button, Tooltip } from '@patternfly/react-core';\n\nconst InnerButton = ({ link, onClick }) => (\n  <Button\n    component=\"a\"\n    href={`${window.location.href}/${link}`}\n    onClick={onClick}\n    className=\"ins-c-inventory__detail--action\"\n    aria-label=\"Edit\"\n    variant=\"link\"\n  >\n    <PencilAltIcon />\n  </Button>\n);\n\nInnerButton.propTypes = {\n  link: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nconst EditButtonUnknownPermissions = (props) => {\n  const entity = useSelector(({ entityDetails }) => entityDetails?.entity);\n\n  const { hasAccess: canEditHost } = usePermissionsWithContext([\n    REQUIRED_PERMISSION_TO_MODIFY_HOST_IN_GROUP(\n      entity?.groups?.[0]?.id ?? null // null stands for ungroupped hosts\n    ),\n  ]);\n\n  if (!canEditHost) {\n    return (\n      <Tooltip content={NO_MODIFY_HOST_TOOLTIP_MESSAGE}>\n        <Button isAriaDisabled aria-label=\"Edit\" variant=\"plain\">\n          <PencilAltIcon />\n        </Button>\n      </Tooltip>\n    );\n  }\n\n  return <InnerButton {...props} />;\n};\n\nEditButtonUnknownPermissions.propTypes = {\n  link: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nconst EditButtonWrapper = ({ writePermissions, ...props }) => {\n  const { isProd } = useChrome();\n\n  if (isProd?.() || writePermissions) {\n    return <InnerButton {...props} />;\n  }\n\n  if (typeof writePermissions !== 'boolean') {\n    return <EditButtonUnknownPermissions {...props} />;\n  }\n\n  return (\n    <Tooltip content={NO_MODIFY_HOST_TOOLTIP_MESSAGE}>\n      <Button isAriaDisabled aria-label=\"Edit\" variant=\"plain\">\n        <PencilAltIcon />\n      </Button>\n    </Tooltip>\n  );\n};\n\nEditButtonWrapper.propTypes = {\n  writePermissions: PropTypes.bool,\n};\n\nexport default EditButtonWrapper;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport LoadingCard from '../LoadingCard';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport { propertiesSelector } from '../selectors';\nimport { editAnsibleHost, editDisplayName } from '../../../store/actions';\nimport TextInputModal from '../TextInputModal';\nimport { Button, Popover } from '@patternfly/react-core';\nimport EditButton from '../EditButton';\nimport { generalMapper } from '../dataMapper';\nimport { extraShape } from '../../../constants';\n\nconst TitleWithPopover = ({ title, content }) => (\n  <React.Fragment>\n    <span>{title}</span>\n    <Popover\n      headerContent={<div>{title}</div>}\n      bodyContent={<div>{content}</div>}\n    >\n      <Button\n        variant=\"plain\"\n        aria-label={`Action for ${title}`}\n        className=\"ins-active-general_information__popover-icon\"\n      >\n        <OutlinedQuestionCircleIcon />\n      </Button>\n    </Popover>\n  </React.Fragment>\n);\n\nclass SystemCardCore extends Component {\n  state = {\n    isDisplayNameModalOpen: false,\n    isAnsibleHostModalOpen: false,\n  };\n\n  onCancel = () => {\n    this.setState({\n      isDisplayNameModalOpen: false,\n      isAnsibleHostModalOpen: false,\n    });\n  };\n\n  onSubmit = (fn, origValue) => (value) => {\n    const { entity } = this.props;\n    fn(entity.id, value, origValue);\n    this.onCancel();\n  };\n\n  onShowDisplayModal = (event) => {\n    event.preventDefault();\n    this.setState({\n      isDisplayNameModalOpen: true,\n    });\n  };\n\n  onShowAnsibleModal = (event) => {\n    event.preventDefault();\n    this.setState({\n      isAnsibleHostModalOpen: true,\n    });\n  };\n\n  getAnsibleHost = () => {\n    const { entity } = this.props;\n    return entity.ansible_host || entity.fqdn || entity.id;\n  };\n\n  render() {\n    const {\n      detailLoaded,\n      entity,\n      properties,\n      setDisplayName,\n      setAnsibleHost,\n      writePermissions,\n      handleClick,\n      hasHostName,\n      hasDisplayName,\n      hasAnsibleHostname,\n      hasSAP,\n      hasSystemPurpose,\n      hasCPUs,\n      hasSockets,\n      hasCores,\n      hasCPUFlags,\n      hasRAM,\n      extra,\n    } = this.props;\n    const { isDisplayNameModalOpen, isAnsibleHostModalOpen } = this.state;\n    return (\n      <Fragment>\n        <LoadingCard\n          title=\"System properties\"\n          isLoading={!detailLoaded}\n          items={[\n            ...(hasHostName\n              ? [\n                  {\n                    title: (\n                      <TitleWithPopover\n                        title=\"Host name\"\n                        content=\"Name imported from the system.\"\n                      />\n                    ),\n                    value: entity.fqdn,\n                    size: 'md',\n                    customClass: 'sentry-mask data-hj-suppress',\n                  },\n                ]\n              : []),\n            ...(hasDisplayName\n              ? [\n                  {\n                    title: (\n                      <TitleWithPopover\n                        title=\"Display name\"\n                        content=\"System name displayed in an inventory list.\"\n                      />\n                    ),\n                    value: (\n                      <Fragment>\n                        {entity.display_name}\n                        <EditButton\n                          writePermissions={writePermissions}\n                          link=\"display_name\"\n                          onClick={this.onShowDisplayModal}\n                        />\n                      </Fragment>\n                    ),\n                    size: 'md',\n                    customClass: 'sentry-mask data-hj-suppress',\n                  },\n                ]\n              : []),\n            ...(hasAnsibleHostname\n              ? [\n                  {\n                    title: (\n                      <TitleWithPopover\n                        title=\"Ansible hostname\"\n                        content=\"Hostname that is used in playbooks by Remediations.\"\n                      />\n                    ),\n                    value: (\n                      <Fragment>\n                        {this.getAnsibleHost()}\n                        <EditButton\n                          writePermissions={writePermissions}\n                          link=\"ansible_name\"\n                          onClick={this.onShowAnsibleModal}\n                        />\n                      </Fragment>\n                    ),\n                    size: 'md',\n                    customClass: 'sentry-mask data-hj-suppress',\n                  },\n                ]\n              : []),\n            ...(hasSAP\n              ? [\n                  {\n                    title: 'SAP',\n                    value: properties.sapIds?.length,\n                    singular: 'identifier',\n                    target: 'sap_sids',\n                    onClick: () => {\n                      handleClick(\n                        'SAP IDs (SID)',\n                        generalMapper(properties.sapIds, 'SID')\n                      );\n                    },\n                  },\n                ]\n              : []),\n            ...(hasSystemPurpose\n              ? [{ title: 'System purpose', value: properties.systemPurpose }]\n              : []),\n            ...(hasCPUs\n              ? [{ title: 'Number of CPUs', value: properties.cpuNumber }]\n              : []),\n            ...(hasSockets\n              ? [{ title: 'Sockets', value: properties.sockets }]\n              : []),\n            ...(hasCores\n              ? [\n                  {\n                    title: 'Cores per socket',\n                    value: properties.coresPerSocket,\n                  },\n                ]\n              : []),\n            ...(hasCPUFlags\n              ? [\n                  {\n                    title: 'CPU flags',\n                    value: properties?.cpuFlags?.length,\n                    singular: 'flag',\n                    target: 'flag',\n                    onClick: () =>\n                      handleClick(\n                        'CPU flags',\n                        generalMapper(properties.cpuFlags, 'flag name')\n                      ),\n                  },\n                ]\n              : []),\n            ...(hasRAM ? [{ title: 'RAM', value: properties.ramSize }] : []),\n            ...extra.map(({ onClick, ...item }) => ({\n              ...item,\n              ...(onClick && { onClick: (e) => onClick(e, handleClick) }),\n            })),\n          ]}\n        />\n        <TextInputModal\n          isOpen={isDisplayNameModalOpen}\n          title=\"Edit display name\"\n          value={entity && entity.display_name}\n          ariaLabel=\"Host inventory display name\"\n          modalOuiaId=\"edit-display-name-modal\"\n          cancelOuiaId=\"cancel-edit-display-name\"\n          confirmOuiaId=\"confirm-edit-display-name\"\n          inputOuiaId=\"input-edit-display-name\"\n          onCancel={this.onCancel}\n          onSubmit={this.onSubmit(\n            setDisplayName,\n            entity && entity.display_name\n          )}\n          className=\"sentry-mask data-hj-suppress\"\n        />\n        <TextInputModal\n          isOpen={isAnsibleHostModalOpen}\n          title=\"Edit Ansible host\"\n          value={entity && this.getAnsibleHost()}\n          ariaLabel=\"Ansible host\"\n          modalOuiaId=\"edit-ansible-name-modal\"\n          cancelOuiaId=\"cancel-edit-ansible-name\"\n          confirmOuiaId=\"confirm-edit-ansible-name\"\n          inputOuiaId=\"input-edit-ansible-name\"\n          onCancel={this.onCancel}\n          onSubmit={this.onSubmit(\n            setAnsibleHost,\n            entity && this.getAnsibleHost()\n          )}\n          className=\"sentry-mask data-hj-suppress\"\n        />\n      </Fragment>\n    );\n  }\n}\n\nSystemCardCore.propTypes = {\n  detailLoaded: PropTypes.bool,\n  entity: PropTypes.shape({\n    // eslint-disable-next-line camelcase\n    display_name: PropTypes.string,\n    // eslint-disable-next-line camelcase\n    ansible_host: PropTypes.string,\n    fqdn: PropTypes.string,\n    id: PropTypes.string,\n  }),\n  properties: PropTypes.shape({\n    cpuNumber: PropTypes.number,\n    sockets: PropTypes.number,\n    coresPerSocket: PropTypes.number,\n    ramSize: PropTypes.string,\n    storage: PropTypes.arrayOf(\n      PropTypes.shape({\n        device: PropTypes.string,\n        // eslint-disable-next-line camelcase\n        mount_point: PropTypes.string,\n        options: PropTypes.shape({}),\n        type: PropTypes.string,\n      })\n    ),\n    sapIds: PropTypes.arrayOf(PropTypes.string),\n    systemPurpose: PropTypes.string,\n    cpuFlags: PropTypes.array,\n  }),\n  setDisplayName: PropTypes.func,\n  setAnsibleHost: PropTypes.func,\n  writePermissions: PropTypes.bool,\n  handleClick: PropTypes.func,\n  hasHostName: PropTypes.bool,\n  hasDisplayName: PropTypes.bool,\n  hasAnsibleHostname: PropTypes.bool,\n  hasSAP: PropTypes.bool,\n  hasSystemPurpose: PropTypes.bool,\n  hasCPUs: PropTypes.bool,\n  hasSockets: PropTypes.bool,\n  hasCores: PropTypes.bool,\n  hasCPUFlags: PropTypes.bool,\n  hasRAM: PropTypes.bool,\n  extra: PropTypes.arrayOf(extraShape),\n};\nSystemCardCore.defaultProps = {\n  detailLoaded: false,\n  entity: {},\n  properties: {},\n  hasHostName: true,\n  hasDisplayName: true,\n  hasAnsibleHostname: true,\n  hasSAP: true,\n  hasSystemPurpose: true,\n  hasCPUs: true,\n  hasSockets: true,\n  hasCores: true,\n  hasCPUFlags: true,\n  hasRAM: true,\n  extra: [],\n};\n\nTitleWithPopover.propTypes = {\n  title: PropTypes.string.isRequired,\n  content: PropTypes.string.isRequired,\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setDisplayName: (id, value, origValue) => {\n      dispatch(editDisplayName(id, value, origValue));\n    },\n\n    setAnsibleHost: (id, value, origValue) => {\n      dispatch(editAnsibleHost(id, value, origValue));\n    },\n  };\n}\n\nexport const SystemCard = connect(\n  ({ entityDetails: { entity }, systemProfileStore: { systemProfile } }) => ({\n    entity,\n    detailLoaded: systemProfile && systemProfile.loaded,\n    properties: propertiesSelector(systemProfile, entity),\n  }),\n  mapDispatchToProps\n)(SystemCardCore);\n\nSystemCard.propTypes = SystemCardCore.propTypes;\nSystemCard.defaultProps = SystemCardCore.defaultProps;\n\nexport default SystemCard;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Button, Modal, TextInput } from '@patternfly/react-core';\n\nexport default class TextInputModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (!props.isOpen) {\n      return { value: undefined };\n    }\n\n    if (state.value !== undefined) {\n      return null;\n    }\n\n    return {\n      value: props.value || '',\n    };\n  }\n\n  render() {\n    const {\n      title,\n      isOpen,\n      onCancel,\n      onSubmit,\n      ariaLabel,\n      modalOuiaId,\n      cancelOuiaId,\n      confirmOuiaId,\n      inputOuiaId,\n    } = this.props;\n    const { value } = this.state;\n\n    return (\n      <Modal\n        variant=\"small\"\n        title={title}\n        className=\"ins-c-inventory__detail--edit\"\n        aria-label={ariaLabel ? `${ariaLabel} - modal` : 'input modal'}\n        ouiaId={modalOuiaId}\n        isOpen={isOpen}\n        onClose={(event) => onCancel(event)}\n        actions={[\n          <Button\n            key=\"confirm\"\n            data-action=\"confirm\"\n            variant=\"primary\"\n            onClick={() => onSubmit(this.state.value)}\n            ouiaId={confirmOuiaId}\n            isDisabled={this.props.value === this.state.value}\n          >\n            Save\n          </Button>,\n          <Button\n            key=\"cancel\"\n            data-action=\"cancel\"\n            variant=\"link\"\n            onClick={onCancel}\n            ouiaId={cancelOuiaId}\n          >\n            Cancel\n          </Button>,\n        ]}\n      >\n        <TextInput\n          value={value}\n          type=\"text\"\n          ouiaId={inputOuiaId}\n          onChange={(value) => this.setState({ value })}\n          aria-label={ariaLabel}\n        />\n      </Modal>\n    );\n  }\n}\n\nTextInputModal.propTypes = {\n  title: PropTypes.string,\n  isOpen: PropTypes.bool,\n  onCancel: PropTypes.func,\n  onSubmit: PropTypes.func,\n  ariaLabel: PropTypes.string,\n  modalOuiaId: PropTypes.string,\n  cancelOuiaId: PropTypes.string,\n  confirmOuiaId: PropTypes.string,\n  inputOuiaId: PropTypes.string,\n  value: PropTypes.string,\n};\n\nTextInputModal.defaultProps = {\n  onCancel: () => undefined,\n  onSubmit: () => undefined,\n  isOpen: false,\n  title: '',\n  ariaLabel: 'input text',\n};\n","/* eslint-disable camelcase */\n\nimport React from 'react';\nimport {\n  CheckCircleIcon,\n  OutlinedArrowAltCircleDownIcon,\n  OutlinedArrowAltCircleUpIcon,\n  OutlinedQuestionCircleIcon,\n  TimesIcon,\n} from '@patternfly/react-icons';\nimport { sortable } from '@patternfly/react-table';\nimport { Tooltip } from '@patternfly/react-core';\n\nexport const statusHelper = {\n  UP: (\n    <Tooltip content=\"Service is running\">\n      <OutlinedArrowAltCircleUpIcon className=\"ins-c-inventory__detail--up\" />\n    </Tooltip>\n  ),\n  DOWN: (\n    <Tooltip content=\"Service has stopped\">\n      <OutlinedArrowAltCircleDownIcon className=\"ins-c-inventory__detail--down\" />\n    </Tooltip>\n  ),\n};\n\nexport const enabledHelper = {\n  true: (\n    <Tooltip content=\"Source enabled\">\n      <CheckCircleIcon className=\"ins-c-inventory__detail--enabled\" />\n    </Tooltip>\n  ),\n  false: (\n    <Tooltip content=\"Source disabled\">\n      <TimesIcon className=\"ins-c-inventory__detail--disabled\" />\n    </Tooltip>\n  ),\n};\n\nexport const diskMapper = (devices = []) => ({\n  cells: [\n    {\n      title: 'Device',\n      transforms: [sortable],\n    },\n    {\n      title: 'Label',\n      transforms: [sortable],\n    },\n    {\n      title: 'Mount point',\n      transforms: [sortable],\n    },\n    {\n      title: 'Type',\n      transforms: [sortable],\n    },\n  ],\n  rows: devices.map(({ device, label, mountpoint, options, mounttype }) => {\n    const calculatedOptions = (options && options.options) || options;\n    return {\n      isOpen: false,\n      child: (\n        <div>\n          {calculatedOptions &&\n            Object.entries(calculatedOptions.value || calculatedOptions)\n              .map(([oneKey, option]) => `${oneKey}=${option.value || option}`)\n              .join(',  ')}\n        </div>\n      ),\n      cells: [\n        (device && device.value) || device,\n        label,\n        (mountpoint && mountpoint.value) || mountpoint,\n        (mounttype && mounttype.value) || mounttype,\n      ],\n    };\n  }),\n  expandable: true,\n});\n\nexport const productsMapper = (products = []) => ({\n  cells: [\n    {\n      title: 'Name',\n      transforms: [sortable],\n    },\n    'Status',\n  ],\n  rows: products.map((product) => [\n    product.name,\n    {\n      title: statusHelper[product.status] || (\n        <Tooltip content=\"Unknown service status\">\n          <OutlinedQuestionCircleIcon className=\"ins-c-inventory__detail--unknown\" />\n        </Tooltip>\n      ),\n    },\n  ]),\n});\n\nexport const interfaceMapper = (data = []) => ({\n  cells: [\n    {\n      title: 'MAC address',\n      transforms: [sortable],\n    },\n    {\n      title: 'MTU',\n      transforms: [sortable],\n    },\n    {\n      title: 'Name',\n      transforms: [sortable],\n    },\n    'State',\n    {\n      title: 'Type',\n      transforms: [sortable],\n    },\n  ],\n  rows: data.map((item) => [\n    item.mac_address,\n    item.mtu,\n    item.name,\n    {\n      title: statusHelper[item.state] || (\n        <Tooltip content=\"Unknown service status\">\n          <OutlinedQuestionCircleIcon className=\"ins-c-inventory__detail--unknown\" />\n        </Tooltip>\n      ),\n    },\n    item.type,\n  ]),\n});\n\nexport const repositoriesMapper = (\n  { enabled, disabled } = { enabled: [], disabled: [] }\n) => ({\n  cells: [\n    {\n      title: 'Name',\n      transforms: [sortable],\n    },\n    {\n      title: 'Enabled',\n      transforms: [sortable],\n    },\n    {\n      title: 'GPG check',\n      transforms: [sortable],\n    },\n  ],\n  rows: [...enabled, ...disabled].map((repository) => [\n    {\n      title: repository.name,\n      sortValue: repository.name,\n    },\n    {\n      title: enabledHelper[Boolean(repository.enabled)],\n      sortValue: `${repository.enabled}`,\n    },\n    {\n      title: enabledHelper[Boolean(repository.gpgcheck)],\n      sortValue: `${repository.gpgcheck}`,\n    },\n  ]),\n  filters: [\n    { type: 'textual' },\n    {\n      type: 'checkbox',\n      options: [\n        { label: 'Is enabled', value: 'true' },\n        { label: 'Not enabled', value: 'false' },\n      ],\n    },\n    {\n      type: 'checkbox',\n      options: [\n        { label: 'Is enabled', value: 'true' },\n        { label: 'Not enabled', value: 'false' },\n      ],\n    },\n  ],\n});\n\nexport const generalMapper = (data = [], title = '') => ({\n  cells: [\n    {\n      title,\n      transforms: [sortable],\n    },\n  ],\n  rows: data.map((item) => [item]),\n  filters: [{ type: 'textual' }],\n});\n","/* eslint-disable camelcase */\nimport { registered } from '../../../Utilities/index';\nimport { verifyCollectorStaleness } from '../../../Utilities/sharedFunctions';\nfunction safeParser(toParse, key) {\n  try {\n    return JSON.parse(toParse);\n  } catch {\n    return { [key]: toParse };\n  }\n}\n\nexport const propertiesSelector = (\n  {\n    number_of_cpus,\n    number_of_sockets,\n    cores_per_socket,\n    ramSize,\n    disk_devices,\n    sap_sids,\n    system_purpose,\n    cpu_flags,\n  } = {},\n  { facts } = {}\n) => ({\n  cpuNumber: number_of_cpus || facts?.rhsm?.CPU_CORES,\n  sockets: number_of_sockets || facts?.rhsm?.CPU_SOCKETS,\n  coresPerSocket:\n    cores_per_socket ||\n    (facts?.rhsm?.CPU_CORES &&\n      facts?.rhsm?.CPU_CORES &&\n      Number(facts?.rhsm?.CPU_CORES, 10) /\n        Number(facts?.rhsm?.CPU_SOCKETS, 10)),\n  ramSize: ramSize || (facts?.rhsm?.MEMORY && `${facts?.rhsm?.MEMORY} GB`),\n  storage:\n    disk_devices &&\n    disk_devices.map(({ device, label, mount_point, options, type }) => ({\n      ...(device && safeParser(device, 'device')),\n      label,\n      ...(mount_point && safeParser(mount_point, 'mountpoint')),\n      ...(options && safeParser(options, 'options')),\n      ...(type && safeParser(type, 'mounttype')),\n    })),\n  sapIds: sap_sids,\n  systemPurpose: system_purpose?.usage,\n  cpuFlags: cpu_flags,\n});\n\nexport const operatingSystem = (\n  {\n    arch,\n    operating_system,\n    os_kernel_version,\n    last_boot_time,\n    kernel_modules,\n    system_update_method,\n  } = {},\n  { facts } = {}\n) => ({\n  release: operating_system,\n  kernelRelease: os_kernel_version,\n  architecture: arch || facts?.rhsm?.ARCHITECTURE,\n  bootTime: last_boot_time,\n  kernelModules: kernel_modules,\n  systemUpdateMethod: system_update_method,\n});\n\nexport const biosSelector = ({\n  bios_vendor,\n  bios_version,\n  bios_release_date,\n} = {}) => ({\n  vendor: bios_vendor,\n  version: bios_version,\n  releaseDate: bios_release_date,\n});\n\nexport const infrastructureSelector = (\n  { infrastructure_type, infrastructure_vendor, network = {} } = {},\n  { facts } = {}\n) => ({\n  type:\n    infrastructure_type ||\n    (facts?.rhsm?.IS_VIRTUAL !== undefined &&\n      (facts?.rhsm?.IS_VIRTUAL ? 'virtual' : 'physical')) ||\n    undefined,\n  vendor: infrastructure_vendor,\n  ipv4: network.ipv4,\n  ipv6: network.ipv6,\n  nics: network.interfaces,\n});\n\nexport const configurationSelector = ({\n  installed_packages,\n  enabled_services,\n  running_processes,\n  repositories,\n} = {}) => ({\n  packages: installed_packages,\n  services: enabled_services,\n  processes: running_processes,\n  repositories,\n});\n\nexport const collectionInformationSelector = ({\n  insights_client_version,\n  insights_egg_version,\n} = {}) => ({\n  client: insights_client_version,\n  egg: insights_egg_version,\n});\n\nexport const getCollectorStatus = (collectorStaleness) => {\n  return collectorStaleness\n    ? verifyCollectorStaleness(collectorStaleness) !== 'Fresh'\n      ? 'Stale'\n      : 'Active'\n    : 'N/A';\n};\n\nexport const getDefaultCollectors = (entity) =>\n  registered\n    ?.filter((reporter) => reporter.label !== 'insights-client not connected')\n    .map((reporter) => ({\n      name: reporter.label,\n      status: getCollectorStatus(\n        entity?.per_reporter_staleness[reporter.value]\n      ),\n      updated: entity?.per_reporter_staleness[reporter.value]?.last_check_in,\n      details: {\n        name: reporter.idName,\n        id: entity?.[reporter.idValue],\n      },\n    }));\n\nexport const systemStatus = ({ stale_timestamp } = {}) => ({\n  stale: new Date() > new Date(stale_timestamp),\n});\n"],"names":["OutlinedArrowAltCircleDownIconConfig","name","height","width","svgPath","yOffset","xOffset","OutlinedArrowAltCircleDownIcon","OutlinedArrowAltCircleUpIconConfig","OutlinedArrowAltCircleUpIcon","OutlinedQuestionCircleIconConfig","OutlinedQuestionCircleIcon","PencilAltIconConfig","PencilAltIcon","valueToText","value","singular","plural","concat","Clickable","_ref","target","onClick","pathname","useLocation","modalId","split","pop","useEffect","React","Link","to","propTypes","PropTypes","LoadingCard","_ref2","title","isLoading","items","children","Card","ouiaId","CardBody","Stack","hasGutter","StackItem","TextContent","Text","component","TextVariants","h1","isFilled","length","TextList","TextListVariants","dl","map","_ref3","key","_itemTitle$props","_itemTitle$props2","size","itemTitle","customClass","Fragment","TextListItem","TextListItemVariants","dt","props","className","dd","Skeleton","SkeletonSize","sm","isRequired","Object","values","defaultProps","InnerButton","link","Button","href","window","location","variant","EditButtonUnknownPermissions","_entity$groups$0$id","_entity$groups","_entity$groups$","entity","useSelector","entityDetails","usePermissionsWithContext","REQUIRED_PERMISSION_TO_MODIFY_HOST_IN_GROUP","groups","id","hasAccess","Tooltip","content","NO_MODIFY_HOST_TOOLTIP_MESSAGE","isAriaDisabled","EditButtonWrapper","writePermissions","_objectWithoutProperties","_excluded","isProd","useChrome","TitleWithPopover","Popover","headerContent","bodyContent","SystemCardCore","_Component","_inherits","_super","_this","_classCallCheck","_len","arguments","args","Array","_key","call","apply","_defineProperty","_assertThisInitialized","isDisplayNameModalOpen","isAnsibleHostModalOpen","setState","fn","origValue","onCancel","event","preventDefault","ansible_host","fqdn","_createClass","_properties$sapIds","_properties$cpuFlags","_this$props","this","detailLoaded","properties","setDisplayName","setAnsibleHost","handleClick","hasHostName","hasDisplayName","hasAnsibleHostname","hasSAP","hasSystemPurpose","hasCPUs","hasSockets","hasCores","hasCPUFlags","hasRAM","extra","_this$state","state","_toConsumableArray","display_name","EditButton","onShowDisplayModal","getAnsibleHost","onShowAnsibleModal","sapIds","generalMapper","systemPurpose","cpuNumber","sockets","coresPerSocket","cpuFlags","ramSize","_objectSpread","e","TextInputModal","isOpen","ariaLabel","modalOuiaId","cancelOuiaId","confirmOuiaId","inputOuiaId","onSubmit","Component","storage","device","mount_point","options","type","extraShape","SystemCard","connect","systemProfile","systemProfileStore","loaded","propertiesSelector","dispatch","editDisplayName","editAnsibleHost","_this2","Modal","onClose","actions","isDisabled","TextInput","onChange","undefined","statusHelper","UP","DOWN","enabledHelper","true","CheckCircleIcon","false","TimesIcon","diskMapper","devices","cells","transforms","sortable","rows","label","mountpoint","mounttype","calculatedOptions","child","entries","_slicedToArray","oneKey","option","join","expandable","productsMapper","products","product","status","interfaceMapper","data","item","mac_address","mtu","repositoriesMapper","_ref4","enabled","disabled","repository","sortValue","Boolean","gpgcheck","filters","safeParser","toParse","JSON","parse","_unused","_facts$rhsm","_facts$rhsm2","_facts$rhsm3","_facts$rhsm4","_facts$rhsm5","_facts$rhsm6","_facts$rhsm7","_facts$rhsm8","number_of_cpus","number_of_sockets","cores_per_socket","disk_devices","sap_sids","system_purpose","cpu_flags","facts","rhsm","CPU_CORES","CPU_SOCKETS","Number","MEMORY","usage","operatingSystem","_facts$rhsm9","_ref5","arch","operating_system","os_kernel_version","last_boot_time","kernel_modules","system_update_method","release","kernelRelease","architecture","ARCHITECTURE","bootTime","kernelModules","systemUpdateMethod","biosSelector","_ref7","vendor","bios_vendor","version","bios_version","releaseDate","bios_release_date","infrastructureSelector","_facts$rhsm10","_facts$rhsm11","_ref8","infrastructure_type","infrastructure_vendor","_ref8$network","network","IS_VIRTUAL","ipv4","ipv6","nics","interfaces","configurationSelector","_ref10","packages","installed_packages","services","enabled_services","processes","running_processes","repositories","collectionInformationSelector","_ref11","client","insights_client_version","egg","insights_egg_version","getCollectorStatus","collectorStaleness","verifyCollectorStaleness","getDefaultCollectors","registered","filter","reporter","_entity$per_reporter_","per_reporter_staleness","updated","last_check_in","details","idName","idValue","systemStatus","stale_timestamp","stale","Date"],"sourceRoot":""}