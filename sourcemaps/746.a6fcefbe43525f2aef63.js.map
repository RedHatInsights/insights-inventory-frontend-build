{"version":3,"sources":["webpack:///./src/actions.js","webpack:///./src/api/api.js","webpack:///./src/components/SpinnerFallback.js","webpack:///./src/components/inventory/GeneralInfo/BiosCard/BiosCard.js","webpack:///./src/components/inventory/GeneralInfo/CollectionCard/CollectionCard.js","webpack:///./src/components/inventory/GeneralInfo/ConfigurationCard/ConfigurationCard.js","webpack:///./src/components/inventory/GeneralInfo/EditButton/EditButton.js","webpack:///./src/components/inventory/GeneralInfo/GeneralInformation/GeneralInformation.js","webpack:///./src/components/inventory/GeneralInfo/InfoTable/InfoTable.js","webpack:///./src/components/inventory/GeneralInfo/InfrastructureCard/InfrastructureCard.js","webpack:///./src/components/inventory/GeneralInfo/LoadingCard/LoadingCard.js","webpack:///./src/components/inventory/GeneralInfo/OperatingSystemCard/OperatingSystemCard.js","webpack:///./src/components/inventory/GeneralInfo/SystemCard/SystemCard.js","webpack:///./src/components/inventory/GeneralInfo/TextInputModal/TextInputModal.js","webpack:///./src/components/inventory/GeneralInfo/dataMapper/dataMapper.js","webpack:///./src/components/inventory/GeneralInfo/selectors/selectors.js","webpack:///./src/constants.js","webpack:///./src/components/inventory/GeneralInfo/GeneralInformation/general-information.scss","webpack:///./src/components/inventory/GeneralInfo/GeneralInformation/general-information.scss?4ed9"],"names":["deleteEntity","systems","displayName","type","ACTION_TYPES","payload","hosts","meta","notifications","fulfilled","variant","title","description","dismissable","setFilter","filtersList","SET_INVENTORY_FILTER","loadEntity","getEntity","clearNotifications","CLEAR_NOTIFICATIONS","editDisplayName","id","value","display_name","selectEntity","selected","SELECT_ENTITY","setPagination","page","perPage","SET_PAGINATION","systemProfile","itemId","getEntitySystemProfile","editAnsibleHost","ansible_host","HostsApi","undefined","instance","item","apiHostGetHostSystemProfileById","insights","chrome","auth","getUser","size","BiosCard","bios","detailLoaded","hasVendor","hasVersion","handleClick","hasReleaseDate","extra","isLoading","items","vendor","version","isDate","releaseDate","date","Date","map","onClick","e","propTypes","PropTypes","csm","extraShape","defaultProps","connect","systemProfileStore","loaded","biosSelector","VersionTooltip","egg","client","content","CollectionCard","collectionInformation","entity","hasClient","hasLastCheckIn","hasRegistered","hasInsightsId","hasReporter","hasMachineId","DateFormat","updated","toLocaleString","created","insights_id","reporter","rhel_machine_id","hasEgg","entityDetails","collectionInformationSelector","enabledRepos","repositories","enabled","length","disabled","filter","Boolean","join","ConfigurationCard","configuration","hasPackages","hasServices","hasProcesses","hasRepositories","packages","singular","target","generalMapper","services","processes","plural","repositoriesMapper","base_url","name","gpgcheck","configurationSelector","InnerButton","link","className","href","window","location","permissionsCache","EditButtonUnknownPermissions","props","hasAccess","usePermissions","EditButtonWrapper","writePermissions","isProd","GeneralInformation","isModalOpen","modalTitle","modalVariant","_event","index","direction","customRows","rows","state","sorted","sort","a","b","firstRow","cells","secondRow","sortValue","toLocaleLowerCase","setState","SortByDirection","reverse","expandable","filters","onSort","this","loadSystemDetail","store","SystemCardWrapper","OperatingSystemCardWrapper","BiosCardWrapper","InfrastructureCardWrapper","ConfigurationCardWrapper","CollectionCardWrapper","children","Wrapper","Provider","Fragment","sm","md","hasGutter","handleModalToggle","aria-label","isOpen","onClose","Component","SystemCard","OperatingSystemCard","InfrastructureCard","dispatch","InfoTable","sortBy","opened","pagination","activeFilters","event","key","label","restFilter","_e","deleteAll","deleted","onDeleteFilter","collapsibleProps","onCollapse","activeRows","filterRows","mappedRows","flatMap","prepareRows","child","parent","itemCount","onSetPage","onUpdatePagination","onPerPageSelect","filterConfig","generateFilters","activeFiltersConfig","Object","values","category","chips","Array","isArray","onDelete","Table","TableVariant","TableHeader","TableBody","row","component","TextVariants","isFooter","options","infrastructure","hasType","hasIPv4","hasIPv6","hasInterfaces","ipv4","ipv6","nics","interfaceMapper","infrastructureSelector","valueToText","Clickable","preventDefault","LoadingCard","isFilled","TextListVariants","T","TextListItemVariants","SkeletonSize","systemInfo","hasRelease","hasKernelRelease","hasArchitecture","hasLastBoot","hasKernelModules","release","kernelRelease","architecture","bootTime","kernelModules","operatingSystem","TitleWithPopover","headerContent","bodyContent","isDisplayNameModalOpen","isAnsibleHostModalOpen","fn","onCancel","fqdn","properties","setDisplayName","setAnsibleHost","hasHostName","hasDisplayName","hasAnsibleHostname","hasSAP","hasCPUs","hasSockets","hasCores","hasCPUFlags","hasRAM","onShowDisplayModal","getAnsibleHost","onShowAnsibleModal","sapIds","cpuNumber","sockets","coresPerSocket","cpuFlags","ramSize","ariaLabel","onSubmit","storage","device","mount_point","propertiesSelector","reloadWrapper","then","data","hasItems","showTags","TextInputModal","actions","data-action","onChange","statusHelper","UP","DOWN","enabledHelper","true","false","transforms","sortable","mac_address","mtu","repository","safeParser","toParse","JSON","parse","number_of_cpus","number_of_sockets","cores_per_socket","disk_devices","sap_sids","cpu_flags","facts","rhsm","CPU_CORES","CPU_SOCKETS","Number","MEMORY","arch","os_release","os_kernel_version","last_boot_time","kernel_modules","ARCHITECTURE","bios_vendor","bios_version","bios_release_date","infrastructure_type","infrastructure_vendor","network","IS_VIRTUAL","interfaces","installed_packages","enabled_services","running_processes","insights_client_version","insights_egg_version","asyncActions","keyBy","k","tagsMapper","acc","curr","split","namespace","keyValue","currTagKey","findIndex","currTag","push","tagKey","group","slice","isNaN","every","rowValue","includes","indexOf","activeKey","activeLabel","String","filterValues","newFilter","workingItem","filtersRest","newValue","find","___CSS_LOADER_EXPORT___","module","update","hot","invalidate","oldLocals","accept","isNamedExport","p","isEqualLocals","dispose"],"mappings":"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","file":"js/746.48628cd8834da85740fc.js","sourcesContent":["import { ACTION_TYPES, CLEAR_NOTIFICATIONS, SELECT_ENTITY, SET_INVENTORY_FILTER, SET_PAGINATION } from './constants';\nimport { getEntity, hosts, getEntitySystemProfile } from './api';\n\nexport const deleteEntity = (systems, displayName) => ({\n    type: ACTION_TYPES.REMOVE_ENTITY,\n    payload: hosts.apiHostDeleteById(systems),\n    meta: {\n        notifications: {\n            fulfilled: {\n                variant: 'success',\n                title: 'Delete operation finished',\n                description: `${displayName} has been successfully removed.`,\n                dismissable: true\n            }\n        },\n        systems\n    }\n});\n\nexport const setFilter = (filtersList) => ({\n    type: SET_INVENTORY_FILTER,\n    payload: {\n        filtersList\n    }\n});\n\nexport const loadEntity = () => ({\n    type: ACTION_TYPES.GET_ENTITY,\n    payload: getEntity()\n});\n\nexport const clearNotifications = () => {\n    return ({\n        type: CLEAR_NOTIFICATIONS\n    });\n};\n\nexport const editDisplayName = (id, value) => ({\n    type: ACTION_TYPES.UPDATE_DISPLAY_NAME,\n    payload: hosts.apiHostPatchById([id], { display_name: value }), // eslint-disable-line camelcase\n    meta: {\n        notifications: {\n            fulfilled: {\n                variant: 'success',\n                title: `Display name for entity with ID ${id} has been changed to ${value}`,\n                dismissable: true\n            }\n        }\n    }\n});\n\nexport const selectEntity = (id, selected) => ({\n    type: SELECT_ENTITY,\n    payload: { id, selected }\n});\n\nexport const setPagination = (page, perPage) => ({\n    type: SET_PAGINATION,\n    payload: {\n        page, perPage\n    }\n});\n\nexport const systemProfile = (itemId) => ({\n    type: ACTION_TYPES.LOAD_SYSTEM_PROFILE,\n    payload: getEntitySystemProfile(itemId, {})\n});\n\nexport const editAnsibleHost = (id, value) => ({\n    type: ACTION_TYPES.SET_ANSIBLE_HOST,\n    payload: hosts.apiHostPatchById([id], { ansible_host: value }), // eslint-disable-line camelcase\n    meta: {\n        notifications: {\n            fulfilled: {\n                variant: 'success',\n                title: 'Ansible hostname has been updated',\n                dismissable: true\n            }\n        }\n    }\n});\n","import 'abortcontroller-polyfill/dist/polyfill-patch-fetch';\nexport const INVENTORY_API_BASE = '/api/inventory/v1';\n\nimport instance from '@redhat-cloud-services/frontend-components-utilities/interceptors';\nimport { HostsApi } from '@redhat-cloud-services/host-inventory-client';\n\nexport const hosts = new HostsApi(undefined, INVENTORY_API_BASE, instance);\n\nexport const getEntitySystemProfile = (item) => hosts.apiHostGetHostSystemProfileById([item]);\n\nexport async function getAllEntities({ filters = [] }) {\n    const config = {\n        // eslint-disable-next-line camelcase\n        per_page: 100,\n        filters\n    };\n    const data = await getEntities({ page: 1, ...config });\n    let numberOfpages = Math.ceil(Number(data.total) / 100);\n    let results = data.results;\n    if (numberOfpages > 1) {\n        results = [\n            ...results,\n            ...await Promise.all([...Array(numberOfpages)].map((_item, key) => {\n                if (key + 1 !== 1) {\n                    return getEntities({ page: key + 1, ...config }).then(entities => entities.results);\n                }\n            }))\n        ].filter(Boolean);\n    }\n\n    return results\n    .flatMap(item => item)\n    // eslint-disable-next-line no-unused-vars\n    .flatMap(({ facts, ...item }) => item);\n}\n\n// eslint-disable-next-line camelcase\nexport function getEntities({ page, per_page, filters = [] }) {\n    let query = '';\n    const displayName = filters.find(item => item.value === 'display_name');\n    // eslint-disable-next-line camelcase\n    if (per_page || page || displayName) {\n        // eslint-disable-next-line camelcase\n        const params = { per_page, page, display_name: displayName && displayName.filter };\n        query = '?' + Object.keys(params).reduce(\n            (acc, curr) => [...acc, `${curr}=${params[curr]}`], []\n        ).filter(item => item.indexOf('undefined') === -1).join('&');\n    }\n\n    return fetch(`${INVENTORY_API_BASE}/hosts${query}`).then(r => {\n        if (r.ok) {\n            return r.json();\n        }\n\n        throw new Error(`Unexpected response code ${r.status}`);\n    });\n}\n\nexport function getEntity () {\n    return insights.chrome.auth.getUser();\n}\n","import React from 'react';\nimport { Bullseye, Spinner } from '@patternfly/react-core';\n\nconst fallback = (\n    <Bullseye>\n        <Spinner size=\"xl\" />\n    </Bullseye>\n);\n\nexport default fallback;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport LoadingCard from '../LoadingCard';\nimport { biosSelector } from '../selectors';\nimport DateFormat from '@redhat-cloud-services/frontend-components/DateFormat';\nimport { extraShape, isDate } from '../../../../constants';\n\nconst BiosCard = ({ bios, detailLoaded, hasVendor, hasVersion, handleClick, hasReleaseDate, extra }) => (<LoadingCard\n    title=\"BIOS\"\n    isLoading={ !detailLoaded }\n    items={ [\n        ...hasVendor ? [{ title: 'Vendor', value: bios.vendor }] : [],\n        ...hasVersion ? [{ title: 'Version', value: bios.version }] : [],\n        ...hasReleaseDate ? [{ title: 'Release date', value: (isDate(bios.releaseDate) ?\n            <DateFormat date={ new Date(bios.releaseDate) } type=\"onlyDate\" /> :\n            'Not available'\n        ) }] : [],\n        ...extra.map(({ onClick, ...item }) => ({\n            ...item,\n            ...onClick && { onClick: (e) => onClick(e, handleClick) }\n        }))\n    ] }\n/>);\n\nBiosCard.propTypes = {\n    detailLoaded: PropTypes.bool,\n    handleClick: PropTypes.func,\n    bios: PropTypes.shape({\n        vendor: PropTypes.string,\n        version: PropTypes.string,\n        releaseDate: PropTypes.string,\n        csm: PropTypes.arrayOf(PropTypes.string)\n    }),\n    hasVendor: PropTypes.bool,\n    hasVersion: PropTypes.bool,\n    hasReleaseDate: PropTypes.bool,\n    extra: PropTypes.arrayOf(extraShape)\n};\nBiosCard.defaultProps = {\n    detailLoaded: false,\n    handleClick: () => undefined,\n    extra: [],\n    hasVendor: true,\n    hasVersion: true,\n    hasReleaseDate: true\n};\n\nexport default connect(({\n    systemProfileStore: {\n        systemProfile\n    }\n}) => ({\n    detailLoaded: systemProfile && systemProfile.loaded,\n    bios: biosSelector(systemProfile)\n}))(BiosCard);\n","/* eslint-disable camelcase */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { Tooltip } from '@patternfly/react-core';\n\nimport LoadingCard from '../LoadingCard';\nimport { collectionInformationSelector } from '../selectors';\nimport DateFormat from '@redhat-cloud-services/frontend-components/DateFormat';\nimport { extraShape } from '../../../../constants';\n\nconst VersionTooltip = ({ egg, client }) => (\n    <Tooltip\n        content={\n            <React.Fragment>\n                <p>RPM version: { client || 'Not available' }</p>\n                <p>Dynamic update version: { egg || 'Not available' }</p>\n            </React.Fragment>\n        }\n    >\n        <span>{ client || egg || 'Not available' }</span>\n    </Tooltip>\n);\n\nVersionTooltip.propTypes = {\n    egg: PropTypes.string,\n    client: PropTypes.string\n};\n\nconst CollectionCard = ({\n    detailLoaded,\n    collectionInformation,\n    entity,\n    handleClick,\n    hasClient,\n    hasLastCheckIn,\n    hasRegistered,\n    hasInsightsId,\n    hasReporter,\n    hasMachineId,\n    extra\n}) => (<LoadingCard\n    title=\"Collection information\"\n    isLoading={ !detailLoaded }\n    items={ [\n        ...hasClient ? [{\n            title: 'Insights client',\n            value: <VersionTooltip egg={collectionInformation.egg} client={collectionInformation.client}/>\n        }] : [],\n        ...hasLastCheckIn ? [{ title: 'Last check-in', value: entity && (\n            DateFormat ?\n                <DateFormat date={ entity.updated } type=\"onlyDate\" /> :\n                new Date(entity.updated).toLocaleString()\n        ) }] : [],\n        ...hasRegistered ? [{ title: 'Registered', value: entity && (\n            DateFormat ?\n                <DateFormat date={entity.created} type=\"onlyDate\" /> :\n                new Date(entity.created).toLocaleString()\n        ) }] : [],\n        ...hasInsightsId ? [{ title: 'Insights id', value: entity && entity.insights_id }] : [],\n        ...hasReporter ? [{ title: 'Reporter', value: entity && entity.reporter }] : [],\n        ...hasMachineId ? [{ title: 'RHEL machine id', value: entity && entity.rhel_machine_id }] : [],\n        ...extra.map(({ onClick, ...item }) => ({\n            ...item,\n            ...onClick && { onClick: (e) => onClick(e, handleClick) }\n        }))\n    ] }\n/>);\n\nCollectionCard.propTypes = {\n    detailLoaded: PropTypes.bool,\n    entity: PropTypes.shape({\n        updated: PropTypes.string,\n        created: PropTypes.string,\n        insights_id: PropTypes.string,\n        reporter: PropTypes.string,\n        rhel_machine_id: PropTypes.string\n    }),\n    handleClick: PropTypes.func,\n    collectionInformation: PropTypes.shape({\n        client: PropTypes.string,\n        egg: PropTypes.string\n    }),\n    hasClient: PropTypes.bool,\n    hasLastCheckIn: PropTypes.bool,\n    hasRegistered: PropTypes.bool,\n    hasInsightsId: PropTypes.bool,\n    hasReporter: PropTypes.bool,\n    hasMachineId: PropTypes.bool,\n    extra: PropTypes.arrayOf(extraShape)\n};\nCollectionCard.defaultProps = {\n    detailLoaded: false,\n    handleClick: () => undefined,\n    hasClient: true,\n    hasEgg: true,\n    hasLastCheckIn: true,\n    hasRegistered: true,\n    hasInsightsId: true,\n    hasReporter: true,\n    hasMachineId: true,\n    extra: []\n};\n\nexport default connect(({\n    entityDetails: {\n        entity\n    },\n    systemProfileStore: {\n        systemProfile\n    }\n}) => ({\n    entity,\n    detailLoaded: systemProfile && systemProfile.loaded,\n    collectionInformation: collectionInformationSelector(systemProfile)\n}))(CollectionCard);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport LoadingCard from '../LoadingCard';\nimport { generalMapper, repositoriesMapper } from '../dataMapper';\nimport { configurationSelector } from '../selectors';\nimport { extraShape } from '../../../../constants';\n\nexport function enabledRepos(repositories) {\n    if (repositories) {\n        return [\n            repositories.enabled && repositories.enabled.length > 0 && `${repositories.enabled.length} enabled`,\n            repositories.disabled && repositories.disabled.length > 0 && `${repositories.disabled.length} disabled`\n        ].filter(Boolean).join(' / ');\n    }\n}\n\nconst ConfigurationCard = ({\n    detailLoaded,\n    configuration,\n    handleClick,\n    hasPackages,\n    hasServices,\n    hasProcesses,\n    hasRepositories,\n    extra\n}) => (<LoadingCard\n    title=\"Configuration\"\n    isLoading={ !detailLoaded }\n    items={ [\n        ...hasPackages ? [{\n            title: 'Installed packages',\n            value: configuration.packages?.length,\n            singular: 'package',\n            target: 'installed_packages',\n            onClick: () => {\n                handleClick(\n                    'Installed packages',\n                    generalMapper(configuration.packages, 'Package name')\n                );\n            }\n        }] : [],\n        ...hasServices ? [{\n            title: 'Services',\n            value: configuration.services?.length,\n            singular: 'service',\n            target: 'services',\n            onClick: () => {\n                handleClick(\n                    'Services',\n                    generalMapper(configuration.services, 'Service name')\n                );\n            }\n        }] : [],\n        ...hasProcesses ? [{\n            title: 'Running processes',\n            value: configuration.processes?.length,\n            singular: 'process',\n            plural: 'processes',\n            target: 'running_processes',\n            onClick: () => {\n                handleClick(\n                    'Running processes',\n                    generalMapper(configuration.processes, 'Process name')\n                );\n            }\n        }] : [],\n        ...hasRepositories ? [{\n            title: 'Repositories',\n            value: enabledRepos(configuration.repositories),\n            target: 'repositories',\n            onClick: () => {\n                handleClick(\n                    'Repositories',\n                    repositoriesMapper(configuration.repositories),\n                    'medium'\n                );\n            }\n        }] : [],\n        ...extra.map(({ onClick, ...item }) => ({\n            ...item,\n            ...onClick && { onClick: (e) => onClick(e, handleClick) }\n        }))\n    ] }\n/>);\n\nConfigurationCard.propTypes = {\n    detailLoaded: PropTypes.bool,\n    handleClick: PropTypes.func,\n    configuration: PropTypes.shape({\n        packages: PropTypes.arrayOf(PropTypes.string),\n        services: PropTypes.arrayOf(PropTypes.string),\n        processes: PropTypes.arrayOf(PropTypes.string),\n        repositories: PropTypes.shape({\n            enabled: PropTypes.arrayOf(PropTypes.shape({\n                // eslint-disable-next-line camelcase\n                base_url: PropTypes.string,\n                name: PropTypes.string,\n                enabled: PropTypes.bool,\n                gpgcheck: PropTypes.bool\n            })),\n            disabled: PropTypes.arrayOf(PropTypes.shape({\n                // eslint-disable-next-line camelcase\n                base_url: PropTypes.string,\n                name: PropTypes.string,\n                enabled: PropTypes.bool,\n                gpgcheck: PropTypes.bool\n            }))\n        })\n    }),\n    hasPackages: PropTypes.bool,\n    hasServices: PropTypes.bool,\n    hasProcesses: PropTypes.bool,\n    hasRepositories: PropTypes.bool,\n    extra: PropTypes.arrayOf(extraShape)\n};\nConfigurationCard.defaultProps = {\n    detailLoaded: false,\n    handleClick: () => undefined,\n    hasPackages: true,\n    hasServices: true,\n    hasProcesses: true,\n    hasRepositories: true,\n    extra: []\n};\n\nexport default connect(({\n    systemProfileStore: {\n        systemProfile\n    }\n}) => ({\n    detailLoaded: systemProfile && systemProfile.loaded,\n    configuration: configurationSelector(systemProfile)\n}))(ConfigurationCard);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { usePermissions } from '@redhat-cloud-services/frontend-components-utilities/RBACHook';\n\nimport { PencilAltIcon } from '@patternfly/react-icons';\n\nconst InnerButton = ({ link, onClick }) => (\n    <a\n        className=\"ins-c-inventory__detail--action\"\n        href={ `${window.location.href}/${link}` }\n        onClick={ onClick }\n    >\n        <PencilAltIcon />\n    </a>\n);\n\nInnerButton.propTypes = {\n    link: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired\n};\n\nlet permissionsCache = undefined;\n\nconst EditButtonUnknownPermissions = (props) => {\n    const { hasAccess } = usePermissions('inventory', [\n        'inventory:*:*',\n        'inventory:hosts:write',\n        'inventory:*:write'\n    ]);\n\n    if (hasAccess) {\n        permissionsCache = hasAccess;\n    }\n\n    if (!hasAccess) {\n        return null;\n    }\n\n    return <InnerButton {...props}/>;\n};\n\nEditButtonUnknownPermissions.propTypes = {\n    link: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired\n};\n\nconst EditButtonWrapper = ({ writePermissions, ...props }) => {\n    if (insights.chrome.isProd || writePermissions || permissionsCache) {\n        return <InnerButton {...props} />;\n    }\n\n    if (typeof writePermissions !== 'boolean') {\n        return <EditButtonUnknownPermissions {...props} />;\n    }\n\n    return null;\n};\n\nEditButtonWrapper.propTypes = {\n    writePermissions: PropTypes.bool\n};\n\nexport default EditButtonWrapper;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport {\n    Grid,\n    GridItem,\n    Modal\n} from '@patternfly/react-core';\nimport { SortByDirection } from '@patternfly/react-table';\n\nimport { systemProfile } from '../../../../actions';\nimport InfoTable from '../InfoTable';\nimport OperatingSystemCard from '../OperatingSystemCard';\nimport SystemCard from '../SystemCard';\nimport BiosCard from '../BiosCard';\nimport InfrastructureCard from '../InfrastructureCard';\nimport ConfigurationCard from '../ConfigurationCard';\nimport CollectionCard from '../CollectionCard';\nimport { Provider } from 'react-redux';\nimport './general-information.scss';\n\nclass GeneralInformation extends Component {\n    state = {\n        isModalOpen: false,\n        modalTitle: '',\n        modalVariant: 'small'\n    };\n\n    onSort = (_event, index, direction, customRows) => {\n        const { rows } = this.state;\n        const sorted = (customRows || rows).sort((a, b) => {\n            const firstRow = a.cells || a;\n            const secondRow = b.cells || b;\n            const aSortBy = ('' + (firstRow[index].sortValue || firstRow[index])).toLocaleLowerCase();\n            const bSortBy = ('' + (secondRow[index].sortValue || secondRow[index])).toLocaleLowerCase();\n            return (aSortBy > bSortBy) ? -1 : 1;\n        });\n        this.setState({\n            rows: direction === SortByDirection.asc ? sorted : sorted.reverse()\n        });\n    }\n\n    handleModalToggle = (modalTitle = '', { cells, rows, expandable, filters } = {}, modalVariant = 'small') => {\n        rows && this.onSort(undefined, expandable ? 1 : 0, SortByDirection.asc, rows);\n        this.setState(({ isModalOpen }) => ({\n            isModalOpen: !isModalOpen,\n            modalTitle,\n            cells,\n            expandable,\n            filters,\n            modalVariant\n        }));\n    };\n\n    componentDidMount() {\n        this.props.loadSystemDetail && this.props.loadSystemDetail(this.props.entity.id);\n    };\n\n    render() {\n        const { isModalOpen, modalTitle, cells, rows, expandable, filters, modalVariant } = this.state;\n        const {\n            store,\n            writePermissions,\n            SystemCardWrapper,\n            OperatingSystemCardWrapper,\n            BiosCardWrapper,\n            InfrastructureCardWrapper,\n            ConfigurationCardWrapper,\n            CollectionCardWrapper,\n            children\n        } = this.props;\n        const Wrapper = store ? Provider : Fragment;\n        return (\n            <Wrapper {...(store && { store })}>\n                <div className=\"ins-c-general-information\">\n                    <Grid sm={ 12 } md={ 6 } hasGutter>\n                        {SystemCardWrapper && <GridItem>\n                            <SystemCardWrapper handleClick={ this.handleModalToggle } writePermissions={writePermissions} />\n                        </GridItem>}\n                        {OperatingSystemCardWrapper && <GridItem>\n                            <OperatingSystemCardWrapper handleClick={ this.handleModalToggle } />\n                        </GridItem>}\n                        {BiosCardWrapper && <GridItem>\n                            <BiosCardWrapper handleClick={ this.handleModalToggle } />\n                        </GridItem>}\n                        {InfrastructureCardWrapper && <GridItem>\n                            <InfrastructureCardWrapper handleClick={ this.handleModalToggle } />\n                        </GridItem>}\n                        {ConfigurationCardWrapper && <GridItem>\n                            <ConfigurationCardWrapper handleClick={ this.handleModalToggle } />\n                        </GridItem>}\n                        {CollectionCardWrapper && <GridItem>\n                            <CollectionCardWrapper handleClick={ this.handleModalToggle } />\n                        </GridItem>}\n                        {children}\n                        <Modal\n                            title={ modalTitle || '' }\n                            aria-label={`${modalTitle || ''} modal`}\n                            isOpen={ isModalOpen }\n                            onClose={ () => this.handleModalToggle() }\n                            className=\"ins-c-inventory__detail--dialog\"\n                            variant={ modalVariant }\n                        >\n                            <InfoTable\n                                cells={ cells }\n                                rows={ rows }\n                                expandable={ expandable }\n                                onSort={ this.onSort }\n                                filters={ filters }\n                            />\n                        </Modal>\n                    </Grid>\n                </div>\n            </Wrapper>\n        );\n    }\n}\n\nGeneralInformation.propTypes = {\n    entity: PropTypes.shape({\n        id: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    }),\n    loadSystemDetail: PropTypes.func,\n    store: PropTypes.any,\n    writePermissions: PropTypes.bool,\n    SystemCardWrapper: PropTypes.oneOfType([PropTypes.node, PropTypes.bool]),\n    OperatingSystemCardWrapper: PropTypes.oneOfType([PropTypes.node, PropTypes.bool]),\n    BiosCardWrapper: PropTypes.oneOfType([PropTypes.node, PropTypes.bool]),\n    InfrastructureCardWrapper: PropTypes.oneOfType([PropTypes.node, PropTypes.bool]),\n    ConfigurationCardWrapper: PropTypes.oneOfType([PropTypes.node, PropTypes.bool]),\n    CollectionCardWrapper: PropTypes.oneOfType([PropTypes.node, PropTypes.bool]),\n    children: PropTypes.node\n};\nGeneralInformation.defaultProps = {\n    entity: {},\n    SystemCardWrapper: SystemCard,\n    OperatingSystemCardWrapper: OperatingSystemCard,\n    BiosCardWrapper: BiosCard,\n    InfrastructureCardWrapper: InfrastructureCard,\n    ConfigurationCardWrapper: ConfigurationCard,\n    CollectionCardWrapper: CollectionCard\n};\n\nconst mapStateToProps = ({\n    entityDetails: {\n        entity\n    }\n}) => ({\n    entity\n});\nconst mapDispatchToProps = (dispatch) => ({\n    loadSystemDetail: (itemId) => dispatch(systemProfile(itemId))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GeneralInformation);\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { TextContent, Text, TextVariants, Pagination } from '@patternfly/react-core';\nimport PrimaryToolbar from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport TableToolbar from '@redhat-cloud-services/frontend-components/TableToolbar';\nimport { Table, TableHeader, TableBody, TableVariant, SortByDirection } from '@patternfly/react-table';\nimport flatMap from 'lodash/flatMap';\nimport { prepareRows, filterRows, generateFilters, onDeleteFilter } from '../../../../constants';\nclass InfoTable extends Component {\n    state = {\n        sortBy: { index: 0, direction: SortByDirection.asc },\n        opened: [],\n        pagination: {\n            page: 1,\n            perPage: 10\n        },\n        activeFilters: {}\n    };\n\n    onSort = (event, index, direction) => {\n        const { expandable } = this.props;\n        this.props.onSort(event, expandable ? index - 1 : index, direction);\n        this.setState({\n            sortBy: {\n                index,\n                direction\n            }\n        });\n    }\n\n    onCollapse = (_event, index, isOpen) => {\n        const { opened } = this.state;\n        opened[index] = isOpen;\n        this.setState({\n            opened\n        });\n    }\n\n    onUpdatePagination = ({ page, perPage }) => {\n        this.setState({ pagination: { ...this.state.pagination, page, perPage } });\n    }\n\n    setFilter = (key, value, label) => {\n        const { activeFilters } = this.state;\n        // eslint-disable-next-line no-unused-vars\n        const { [key]: currFilter, ...restFilter } = activeFilters;\n        this.setState({\n            activeFilters: {\n                ...restFilter,\n                ...value.length !== 0 && {\n                    [key]: { key, value, label }\n                }\n            },\n            pagination: { ...this.state.pagination, page: 1 }\n        });\n    }\n\n    onDeleteFilter = (_e, [deleted], deleteAll) => {\n        this.setState({\n            activeFilters: onDeleteFilter(\n                deleted,\n                deleteAll,\n                this.state.activeFilters\n            ),\n            pagination: { ...this.state.pagination, page: 1 }\n        });\n    }\n\n    render() {\n        const { cells, rows, expandable, filters } = this.props;\n        const { sortBy, opened, pagination, activeFilters } = this.state;\n        const collapsibleProps = expandable ? { onCollapse: this.onCollapse } : {};\n        const activeRows = filterRows(rows, activeFilters);\n        const mappedRows = expandable ? flatMap(\n            prepareRows(activeRows, pagination),\n            ({ child, ...row }, key) => [\n                {\n                    ...row,\n                    isOpen: opened[key * 2] || false\n                },\n                {\n                    cells: [{ title: child }],\n                    parent: key * 2\n                }\n            ]) : prepareRows(activeRows, pagination);\n        return (\n            <Fragment>\n                <PrimaryToolbar pagination={{\n                    ...pagination,\n                    itemCount: activeRows.length,\n                    onSetPage: (_e, page) => this.onUpdatePagination({ ...pagination, page }),\n                    onPerPageSelect: (_e, perPage) => this.onUpdatePagination({ ...pagination, page: 1, perPage })\n                }}\n                {...filters && {\n                    filterConfig: {\n                        items: generateFilters(cells, filters, activeFilters, this.setFilter)\n                    }\n                } }\n                activeFiltersConfig={{\n                    filters: Object.values(activeFilters).map(filter => ({\n                        ...filter,\n                        category: filter.label,\n                        chips: Array.isArray(filter.value) ? filter.value.map(item => ({ name: item })) : [{ name: filter.value }]\n                    })),\n                    onDelete: this.onDeleteFilter\n                }}\n                />\n                {\n                    cells.length !== 1 ? <Table\n                        aria-label=\"General information dialog table\"\n                        variant={ TableVariant.compact }\n                        cells={ cells }\n                        rows={ mappedRows }\n                        sortBy={ {\n                            ...sortBy,\n                            index: expandable && sortBy.index === 0 ? 1 : sortBy.index\n                        } }\n                        onSort={ this.onSort }\n                        { ...collapsibleProps }\n                    >\n                        <TableHeader />\n                        <TableBody />\n                    </Table> :\n                        <TextContent>\n                            {\n                                prepareRows(activeRows, pagination)\n                                .map((row, key) => (\n                                    <Text component={ TextVariants.small } key={ key }>\n                                        { row.title || row }\n                                    </Text>\n                                )) }\n                        </TextContent>\n                }\n                <TableToolbar isFooter className=\"ins-c-inventory__table--toolbar\">\n                    <Pagination\n                        {...pagination}\n                        itemCount={activeRows.length}\n                        variant=\"bottom\"\n                        onSetPage={(_e, page) => this.onUpdatePagination({ ...pagination, page })}\n                        onPerPageSelect={(_e, perPage) => this.onUpdatePagination({ ...pagination, page: 1, perPage })}\n                    />\n                </TableToolbar>\n            </Fragment>\n\n        );\n    }\n}\n\nInfoTable.propTypes = {\n    rows: PropTypes.array,\n    cells: PropTypes.array,\n    onSort: PropTypes.func,\n    expandable: PropTypes.bool,\n    filters: PropTypes.arrayOf(PropTypes.shape({\n        index: PropTypes.number,\n        title: PropTypes.string,\n        type: PropTypes.oneOf(['text', 'checkbox', 'radio', 'group']),\n        options: PropTypes.arrayOf(PropTypes.shape({\n            value: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n            label: PropTypes.node\n        }))\n    }))\n};\nInfoTable.defaultProps = {\n    cells: [],\n    rows: [],\n    onSort: () => undefined,\n    sortBy: {},\n    expandable: false\n};\n\nexport default InfoTable;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport LoadingCard from '../LoadingCard';\nimport { generalMapper, interfaceMapper } from '../dataMapper';\nimport { infrastructureSelector } from '../selectors';\nimport { extraShape } from '../../../../constants';\n\nconst InfrastructureCard = ({\n    infrastructure,\n    handleClick,\n    detailLoaded,\n    hasType,\n    hasVendor,\n    hasIPv4,\n    hasIPv6,\n    hasInterfaces,\n    extra\n}) => (<LoadingCard\n    title=\"Infrastructure\"\n    isLoading={ !detailLoaded }\n    items={ [\n        ...hasType ? [{ title: 'Type', value: infrastructure.type }] : [],\n        ...hasVendor ? [{ title: 'Vendor', value: infrastructure.vendor }] : [],\n        ...hasIPv4 ? [{\n            title: 'IPv4 addresses',\n            value: infrastructure.ipv4?.length,\n            plural: 'addresses',\n            singular: 'address',\n            target: 'ipv4',\n            onClick: () => {\n                handleClick(\n                    'IPv4',\n                    generalMapper(infrastructure.ipv4, 'IP address')\n                );\n            }\n        }] : [],\n        ...hasIPv6 ? [{\n            title: 'IPv6 addresses',\n            value: infrastructure.ipv6?.length,\n            plural: 'addresses',\n            singular: 'address',\n            onClick: () => {\n                handleClick(\n                    'IPv6',\n                    generalMapper(infrastructure.ipv6, 'IP address')\n                );\n            }\n        }] : [],\n        ...hasInterfaces ? [{\n            title: 'Interfaces/NICs',\n            value: infrastructure.nics?.length,\n            singular: 'NIC',\n            target: 'interfaces',\n            onClick: () => {\n                handleClick(\n                    'Interfaces/NICs',\n                    interfaceMapper(infrastructure.nics),\n                    'medium'\n                );\n            }\n        }] : [],\n        ...extra.map(({ onClick, ...item }) => ({\n            ...item,\n            ...onClick && { onClick: (e) => onClick(e, handleClick) }\n        }))\n    ] }\n/>);\n\nInfrastructureCard.propTypes = {\n    detailLoaded: PropTypes.bool,\n    handleClick: PropTypes.func,\n    infrastructure: PropTypes.shape({\n        type: PropTypes.string,\n        vendor: PropTypes.string,\n        ipv4: PropTypes.array,\n        ipv6: PropTypes.array,\n        nics: PropTypes.array\n    }),\n    hasType: PropTypes.bool,\n    hasVendor: PropTypes.bool,\n    hasIPv4: PropTypes.bool,\n    hasIPv6: PropTypes.bool,\n    hasInterfaces: PropTypes.bool,\n    extra: PropTypes.arrayOf(extraShape)\n};\nInfrastructureCard.defaultProps = {\n    detailLoaded: false,\n    handleClick: () => undefined,\n    hasType: true,\n    hasVendor: true,\n    hasIPv4: true,\n    hasIPv6: true,\n    hasInterfaces: true,\n    extra: []\n};\n\nexport default connect(({\n    entityDetails: {\n        entity\n    },\n    systemProfileStore: {\n        systemProfile\n    }\n}) => ({\n    detailLoaded: systemProfile && systemProfile.loaded,\n    infrastructure: infrastructureSelector(systemProfile, entity)\n}))(InfrastructureCard);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    Stack,\n    StackItem,\n    TextContent,\n    Text,\n    TextList,\n    TextVariants,\n    TextListItemVariants,\n    TextListVariants,\n    TextListItem\n} from '@patternfly/react-core';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components/Skeleton';\n\nconst valueToText = (value, singular, plural) => {\n    if ((value || value === 0) && singular) {\n        return value === 1 ? `1 ${singular}` : `${value} ${plural || `${singular}s`}`;\n    }\n\n    if (value === 0) {\n        return 'None';\n    }\n\n    return value || 'Not available';\n};\n\nexport const Clickable = ({ item: { onClick, value, target, plural, singular } }) => (\n    <a\n        onClick={ event => {\n            event.preventDefault();\n            onClick(event, { value, target });\n        } }\n        href={ `${window.location.href}/${target}` }\n    >\n        { valueToText(value, singular, plural) }\n    </a>\n);\n\nClickable.propTypes = {\n    item: PropTypes.shape({\n        value: PropTypes.node,\n        target: PropTypes.string,\n        onClick: PropTypes.func,\n        plural: PropTypes.string,\n        singular: PropTypes.string\n    })\n};\n\nClickable.defaultProps = {\n    item: {}\n};\n\nconst LoadingCard = ({ title, isLoading, items }) => {\n    return (\n        <Stack hasGutter>\n            <StackItem>\n                <TextContent>\n                    <Text component={ TextVariants.h1 }>\n                        { title }\n                    </Text>\n                </TextContent>\n            </StackItem>\n            <StackItem isFilled>\n                <TextContent>\n                    <TextList component={ TextListVariants.dl }>\n                        { items.map((item, key) => (\n                            <Fragment key={ key }>\n                                <TextListItem component={ TextListItemVariants.dt }>\n                                    { item.title }\n                                </TextListItem>\n                                <TextListItem component={ TextListItemVariants.dd }>\n                                    { isLoading && <Skeleton size={ item.size || SkeletonSize.sm } /> }\n                                    { !isLoading && (\n                                        item.onClick && item.value ?\n                                            <Clickable item={ item }/> :\n                                            valueToText(item.value, item.singular, item.plural)\n                                    ) }\n                                </TextListItem>\n                            </Fragment>\n                        )) }\n                    </TextList>\n                </TextContent>\n            </StackItem>\n        </Stack>\n    );\n};\n\nLoadingCard.propTypes = {\n    title: PropTypes.node.isRequired,\n    isLoading: PropTypes.bool,\n    items: PropTypes.arrayOf(PropTypes.shape({\n        title: PropTypes.node,\n        value: PropTypes.node,\n        onClick: PropTypes.func,\n        size: PropTypes.oneOf(Object.values(SkeletonSize)),\n        plural: PropTypes.string,\n        singular: PropTypes.string\n    }))\n};\n\nLoadingCard.defaultProps = {\n    isLoading: true,\n    items: []\n};\n\nexport default LoadingCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport LoadingCard from '../LoadingCard';\nimport { generalMapper } from '../dataMapper';\nimport { operatingSystem } from '../selectors';\nimport DateFormat from '@redhat-cloud-services/frontend-components/DateFormat';\nimport { extraShape, isDate } from '../../../../constants';\n\nconst OperatingSystemCard = ({\n    systemInfo,\n    detailLoaded,\n    handleClick,\n    hasRelease,\n    hasKernelRelease,\n    hasArchitecture,\n    hasLastBoot,\n    hasKernelModules,\n    extra\n}) => (\n    <LoadingCard\n        title=\"Operating system\"\n        isLoading={ !detailLoaded }\n        items={ [\n            ...hasRelease ? [{ title: 'Release', value: systemInfo.release }] : [],\n            ...hasKernelRelease ? [{ title: 'Kernel release', value: systemInfo.kernelRelease }] : [],\n            ...hasArchitecture ? [{ title: 'Architecture', value: systemInfo.architecture }] : [],\n            ...hasLastBoot ? [{ title: 'Last boot time', value: (isDate(systemInfo.bootTime) ?\n                <DateFormat date={ systemInfo.bootTime } type=\"onlyDate\" /> :\n                'Not available'\n            )\n            }] : [],\n            ...hasKernelModules ? [{\n                title: 'Kernel modules',\n                value: systemInfo.kernelModules?.length,\n                singular: 'module',\n                target: 'kernel_modules',\n                onClick: () => {\n                    handleClick(\n                        'Kernel modules',\n                        generalMapper(systemInfo.kernelModules, 'Module')\n                    );\n                }\n            }] : [],\n            ...extra.map(({ onClick, ...item }) => ({\n                ...item,\n                ...onClick && { onClick: (e) => onClick(e, handleClick) }\n            }))\n        ] }\n    />\n);\n\nOperatingSystemCard.propTypes = {\n    detailLoaded: PropTypes.bool,\n    handleClick: PropTypes.func,\n    systemInfo: PropTypes.shape({\n        release: PropTypes.string,\n        architecture: PropTypes.string,\n        kernelRelease: PropTypes.string,\n        bootTime: PropTypes.string,\n        kernelModules: PropTypes.arrayOf(PropTypes.string)\n    }),\n    hasRelease: PropTypes.bool,\n    hasKernelRelease: PropTypes.bool,\n    hasArchitecture: PropTypes.bool,\n    hasLastBoot: PropTypes.bool,\n    hasKernelModules: PropTypes.bool,\n    extra: PropTypes.arrayOf(extraShape)\n};\nOperatingSystemCard.defaultProps = {\n    detailLoaded: false,\n    handleClick: () => undefined,\n    hasRelease: true,\n    hasKernelRelease: true,\n    hasArchitecture: true,\n    hasLastBoot: true,\n    hasKernelModules: true,\n    extra: []\n};\n\nexport default connect(({\n    entityDetails: {\n        entity\n    },\n    systemProfileStore: {\n        systemProfile\n    }\n}) => ({\n    detailLoaded: systemProfile && systemProfile.loaded,\n    systemInfo: operatingSystem(systemProfile, entity)\n}))(OperatingSystemCard);\n","import React, { Fragment, Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport LoadingCard from '../LoadingCard';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport { propertiesSelector } from '../selectors';\nimport { editDisplayName, editAnsibleHost, systemProfile } from '../../../../actions';\nimport TextInputModal from '../TextInputModal';\nimport { loadEntity } from '@redhat-cloud-services/frontend-components-inventory/redux';\nimport { Popover, Button } from '@patternfly/react-core';\nimport EditButton from '../EditButton';\nimport { generalMapper } from '../dataMapper';\nimport { extraShape } from '../../../../constants';\n\nconst TitleWithPopover = ({ title, content }) => (\n    <React.Fragment>\n        <span>{ title }</span>\n        <Popover\n            headerContent={<div>{ title }</div>}\n            bodyContent={<div>{ content }</div>}>\n            <Button\n                variant=\"plain\"\n                aria-label={`Action for ${title}`}\n                className='ins-active-general_information__popover-icon'>\n                <OutlinedQuestionCircleIcon />\n            </Button>\n        </Popover>\n    </React.Fragment>\n);\n\nclass SystemCard extends Component {\n    state = {\n        isDisplayNameModalOpen: false,\n        isAnsibleHostModalOpen: false\n    };\n\n    onCancel = () => {\n        this.setState({\n            isDisplayNameModalOpen: false,\n            isAnsibleHostModalOpen: false\n        });\n    };\n\n    onSubmit = (fn) => (value) => {\n        const { entity } = this.props;\n        fn(entity.id, value);\n        this.onCancel();\n    }\n\n    onShowDisplayModal = (event) => {\n        event.preventDefault();\n        this.setState({\n            isDisplayNameModalOpen: true\n        });\n    };\n\n    onShowAnsibleModal = (event) => {\n        event.preventDefault();\n        this.setState({\n            isAnsibleHostModalOpen: true\n        });\n    };\n\n    getAnsibleHost = () => {\n        const { entity } = this.props;\n        return entity.ansible_host || entity.fqdn || entity.id;\n    };\n\n    render() {\n        const {\n            detailLoaded,\n            entity,\n            properties,\n            setDisplayName,\n            setAnsibleHost,\n            writePermissions,\n            handleClick,\n            hasHostName,\n            hasDisplayName,\n            hasAnsibleHostname,\n            hasSAP,\n            hasCPUs,\n            hasSockets,\n            hasCores,\n            hasCPUFlags,\n            hasRAM,\n            extra\n        } = this.props;\n        const { isDisplayNameModalOpen, isAnsibleHostModalOpen } = this.state;\n        return (\n            <Fragment>\n                <LoadingCard\n                    title=\"System properties\"\n                    isLoading={ !detailLoaded }\n                    items={ [\n                        ...hasHostName ? [{\n                            title: <TitleWithPopover\n                                title='Host name'\n                                content='Name imported from the system.'/>,\n                            value: entity.fqdn, size: 'md'\n                        }] : [],\n                        ...hasDisplayName ? [{\n                            title: <TitleWithPopover\n                                title='Display name'\n                                content='System name displayed in an inventory list.'/>,\n                            value: (\n                                <Fragment>\n                                    { entity.display_name }\n                                    <EditButton\n                                        writePermissions={writePermissions}\n                                        link=\"display_name\"\n                                        onClick={this.onShowDisplayModal}\n                                    />\n                                </Fragment>\n                            ), size: 'md'\n                        }] : [],\n                        ...hasAnsibleHostname ? [{\n                            title: <TitleWithPopover\n                                title='Ansible hostname'\n                                content='Hostname that is used in playbooks by Remediations.'/>,\n                            value: (\n                                <Fragment>\n                                    { this.getAnsibleHost() }\n                                    <EditButton\n                                        writePermissions={writePermissions}\n                                        link=\"ansible_name\"\n                                        onClick={this.onShowAnsibleModal}\n                                    />\n                                </Fragment>\n                            ), size: 'md'\n                        }] : [],\n                        ...hasSAP ? [{\n                            title: 'SAP',\n                            value: properties.sapIds?.length,\n                            singular: 'identifier',\n                            target: 'sap_sids',\n                            onClick: () => {\n                                handleClick(\n                                    'SAP IDs (SID)',\n                                    generalMapper(properties.sapIds, 'SID')\n                                );\n                            }\n                        }] : [],\n                        ...hasCPUs ? [{ title: 'Number of CPUs', value: properties.cpuNumber }] : [],\n                        ...hasSockets ? [{ title: 'Sockets', value: properties.sockets }] : [],\n                        ...hasCores ? [{ title: 'Cores per socket', value: properties.coresPerSocket }] : [],\n                        ...hasCPUFlags ? [{\n                            title: 'CPU flags',\n                            value: properties?.cpuFlags?.length,\n                            singular: 'flag',\n                            target: 'flag',\n                            onClick: () => handleClick('CPU flags', generalMapper(properties.cpuFlags, 'flag name'))\n                        }] : [],\n                        ...hasRAM ? [{ title: 'RAM', value: properties.ramSize }] : [],\n                        ...extra.map(({ onClick, ...item }) => ({\n                            ...item,\n                            ...onClick && { onClick: (e) => onClick(e, handleClick) }\n                        }))\n                    ] }\n                />\n                <TextInputModal\n                    isOpen={ isDisplayNameModalOpen }\n                    title='Edit display name'\n                    value={ entity && entity.display_name }\n                    ariaLabel='Host inventory display name'\n                    onCancel={ this.onCancel }\n                    onSubmit={ this.onSubmit(setDisplayName) }\n                />\n                <TextInputModal\n                    isOpen={ isAnsibleHostModalOpen }\n                    title='Edit Ansible host'\n                    value={ entity && this.getAnsibleHost() }\n                    ariaLabel='Ansible host'\n                    onCancel={ this.onCancel }\n                    onSubmit={ this.onSubmit(setAnsibleHost) }\n                />\n            </Fragment>\n        );\n    }\n}\n\nSystemCard.propTypes = {\n    detailLoaded: PropTypes.bool,\n    entity: PropTypes.shape({\n        // eslint-disable-next-line camelcase\n        display_name: PropTypes.string,\n        // eslint-disable-next-line camelcase\n        ansible_host: PropTypes.string,\n        fqdn: PropTypes.string,\n        id: PropTypes.string\n    }),\n    properties: PropTypes.shape({\n        cpuNumber: PropTypes.number,\n        sockets: PropTypes.number,\n        coresPerSocket: PropTypes.number,\n        ramSize: PropTypes.string,\n        storage: PropTypes.arrayOf(PropTypes.shape({\n            device: PropTypes.string,\n            // eslint-disable-next-line camelcase\n            mount_point: PropTypes.string,\n            options: PropTypes.shape({}),\n            type: PropTypes.string\n        })),\n        sapIds: PropTypes.arrayOf(PropTypes.string),\n        cpuFlags: PropTypes.array\n    }),\n    setDisplayName: PropTypes.func,\n    setAnsibleHost: PropTypes.func,\n    writePermissions: PropTypes.bool,\n    handleClick: PropTypes.func,\n    hasHostName: PropTypes.bool,\n    hasDisplayName: PropTypes.bool,\n    hasAnsibleHostname: PropTypes.bool,\n    hasSAP: PropTypes.bool,\n    hasCPUs: PropTypes.bool,\n    hasSockets: PropTypes.bool,\n    hasCores: PropTypes.bool,\n    hasCPUFlags: PropTypes.bool,\n    hasRAM: PropTypes.bool,\n    extra: PropTypes.arrayOf(extraShape)\n};\nSystemCard.defaultProps = {\n    detailLoaded: false,\n    entity: {},\n    properties: {},\n    hasHostName: true,\n    hasDisplayName: true,\n    hasAnsibleHostname: true,\n    hasSAP: true,\n    hasCPUs: true,\n    hasSockets: true,\n    hasCores: true,\n    hasCPUFlags: true,\n    hasRAM: true,\n    extra: []\n};\n\nTitleWithPopover.propTypes = {\n    title: PropTypes.string.isRequired,\n    content: PropTypes.string.isRequired\n};\n\nfunction mapDispatchToProps(dispatch) {\n    const reloadWrapper = (id, event) => {\n        event.payload.then(data => {\n            dispatch(systemProfile(id, { hasItems: true }));\n            dispatch(loadEntity(id, { hasItems: true }, { showTags: true }));\n            return data;\n        });\n\n        return event;\n    };\n\n    return {\n        setDisplayName: (id, value) => {\n            dispatch(reloadWrapper(id, editDisplayName(id, value)));\n        },\n\n        setAnsibleHost: (id, value) => {\n            dispatch(reloadWrapper(id, editAnsibleHost(id, value)));\n        }\n    };\n}\n\nexport default connect(({\n    entityDetails: {\n        entity\n    },\n    systemProfileStore: {\n        systemProfile\n    }\n}) => ({\n    entity,\n    detailLoaded: systemProfile && systemProfile.loaded,\n    properties: propertiesSelector(systemProfile, entity)\n}), mapDispatchToProps)(SystemCard);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n    Button,\n    Modal,\n    TextInput\n} from '@patternfly/react-core';\n\nexport default class TextInputModal extends Component {\n    constructor (props) {\n        super(props);\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps (props, state) {\n        if (!props.isOpen) {\n            return { value: undefined };\n        }\n\n        if (state.value !== undefined) {\n            return null;\n        }\n\n        return {\n            value: props.value || ''\n        };\n    };\n\n    render () {\n        const { title, isOpen, onCancel, onSubmit, ariaLabel } = this.props;\n        const { value } = this.state;\n\n        return (\n            <Modal\n                variant=\"small\"\n                title={ title }\n                className=\"ins-c-inventory__detail--edit\"\n                aria-label={ ariaLabel ? `${ariaLabel} - modal` : 'input modal' }\n                isOpen={ isOpen }\n                onClose={ event => onCancel(event) }\n                actions={ [\n                    <Button key=\"cancel\" data-action=\"cancel\" variant=\"secondary\" onClick={ onCancel }>\n                        Cancel\n                    </Button>,\n                    <Button key=\"confirm\" data-action=\"confirm\" variant=\"primary\" onClick={ () => onSubmit(this.state.value) }>\n                        Save\n                    </Button>\n                ] }\n            >\n                <TextInput\n                    value={ value }\n                    type=\"text\"\n                    onChange={ value => this.setState({ value }) }\n                    aria-label={ ariaLabel  }\n                />\n            </Modal>\n        );\n    }\n}\n\nTextInputModal.propTypes = {\n    title: PropTypes.string,\n    isOpen: PropTypes.bool,\n    onCancel: PropTypes.func,\n    onSubmit: PropTypes.func,\n    ariaLabel: PropTypes.string,\n    value: PropTypes.string\n};\n\nTextInputModal.defaultProps = {\n    onCancel: () => undefined,\n    onSubmit: () => undefined,\n    isOpen: false,\n    title: '',\n    ariaLabel: 'input text'\n};\n\n","/* eslint-disable camelcase */\n\nimport React from 'react';\nimport {\n    CheckCircleIcon,\n    TimesIcon,\n    OutlinedQuestionCircleIcon,\n    OutlinedArrowAltCircleUpIcon,\n    OutlinedArrowAltCircleDownIcon\n} from '@patternfly/react-icons';\nimport { sortable } from '@patternfly/react-table';\nimport { Tooltip } from '@patternfly/react-core';\n\nexport const statusHelper = {\n    UP: <Tooltip content=\"Service is running\">\n        <OutlinedArrowAltCircleUpIcon className=\"ins-c-inventory__detail--up\" />\n    </Tooltip>,\n    DOWN: <Tooltip content=\"Service has stopped\">\n        <OutlinedArrowAltCircleDownIcon className=\"ins-c-inventory__detail--down\" />\n    </Tooltip>\n};\n\nexport const enabledHelper = {\n    true: <Tooltip content=\"Source enabled\">\n        <CheckCircleIcon className=\"ins-c-inventory__detail--enabled\" />\n    </Tooltip>,\n    false: <Tooltip content=\"Source disabled\">\n        <TimesIcon className=\"ins-c-inventory__detail--disabled\" />\n    </Tooltip>\n};\n\nexport const diskMapper = (devices = []) => ({\n    cells: [\n        {\n            title: 'Device',\n            transforms: [sortable]\n        },\n        {\n            title: 'Label',\n            transforms: [sortable]\n        },\n        {\n            title: 'Mount point',\n            transforms: [sortable]\n        },\n        {\n            title: 'Type',\n            transforms: [sortable]\n        }\n    ],\n    rows: devices.map(({\n        device,\n        label,\n        mountpoint,\n        options,\n        mounttype\n    }) => {\n        const calculatedOptions = (options && options.options) || options;\n        return ({\n            isOpen: false,\n            child: <div>\n                {\n                    calculatedOptions &&\n                    Object.entries(calculatedOptions.value || calculatedOptions)\n                    .map(([oneKey, option]) => `${oneKey}=${option.value || option}`).join(',  ')\n                }\n            </div>,\n            cells: [\n                (device && device.value) || device,\n                label,\n                (mountpoint && mountpoint.value) || mountpoint,\n                (mounttype && mounttype.value) || mounttype\n            ]\n        });\n    }),\n    expandable: true\n});\n\nexport const productsMapper = (products = []) => ({\n    cells: [\n        {\n            title: 'Name',\n            transforms: [sortable]\n        },\n        'Status'\n    ],\n    rows: products.map(product => ([\n        product.name,\n        {\n            title: statusHelper[product.status] ||\n            <Tooltip content=\"Unknown service status\">\n                <OutlinedQuestionCircleIcon className=\"ins-c-inventory__detail--unknown\" />\n            </Tooltip>\n        }\n    ]))\n});\n\nexport const interfaceMapper = (data = []) => ({\n    cells: [\n        {\n            title: 'MAC address',\n            transforms: [sortable]\n        },\n        {\n            title: 'MTU',\n            transforms: [sortable]\n        },\n        {\n            title: 'Name',\n            transforms: [sortable]\n        },\n        'State',\n        {\n            title: 'Type',\n            transforms: [sortable]\n        }\n    ],\n    rows: data.map(item => ([\n        item.mac_address,\n        item.mtu,\n        item.name,\n        {\n            title: statusHelper[item.state] ||\n            <Tooltip content=\"Unknown service status\">\n                <OutlinedQuestionCircleIcon className=\"ins-c-inventory__detail--unknown\" />\n            </Tooltip>\n        },\n        item.type\n    ]))\n});\n\nexport const repositoriesMapper = ({ enabled, disabled } = { enabled: [], disabled: [] }) => ({\n    cells: [\n        {\n            title: 'Name',\n            transforms: [sortable]\n        },\n        {\n            title: 'Enabled',\n            transforms: [sortable]\n        },\n        {\n            title: 'GPG check',\n            transforms: [sortable]\n        }\n    ],\n    rows: [...enabled, ...disabled].map(repository => ([\n        {\n            title: repository.name,\n            sortValue: repository.name\n        },\n        {\n            title: enabledHelper[Boolean(repository.enabled)],\n            sortValue: `${repository.enabled}`\n        },\n        {\n            title: enabledHelper[Boolean(repository.gpgcheck)],\n            sortValue: `${repository.gpgcheck}`\n        }\n    ])),\n    filters: [\n        { type: 'textual' },\n        {\n            type: 'checkbox',\n            options: [\n                { label: 'Is enabled', value: 'true' },\n                { label: 'Not enabled', value: 'false' }\n            ]\n        },\n        {\n            type: 'checkbox',\n            options: [\n                { label: 'Is enabled', value: 'true' },\n                { label: 'Not enabled', value: 'false' }\n            ]\n        }\n    ]\n});\n\nexport const generalMapper = (data = [], title = '') => ({\n    cells: [{\n        title,\n        transforms: [sortable]\n    }],\n    rows: data.map(item => ([item])),\n    filters: [{ type: 'textual' }]\n});\n","/* eslint-disable camelcase */\n\nfunction safeParser(toParse, key) {\n    try {\n        return JSON.parse(toParse);\n    } catch {\n        return { [key]: toParse };\n    }\n}\n\nexport const propertiesSelector = ({\n    number_of_cpus,\n    number_of_sockets,\n    cores_per_socket,\n    ramSize,\n    disk_devices,\n    sap_sids,\n    cpu_flags\n} = {}, { facts } = { }) => ({\n    cpuNumber: number_of_cpus || facts?.rhsm?.CPU_CORES,\n    sockets: number_of_sockets || facts?.rhsm?.CPU_SOCKETS,\n    coresPerSocket: cores_per_socket || (\n        facts?.rhsm?.CPU_CORES\n            && facts?.rhsm?.CPU_CORES\n            && Number(facts?.rhsm?.CPU_CORES, 10) / Number(facts?.rhsm?.CPU_SOCKETS, 10)\n    ),\n    ramSize: ramSize || (facts?.rhsm?.MEMORY && `${facts?.rhsm?.MEMORY} GB`),\n    storage: disk_devices && disk_devices.map(({ device, label, mount_point, options, type }) => ({\n        ...device && safeParser(device, 'device'),\n        label,\n        ...mount_point && safeParser(mount_point, 'mountpoint'),\n        ...options && safeParser(options, 'options'),\n        ...type && safeParser(type, 'mounttype')\n    })\n    ),\n    sapIds: sap_sids,\n    cpuFlags: cpu_flags\n});\n\nexport const operatingSystem = ({\n    arch,\n    os_release,\n    os_kernel_version,\n    last_boot_time,\n    kernel_modules\n} = {}, { facts } = {}) => ({\n    release: os_release,\n    kernelRelease: os_kernel_version,\n    architecture: arch || facts?.rhsm?.ARCHITECTURE,\n    bootTime: last_boot_time,\n    kernelModules: kernel_modules\n});\n\nexport const biosSelector = ({\n    bios_vendor,\n    bios_version,\n    bios_release_date\n} = {}) => ({\n    vendor: bios_vendor,\n    version: bios_version,\n    releaseDate: bios_release_date\n});\n\nexport const infrastructureSelector = ({\n    infrastructure_type,\n    infrastructure_vendor,\n    network = {}\n} = {}, { facts } = {}) => ({\n    type: infrastructure_type || (\n        facts?.rhsm?.IS_VIRTUAL !== undefined && (facts?.rhsm?.IS_VIRTUAL ? 'virtual' : 'physical')\n    ) || undefined,\n    vendor: infrastructure_vendor,\n    ipv4: network.ipv4,\n    ipv6: network.ipv6,\n    nics: network.interfaces\n});\n\nexport const configurationSelector = ({\n    installed_packages,\n    enabled_services,\n    running_processes,\n    repositories\n} = {}) => ({\n    packages: installed_packages,\n    services: enabled_services,\n    processes: running_processes,\n    repositories\n});\n\nexport const collectionInformationSelector = ({\n    insights_client_version,\n    insights_egg_version\n} = {}) => ({\n    client: insights_client_version,\n    egg: insights_egg_version\n});\n","import keyBy from 'lodash/keyBy';\nimport flatMap from 'lodash/flatMap';\nimport PropTypes from 'prop-types';\n\nconst actions = [\n    'ALERT_ADD',\n    'ALERT_DISMISS',\n    'REMOVE_ENTITY'\n];\n\nconst asyncActions = flatMap([\n    'GET_ENTITIES',\n    'GET_ENTITY',\n    'UPDATE_DISPLAY_NAME',\n    'LOAD_WRITE_PERMISSIONS',\n    'LOAD_SYSTEM_PROFILE',\n    'SET_ANSIBLE_HOST'\n], a => [a, `${a}_PENDING`, `${a}_FULFILLED`, `${a}_REJECTED`]);\n\nexport const ACTION_TYPES = keyBy([...actions, ...asyncActions], k => k);\nexport const CLEAR_NOTIFICATIONS = '@@INSIGHTS-CORE/NOTIFICATIONS/CLEAR_NOTIFICATIONS';\nexport const SELECT_ENTITY = 'SELECT_ENTITY';\nexport const SET_INVENTORY_FILTER = 'SET_INVENTORY_FILTER';\nexport const SET_PAGINATION = 'SET_PAGINATION';\nexport const SET_DISPLAY_NAME = 'SET_DISPLAY_NAME';\nexport const SET_ANSIBLE_HOST = 'SET_ANSIBLE_HOST';\n\nexport const tagsMapper = (acc, curr) => {\n    let [namespace, keyValue] = curr.split('/');\n    if (!keyValue) {\n        keyValue = namespace;\n        namespace = null;\n    }\n\n    const [key, value = null] = keyValue.split('=');\n    const currTagKey = acc.findIndex(({ category }) => category === namespace);\n    const currTag = acc[currTagKey] || {\n        category: namespace,\n        key: namespace,\n        type: 'tags',\n        values: []\n    };\n    currTag.values.push({\n        name: `${key}${value ? `=${value}` : ''}`,\n        key: `${key}${value ? `=${value}` : ''}`,\n        tagKey: key,\n        value,\n        group: {\n            label: namespace,\n            value: namespace,\n            type: 'checkbox'\n        }\n    });\n    if (!acc[currTagKey]) {\n        acc.push(currTag);\n    }\n\n    return acc;\n};\n\nexport const prepareRows = (rows = [], pagination = {}) => (\n    rows\n    .slice((pagination.page - 1) * pagination.perPage, pagination.page * pagination.perPage)\n);\n\nexport const isDate = (date) => {\n    return !(isNaN(date) && isNaN(Date.parse(date)));\n};\n\nexport const filterRows = (rows = [], activeFilters = {}) => (\n    rows\n    .filter(row => (\n        Object.values(activeFilters).length === 0 ||\n        Object.values(activeFilters)\n        .every(\n            filter => {\n                const rowValue = row[filter.key] && (row[filter.key].sortValue || row[filter.key]);\n                return rowValue && (\n                    Array.isArray(filter.value) ?\n                        filter.value.includes(rowValue) :\n                        rowValue.toLocaleLowerCase().indexOf(filter.value.toLocaleLowerCase()) !== -1\n                );\n            }\n        )\n    ))\n);\n\nexport const generateFilters = (cells = [], filters = [], activeFilters = {}, onChange = () => undefined) => (\n    filters.map((filter, key) => {\n        const activeKey = filter.index || key;\n        const activeLabel = cells[activeKey] && (cells[activeKey].title || cells[activeKey]);\n\n        return ({\n            value: String(activeKey),\n            label: activeLabel,\n            type: filter.type || 'text',\n            filterValues: {\n                id: filter.id || `${activeLabel}-${activeKey}`,\n                onChange: (_e, newFilter) => onChange(activeKey, newFilter, activeLabel),\n                value: activeFilters[activeKey] && activeFilters[activeKey].value,\n                ...filter.options && { items: filter.options }\n            }\n        });\n    })\n);\n\nexport const onDeleteFilter = (deleted = {}, deleteAll = false, activeFilters = {}) => {\n    if (deleteAll) {\n        return {};\n    } else {\n        const { [deleted.key]: workingItem, ...filtersRest } = activeFilters;\n        const newValue = workingItem && Array.isArray(workingItem.value) &&\n            workingItem.value.filter(item => !deleted.chips.find(({ name }) => name === item));\n        const newFilter = workingItem && Array.isArray(workingItem.value) && newValue && newValue.length > 0 ? {\n            [deleted.key]: {\n                ...workingItem,\n                value: newValue\n            }\n        } : {};\n        return {\n            ...filtersRest,\n            ...newFilter\n        };\n    }\n};\n\nexport const extraShape = PropTypes.shape({\n    title: PropTypes.node,\n    value: PropTypes.node,\n    singular: PropTypes.node,\n    plural: PropTypes.node,\n    onClick: PropTypes.func\n});\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".inventory .ins-c-general-information .pf-c-content .pf-l-level div:first-child{font-weight:var(--pf-global--FontWeight--bold)}.inventory .ins-c-general-information table td.ins-no-data{text-align:center}.inventory .ins-c-general-information .ins-active-general_information__popover-icon{padding:0;margin-left:var(--pf-global--spacer--sm)}.inventory .ins-c-general-information dl dd{word-break:break-all}.inventory .ins-c-general-information .pf-c-modal-box .pf-c-table{white-space:nowrap}.inventory .ins-c-general-information .pf-c-modal-box .pf-c-table .ins-c-inventory__detail--up{fill:var(--pf-global--success-color--100)}.inventory .ins-c-general-information .pf-c-modal-box .pf-c-table .ins-c-inventory__detail--down{fill:var(--pf-global--danger-color--100)}.inventory .ins-c-general-information .pf-c-modal-box .pf-c-table .ins-c-inventory__detail--unknown{fill:var(--pf-global--warning-color--100)}.inventory .ins-c-general-information .pf-c-modal-box .pf-c-table .ins-c-inventory__detail--enabled{fill:var(--pf-global--success-color--100)}.inventory .ins-c-general-information .ins-c-inventory__detail--dialog{min-width:350px;min-width:21.875rem}.inventory .ins-c-general-information .ins-c-inventory__detail--dialog .pf-c-table tbody tr td:first-child{padding-left:0}.inventory .ins-c-general-information .ins-c-inventory__detail--dialog .pf-c-table thead tr th{padding-bottom:0}@media only screen and (max-width: 768px){.inventory .ins-c-general-information .pf-c-modal-box .pf-c-table{white-space:normal}}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/inventory/GeneralInfo/GeneralInformation/general-information.scss\"],\"names\":[],\"mappings\":\"AAAA,gFACqE,8CAA8C,CADnH,2DACoK,iBAAiB,CADrL,oFAC+P,SAAS,CAAC,wCAAwC,CADjT,4CACmV,oBAAoB,CADvW,kEAC+Z,kBAAkB,CADjb,+FACsgB,yCAAyC,CAD/iB,iGACsoB,wCAAwC,CAD9qB,oGACwwB,yCAAyC,CADjzB,oGAC24B,yCAAyC,CADp7B,uEACi/B,eAAe,CAAC,mBAAmB,CADphC,2GACqnC,cAAc,CADnoC,+FACwtC,gBAAgB,CAAC,0CADzuC,kEAC00C,kBAAkB,CAAE\",\"sourcesContent\":[\".inventory{\\n.ins-c-general-information .pf-c-content .pf-l-level div:first-child{font-weight:var(--pf-global--FontWeight--bold)}.ins-c-general-information table td.ins-no-data{text-align:center}.ins-c-general-information .ins-active-general_information__popover-icon{padding:0;margin-left:var(--pf-global--spacer--sm)}.ins-c-general-information dl dd{word-break:break-all}.ins-c-general-information .pf-c-modal-box .pf-c-table{white-space:nowrap}.ins-c-general-information .pf-c-modal-box .pf-c-table .ins-c-inventory__detail--up{fill:var(--pf-global--success-color--100)}.ins-c-general-information .pf-c-modal-box .pf-c-table .ins-c-inventory__detail--down{fill:var(--pf-global--danger-color--100)}.ins-c-general-information .pf-c-modal-box .pf-c-table .ins-c-inventory__detail--unknown{fill:var(--pf-global--warning-color--100)}.ins-c-general-information .pf-c-modal-box .pf-c-table .ins-c-inventory__detail--enabled{fill:var(--pf-global--success-color--100)}.ins-c-general-information .ins-c-inventory__detail--dialog{min-width:350px;min-width:21.875rem}.ins-c-general-information .ins-c-inventory__detail--dialog .pf-c-table tbody tr td:first-child{padding-left:0}.ins-c-general-information .ins-c-inventory__detail--dialog .pf-c-table thead tr th{padding-bottom:0}@media only screen and (max-width: 768px){.ins-c-general-information .pf-c-modal-box .pf-c-table{white-space:normal}}\\n\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../node_modules/sass-loader/dist/cjs.js!./general-information.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../../../../../node_modules/css-loader/dist/cjs.js!../../../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../node_modules/sass-loader/dist/cjs.js!./general-information.scss\",\n      function () {\n        if (!isEqualLocals(oldLocals, content.locals, undefined)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nexport default content.locals || {};"],"sourceRoot":""}