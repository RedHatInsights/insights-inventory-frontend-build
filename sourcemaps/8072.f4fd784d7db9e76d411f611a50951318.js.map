{"version":3,"file":"js/8072.fc0adde1f4b2bc555e33.js","mappings":"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","sources":["webpack:///./src/Utilities/DeleteModal.js","webpack:///./src/Utilities/TagWithDialog.js","webpack:///./src/Utilities/Wrapper.js","webpack:///./src/Utilities/constants.js","webpack:///./src/Utilities/TagsModal.js","webpack:///./src/Utilities/sharedFunctions.js","webpack:///./src/api/api.js","webpack:///./src/api/systemIssues.js","webpack:///./src/components/InventoryGroups/utils/api.js","webpack:///./src/constants.js","webpack:///./src/store/action-types.js","webpack:///./src/store/system-issues-actions.js","webpack:///./src/store/actions.js","webpack:///./src/store/inventory-actions.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    ClipboardCopy,\n    Modal,\n    Split,\n    SplitItem,\n    Stack,\n    StackItem,\n    Level,\n    LevelItem,\n    Button\n} from '@patternfly/react-core';\n\nimport ExclamationTriangleIcon from  '@patternfly/react-icons/dist/js/icons/exclamation-triangle-icon';\n\nconst DeleteModal = ({ handleModalToggle, isModalOpen, currentSytems, onConfirm }) => {\n    let systemToRemove;\n    let systemLabel = 'system';\n    if (Array.isArray(currentSytems)) {\n        systemToRemove = currentSytems.length === 1 ? currentSytems[0].display_name : `${currentSytems.length} systems`;\n        systemLabel = currentSytems.length === 1 ? systemLabel : 'systems';\n    } else {\n        systemToRemove = currentSytems.display_name;\n    }\n\n    return <Modal\n        variant=\"small\"\n        title=\"Remove from inventory\"\n        className=\"ins-c-inventory__table--remove sentry-mask data-hj-suppress\"\n        ouiaId=\"inventory-delete-modal\"\n        isOpen={isModalOpen}\n        onClose={() => handleModalToggle(false)}\n        appendTo={document.getElementsByClassName('inventory')[0] || document.body}\n    >\n        <Split hasGutter>\n            <SplitItem><ExclamationTriangleIcon size=\"xl\" className=\"ins-m-alert\" /></SplitItem>\n            <SplitItem isFilled>\n                <Stack hasGutter>\n                    <StackItem>\n                        {systemToRemove} will be removed from\n                                    all {location.host} applications and services. You need to re-register\n                        the {systemLabel} to add it back to your inventory.\n                    </StackItem>\n                    <StackItem>\n                        To disable the daily upload for this {systemLabel}, use the following command:\n                    </StackItem>\n                    <StackItem>\n                        <ClipboardCopy>insights-client --unregister</ClipboardCopy>\n                    </StackItem>\n                </Stack>\n            </SplitItem>\n        </Split>\n        <Level hasGutter>\n            <LevelItem>\n                <Button\n                    variant=\"danger\"\n                    ouiaId=\"confirm-inventory-delete\"\n                    onClick={onConfirm}\n                >\n                    Remove\n                </Button>\n                <Button\n                    variant=\"link\"\n                    ouiaId=\"cancel-inventory-delete\"\n                    onClick={() => handleModalToggle(false)}\n                >\n                    Cancel\n                </Button>\n            </LevelItem>\n        </Level>\n    </Modal>;\n};\n\nconst ActiveSystemProp = PropTypes.shape({\n    id: PropTypes.string,\n    displayName: PropTypes.string\n});\n\nDeleteModal.propTypes = {\n    isModalOpen: PropTypes.bool,\n    currentSytems: PropTypes.oneOfType([ActiveSystemProp, PropTypes.arrayOf(ActiveSystemProp)]),\n    handleModalToggle: PropTypes.func,\n    onConfirm: PropTypes.func\n};\n\nDeleteModal.defaultProps = {\n    isModalOpen: false,\n    currentSytems: {},\n    handleModalToggle: () => undefined,\n    onConfirm: () => undefined\n};\n\nexport default DeleteModal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { TagCount } from '@redhat-cloud-services/frontend-components/TagCount';\nimport { loadTags, toggleTagModal } from '../store/actions';\n\nconst TagWithDialog = ({ count, loadTags, systemId }) => (\n    <span\n        onClick={(e) => e.stopPropagation()}\n        className=\"ins-c-inventory__list-tags\"\n        data-ouia-component-id={`${systemId}-tag-button`}\n    >\n        <TagCount count={count} onTagClick={ () => loadTags(systemId, count) } />\n    </span>\n);\n\nTagWithDialog.propTypes = {\n    count: PropTypes.number,\n    loadTags: PropTypes.func,\n    systemId: PropTypes.string\n};\n\nconst dispatchToProps = (dispatch) => ({\n    loadTags: (systemId, count) => {\n        if (systemId) {\n            dispatch(toggleTagModal(true));\n            dispatch(loadTags(systemId, undefined, undefined, count));\n        }\n    }\n});\n\nexport default connect(() => ({}), dispatchToProps)(TagWithDialog);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { usePermissionsWithContext } from '@redhat-cloud-services/frontend-components-utilities/RBACHook';\n\nconst RenderWrapper = ({ cmp: Component, isRbacEnabled, inventoryRef, store, ...props }) => {\n    const { hasAccess } = usePermissionsWithContext([\n        'inventory:*:*',\n        'inventory:*:read',\n        'inventory:hosts:read'\n    ]);\n\n    return (\n        <Component\n            {...props}\n            { ...inventoryRef && {\n                ref: inventoryRef\n            }}\n            isRbacEnabled={isRbacEnabled}\n            hasAccess={isRbacEnabled ? hasAccess : true}\n            store={ store }\n        />\n    );\n};\n\nRenderWrapper.propTypes = {\n    cmp: PropTypes.any,\n    inventoryRef: PropTypes.any,\n    store: PropTypes.object,\n    customRender: PropTypes.bool,\n    isRbacEnabled: PropTypes.bool\n};\n\nexport default RenderWrapper;\n","import { createContext } from 'react';\nimport { usePermissionsWithContext } from '@redhat-cloud-services/frontend-components-utilities/RBACHook';\nimport { INVENTORY_WRITE_PERMISSIONS } from '../constants';\n\nexport const TEXT_FILTER = 'hostname_or_id';\nexport const TEXTUAL_CHIP = 'textual';\nexport const TAG_CHIP = 'tags';\nexport const STALE_CHIP = 'staleness';\nexport const REGISTERED_CHIP = 'registered_with';\nexport const OS_CHIP = 'operating_system';\nexport const RHCD_FILTER_KEY = 'rhc_client_id';\nexport const UPDATE_METHOD_KEY = 'system_update_method';\nexport const LAST_SEEN_CHIP = 'last_seen';\nexport const HOST_GROUP_CHIP = 'host_group';\n\nexport function subtractDate(days) {\n    const date = new Date();\n    date.setDate(date.getDate() - days);\n    return date.toISOString();\n}\n\nexport const staleness = [\n    { label: 'Fresh', value: 'fresh' },\n    { label: 'Stale', value: 'stale' },\n    { label: 'Stale warning', value: 'stale_warning' },\n    { label: 'Unknown', value: 'unknown' }\n];\n\nexport const currentDate = new Date().toISOString();\nexport const lastSeenItems = [\n    {\n        value: { updatedStart: subtractDate(1), updatedEnd: currentDate, mark: 'last24' },\n        label: 'Within the last 24 hours'    },\n    {\n        value: {  updatedEnd: subtractDate(1), mark: '24more' },\n        label: 'More than 1 day ago'\n\n    },\n    {\n        value: { updatedEnd: subtractDate(7), mark: '7more' },\n        label: 'More than 7 days ago'\n    },\n    {\n        value: { updatedEnd: subtractDate(15), mark: '15more' },\n        label: 'More than 15 days ago'\n    },\n    {\n        value: { updatedEnd: subtractDate(30), mark: '30more' },\n        label: 'More than 30 days ago'\n    }\n    //Temporarily disabled\n    // {\n    //     value: { mark: 'custom' },\n    //     label: 'Custom'\n    // }\n];\nexport const registered = [\n    { label: 'insights-client', value: 'puptoo', idName: 'Insights id', idValue: 'insights_id' },\n    { label: 'subscription-manager', value: 'rhsm-conduit',\n        idName: 'Subscription manager id', idValue: 'subscription_manager_id' },\n    { label: 'Satellite/Discovery', value: 'yupana' },\n    { label: 'insights-client not connected', value: '!puptoo' }\n];\nexport const InventoryContext = createContext({});\n\nexport const rhcdOptions = [\n    { label: 'Active', value: 'not_nil' },\n    { label: 'Inactive', value: 'nil' }\n];\n\nexport const updateMethodOptions = [\n    { label: 'yum', value: 'yum' },\n    { label: 'dnf', value: 'dnf' },\n    { label: 'rpm-ostree', value: 'rpm-ostree' }\n];\n\nexport function filterToGroup(filter = [], valuesKey = 'values') {\n    return filter.reduce((accGroup, group) => ({\n        ...accGroup,\n        [group.key]: group[valuesKey].reduce((acc, curr) => ({ ...acc, [curr.key]: {\n            isSelected: true,\n            group: curr.group,\n            item: {\n                meta: {\n                    tag: {\n                        key: curr.tagKey,\n                        value: curr.value\n                    }\n                }\n            }\n        } }), {})\n    }), {});\n}\n\nexport const arrayToSelection = (selected) => selected.reduce((acc, { cells: [key, value, namespace] }) => ({\n    ...acc,\n    [namespace]: {\n        ...acc[namespace?.title || namespace],\n        [key?.title || key]: {\n            isSelected: true,\n            group: { value: namespace?.title || namespace, label: namespace?.title || namespace },\n            item: {\n                value: key?.title || key,\n                meta: { tag: { key: key?.title || key, value: value?.title || value } }\n            }\n        }\n    }\n}), {});\n\nexport function reduceFilters(filters = []) {\n    return filters.reduce((acc, oneFilter) => {\n        if (oneFilter.value === TEXT_FILTER) {\n            return { ...acc, textFilter: oneFilter.filter };\n        } else if ('tagFilters' in oneFilter) {\n            return {\n                ...acc,\n                tagFilters: filterToGroup(oneFilter.tagFilters)\n            };\n        }\n\n        const foundKey = ['staleFilter', 'registeredWithFilter', 'osFilter', 'rhcdFilter', 'updateMethodFilter',\n            'lastSeenFilter', '']\n        .find(item => Object.keys(oneFilter).includes(item));\n\n        return {\n            ...acc,\n            ...foundKey && { [foundKey]: oneFilter[foundKey] }\n        };\n    }, {\n        textFilter: '',\n        tagFilters: {}\n    });\n}\n\nexport const reloadWrapper = (event, callback) => {\n    event.payload.then(data => {\n        callback();\n        return data;\n    });\n\n    return event;\n};\n\nexport const isEmpty = (check) => !check || check?.length === 0;\n\nexport const generateFilter = (status,\n    source,\n    tagsFilter,\n    filterbyName,\n    operatingSystem,\n    rhcdFilter,\n    updateMethodFilter,\n    hostGroup,\n    lastSeenFilter\n) => ([\n    !isEmpty(status) && {\n        staleFilter: Array.isArray(status) ? status : [status]\n    },\n    !isEmpty(tagsFilter) && {\n        tagFilters: Array.isArray(tagsFilter) ? tagsFilter : [tagsFilter]\n    },\n    !isEmpty(source) && {\n        registeredWithFilter: Array.isArray(source) ? source : [source]\n    },\n    !isEmpty(filterbyName) && {\n        value: 'hostname_or_id',\n        filter: Array.isArray(filterbyName) ? filterbyName[0] : filterbyName\n    },\n    (!isEmpty(status) || !isEmpty(tagsFilter) || !isEmpty(filterbyName)) && isEmpty(source) && {\n        registeredWithFilter: []\n    },\n    (!isEmpty(source) || !isEmpty(tagsFilter) || !isEmpty(filterbyName)) && isEmpty(status) && {\n        staleFilter: []\n    },\n    !isEmpty(operatingSystem) && {\n        osFilter: Array.isArray(operatingSystem) ? operatingSystem : [operatingSystem]\n    },\n    !isEmpty(rhcdFilter) && {\n        rhcdFilter: Array.isArray(rhcdFilter) ? rhcdFilter : [rhcdFilter]\n    },\n    !isEmpty(lastSeenFilter) && {\n        lastSeenFilter: Array.isArray(lastSeenFilter)\n            ? lastSeenItems.filter((item)=> item.value.mark === lastSeenFilter[0])[0].value : [lastSeenFilter]\n    },\n    !isEmpty(updateMethodFilter) && {\n        updateMethodFilter: Array.isArray(updateMethodFilter) ? updateMethodFilter : [updateMethodFilter]\n    },\n    !isEmpty(hostGroup) && {\n        hostGroupFilter: Array.isArray(hostGroup) ? hostGroup : [hostGroup]\n    }\n].filter(Boolean));\n\nexport const useWritePermissions = () => {\n    const { hasAccess } = usePermissionsWithContext(INVENTORY_WRITE_PERMISSIONS);\n\n    return hasAccess;\n};\n\nexport const allStaleFilters = ['fresh', 'stale', 'stale_warning', 'unknown'];\n","import React, { useState, useCallback, useEffect } from 'react';\nimport { useSelector, useDispatch, shallowEqual } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { toggleTagModal, fetchAllTags } from '../store/actions';\nimport { TagModal } from '@redhat-cloud-services/frontend-components/TagModal';\nimport { cellWidth } from '@patternfly/react-table';\nimport debounce from 'lodash/debounce';\nimport flatten from 'lodash/flatten';\n\nconst TagsModal = ({\n    filterTagsBy,\n    onToggleModal,\n    onApply,\n    getTags\n}) => {\n    const dispatch = useDispatch();\n    const [filterBy, setFilterBy] = useState('');\n    const [selected, setSelected] = useState([]);\n    const [statePagination, setStatePagination] = useState({\n        perPage: 10,\n        page: 1\n    });\n\n    const showTagDialog = useSelector(({ entities, entityDetails }) => (entities || entityDetails)?.showTagDialog);\n\n    const pagination = useSelector(({ entities, entityDetails }) => {\n        if (entities?.activeSystemTag || entityDetails?.entity) {\n            return statePagination;\n        }\n\n        return entities?.allTagsPagination || statePagination;\n    }, shallowEqual);\n\n    const loaded = useSelector(({ entities, entityDetails }) => entities?.tagModalLoaded || entityDetails?.tagModalLoaded);\n\n    const activeSystemTag = useSelector(({ entities, entityDetails }) => entities?.activeSystemTag || entityDetails?.entity);\n    const tags = useSelector(({ entities, entityDetails }) => {\n        const activeTags = entities?.activeSystemTag?.tags || entityDetails?.entity?.tags;\n        if (activeTags) {\n            return activeTags?.filter(\n                (tag) => Object.values(tag).some((val) => val?.includes(filterBy))\n            ).slice(statePagination?.perPage * (statePagination?.page - 1), statePagination?.perPage * statePagination?.page);\n        }\n\n        return entities?.allTags?.reduce((acc, { tags }) => ([\n            ...acc,\n            ...flatten(tags.map(({ tag }) => tag))\n        ]), []);\n    });\n\n    const tagsCount = useSelector(({ entities, entityDetails }) => {\n        const activeTags = (entities?.activeSystemTag?.tags || entityDetails?.entity?.tags)?.filter(\n            (tag) => Object.values(tag).some((val) => val?.includes(filterBy))\n        );\n        return activeTags ? activeTags.length : entities?.allTagsTotal;\n    });\n\n    useEffect(() => {\n        setFilterBy(filterTagsBy);\n    }, [filterTagsBy]);\n\n    const fetchTags = (pagination, filterBy) => {\n        if (!activeSystemTag) {\n            dispatch(fetchAllTags(filterBy, pagination, getTags));\n        } else {\n            setStatePagination(() => pagination);\n        }\n    };\n\n    const debouncedFetch = useCallback(debounce(fetchTags, 800), [activeSystemTag]);\n\n    return (\n        <TagModal\n            className=\"ins-c-inventory__tags-modal\"\n            tableProps={{\n                canSelectAll: false\n            }}\n            {...loaded && {\n                loaded,\n                pagination: {\n                    ...pagination,\n                    count: tagsCount\n                },\n                rows: tags?.map(({ key, value, namespace }) => ({\n                    id: `${namespace}/${key}=${value}`,\n                    selected: selected.find(({ id }) => id === `${namespace}/${key}=${value}`),\n                    cells: [key, value, namespace]\n                })) || []\n            }}\n            loaded={ loaded }\n            width=\"auto\"\n            isOpen={ showTagDialog }\n            toggleModal={() => {\n                setSelected([]);\n                setFilterBy('');\n                onToggleModal();\n                dispatch(toggleTagModal(false));\n            }}\n            filters={[\n                {\n                    label: 'Tags filter',\n                    placeholder: 'Filter tags',\n                    value: 'tags-filter',\n                    filterValues: {\n                        value: filterBy,\n                        onChange: (_e, value) => {\n                            debouncedFetch(pagination, value);\n                            setFilterBy(value);\n                        }\n                    }\n                }\n            ]}\n            onUpdateData={ (pagination) => fetchTags(pagination, filterBy) }\n            columns={ [\n                { title: 'Name' },\n                { title: 'Value', transforms: [cellWidth(30)] },\n                { title: 'Tag source', transforms: [cellWidth(30)] }\n            ] }\n            {...!activeSystemTag && {\n                onSelect: (selected) => setSelected(selected),\n                selected,\n                onApply: () => onApply && onApply(selected)\n            }}\n            bulkSelect={{ id: 'bulk-select-tags' }}\n            title={ activeSystemTag ?\n                `${activeSystemTag.display_name} (${tagsCount})` :\n                `All tags in inventory (${tagsCount})`\n            }\n        />\n    );\n};\n\nTagsModal.propTypes = {\n    onApply: PropTypes.func,\n    onToggleModal: PropTypes.func,\n    filterTagsBy: PropTypes.string,\n    customFilters: PropTypes.shape({\n        tags: PropTypes.oneOfType([\n            PropTypes.object,\n            PropTypes.arrayOf(PropTypes.string)\n        ])\n    }),\n    getTags: PropTypes.func\n};\n\nTagsModal.defaultProps = {\n    filterTagsBy: '',\n    onToggleModal: () => undefined\n};\n\nexport default TagsModal;\n","import { loadEntities } from '../store/inventory-actions';\n\nexport const subtractWeeks = (numOfWeeks, date = new Date()) => {\n    date.setDate(date.getDate() - numOfWeeks * 7);\n\n    return date;\n};\n\nexport const verifyCollectorStaleness = (reporterStaleness) =>{\n    const stalenessDate = new Date(reporterStaleness.stale_timestamp);\n    const currentDateTime = new Date();\n\n    const twoWeeksPeriod = subtractWeeks(2);\n    const oneWeeksPeriod = subtractWeeks(1);\n\n    if (stalenessDate > currentDateTime) {\n        return 'Fresh';\n    } else if (oneWeeksPeriod < stalenessDate && stalenessDate < currentDateTime) {\n        return 'Stale';\n    }\n    else if (twoWeeksPeriod < stalenessDate && stalenessDate < oneWeeksPeriod) {\n        return 'Stale warning';\n    } else {\n        return 'Culled';\n    }\n};\n\nexport const verifyCulledInsightsClient = (perReporterStaleness) => {\n    //TODO: get rid of !perReporterStaleness condition when dependant apps have per_reporter_staleness info\n    if (!perReporterStaleness) {\n        return false;\n    }\n    else if (perReporterStaleness.puptoo) {\n        return verifyCollectorStaleness(perReporterStaleness.puptoo) === 'Culled';\n    } else {\n        return true;\n    }\n};\n\nexport const loadSystems = (options, showTags, getEntities) => {\n    const limitedItems = options?.items?.length > options.per_page ? options?.items?.slice(\n        (options?.page - 1) * options.per_page, options?.page * options.per_page\n    ) : options?.items;\n\n    const config = {\n        ...options.hasItems && {\n            sortBy: options?.sortBy?.key,\n            orderDirection: options?.sortBy?.direction?.toUpperCase()\n        },\n        ...options,\n        filters: options?.filters || options?.activeFilters,\n        orderBy: options?.orderBy || options?.sortBy?.key,\n        orderDirection: options?.orderDirection?.toUpperCase() || options?.sortBy?.direction?.toUpperCase(),\n        ...limitedItems?.length > 0 && {\n            itemsPage: options?.page,\n            page: 1\n        }\n    };\n\n    return loadEntities(limitedItems, config, { showTags }, getEntities);\n};\n","import 'abortcontroller-polyfill/dist/polyfill-patch-fetch';\nexport const INVENTORY_API_BASE = '/api/inventory/v1';\nimport flatMap from 'lodash/flatMap';\n\nimport instance from '@redhat-cloud-services/frontend-components-utilities/interceptors';\nimport { generateFilter, mergeArraysByKey } from '@redhat-cloud-services/frontend-components-utilities/helpers';\nimport { HostsApi, TagsApi, SystemProfileApi } from '@redhat-cloud-services/host-inventory-client';\nimport { allStaleFilters, RHCD_FILTER_KEY, UPDATE_METHOD_KEY } from '../Utilities/constants';\n\nexport { instance };\nexport const hosts = new HostsApi(undefined, INVENTORY_API_BASE, instance);\nexport const tags = new TagsApi(undefined, INVENTORY_API_BASE, instance);\nexport const systemProfile = new SystemProfileApi(undefined, INVENTORY_API_BASE, instance);\n\nexport const getEntitySystemProfile = (item) => hosts.apiHostGetHostSystemProfileById([item]);\n\n/* eslint camelcase: off */\nexport const mapData = ({ facts = {}, ...oneResult }) => ({\n    ...oneResult,\n    rawFacts: facts,\n    facts: {\n        ...facts.reduce?.((acc, curr) => ({ ...acc, [curr.namespace]: curr.facts }), {}),\n        ...flatMap(facts, (oneFact => Object.values(oneFact)))\n        .map(item => typeof item !== 'string' ? ({\n            ...item,\n            // eslint-disable-next-line camelcase\n            os_release: item.os_release || item.release,\n            // eslint-disable-next-line camelcase\n            display_name: item.display_name || item.fqdn || item.id\n        }) : item)\n        .reduce(\n            (acc, curr) => ({ ...acc, ...(typeof curr !== 'string') ? curr : {} }), {}\n        )\n    }\n});\n\nexport const mapTags = (data = { results: [] }, { orderBy, orderDirection } = {}) => {\n    if (data.results.length > 0) {\n        return hosts.apiHostGetHostTags(data.results.map(({ id }) => id), data.per_page, 1, orderBy, orderDirection)\n        .then(({ results: tags }) => ({\n            ...data,\n            results: data.results.map(row => ({ ...row, tags: tags[row.id] || [] }))\n        }))\n        .catch(() => ({\n            ...data,\n            results: data.results.map(row => ({\n                ...row,\n                tags: []\n            }))\n        }));\n    }\n\n    return data;\n};\n\nexport const constructTags = (tagFilters) => {\n    return flatMap(\n        tagFilters,\n        ({ values, category: namespace }) => values.map(({ value: tagValue, tagKey }) => (\n            `${namespace ? `${namespace}/` : ''}${tagKey}${tagValue ? `=${tagValue}` : ''}`\n        ))\n    ) || '';\n};\n\nexport const calculateSystemProfile = ({ osFilter, rhcdFilter, updateMethodFilter }) => {\n    let systemProfile = {};\n    const osFilterValues = Array.isArray(osFilter) ? osFilter : Object.values(osFilter || {})\n    .flatMap((majorOsVersion) => Object.keys(majorOsVersion));\n\n    if (osFilterValues?.length > 0) {\n        systemProfile.operating_system = {\n            RHEL: {\n                version: {\n                    eq: osFilterValues\n                }\n            }\n        };\n    }\n\n    if (rhcdFilter) {\n        systemProfile[RHCD_FILTER_KEY] = rhcdFilter;\n    }\n\n    if (updateMethodFilter) {\n        systemProfile[UPDATE_METHOD_KEY] =  {\n            eq: updateMethodFilter\n        };\n    }\n\n    return generateFilter({ system_profile: systemProfile });\n};\n\nexport const filtersReducer = (acc, filter = {}) => ({\n    ...acc,\n    ...filter.value === 'hostname_or_id' && { hostnameOrId: filter.filter },\n    ...'tagFilters' in filter && { tagFilters: filter.tagFilters },\n    ...'staleFilter' in filter && { staleFilter: filter.staleFilter },\n    ...'registeredWithFilter' in filter && { registeredWithFilter: filter.registeredWithFilter },\n    ...'osFilter' in filter && { osFilter: filter.osFilter },\n    ...'rhcdFilter' in filter && { rhcdFilter: filter.rhcdFilter },\n    ...'lastSeenFilter' in filter && { lastSeenFilter: filter.lastSeenFilter },\n    ...'updateMethodFilter' in filter && { updateMethodFilter: filter.updateMethodFilter },\n    ...'groupHostFilter' in filter && { groupHostFilter: filter.groupHostFilter }\n});\n\nexport async function getEntities(items, {\n    controller,\n    hasItems,\n    filters,\n    per_page: perPage,\n    page,\n    orderBy,\n    orderDirection,\n    fields = { system_profile: ['operating_system', /* needed by inventory groups */ 'system_update_method'] },\n    ...options\n}, showTags) {\n\n    if (hasItems && items?.length > 0) {\n        let data = await hosts.apiHostGetHostById(\n            items,\n            undefined,\n            perPage,\n            page,\n            orderBy,\n            orderDirection,\n            undefined,\n            undefined,\n            { cancelToken: controller && controller.token }\n        );\n\n        if (fields && Object.keys(fields).length) {\n            try {\n                const result = await hosts.apiHostGetHostSystemProfileById(\n                    items,\n                    perPage,\n                    undefined,\n                    undefined,\n                    undefined,\n                    undefined,\n                    undefined,\n                    {\n                        cancelToken: controller && controller.token,\n                        query: generateFilter(fields, 'fields')\n                    }\n                );\n\n                data = {\n                    ...data,\n                    results: mergeArraysByKey([\n                        data?.results,\n                        result?.results || []\n                    ], 'id')\n                };\n            } catch (e) {\n                console.error(e); // eslint-disable-line\n            }\n        }\n\n        data = showTags ? await mapTags(data) : data;\n\n        data = {\n            ...data,\n            filters,\n            results: data.results.map(result => mapData({\n                ...result,\n                display_name: result.display_name || result.fqdn || result.id\n            }))\n        };\n\n        return data;\n    } else if (!hasItems) {\n        return hosts.apiHostGetHostList(\n            undefined,\n            undefined,\n            filters.hostnameOrId,\n            undefined,\n            undefined,\n            undefined,\n            undefined,\n            perPage,\n            page,\n            orderBy,\n            orderDirection,\n            filters.staleFilter,\n            [\n                ...constructTags(filters?.tagFilters),\n                ...options?.globalFilter?.tags || []\n            ],\n            filters?.registeredWithFilter,\n            undefined,\n            undefined,\n            {\n                cancelToken: controller && controller.token,\n                query: {\n                    ...(options?.globalFilter?.filter && generateFilter(options.globalFilter.filter)),\n                    ...(options.filter && Object.keys(options.filter).length && generateFilter(options.filter)),\n                    ...(calculateSystemProfile(filters)),\n                    ...(fields && Object.keys(fields).length && generateFilter(fields, 'fields')),\n                    ...filters?.lastSeenFilter?.updatedStart && { updated_start: filters.lastSeenFilter.updatedStart },\n                    ...filters?.lastSeenFilter?.updatedEnd && { updated_end: filters.lastSeenFilter.updatedEnd }\n                }\n            }\n        )\n        .then((data) => showTags ? mapTags(data, { orderBy, orderDirection }) : data)\n        .then(({ results = [], ...data } = {}) => ({\n            ...data,\n            filters,\n            results: results.map(result => mapData({\n                ...result,\n                display_name: result.display_name || result.fqdn || result.id\n            }))\n        }));\n    }\n\n    return {\n        page,\n        per_page: perPage,\n        results: []\n    };\n}\n\nexport function getTags(systemId, search, { pagination } = { pagination: {} }) {\n    return hosts.apiHostGetHostTags(\n        systemId,\n        pagination.perPage || 10,\n        pagination.page || 1,\n        undefined,\n        undefined,\n        search\n    );\n}\n\nexport function getAllTags(search, pagination = {}) {\n    return tags.apiTagGetTags(\n        [],\n        'tag',\n        'ASC',\n        pagination.perPage || 10,\n        pagination.page || 1,\n        //TODO: ask the backend to return all tags by default.\n        allStaleFilters,\n        search,\n        undefined,\n        undefined,\n        undefined,\n        undefined,\n        undefined,\n        undefined,\n        undefined,\n        undefined,\n        undefined\n    );\n}\n\nexport function getOperatingSystems(params = []) {\n    return systemProfile.apiSystemProfileGetOperatingSystem(...params);\n}\n","import instance from '@redhat-cloud-services/frontend-components-utilities/interceptors';\nexport const systemIssuesInstance = instance;\n\nexport const cves = async (systemId) => {\n    try {\n        const [low, moderate, important, critical] = await Promise.all([2, 4, 5, 7].map((impact) => (\n            instance.get(\n                `/api/vulnerability//v1/systems/${systemId}/cves?page=1&page_size=1&impact=${impact}`\n            )\n        )));\n        return { low, moderate, important, critical };\n    } catch (_e) {\n        return {};\n    }\n};\n\nexport const patch = async (systemId) => {\n    try {\n        return await instance.get(`/api/patch/v1/systems/${systemId}`);\n    } catch (_e) {\n        return {};\n    }\n};\n\nexport const advisor = async (systemId) => {\n    try {\n        return await instance.get(`/api/insights/v1/system/${systemId}/reports/`);\n    } catch (_e) {\n        return {};\n    }\n};\n\nexport const compliance = async (systemId) => {\n    const query = `query System($systemId: String!) {\n        system(id: $systemId) {\n            id\n            name\n            profiles {\n                id\n                name\n                refId\n                compliant\n                rulesFailed\n                rulesPassed\n                lastScanned\n                score\n                __typename\n            }\n            __typename\n        }\n    }`;\n    try {\n        return await instance.post('/api/compliance/graphql', {\n            operationName: 'System',\n            query,\n            variables: {\n                systemId\n            }\n        });\n    } catch (_e) {\n        return {};\n    }\n};\n","/* eslint-disable camelcase */\nimport { instance } from '@redhat-cloud-services/frontend-components-utilities/interceptors/interceptors';\nimport { INVENTORY_API_BASE } from '../../../api';\nimport { TABLE_DEFAULT_PAGINATION } from '../../../constants';\nimport PropTypes from 'prop-types';\nimport union from 'lodash/union';\n\nexport const getGroups = (search = {}, pagination = { page: 1, per_page: TABLE_DEFAULT_PAGINATION }) => {\n    const parameters = new URLSearchParams({\n        ...search,\n        ...pagination\n    }).toString();\n\n    return instance.get(`${INVENTORY_API_BASE}/groups?${parameters}` /* , { headers: { Prefer: 'code=404' } } */);\n};\n\nexport const createGroup = (payload) => {\n    return instance.post(`${INVENTORY_API_BASE}/groups`, {\n        name: payload.name,\n        // eslint-disable-next-line camelcase\n        host_ids: []\n    });\n};\n\nexport const validateGroupName = (name) => {\n    return instance.get(`${INVENTORY_API_BASE}/groups`)\n    .then((resp) => resp?.results.some((group) => group.name === name));\n};\n\nexport const getGroupDetail = (groupId) => {\n    return instance.get(`${INVENTORY_API_BASE}/groups/${groupId}`);\n};\n\nexport const updateGroupById = (id, payload) => {\n    return instance.patch(`${INVENTORY_API_BASE}/groups/${id}`, payload);\n};\n\nexport const deleteGroupsById = (ids = []) => {\n    return instance.delete(`${INVENTORY_API_BASE}/groups/${ids.join(',')}`);\n};\n\nexport const addHostsToGroupById = (id, hostIds) => {\n    // the current hosts must be fetched before merging with the new ones\n    return getGroupDetail(id).then((response) =>\n        updateGroupById(id, {\n            // eslint-disable-next-line camelcase\n            host_ids: union(response.results[0].host_ids, hostIds)\n        })\n    );\n};\n\nexport const addHostToGroup = (groupId, newHostId) => {\n    return instance.post(`${INVENTORY_API_BASE}/groups/${groupId}/hosts/${newHostId}`, {\n        host_ids: newHostId\n    });\n};\n\ngetGroups.propTypes = {\n    search: PropTypes.shape({\n        name: PropTypes.string\n    }),\n    pagination: PropTypes.shape({\n        per_page: PropTypes.number,\n        page: PropTypes.number\n    })\n};\n\ngetGroupDetail.propTypes = {\n    groupId: PropTypes.string.isRequired\n};\n","import PropTypes from 'prop-types';\nimport { RHCD_FILTER_KEY, UPDATE_METHOD_KEY, HOST_GROUP_CHIP } from './Utilities/constants';\n\nexport const tagsMapper = (acc, curr) => {\n    let [namespace, keyValue] = curr.split('/');\n    if (!keyValue) {\n        keyValue = namespace;\n        namespace = null;\n    }\n\n    const [key, value = null] = keyValue.split('=');\n    const currTagKey = acc.findIndex(({ category }) => category === namespace);\n    const currTag = acc[currTagKey] || {\n        category: namespace,\n        key: namespace,\n        type: 'tags',\n        values: []\n    };\n    currTag.values.push({\n        name: `${key}${value ? `=${value}` : ''}`,\n        key: `${key}${value ? `=${value}` : ''}`,\n        tagKey: key,\n        value,\n        group: {\n            label: namespace,\n            value: namespace,\n            type: 'checkbox'\n        }\n    });\n    if (!acc[currTagKey]) {\n        acc.push(currTag);\n    }\n\n    return acc;\n};\n\nexport const prepareRows = (rows = [], pagination = {}) => (\n    rows\n    .slice((pagination.page - 1) * pagination.perPage, pagination.page * pagination.perPage)\n);\n\nexport const isDate = (date) => {\n    return !(isNaN(date) && isNaN(Date.parse(date)));\n};\n\nexport const filterRows = (rows = [], activeFilters = {}) => (\n    rows\n    .filter(row => (\n        Object.values(activeFilters).length === 0 ||\n        Object.values(activeFilters)\n        .every(\n            filter => {\n                const rowValue = row[filter.key] && (row[filter.key].sortValue || row[filter.key]);\n                return rowValue && (\n                    Array.isArray(filter.value) ?\n                        filter.value.includes(rowValue) :\n                        rowValue.toLocaleLowerCase().indexOf(filter.value.toLocaleLowerCase()) !== -1\n                );\n            }\n        )\n    ))\n);\n\nexport const generateFilters = (cells = [], filters = [], activeFilters = {}, onChange = () => undefined) => (\n    filters.map((filter, key) => {\n        const activeKey = filter.index || key;\n        const activeLabel = cells[activeKey] && (cells[activeKey].title || cells[activeKey]);\n        return ({\n            value: String(activeKey),\n            label: activeLabel,\n            type: filter.type || 'text',\n            filterValues: {\n                id: filter.id || `${activeLabel}-${activeKey}`,\n                onChange: (_e, newFilter) => onChange(activeKey, newFilter, activeLabel),\n                value: activeFilters[activeKey] && activeFilters[activeKey].value,\n                ...filter.options && { items: filter.options }\n            }\n        });\n    })\n);\n\nexport const onDeleteFilter = (deleted = {}, deleteAll = false, activeFilters = {}) => {\n    if (deleteAll) {\n        return {};\n    } else {\n        const { [deleted.key]: workingItem, ...filtersRest } = activeFilters;\n        const newValue = workingItem && Array.isArray(workingItem.value) &&\n            workingItem.value.filter(item => !deleted.chips.find(({ name }) => name === item));\n        const newFilter = workingItem && Array.isArray(workingItem.value) && newValue && newValue.length > 0 ? {\n            [deleted.key]: {\n                ...workingItem,\n                value: newValue\n            }\n        } : {};\n        return {\n            ...filtersRest,\n            ...newFilter\n        };\n    }\n};\n\nexport const extraShape = PropTypes.shape({\n    title: PropTypes.node,\n    value: PropTypes.node,\n    singular: PropTypes.node,\n    plural: PropTypes.node,\n    onClick: PropTypes.func\n});\n\nexport const INVENTORY_WRITE_PERMISSIONS = [\n    'inventory:*:*',\n    'inventory:hosts:write',\n    'inventory:*:write'\n];\n\nexport const getSearchParams = () => {\n    const searchParams = new URLSearchParams(location.search);\n    const status = searchParams.getAll('status');\n    const source = searchParams.getAll('source');\n    const filterbyName = searchParams.getAll('hostname_or_id');\n    const tagsFilter = searchParams.getAll('tags')?.[0]?.split?.(',').reduce?.(tagsMapper, []);\n    const operatingSystem = searchParams.getAll('operating_system');\n    const rhcdFilter = searchParams.getAll(RHCD_FILTER_KEY);\n    const updateMethodFilter = searchParams.getAll(UPDATE_METHOD_KEY);\n    const groupHostsFilter = searchParams.getAll(HOST_GROUP_CHIP);\n    const page = searchParams.getAll('page');\n    const perPage = searchParams.getAll('per_page');\n    const lastSeenFilter = searchParams.getAll('last_seen');\n    return { status, source, tagsFilter, filterbyName, operatingSystem, rhcdFilter, updateMethodFilter, lastSeenFilter,\n        page, perPage, groupHostsFilter };\n};\n\nexport const TABLE_DEFAULT_PAGINATION = 50; // from UX table audit\n","import keyBy from 'lodash/keyBy';\n\nconst makeActions = (actions) => {\n    return actions?.reduce?.((acc, curr) => ({\n        ...acc,\n        [curr]: curr,\n        [`${curr}_PENDING`]: `${curr}_PENDING`,\n        [`${curr}_FULFILLED`]: `${curr}_FULFILLED`,\n        [`${curr}_REJECTED`]: `${curr}_REJECTED`\n    }), {});\n};\n\nconst actions = [\n    'ALERT_ADD',\n    'ALERT_DISMISS',\n    'REMOVE_ENTITY'\n];\n\nexport const asyncActions = [\n    'GET_ENTITIES',\n    'GET_ENTITY',\n    'UPDATE_DISPLAY_NAME',\n    'LOAD_WRITE_PERMISSIONS',\n    'LOAD_SYSTEM_PROFILE',\n    'SET_ANSIBLE_HOST'\n];\n\nexport const asyncInventory = [\n    'LOAD_ENTITIES',\n    'LOAD_ENTITY',\n    'REMOVE_ENTITY',\n    'LOAD_SYSTEM_PROFILE',\n    'SET_DISPLAY_NAME',\n    'SET_ANSIBLE_HOST',\n    'LOAD_TAGS',\n    'ALL_TAGS',\n    'OPERATING_SYSTEMS',\n    'GROUPS',\n    'GROUP_DETAIL'\n];\n\nexport const systemIssues = [\n    'LOAD_ADVISOR_RECOMMENDATIONS',\n    'LOAD_APPLICABLE_CVES',\n    'LOAD_APPLICABLE_ADVISORIES',\n    'LOAD_COMPLIANCE_POLICIES'\n];\n\nexport const ACTION_TYPES = { ...keyBy(actions, k => k), ...makeActions(asyncActions), ...makeActions(asyncInventory) };\nexport const INVENTORY_ACTION_TYPES = makeActions(asyncInventory);\nexport const SYSTEM_ISSUE_TYPES = makeActions(systemIssues);\n\nexport const CLEAR_NOTIFICATIONS = '@@INSIGHTS-CORE/NOTIFICATIONS/CLEAR_NOTIFICATIONS';\nexport const SELECT_ENTITY = 'SELECT_ENTITY';\nexport const SET_INVENTORY_FILTER = 'SET_INVENTORY_FILTER';\nexport const SET_PAGINATION = 'SET_PAGINATION';\nexport const SET_DISPLAY_NAME = 'SET_DISPLAY_NAME';\nexport const SET_ANSIBLE_HOST = 'SET_ANSIBLE_HOST';\n\nexport const UPDATE_ENTITIES = 'UPDATE_ENTITIES';\nexport const CHANGE_SORT = 'CHANGE_SORT';\nexport const FILTER_ENTITIES = 'FILTER_ENTITIES';\nexport const SHOW_ENTITIES = 'SHOW_ENTITIES';\nexport const FILTER_SELECT = 'FILTER_SELECT';\nexport const ENTITIES_LOADING = 'ENTITIES_LOADING';\nexport const CLEAR_FILTERS = 'CLEAR_FILTERS';\nexport const TOGGLE_TAG_MODAL = 'TOGGLE_TAG_MODAL';\nexport const CONFIG_CHANGED = 'CONFIG_CHANGED';\nexport const TOGGLE_DRAWER = 'TOGGLE_INVENTORY_DRAWER';\nexport const CLEAR_ENTITIES = 'CLEAR_ENTITIES';\n","import { SYSTEM_ISSUE_TYPES } from './action-types';\nimport {\n    cves,\n    compliance,\n    advisor,\n    patch\n} from '../api';\n\nexport const getAdvisorData = (systemId) => ({\n    type: SYSTEM_ISSUE_TYPES.LOAD_ADVISOR_RECOMMENDATIONS,\n    payload: advisor(systemId)\n});\n\nexport const getVulnData = (systemId) => ({\n    type: SYSTEM_ISSUE_TYPES.LOAD_APPLICABLE_CVES,\n    payload: cves(systemId)\n});\n\nexport const getPatchData = (systemId) => ({\n    type: SYSTEM_ISSUE_TYPES.LOAD_APPLICABLE_ADVISORIES,\n    payload: patch(systemId)\n});\n\nexport const getComplianceData = (systemId) => ({\n    type: SYSTEM_ISSUE_TYPES.LOAD_COMPLIANCE_POLICIES,\n    payload: compliance(systemId)\n});\n","import { ACTION_TYPES, CLEAR_NOTIFICATIONS, SET_INVENTORY_FILTER, SET_PAGINATION,\n    CLEAR_ENTITIES } from './action-types';\nimport { hosts, getEntitySystemProfile } from '../api';\nexport * from './system-issues-actions';\nexport * from './inventory-actions';\n\nexport const deleteEntity = (systems, displayName) => ({\n    type: ACTION_TYPES.REMOVE_ENTITY,\n    payload: hosts.apiHostDeleteById(systems),\n    meta: {\n        notifications: {\n            fulfilled: {\n                variant: 'success',\n                title: 'Delete operation finished',\n                description: `${displayName} has been successfully removed.`,\n                dismissable: true\n            }\n        },\n        systems\n    }\n});\n\nexport const setFilter = (filtersList) => ({\n    type: SET_INVENTORY_FILTER,\n    payload: {\n        filtersList\n    }\n});\n\nexport const clearNotifications = () => {\n    return ({\n        type: CLEAR_NOTIFICATIONS\n    });\n};\n\nexport const editDisplayName = (id, value, origValue) => ({\n    type: ACTION_TYPES.UPDATE_DISPLAY_NAME,\n    payload: hosts.apiHostPatchById([id], { display_name: value }), // eslint-disable-line camelcase\n    meta: {\n        id,\n        value,\n        origValue,\n        notifications: {\n            fulfilled: {\n                variant: 'success',\n                title: `Display name for entity with ID ${id} has been changed to ${value}`,\n                dismissable: true\n            }\n        }\n    }\n});\n\nexport const setPagination = (page, perPage) => ({\n    type: SET_PAGINATION,\n    payload: {\n        page, perPage\n    }\n});\n\nexport const systemProfile = (itemId) => ({\n    type: ACTION_TYPES.LOAD_SYSTEM_PROFILE,\n    payload: getEntitySystemProfile(itemId, {})\n});\n\nexport const editAnsibleHost = (id, value, origValue) => ({\n    type: ACTION_TYPES.SET_ANSIBLE_HOST,\n    payload: hosts.apiHostPatchById([id], { ansible_host: value }), // eslint-disable-line camelcase\n    meta: {\n        id,\n        value,\n        origValue,\n        notifications: {\n            fulfilled: {\n                variant: 'success',\n                title: 'Ansible hostname has been updated',\n                dismissable: true\n            }\n        }\n    }\n});\n\nexport const clearEntitiesAction = () => ({\n    type: CLEAR_ENTITIES,\n    payload: []\n});\n","import {\n    ACTION_TYPES,\n    SELECT_ENTITY,\n    CHANGE_SORT,\n    FILTER_ENTITIES,\n    FILTER_SELECT,\n    UPDATE_ENTITIES,\n    ENTITIES_LOADING,\n    CLEAR_FILTERS,\n    TOGGLE_TAG_MODAL,\n    CONFIG_CHANGED,\n    TOGGLE_DRAWER\n} from './action-types';\nimport {\n    getEntities as defaultGetEntities,\n    getEntitySystemProfile,\n    hosts,\n    getAllTags as defaultGetAllTags,\n    getTags,\n    filtersReducer,\n    getOperatingSystems\n} from '../api';\nimport { getGroupDetail, getGroups } from '../components/InventoryGroups/utils/api';\n\nexport const loadEntities = (items = [], { filters, ...config }, { showTags } = {}, getEntities = defaultGetEntities) => {\n    const itemIds = items.reduce((acc, curr) => (\n        [\n            ...acc,\n            curr && typeof curr === 'string' ? curr : curr.id\n        ]\n    ), []).filter(Boolean);\n\n    const isFilterDisabled = (name) => config.hideFilters?.[name] ||\n    (config.hideFilters?.all && config.hideFilters?.[name] !== false);\n\n    const updatedFilters = filters ? filters.reduce(filtersReducer, {\n        ...filters.length === 0 && { registeredWithFilter: [] },\n        ...(isFilterDisabled('stale') && { staleFilter: undefined }),\n        ...(isFilterDisabled('registeredWith') && { registeredWithFilter: undefined }),\n        ...(isFilterDisabled('operating_system') && { osFilter: undefined }),\n        ...(isFilterDisabled('host_group')) && { groupHostFilter: undefined }\n    }) : {\n        ...(isFilterDisabled('stale') && { staleFilter: undefined }),\n        ...(isFilterDisabled('last_seen') && { lastSeenFilter: undefined }),\n        ...(isFilterDisabled('registeredWith') && { registeredWithFilter: undefined }),\n        ...(isFilterDisabled('operating_system') && { osFilter: undefined }),\n        ...(isFilterDisabled('host_group')) && { groupHostFilter: undefined }\n    };\n\n    const orderBy = config.orderBy || 'updated';\n    const orderDirection = config.orderDirection || 'DESC';\n\n    const lastDateRequest = Date.now();\n\n    return {\n        type: ACTION_TYPES.LOAD_ENTITIES,\n        payload: getEntities(itemIds, {\n            filters: updatedFilters,\n            ...config,\n            orderBy,\n            orderDirection\n        }, showTags, defaultGetEntities).then(({ results, ...data }) => ({\n            ...data,\n            filters,\n            sortBy: { key: orderBy, direction: orderDirection },\n            results: items.length > 0 ? items.map((item) => ({\n                ...item.id ? item : { id: item },\n                ...results.find(({ id }) => id === item || id === item.id) || {}\n            })) : results,\n            page: config.page || (data?.page),\n            // eslint-disable-next-line camelcase\n            per_page: config.per_page || (data?.per_page),\n            hideFilters: config.hideFilters\n        })),\n        meta: {\n            showTags,\n            lastDateRequest\n        }\n    };\n};\n\nexport const updateEntities = (items = []) => ({\n    type: UPDATE_ENTITIES,\n    payload: {\n        results: items\n    }\n});\n\nexport const filterSelect = (selectedItem) => ({\n    type: FILTER_SELECT,\n    payload: selectedItem\n});\n\nexport const loadEntity = (id, config, { showTags }) => ({\n    type: ACTION_TYPES.LOAD_ENTITY,\n    payload: defaultGetEntities(id, config, showTags),\n    meta: {\n        showTags\n    }\n});\n\nexport const selectEntity = (id, selected) => ({\n    type: SELECT_ENTITY,\n    payload: { id, selected }\n});\n\nexport const setSort = (data) => ({\n    type: CHANGE_SORT,\n    payload: data\n});\n\nexport const filterEntities = (key, filterString) => ({\n    type: FILTER_ENTITIES,\n    payload: { key, filterString }\n});\n\nexport const entitiesLoading = (isLoading = true) => ({\n    type: ENTITIES_LOADING,\n    payload: { isLoading }\n});\n\nexport const clearFilters = () => ({\n    type: CLEAR_FILTERS\n});\n\nexport const systemProfile = (itemId) => ({\n    type: ACTION_TYPES.LOAD_SYSTEM_PROFILE,\n    payload: getEntitySystemProfile(itemId, {})\n});\n\nexport const editDisplayName = (id, value) => ({\n    type: ACTION_TYPES.SET_DISPLAY_NAME,\n    payload: hosts.apiHostPatchHost(id, { display_name: value }), // eslint-disable-line camelcase\n    meta: {\n        notifications: {\n            fulfilled: {\n                variant: 'success',\n                title: 'Display name has been updated',\n                dismissable: true\n            }\n        }\n    }\n});\n\nexport const editAnsibleHost = (id, value) => ({\n    type: ACTION_TYPES.SET_ANSIBLE_HOST,\n    payload: hosts.apiHostPatchHost(id, { ansible_host: value }), // eslint-disable-line camelcase\n    meta: {\n        notifications: {\n            fulfilled: {\n                variant: 'success',\n                title: 'Ansible hostname has been updated',\n                dismissable: true\n            }\n        }\n    }\n});\n\nexport const loadTags = (systemId, search, options, count) => ({\n    type: ACTION_TYPES.LOAD_TAGS,\n    payload: getTags(systemId, search, options),\n    meta: {\n        tagsCount: count,\n        systemId\n    }\n});\n\nexport const toggleTagModal = (isOpen) => ({\n    type: TOGGLE_TAG_MODAL,\n    payload: { isOpen }\n});\n\nexport const fetchAllTags = (search, pagination, getTags = defaultGetAllTags) => ({\n    type: ACTION_TYPES.ALL_TAGS,\n    payload: getTags(search, pagination),\n    meta: { lastDateRequestTags: Date.now() }\n});\n\nexport const fetchGroups = (search, pagination) => ({\n    type: ACTION_TYPES.GROUPS,\n    payload: getGroups(search, pagination)\n});\n\nexport const fetchGroupDetail = (groupId) => ({\n    type: ACTION_TYPES.GROUP_DETAIL,\n    payload: getGroupDetail(groupId)\n});\n\nexport const fetchOperatingSystems = (params = []) => ({\n    type: ACTION_TYPES.OPERATING_SYSTEMS,\n    payload: getOperatingSystems(params)\n});\n\nexport const deleteEntity = (systems, displayName) => ({\n    type: ACTION_TYPES.REMOVE_ENTITY,\n    payload: hosts.apiHostDeleteById(systems),\n    meta: {\n        notifications: {\n            fulfilled: {\n                variant: 'success',\n                title: 'Delete operation finished',\n                description: `${displayName} has been successfully removed.`,\n                dismissable: true\n            }\n        },\n        systems\n    }\n});\n\nexport const configChanged = (config) => ({\n    type: CONFIG_CHANGED,\n    payload: config\n});\n\nexport const toggleDrawer = (isOpened) => ({\n    type: TOGGLE_DRAWER,\n    payload: { isOpened }\n});\n"],"names":["DeleteModal","systemToRemove","handleModalToggle","isModalOpen","currentSytems","onConfirm","systemLabel","Array","isArray","length","display_name","variant","title","className","ouiaId","isOpen","onClose","appendTo","document","getElementsByClassName","body","hasGutter","size","isFilled","location","host","onClick","ActiveSystemProp","PropTypes","id","displayName","propTypes","defaultProps","TagWithDialog","count","loadTags","systemId","e","stopPropagation","onTagClick","connect","dispatch","toggleTagModal","undefined","RenderWrapper","Component","cmp","isRbacEnabled","inventoryRef","store","props","hasAccess","usePermissionsWithContext","ref","customRender","TEXT_FILTER","TEXTUAL_CHIP","TAG_CHIP","STALE_CHIP","REGISTERED_CHIP","OS_CHIP","RHCD_FILTER_KEY","UPDATE_METHOD_KEY","LAST_SEEN_CHIP","HOST_GROUP_CHIP","subtractDate","days","date","Date","setDate","getDate","toISOString","staleness","label","value","currentDate","lastSeenItems","updatedStart","updatedEnd","mark","registered","idName","idValue","InventoryContext","createContext","rhcdOptions","updateMethodOptions","filterToGroup","filter","valuesKey","reduce","accGroup","group","key","acc","curr","isSelected","item","meta","tag","tagKey","arrayToSelection","selected","cells","namespace","reduceFilters","filters","oneFilter","textFilter","tagFilters","foundKey","find","Object","keys","includes","reloadWrapper","event","callback","payload","then","data","isEmpty","check","generateFilter","status","source","tagsFilter","filterbyName","operatingSystem","rhcdFilter","updateMethodFilter","hostGroup","lastSeenFilter","staleFilter","registeredWithFilter","osFilter","hostGroupFilter","Boolean","useWritePermissions","INVENTORY_WRITE_PERMISSIONS","allStaleFilters","TagsModal","filterTagsBy","onToggleModal","onApply","getTags","useDispatch","useState","filterBy","setFilterBy","setSelected","perPage","page","statePagination","setStatePagination","showTagDialog","useSelector","entities","entityDetails","pagination","activeSystemTag","entity","allTagsPagination","shallowEqual","loaded","tagModalLoaded","tags","activeTags","values","some","val","slice","allTags","flatten","map","tagsCount","allTagsTotal","useEffect","fetchTags","fetchAllTags","debouncedFetch","useCallback","debounce","TagModal","tableProps","canSelectAll","rows","width","toggleModal","placeholder","filterValues","onChange","_e","onUpdateData","columns","transforms","cellWidth","onSelect","bulkSelect","customFilters","subtractWeeks","numOfWeeks","verifyCollectorStaleness","reporterStaleness","stalenessDate","stale_timestamp","currentDateTime","twoWeeksPeriod","oneWeeksPeriod","verifyCulledInsightsClient","perReporterStaleness","puptoo","loadSystems","options","showTags","getEntities","limitedItems","items","per_page","config","hasItems","sortBy","orderDirection","direction","toUpperCase","activeFilters","orderBy","itemsPage","loadEntities","INVENTORY_API_BASE","hosts","HostsApi","instance","TagsApi","systemProfile","SystemProfileApi","getEntitySystemProfile","apiHostGetHostSystemProfileById","mapData","facts","rawFacts","flatMap","oneFact","os_release","release","fqdn","mapTags","results","apiHostGetHostTags","row","catch","constructTags","category","tagValue","calculateSystemProfile","osFilterValues","majorOsVersion","operating_system","RHEL","version","eq","system_profile","filtersReducer","hostnameOrId","groupHostFilter","controller","fields","apiHostGetHostById","cancelToken","token","query","result","mergeArraysByKey","console","error","apiHostGetHostList","globalFilter","updated_start","updated_end","search","getAllTags","apiTagGetTags","getOperatingSystems","params","apiSystemProfileGetOperatingSystem","systemIssuesInstance","cves","Promise","all","impact","low","moderate","important","critical","patch","advisor","compliance","operationName","variables","getGroups","TABLE_DEFAULT_PAGINATION","parameters","URLSearchParams","toString","createGroup","name","host_ids","validateGroupName","resp","getGroupDetail","groupId","updateGroupById","deleteGroupsById","ids","join","addHostsToGroupById","hostIds","response","union","addHostToGroup","newHostId","tagsMapper","split","keyValue","currTagKey","findIndex","currTag","type","push","prepareRows","isDate","isNaN","parse","filterRows","every","rowValue","sortValue","toLocaleLowerCase","indexOf","generateFilters","activeKey","index","activeLabel","String","newFilter","onDeleteFilter","deleted","deleteAll","workingItem","filtersRest","newValue","chips","extraShape","singular","plural","getSearchParams","searchParams","getAll","groupHostsFilter","makeActions","actions","asyncActions","asyncInventory","systemIssues","ACTION_TYPES","keyBy","k","INVENTORY_ACTION_TYPES","SYSTEM_ISSUE_TYPES","CLEAR_NOTIFICATIONS","SELECT_ENTITY","SET_INVENTORY_FILTER","SET_PAGINATION","SET_DISPLAY_NAME","SET_ANSIBLE_HOST","UPDATE_ENTITIES","CHANGE_SORT","FILTER_ENTITIES","SHOW_ENTITIES","FILTER_SELECT","ENTITIES_LOADING","CLEAR_FILTERS","TOGGLE_TAG_MODAL","CONFIG_CHANGED","TOGGLE_DRAWER","CLEAR_ENTITIES","getAdvisorData","getVulnData","getPatchData","getComplianceData","deleteEntity","systems","notifications","fulfilled","description","dismissable","setFilter","filtersList","clearNotifications","editDisplayName","origValue","setPagination","itemId","editAnsibleHost","ansible_host","clearEntitiesAction","defaultGetEntities","itemIds","isFilterDisabled","hideFilters","updatedFilters","lastDateRequest","now","updateEntities","filterSelect","selectedItem","loadEntity","selectEntity","setSort","filterEntities","filterString","entitiesLoading","isLoading","clearFilters","defaultGetAllTags","lastDateRequestTags","fetchGroups","fetchGroupDetail","fetchOperatingSystems","configChanged","toggleDrawer","isOpened"],"sourceRoot":""}