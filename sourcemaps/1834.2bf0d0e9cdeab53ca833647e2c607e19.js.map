{"version":3,"file":"js/1834.d3c203fdcbb60915c3f0.js","mappings":"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","sources":["webpack:///./src/Utilities/DeleteModal.js","webpack:///./src/Utilities/TagWithDialog.js","webpack:///./src/Utilities/TagsModal.js","webpack:///./src/Utilities/Wrapper.js","webpack:///./src/Utilities/sharedFunctions.js","webpack:///./src/api/api.js","webpack:///./src/api/systemIssues.js","webpack:///./src/store/action-types.js","webpack:///./src/store/system-issues-actions.js","webpack:///./src/store/actions.js","webpack:///./src/store/inventory-actions.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    ClipboardCopy,\n    Modal,\n    Split,\n    SplitItem,\n    Stack,\n    StackItem,\n    Level,\n    LevelItem,\n    Button\n} from '@patternfly/react-core';\n\nimport ExclamationTriangleIcon from  '@patternfly/react-icons/dist/js/icons/exclamation-triangle-icon';\n\nconst DeleteModal = ({ handleModalToggle, isModalOpen, currentSytems, onConfirm }) => {\n    let systemToRemove;\n    let systemLabel = 'system';\n    if (Array.isArray(currentSytems)) {\n        systemToRemove = currentSytems.length === 1 ? currentSytems[0].display_name : `${currentSytems.length} systems`;\n        systemLabel = currentSytems.length === 1 ? systemLabel : 'systems';\n    } else {\n        systemToRemove = currentSytems.display_name;\n    }\n\n    return <Modal\n        variant=\"small\"\n        title=\"Remove from inventory\"\n        className=\"ins-c-inventory__table--remove\"\n        ouiaId=\"inventory-delete-modal\"\n        isOpen={isModalOpen}\n        onClose={() => handleModalToggle(false)}\n        appendTo={document.getElementsByClassName('inventory')[0] || document.body}\n    >\n        <Split hasGutter>\n            <SplitItem><ExclamationTriangleIcon size=\"xl\" className=\"ins-m-alert\" /></SplitItem>\n            <SplitItem isFilled>\n                <Stack hasGutter>\n                    <StackItem>\n                        {systemToRemove} will be removed from\n                                    all {location.host} applications and services. You need to re-register\n                        the {systemLabel} to add it back to your inventory.\n                    </StackItem>\n                    <StackItem>\n                        To disable the daily upload for this {systemLabel}, use the following command:\n                    </StackItem>\n                    <StackItem>\n                        <ClipboardCopy>insights-client --unregister</ClipboardCopy>\n                    </StackItem>\n                </Stack>\n            </SplitItem>\n        </Split>\n        <Level hasGutter>\n            <LevelItem>\n                <Button\n                    variant=\"danger\"\n                    ouiaId=\"confirm-inventory-delete\"\n                    onClick={onConfirm}\n                >\n                    Remove\n                </Button>\n                <Button\n                    variant=\"link\"\n                    ouiaId=\"cancel-inventory-delete\"\n                    onClick={() => handleModalToggle(false)}\n                >\n                    Cancel\n                </Button>\n            </LevelItem>\n        </Level>\n    </Modal>;\n};\n\nconst ActiveSystemProp = PropTypes.shape({\n    id: PropTypes.string,\n    displayName: PropTypes.string\n});\n\nDeleteModal.propTypes = {\n    isModalOpen: PropTypes.bool,\n    currentSytems: PropTypes.oneOfType([ActiveSystemProp, PropTypes.arrayOf(ActiveSystemProp)]),\n    handleModalToggle: PropTypes.func,\n    onConfirm: PropTypes.func\n};\n\nDeleteModal.defaultProps = {\n    isModalOpen: false,\n    currentSytems: {},\n    handleModalToggle: () => undefined,\n    onConfirm: () => undefined\n};\n\nexport default DeleteModal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { TagCount } from '@redhat-cloud-services/frontend-components/TagCount';\nimport { loadTags, toggleTagModal } from '../store/actions';\n\nconst TagWithDialog = ({ count, loadTags, systemId }) => (\n    <span\n        onClick={(e) => e.stopPropagation()}\n        className=\"ins-c-inventory__list-tags\"\n        data-ouia-component-id={`${systemId}-tag-button`}\n    >\n        <TagCount count={count} onTagClick={ () => loadTags(systemId, count) } />\n    </span>\n);\n\nTagWithDialog.propTypes = {\n    count: PropTypes.number,\n    loadTags: PropTypes.func,\n    systemId: PropTypes.string\n};\n\nconst dispatchToProps = (dispatch) => ({\n    loadTags: (systemId, count) => {\n        if (systemId) {\n            dispatch(toggleTagModal(true));\n            dispatch(loadTags(systemId, undefined, undefined, count));\n        }\n    }\n});\n\nexport default connect(() => ({}), dispatchToProps)(TagWithDialog);\n","import React, { useState, useCallback, useEffect } from 'react';\nimport { useSelector, useDispatch, shallowEqual } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { toggleTagModal, fetchAllTags } from '../store/actions';\nimport { TagModal } from '@redhat-cloud-services/frontend-components/TagModal';\nimport { cellWidth } from '@patternfly/react-table';\nimport debounce from 'lodash/debounce';\nimport flatten from 'lodash/flatten';\n\nconst TagsModal = ({\n    filterTagsBy,\n    onToggleModal,\n    onApply,\n    getTags\n}) => {\n    const dispatch = useDispatch();\n    const [filterBy, setFilterBy] = useState('');\n    const [selected, setSelected] = useState([]);\n    const [statePagination, setStatePagination] = useState({\n        perPage: 10,\n        page: 1\n    });\n\n    const showTagDialog = useSelector(({ entities, entityDetails }) => (entities || entityDetails)?.showTagDialog);\n\n    const pagination = useSelector(({ entities, entityDetails }) => {\n        if (entities?.activeSystemTag || entityDetails?.entity) {\n            return statePagination;\n        }\n\n        return entities?.allTagsPagination || statePagination;\n    }, shallowEqual);\n\n    const loaded = useSelector(({ entities, entityDetails }) => entities?.tagModalLoaded || entityDetails?.tagModalLoaded);\n\n    const activeSystemTag = useSelector(({ entities, entityDetails }) => entities?.activeSystemTag || entityDetails?.entity);\n    const tags = useSelector(({ entities, entityDetails }) => {\n        const activeTags = entities?.activeSystemTag?.tags || entityDetails?.entity?.tags;\n        if (activeTags) {\n            return activeTags?.filter(\n                (tag) => Object.values(tag).some((val) => val?.includes(filterBy))\n            ).slice(statePagination?.perPage * (statePagination?.page - 1), statePagination?.perPage * statePagination?.page);\n        }\n\n        return entities?.allTags?.reduce((acc, { tags }) => ([\n            ...acc,\n            ...flatten(tags.map(({ tag }) => tag))\n        ]), []);\n    });\n\n    const tagsCount = useSelector(({ entities, entityDetails }) => {\n        const activeTags = (entities?.activeSystemTag?.tags || entityDetails?.entity?.tags)?.filter(\n            (tag) => Object.values(tag).some((val) => val?.includes(filterBy))\n        );\n        return activeTags ? activeTags.length : entities?.allTagsTotal;\n    });\n\n    useEffect(() => {\n        setFilterBy(filterTagsBy);\n    }, [filterTagsBy]);\n\n    const fetchTags = (pagination, filterBy) => {\n        if (!activeSystemTag) {\n            dispatch(fetchAllTags(filterBy, pagination, getTags));\n        } else {\n            setStatePagination(() => pagination);\n        }\n    };\n\n    const debouncedFetch = useCallback(debounce(fetchTags, 800), [activeSystemTag]);\n\n    return (\n        <TagModal\n            className=\"ins-c-inventory__tags-modal\"\n            tableProps={{\n                canSelectAll: false\n            }}\n            {...loaded && {\n                loaded,\n                pagination: {\n                    ...pagination,\n                    count: tagsCount\n                },\n                rows: tags?.map(({ key, value, namespace }) => ({\n                    id: `${namespace}/${key}=${value}`,\n                    selected: selected.find(({ id }) => id === `${namespace}/${key}=${value}`),\n                    cells: [key, value, namespace]\n                })) || []\n            }}\n            loaded={ loaded }\n            width=\"auto\"\n            isOpen={ showTagDialog }\n            toggleModal={() => {\n                setSelected([]);\n                setFilterBy('');\n                onToggleModal();\n                dispatch(toggleTagModal(false));\n            }}\n            filters={[\n                {\n                    label: 'Tags filter',\n                    placeholder: 'Filter tags',\n                    value: 'tags-filter',\n                    filterValues: {\n                        value: filterBy,\n                        onChange: (_e, value) => {\n                            debouncedFetch(pagination, value);\n                            setFilterBy(value);\n                        }\n                    }\n                }\n            ]}\n            onUpdateData={ (pagination) => fetchTags(pagination, filterBy) }\n            columns={ [\n                { title: 'Name' },\n                { title: 'Value', transforms: [cellWidth(30)] },\n                { title: 'Tag source', transforms: [cellWidth(30)] }\n            ] }\n            {...!activeSystemTag && {\n                onSelect: (selected) => setSelected(selected),\n                selected,\n                onApply: () => onApply && onApply(selected)\n            }}\n            bulkSelect={{ id: 'bulk-select-tags' }}\n            title={ activeSystemTag ?\n                `${activeSystemTag.display_name} (${tagsCount})` :\n                `All tags in inventory (${tagsCount})`\n            }\n        />\n    );\n};\n\nTagsModal.propTypes = {\n    onApply: PropTypes.func,\n    onToggleModal: PropTypes.func,\n    filterTagsBy: PropTypes.string,\n    customFilters: PropTypes.shape({\n        tags: PropTypes.oneOfType([\n            PropTypes.object,\n            PropTypes.arrayOf(PropTypes.string)\n        ])\n    }),\n    getTags: PropTypes.func\n};\n\nTagsModal.defaultProps = {\n    filterTagsBy: '',\n    onToggleModal: () => undefined\n};\n\nexport default TagsModal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { usePermissionsWithContext } from '@redhat-cloud-services/frontend-components-utilities/RBACHook';\n\nconst RenderWrapper = ({ cmp: Component, isRbacEnabled, inventoryRef, store, ...props }) => {\n    const { hasAccess } = usePermissionsWithContext([\n        'inventory:*:*',\n        'inventory:*:read',\n        'inventory:hosts:read'\n    ]);\n\n    return (\n        <Component\n            {...props}\n            { ...inventoryRef && {\n                ref: inventoryRef\n            }}\n            isRbacEnabled={isRbacEnabled}\n            hasAccess={isRbacEnabled ? hasAccess : true}\n            store={ store }\n        />\n    );\n};\n\nRenderWrapper.propTypes = {\n    cmp: PropTypes.any,\n    inventoryRef: PropTypes.any,\n    store: PropTypes.object,\n    customRender: PropTypes.bool,\n    isRbacEnabled: PropTypes.bool\n};\n\nexport default RenderWrapper;\n","import { loadEntities } from '../store/inventory-actions';\n\nexport const subtractWeeks = (numOfWeeks, date = new Date()) => {\n    date.setDate(date.getDate() - numOfWeeks * 7);\n\n    return date;\n};\n\nexport const verifyCollectorStaleness = (reporterStaleness) =>{\n    const stalenessDate = new Date(reporterStaleness.stale_timestamp);\n    const currentDateTime = new Date();\n\n    const twoWeeksPeriod = subtractWeeks(2);\n    const oneWeeksPeriod = subtractWeeks(1);\n\n    if (stalenessDate > currentDateTime) {\n        return 'Fresh';\n    } else if (oneWeeksPeriod < stalenessDate && stalenessDate < currentDateTime) {\n        return 'Stale';\n    }\n    else if (twoWeeksPeriod < stalenessDate && stalenessDate < oneWeeksPeriod) {\n        return 'Stale warning';\n    } else {\n        return 'Culled';\n    }\n};\n\nexport const verifyCulledInsightsClient = (perReporterStaleness) => {\n    //TODO: get rid of !perReporterStaleness condition when dependant apps have per_reporter_staleness info\n    if (!perReporterStaleness) {\n        return false;\n    }\n    else if (perReporterStaleness.puptoo) {\n        return verifyCollectorStaleness(perReporterStaleness.puptoo) === 'Culled';\n    } else {\n        return true;\n    }\n};\n\nexport const loadSystems = (options, showTags, getEntities) => {\n    const limitedItems = options?.items?.length > options.per_page ? options?.items?.slice(\n        (options?.page - 1) * options.per_page, options?.page * options.per_page\n    ) : options?.items;\n\n    const config = {\n        ...options.hasItems && {\n            sortBy: options?.sortBy?.key,\n            orderDirection: options?.sortBy?.direction?.toUpperCase()\n        },\n        ...options,\n        filters: options?.filters || options?.activeFilters,\n        orderBy: options?.orderBy || options?.sortBy?.key,\n        orderDirection: options?.orderDirection?.toUpperCase() || options?.sortBy?.direction?.toUpperCase(),\n        ...limitedItems?.length > 0 && {\n            itemsPage: options?.page,\n            page: 1\n        }\n    };\n\n    return loadEntities(limitedItems, config, { showTags }, getEntities);\n};\n","import 'abortcontroller-polyfill/dist/polyfill-patch-fetch';\nexport const INVENTORY_API_BASE = '/api/inventory/v1';\nimport flatMap from 'lodash/flatMap';\n\nimport instance from '@redhat-cloud-services/frontend-components-utilities/interceptors';\nimport { generateFilter, mergeArraysByKey } from '@redhat-cloud-services/frontend-components-utilities/helpers';\nimport { HostsApi, TagsApi, SystemProfileApi } from '@redhat-cloud-services/host-inventory-client';\nimport { allStaleFilters, RHCD_FILTER_KEY, UPDATE_METHOD_KEY } from '../Utilities/constants';\n\nexport { instance };\nexport const hosts = new HostsApi(undefined, INVENTORY_API_BASE, instance);\nexport const tags = new TagsApi(undefined, INVENTORY_API_BASE, instance);\nexport const systemProfile = new SystemProfileApi(undefined, INVENTORY_API_BASE, instance);\n\nexport const getEntitySystemProfile = (item) => hosts.apiHostGetHostSystemProfileById([item]);\n\n/* eslint camelcase: off */\nexport const mapData = ({ facts = {}, ...oneResult }) => ({\n    ...oneResult,\n    rawFacts: facts,\n    facts: {\n        ...facts.reduce?.((acc, curr) => ({ ...acc, [curr.namespace]: curr.facts }), {}),\n        ...flatMap(facts, (oneFact => Object.values(oneFact)))\n        .map(item => typeof item !== 'string' ? ({\n            ...item,\n            // eslint-disable-next-line camelcase\n            os_release: item.os_release || item.release,\n            // eslint-disable-next-line camelcase\n            display_name: item.display_name || item.fqdn || item.id\n        }) : item)\n        .reduce(\n            (acc, curr) => ({ ...acc, ...(typeof curr !== 'string') ? curr : {} }), {}\n        )\n    }\n});\n\nexport const mapTags = (data = { results: [] }, { orderBy, orderDirection } = {}) => {\n    if (data.results.length > 0) {\n        return hosts.apiHostGetHostTags(data.results.map(({ id }) => id), data.per_page, 1, orderBy, orderDirection)\n        .then(({ results: tags }) => ({\n            ...data,\n            results: data.results.map(row => ({ ...row, tags: tags[row.id] || [] }))\n        }))\n        .catch(() => ({\n            ...data,\n            results: data.results.map(row => ({\n                ...row,\n                tags: []\n            }))\n        }));\n    }\n\n    return data;\n};\n\nexport const constructTags = (tagFilters) => {\n    return flatMap(\n        tagFilters,\n        ({ values, category: namespace }) => values.map(({ value: tagValue, tagKey }) => (\n            `${namespace ? `${namespace}/` : ''}${tagKey}${tagValue ? `=${tagValue}` : ''}`\n        ))\n    ) || '';\n};\n\nexport const calculateSystemProfile = ({ osFilter, rhcdFilter, updateMethodFilter }) => {\n    let systemProfile = {};\n    const osFilterValues = Array.isArray(osFilter) ? osFilter : Object.values(osFilter || {})\n    .flatMap((majorOsVersion) => Object.keys(majorOsVersion));\n\n    if (osFilterValues?.length > 0) {\n        systemProfile.operating_system = {\n            RHEL: {\n                version: {\n                    eq: osFilterValues\n                }\n            }\n        };\n    }\n\n    if (rhcdFilter) {\n        systemProfile[RHCD_FILTER_KEY] = rhcdFilter;\n    }\n\n    if (updateMethodFilter) {\n        systemProfile[UPDATE_METHOD_KEY] =  {\n            eq: updateMethodFilter\n        };\n    }\n\n    return generateFilter({ system_profile: systemProfile });\n};\n\nexport const filtersReducer = (acc, filter = {}) => ({\n    ...acc,\n    ...filter.value === 'hostname_or_id' && { hostnameOrId: filter.filter },\n    ...'tagFilters' in filter && { tagFilters: filter.tagFilters },\n    ...'staleFilter' in filter && { staleFilter: filter.staleFilter },\n    ...'registeredWithFilter' in filter && { registeredWithFilter: filter.registeredWithFilter },\n    ...'osFilter' in filter && { osFilter: filter.osFilter },\n    ...'rhcdFilter' in filter && { rhcdFilter: filter.rhcdFilter },\n    ...'updateMethodFilter' in filter && { updateMethodFilter: filter.updateMethodFilter }\n});\n\nexport async function getEntities(items, {\n    controller,\n    hasItems,\n    filters,\n    per_page: perPage,\n    page,\n    orderBy,\n    orderDirection,\n    fields = { system_profile: ['operating_system'] },\n    ...options\n}, showTags) {\n    if (hasItems && items.length > 0) {\n        let data = await hosts.apiHostGetHostById(\n            items,\n            undefined,\n            perPage,\n            page,\n            orderBy,\n            orderDirection,\n            undefined,\n            undefined,\n            { cancelToken: controller && controller.token }\n        );\n\n        if (fields && Object.keys(fields).length) {\n            try {\n                const result = await hosts.apiHostGetHostSystemProfileById(\n                    items,\n                    undefined,\n                    undefined,\n                    undefined,\n                    undefined,\n                    undefined,\n                    undefined,\n                    {\n                        cancelToken: controller && controller.token,\n                        query: generateFilter(fields, 'fields')\n                    }\n                );\n\n                data = {\n                    ...data,\n                    results: mergeArraysByKey([\n                        data?.results,\n                        result?.results || []\n                    ], 'id')\n                };\n            } catch (e) {\n                console.error(e); // eslint-disable-line\n            }\n        }\n\n        data = showTags ? await mapTags(data) : data;\n\n        data = {\n            ...data,\n            filters,\n            results: data.results.map(result => mapData({\n                ...result,\n                display_name: result.display_name || result.fqdn || result.id\n            }))\n        };\n\n        return data;\n    } else if (!hasItems) {\n        return hosts.apiHostGetHostList(\n            undefined,\n            undefined,\n            filters.hostnameOrId,\n            undefined,\n            undefined,\n            undefined,\n            undefined,\n            perPage,\n            page,\n            orderBy,\n            orderDirection,\n            filters.staleFilter,\n            [\n                ...constructTags(filters.tagFilters),\n                ...options.tags || []\n            ],\n            filters?.registeredWithFilter,\n            undefined,\n            undefined,\n            {\n                cancelToken: controller && controller.token,\n                query: {\n                    ...(options.filter && Object.keys(options.filter).length && generateFilter(options.filter)),\n                    ...(calculateSystemProfile(filters)),\n                    ...(fields && Object.keys(fields).length && generateFilter(fields, 'fields'))\n                }\n            }\n        )\n        .then((data) => showTags ? mapTags(data, { orderBy, orderDirection }) : data)\n        .then(({ results = [], ...data } = {}) => ({\n            ...data,\n            filters,\n            results: results.map(result => mapData({\n                ...result,\n                display_name: result.display_name || result.fqdn || result.id\n            }))\n        }));\n    }\n\n    return {\n        page,\n        per_page: perPage,\n        results: []\n    };\n}\n\nexport function getTags(systemId, search, { pagination } = { pagination: {} }) {\n    return hosts.apiHostGetHostTags(\n        systemId,\n        pagination.perPage || 10,\n        pagination.page || 1,\n        undefined,\n        undefined,\n        search\n    );\n}\n\nexport function getAllTags(search, pagination = {}) {\n    return tags.apiTagGetTags(\n        [],\n        'tag',\n        'ASC',\n        pagination.perPage || 10,\n        pagination.page || 1,\n        //TODO: ask the backend to return all tags by default.\n        allStaleFilters,\n        search,\n        undefined,\n        undefined,\n        undefined,\n        undefined,\n        undefined,\n        undefined,\n        undefined,\n        undefined,\n        undefined\n    );\n}\n\nexport function getOperatingSystems(params = []) {\n    return systemProfile.apiSystemProfileGetOperatingSystem(...params);\n}\n","import instance from '@redhat-cloud-services/frontend-components-utilities/interceptors';\nexport const systemIssuesInstance = instance;\n\nexport const cves = async (systemId) => {\n    try {\n        const [low, moderate, important, critical] = await Promise.all([2, 4, 5, 7].map((impact) => (\n            instance.get(\n                `/api/vulnerability//v1/systems/${systemId}/cves?page=1&page_size=1&impact=${impact}`\n            )\n        )));\n        return { low, moderate, important, critical };\n    } catch (_e) {\n        return {};\n    }\n};\n\nexport const patch = async (systemId) => {\n    try {\n        return await instance.get(`/api/patch/v1/systems/${systemId}`);\n    } catch (_e) {\n        return {};\n    }\n};\n\nexport const advisor = async (systemId) => {\n    try {\n        return await instance.get(`/api/insights/v1/system/${systemId}/reports/`);\n    } catch (_e) {\n        return {};\n    }\n};\n\nexport const compliance = async (systemId) => {\n    const query = `query System($systemId: String!) {\n        system(id: $systemId) {\n            id\n            name\n            profiles {\n                id\n                name\n                refId\n                compliant\n                rulesFailed\n                rulesPassed\n                lastScanned\n                score\n                __typename\n            }\n            __typename\n        }\n    }`;\n    try {\n        return await instance.post('/api/compliance/graphql', {\n            operationName: 'System',\n            query,\n            variables: {\n                systemId\n            }\n        });\n    } catch (_e) {\n        return {};\n    }\n};\n","import keyBy from 'lodash/keyBy';\n\nconst makeActions = (actions) => {\n    return actions?.reduce?.((acc, curr) => ({\n        ...acc,\n        [curr]: curr,\n        [`${curr}_PENDING`]: `${curr}_PENDING`,\n        [`${curr}_FULFILLED`]: `${curr}_FULFILLED`,\n        [`${curr}_REJECTED`]: `${curr}_REJECTED`\n    }), {});\n};\n\nconst actions = [\n    'ALERT_ADD',\n    'ALERT_DISMISS',\n    'REMOVE_ENTITY'\n];\n\nexport const asyncActions = [\n    'GET_ENTITIES',\n    'GET_ENTITY',\n    'UPDATE_DISPLAY_NAME',\n    'LOAD_WRITE_PERMISSIONS',\n    'LOAD_SYSTEM_PROFILE',\n    'SET_ANSIBLE_HOST'\n];\n\nexport const asyncInventory = [\n    'LOAD_ENTITIES',\n    'LOAD_ENTITY',\n    'REMOVE_ENTITY',\n    'LOAD_SYSTEM_PROFILE',\n    'SET_DISPLAY_NAME',\n    'SET_ANSIBLE_HOST',\n    'LOAD_TAGS',\n    'ALL_TAGS',\n    'OPERATING_SYSTEMS',\n    'GROUPS'\n];\n\nexport const systemIssues = [\n    'LOAD_ADVISOR_RECOMMENDATIONS',\n    'LOAD_APPLICABLE_CVES',\n    'LOAD_APPLICABLE_ADVISORIES',\n    'LOAD_COMPLIANCE_POLICIES'\n];\n\nexport const ACTION_TYPES = { ...keyBy(actions, k => k), ...makeActions(asyncActions), ...makeActions(asyncInventory) };\nexport const INVENTORY_ACTION_TYPES = makeActions(asyncInventory);\nexport const SYSTEM_ISSUE_TYPES = makeActions(systemIssues);\n\nexport const CLEAR_NOTIFICATIONS = '@@INSIGHTS-CORE/NOTIFICATIONS/CLEAR_NOTIFICATIONS';\nexport const SELECT_ENTITY = 'SELECT_ENTITY';\nexport const SET_INVENTORY_FILTER = 'SET_INVENTORY_FILTER';\nexport const SET_PAGINATION = 'SET_PAGINATION';\nexport const SET_DISPLAY_NAME = 'SET_DISPLAY_NAME';\nexport const SET_ANSIBLE_HOST = 'SET_ANSIBLE_HOST';\n\nexport const UPDATE_ENTITIES = 'UPDATE_ENTITIES';\nexport const CHANGE_SORT = 'CHANGE_SORT';\nexport const FILTER_ENTITIES = 'FILTER_ENTITIES';\nexport const APPLICATION_SELECTED = 'APPLICATION_SELECTED';\nexport const SHOW_ENTITIES = 'SHOW_ENTITIES';\nexport const FILTER_SELECT = 'FILTER_SELECT';\nexport const ENTITIES_LOADING = 'ENTITIES_LOADING';\nexport const CLEAR_FILTERS = 'CLEAR_FILTERS';\nexport const TOGGLE_TAG_MODAL = 'TOGGLE_TAG_MODAL';\nexport const CONFIG_CHANGED = 'CONFIG_CHANGED';\nexport const TOGGLE_DRAWER = 'TOGGLE_INVENTORY_DRAWER';\n","import { SYSTEM_ISSUE_TYPES } from './action-types';\nimport {\n    cves,\n    compliance,\n    advisor,\n    patch\n} from '../api';\n\nexport const getAdvisorData = (systemId) => ({\n    type: SYSTEM_ISSUE_TYPES.LOAD_ADVISOR_RECOMMENDATIONS,\n    payload: advisor(systemId)\n});\n\nexport const getVulnData = (systemId) => ({\n    type: SYSTEM_ISSUE_TYPES.LOAD_APPLICABLE_CVES,\n    payload: cves(systemId)\n});\n\nexport const getPatchData = (systemId) => ({\n    type: SYSTEM_ISSUE_TYPES.LOAD_APPLICABLE_ADVISORIES,\n    payload: patch(systemId)\n});\n\nexport const getComplianceData = (systemId) => ({\n    type: SYSTEM_ISSUE_TYPES.LOAD_COMPLIANCE_POLICIES,\n    payload: compliance(systemId)\n});\n","import { ACTION_TYPES, CLEAR_NOTIFICATIONS, SET_INVENTORY_FILTER, SET_PAGINATION } from './action-types';\nimport { hosts, getEntitySystemProfile } from '../api';\nexport * from './system-issues-actions';\nexport * from './inventory-actions';\n\nexport const deleteEntity = (systems, displayName) => ({\n    type: ACTION_TYPES.REMOVE_ENTITY,\n    payload: hosts.apiHostDeleteById(systems),\n    meta: {\n        notifications: {\n            fulfilled: {\n                variant: 'success',\n                title: 'Delete operation finished',\n                description: `${displayName} has been successfully removed.`,\n                dismissable: true\n            }\n        },\n        systems\n    }\n});\n\nexport const setFilter = (filtersList) => ({\n    type: SET_INVENTORY_FILTER,\n    payload: {\n        filtersList\n    }\n});\n\nexport const clearNotifications = () => {\n    return ({\n        type: CLEAR_NOTIFICATIONS\n    });\n};\n\nexport const editDisplayName = (id, value, origValue) => ({\n    type: ACTION_TYPES.UPDATE_DISPLAY_NAME,\n    payload: hosts.apiHostPatchById([id], { display_name: value }), // eslint-disable-line camelcase\n    meta: {\n        id,\n        value,\n        origValue,\n        notifications: {\n            fulfilled: {\n                variant: 'success',\n                title: `Display name for entity with ID ${id} has been changed to ${value}`,\n                dismissable: true\n            }\n        }\n    }\n});\n\nexport const setPagination = (page, perPage) => ({\n    type: SET_PAGINATION,\n    payload: {\n        page, perPage\n    }\n});\n\nexport const systemProfile = (itemId) => ({\n    type: ACTION_TYPES.LOAD_SYSTEM_PROFILE,\n    payload: getEntitySystemProfile(itemId, {})\n});\n\nexport const editAnsibleHost = (id, value, origValue) => ({\n    type: ACTION_TYPES.SET_ANSIBLE_HOST,\n    payload: hosts.apiHostPatchById([id], { ansible_host: value }), // eslint-disable-line camelcase\n    meta: {\n        id,\n        value,\n        origValue,\n        notifications: {\n            fulfilled: {\n                variant: 'success',\n                title: 'Ansible hostname has been updated',\n                dismissable: true\n            }\n        }\n    }\n});\n","import {\n    ACTION_TYPES,\n    SELECT_ENTITY,\n    CHANGE_SORT,\n    FILTER_ENTITIES,\n    APPLICATION_SELECTED,\n    FILTER_SELECT,\n    UPDATE_ENTITIES,\n    ENTITIES_LOADING,\n    CLEAR_FILTERS,\n    TOGGLE_TAG_MODAL,\n    CONFIG_CHANGED,\n    TOGGLE_DRAWER\n} from './action-types';\nimport {\n    getEntities as defaultGetEntities,\n    getEntitySystemProfile,\n    hosts,\n    getAllTags as defaultGetAllTags,\n    getTags,\n    filtersReducer,\n    getOperatingSystems\n} from '../api';\nimport { getGroups } from '../components/InventoryGroups/utils/api';\n\nexport const loadEntities = (items = [], { filters, ...config }, { showTags } = {}, getEntities = defaultGetEntities) => {\n    const itemIds = items.reduce((acc, curr) => (\n        [\n            ...acc,\n            curr && typeof curr === 'string' ? curr : curr.id\n        ]\n    ), []).filter(Boolean);\n\n    const isFilterDisabled = (name) => config.hideFilters?.[name] ||\n    (config.hideFilters?.all && config.hideFilters?.[name] !== false);\n\n    const updatedFilters = filters ? filters.reduce(filtersReducer, {\n        ...filters.length === 0 && { registeredWithFilter: [] },\n        ...(isFilterDisabled('stale') && { staleFilter: undefined }),\n        ...(isFilterDisabled('registeredWith') && { registeredWithFilter: undefined }),\n        ...(isFilterDisabled('operating_system') && { osFilter: undefined })\n    }) : {\n        ...(isFilterDisabled('stale') && { staleFilter: undefined }),\n        ...(isFilterDisabled('registeredWith') && { registeredWithFilter: undefined }),\n        ...(isFilterDisabled('operating_system') && { osFilter: undefined })\n    };\n\n    const orderBy = config.orderBy || 'updated';\n    const orderDirection = config.orderDirection || 'DESC';\n\n    const lastDateRequest = Date.now();\n\n    return {\n        type: ACTION_TYPES.LOAD_ENTITIES,\n        payload: getEntities(itemIds, {\n            filters: updatedFilters,\n            ...config,\n            orderBy,\n            orderDirection\n        }, showTags, defaultGetEntities).then(({ results, ...data }) => ({\n            ...data,\n            filters,\n            sortBy: { key: orderBy, direction: orderDirection },\n            results: items.length > 0 ? items.map((item) => ({\n                ...item.id ? item : { id: item },\n                ...results.find(({ id }) => id === item || id === item.id) || {}\n            })) : results,\n            page: config.page || (data?.page),\n            // eslint-disable-next-line camelcase\n            per_page: config.per_page || (data?.per_page),\n            hideFilters: config.hideFilters\n        })),\n        meta: {\n            showTags,\n            lastDateRequest\n        }\n    };\n};\n\nexport const updateEntities = (items = []) => ({\n    type: UPDATE_ENTITIES,\n    payload: {\n        results: items\n    }\n});\n\nexport const filterSelect = (selectedItem) => ({\n    type: FILTER_SELECT,\n    payload: selectedItem\n});\n\nexport const loadEntity = (id, config, { showTags }) => ({\n    type: ACTION_TYPES.LOAD_ENTITY,\n    payload: defaultGetEntities(id, config, showTags),\n    meta: {\n        showTags\n    }\n});\n\nexport const selectEntity = (id, selected) => ({\n    type: SELECT_ENTITY,\n    payload: { id, selected }\n});\n\nexport const setSort = (data) => ({\n    type: CHANGE_SORT,\n    payload: data\n});\n\nexport const filterEntities = (key, filterString) => ({\n    type: FILTER_ENTITIES,\n    payload: { key, filterString }\n});\n\nexport const detailSelect = (appName) => ({\n    type: APPLICATION_SELECTED,\n    payload: { appName }\n});\n\nexport const entitiesLoading = (isLoading = true) => ({\n    type: ENTITIES_LOADING,\n    payload: { isLoading }\n});\n\nexport const clearFilters = () => ({\n    type: CLEAR_FILTERS\n});\n\nexport const systemProfile = (itemId) => ({\n    type: ACTION_TYPES.LOAD_SYSTEM_PROFILE,\n    payload: getEntitySystemProfile(itemId, {})\n});\n\nexport const editDisplayName = (id, value) => ({\n    type: ACTION_TYPES.SET_DISPLAY_NAME,\n    payload: hosts.apiHostPatchHost(id, { display_name: value }), // eslint-disable-line camelcase\n    meta: {\n        notifications: {\n            fulfilled: {\n                variant: 'success',\n                title: 'Display name has been updated',\n                dismissable: true\n            }\n        }\n    }\n});\n\nexport const editAnsibleHost = (id, value) => ({\n    type: ACTION_TYPES.SET_ANSIBLE_HOST,\n    payload: hosts.apiHostPatchHost(id, { ansible_host: value }), // eslint-disable-line camelcase\n    meta: {\n        notifications: {\n            fulfilled: {\n                variant: 'success',\n                title: 'Ansible hostname has been updated',\n                dismissable: true\n            }\n        }\n    }\n});\n\nexport const loadTags = (systemId, search, options, count) => ({\n    type: ACTION_TYPES.LOAD_TAGS,\n    payload: getTags(systemId, search, options),\n    meta: {\n        tagsCount: count,\n        systemId\n    }\n});\n\nexport const toggleTagModal = (isOpen) => ({\n    type: TOGGLE_TAG_MODAL,\n    payload: { isOpen }\n});\n\nexport const fetchAllTags = (search, pagination, getTags = defaultGetAllTags) => ({\n    type: ACTION_TYPES.ALL_TAGS,\n    payload: getTags(search, pagination),\n    meta: { lastDateRequestTags: Date.now() }\n});\n\nexport const fetchGroups = (search, pagination) => ({\n    type: ACTION_TYPES.GROUPS,\n    payload: getGroups(search, pagination)\n});\n\nexport const fetchOperatingSystems = (params = []) => ({\n    type: ACTION_TYPES.OPERATING_SYSTEMS,\n    payload: getOperatingSystems(params)\n});\n\nexport const deleteEntity = (systems, displayName) => ({\n    type: ACTION_TYPES.REMOVE_ENTITY,\n    payload: hosts.apiHostDeleteById(systems),\n    meta: {\n        notifications: {\n            fulfilled: {\n                variant: 'success',\n                title: 'Delete operation finished',\n                description: `${displayName} has been successfully removed.`,\n                dismissable: true\n            }\n        },\n        systems\n    }\n});\n\nexport const configChanged = (config) => ({\n    type: CONFIG_CHANGED,\n    payload: config\n});\n\nexport const toggleDrawer = (isOpened) => ({\n    type: TOGGLE_DRAWER,\n    payload: { isOpened }\n});\n"],"names":["DeleteModal","systemToRemove","handleModalToggle","isModalOpen","currentSytems","onConfirm","systemLabel","Array","isArray","length","display_name","variant","title","className","ouiaId","isOpen","onClose","appendTo","document","getElementsByClassName","body","hasGutter","size","isFilled","location","host","onClick","ActiveSystemProp","PropTypes","id","displayName","propTypes","defaultProps","TagWithDialog","count","loadTags","systemId","e","stopPropagation","onTagClick","connect","dispatch","toggleTagModal","undefined","TagsModal","filterTagsBy","onToggleModal","onApply","getTags","useDispatch","useState","filterBy","setFilterBy","selected","setSelected","perPage","page","statePagination","setStatePagination","showTagDialog","useSelector","entities","entityDetails","pagination","activeSystemTag","entity","allTagsPagination","shallowEqual","loaded","tagModalLoaded","tags","activeTags","filter","tag","Object","values","some","val","includes","slice","allTags","reduce","acc","flatten","map","tagsCount","allTagsTotal","useEffect","fetchTags","fetchAllTags","debouncedFetch","useCallback","debounce","tableProps","canSelectAll","rows","key","value","namespace","find","cells","width","toggleModal","filters","label","placeholder","filterValues","onChange","_e","onUpdateData","columns","transforms","cellWidth","onSelect","bulkSelect","customFilters","RenderWrapper","Component","cmp","isRbacEnabled","inventoryRef","store","props","hasAccess","usePermissionsWithContext","ref","customRender","subtractWeeks","numOfWeeks","date","Date","setDate","getDate","verifyCollectorStaleness","reporterStaleness","stalenessDate","stale_timestamp","currentDateTime","twoWeeksPeriod","oneWeeksPeriod","verifyCulledInsightsClient","perReporterStaleness","puptoo","loadSystems","options","showTags","getEntities","limitedItems","items","per_page","config","hasItems","sortBy","orderDirection","direction","toUpperCase","activeFilters","orderBy","itemsPage","loadEntities","INVENTORY_API_BASE","hosts","HostsApi","instance","TagsApi","systemProfile","SystemProfileApi","getEntitySystemProfile","item","apiHostGetHostSystemProfileById","mapData","facts","rawFacts","curr","flatMap","oneFact","os_release","release","fqdn","mapTags","data","results","apiHostGetHostTags","then","row","catch","constructTags","tagFilters","category","tagValue","tagKey","calculateSystemProfile","osFilter","rhcdFilter","updateMethodFilter","osFilterValues","majorOsVersion","keys","operating_system","RHEL","version","eq","RHCD_FILTER_KEY","UPDATE_METHOD_KEY","generateFilter","system_profile","filtersReducer","hostnameOrId","staleFilter","registeredWithFilter","controller","fields","apiHostGetHostById","cancelToken","token","query","result","mergeArraysByKey","console","error","apiHostGetHostList","search","getAllTags","apiTagGetTags","allStaleFilters","getOperatingSystems","params","apiSystemProfileGetOperatingSystem","systemIssuesInstance","cves","Promise","all","impact","low","moderate","important","critical","patch","advisor","compliance","operationName","variables","makeActions","actions","asyncActions","asyncInventory","systemIssues","ACTION_TYPES","keyBy","k","INVENTORY_ACTION_TYPES","SYSTEM_ISSUE_TYPES","CLEAR_NOTIFICATIONS","SELECT_ENTITY","SET_INVENTORY_FILTER","SET_PAGINATION","SET_DISPLAY_NAME","SET_ANSIBLE_HOST","UPDATE_ENTITIES","CHANGE_SORT","FILTER_ENTITIES","APPLICATION_SELECTED","SHOW_ENTITIES","FILTER_SELECT","ENTITIES_LOADING","CLEAR_FILTERS","TOGGLE_TAG_MODAL","CONFIG_CHANGED","TOGGLE_DRAWER","getAdvisorData","type","payload","getVulnData","getPatchData","getComplianceData","deleteEntity","systems","meta","notifications","fulfilled","description","dismissable","setFilter","filtersList","clearNotifications","editDisplayName","origValue","setPagination","itemId","editAnsibleHost","ansible_host","defaultGetEntities","itemIds","Boolean","isFilterDisabled","name","hideFilters","updatedFilters","lastDateRequest","now","updateEntities","filterSelect","selectedItem","loadEntity","selectEntity","setSort","filterEntities","filterString","detailSelect","appName","entitiesLoading","isLoading","clearFilters","defaultGetAllTags","lastDateRequestTags","fetchGroups","getGroups","fetchOperatingSystems","configChanged","toggleDrawer","isOpened"],"sourceRoot":""}