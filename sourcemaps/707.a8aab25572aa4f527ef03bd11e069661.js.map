{"version":3,"file":"js/707.415b5e19dcbad41ba6c5.js","mappings":"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","sources":["webpack:///./src/Utilities/useFeatureFlag.js","webpack:///./src/modules/AsyncInventory.js","webpack:///./src/modules/InventoryTable.js","webpack:///./src/store/reducers.js","webpack:///./src/store/systemProfileStore.js"],"sourcesContent":["import { useFlag, useFlagsStatus } from '@unleash/proxy-client-react';\n\nexport default (flag) => {\n    const { flagsReady } = useFlagsStatus();\n    const isFlagEnabled = useFlag(flag);\n    return flagsReady ? isFlagEnabled : false;\n};\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Provider } from 'react-redux';\nimport { Router } from 'react-router-dom';\nimport { RBACProvider } from '@redhat-cloud-services/frontend-components/RBACProvider';\n\nimport * as storeMod from '../store/redux';\nimport * as utils from '../Utilities/index';\nimport * as apiMod from '../api/index';\nimport RenderWrapper from '../Utilities/Wrapper';\nconst { mergeWithDetail, ...rest } = storeMod;\n\nconst AsyncInventory = ({ component, onLoad, store, history, innerRef, ...props }) => {\n    useEffect(() => {\n        onLoad?.({\n            ...rest,\n            ...utils,\n            api: apiMod,\n            mergeWithDetail\n        });\n    }, []);\n\n    return (\n        <RBACProvider appName=\"inventory\">\n            <Provider store={store}>\n                <Router history={history}>\n                    <RenderWrapper\n                        { ...props }\n                        isRbacEnabled\n                        inventoryRef={ innerRef }\n                        store={ store }\n                        cmp={ component } />\n                </Router>\n            </Provider>\n        </RBACProvider>\n    );\n};\n\nAsyncInventory.propTypes = {\n    store: PropTypes.object,\n    onLoad: PropTypes.func,\n    component: PropTypes.elementType.isRequired,\n    history: PropTypes.object,\n    innerRef: PropTypes.shape({\n        current: PropTypes.any\n    })\n};\n\nAsyncInventory.defaultProps = {\n    onLoad: () => undefined\n};\n\nexport default AsyncInventory;\n","import React from 'react';\nimport AsyncInventory from './AsyncInventory';\nimport { InventoryTable as InventoryTableCmp } from '../components/InventoryTable';\n\nconst BaseInventoryTable = (props) => <AsyncInventory {...props} component={InventoryTableCmp}  />;\n\nconst InventoryTable = React.forwardRef((props, ref) => <BaseInventoryTable {...props} innerRef={ref} />);\n\nexport default InventoryTable;\n\nexport { useOperatingSystemFilter } from '../components/filters';\n","import {\n    INVENTORY_ACTION_TYPES,\n    ACTION_TYPES,\n    SELECT_ENTITY,\n    SET_INVENTORY_FILTER,\n    SET_PAGINATION\n} from './action-types';\nimport systemProfileStore from './systemProfileStore';\nimport { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport { mergeArraysByKey } from '@redhat-cloud-services/frontend-components-utilities/helpers';\nimport { notificationsReducer } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport entitiesReducer, { defaultState as entitiesDefault } from './entities';\nimport entityDetailsReducer, { entityDefaultState as entityDefault, updateEntity } from './entityDetails';\nimport groups from './groups';\nimport groupDetail from './groupDetail';\n\nexport { entitiesReducer, entityDetailsReducer };\n\nconst defaultState = { loaded: false, selected: new Map() };\n\nfunction entitiesLoaded(state, { payload }) {\n    return {\n        ...state,\n        rows: mergeArraysByKey([state.rows, payload.results]),\n        entities: mergeArraysByKey([state.entities, payload.results])\n    };\n}\n\nfunction entityLoaded(state) {\n    return {\n        ...state,\n        loaded: true\n    };\n}\n\nfunction entitySelected(state, { payload }) {\n    const selected = state.selected || (new Map());\n    if (payload.selected) {\n        if (payload.id === 0) {\n            state.rows.forEach(row => selected.set(row.id, row));\n        } else {\n            const selectedRow = state.rows && state.rows.find(({ id }) => id === payload.id);\n            selected.set(payload.id, { ...selectedRow || {}, id: payload.id });\n        }\n    } else {\n        if (payload.id === 0) {\n            state.rows.forEach(row => selected.delete(row.id));\n        } else if (payload.id === -1) {\n            selected.clear();\n        } else {\n            selected.delete(payload.id);\n        }\n    }\n\n    return {\n        ...state,\n        selected: new Map(selected)\n    };\n}\n\nfunction entityDeleted(state, { meta }) {\n    const selected = state.selected || (new Map());\n    meta.systems.forEach(id => selected.delete(id));\n\n    return {\n        ...state,\n        selected: new Map(selected)\n    };\n}\n\nfunction onEntitiesLoaded(state, { payload, meta }) {\n    if (meta?.lastDateRequest < state?.lastDateRequest) {\n        return state;\n    }\n\n    return {\n        ...state,\n        rows: mergeArraysByKey([state.rows, payload.results.map(result => {\n            return {\n                ...result,\n                selected: state.selected && state.selected.has(result.id)\n            };\n        })])\n    };\n}\n\nfunction onSetFilter(state, { payload }) {\n    return {\n        ...state,\n        activeFilters: payload.filtersList\n    };\n}\n\nfunction onSetPagination(state, { payload }) {\n    const perPage = parseInt(payload.perPage, 10);\n    const page = parseInt(payload.page, 10);\n    return {\n        ...state,\n        perPage: isNaN(perPage) ? 50 : perPage,\n        page: isNaN(page) ? 1 : page\n    };\n}\n\nlet reducers = {\n    notifications: notificationsReducer,\n    systemProfileStore,\n    groups,\n    groupDetail\n};\n\nexport const tableReducer = applyReducerHash(\n    {\n        [ACTION_TYPES.GET_ENTITIES_FULFILLED]: entitiesLoaded,\n        [INVENTORY_ACTION_TYPES.LOAD_ENTITIES_FULFILLED]: onEntitiesLoaded,\n        [`${ACTION_TYPES.REMOVE_ENTITY}_FULFILLED`]: entityDeleted,\n        [SELECT_ENTITY]: entitySelected,\n        FILTER_SELECT: (state) => ({ ...state, selected: {} }),\n        [SET_INVENTORY_FILTER]: onSetFilter,\n        [SET_PAGINATION]: onSetPagination,\n        [ACTION_TYPES.UPDATE_DISPLAY_NAME_FULFILLED]: updateEntity\n    },\n    defaultState\n);\n\nexport const entitesDetailReducer = () => applyReducerHash(\n    {\n        [INVENTORY_ACTION_TYPES.LOAD_ENTITY_FULFILLED]: entityLoaded\n    },\n    defaultState\n);\n\nexport function mergeWithEntities(additionalReducers = (state) => state, defaultState = {}) {\n    return ({\n        entities: (state, payload) => ({\n            ...additionalReducers({\n                ...applyReducerHash({\n                    ...entitiesReducer\n                }, { ...entitiesDefault, ...defaultState })(state, payload)\n            }, payload)\n        })\n    });\n}\n\nexport function mergeWithDetail(additionalReducers = (state) => state, defaultState = {}) {\n    return ({\n        entityDetails: (state, payload) => ({\n            ...additionalReducers({\n                ...applyReducerHash({\n                    ...entityDetailsReducer\n                }, { ...entityDefault, ...defaultState })(state, payload)\n            }, payload)\n        })\n    });\n}\n\nexport default reducers;\n","import { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport { ACTION_TYPES } from './action-types';\n\nexport const defaultState = { loaded: false };\n\nexport const sizes = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n\n// Kudos to https://stackoverflow.com/a/18650828/2560321\nexport const formatBytes = (bytes) => {\n    if (bytes === 0 || isNaN(Number(bytes))) {\n        return '0 B';\n    }\n\n    const index = Math.floor(Math.log(bytes) / Math.log(1024));\n    return `${parseFloat((bytes / Math.pow(1024, index)).toFixed(2))} ${sizes[index]}`;\n};\n\nexport function systemProfilePending(state) {\n    return {\n        ...state,\n        systemProfile: {\n            loaded: false\n        }\n    };\n}\n\nexport function calculateRepos(repos) {\n    return repos && repos.reduce((acc, curr) => ({\n        ...acc,\n        ...curr.enabled ? {\n            enabled: [...acc.enabled, curr]\n        } : {\n            disabled: [...acc.disabled, curr]\n        }\n    }), { enabled: [], disabled: [] });\n}\n\nexport function calculateInterfaces(interfaces) {\n    return interfaces && interfaces.reduce((acc, curr) => ({\n        interfaces: [...acc.interfaces, curr],\n        ipv4: [...acc.ipv4, ...curr.ipv4_addresses || []].filter(Boolean),\n        ipv6: [...acc.ipv6, ...curr.ipv6_addresses || []].filter(Boolean)\n    }), { interfaces: [], ipv4: [], ipv6: [] });\n}\n\nexport function onSystemProfile(state, { payload: { results } }) {\n    const systemProfile = (results && results[0] && results[0].system_profile) || {};\n    const cloudProviderObj = (results && results[0] && (typeof results[0].system_profile.cloud_provider !== 'undefined'))\n                        && results[0].system_profile.cloud_provider;\n    return {\n        ...state,\n        disabledApps: [\n            ...(cloudProviderObj === 'aws' || cloudProviderObj === 'azure') ? [] : ['ros']\n        ],\n        systemProfile: {\n            loaded: true,\n            ...systemProfile,\n            ramSize: systemProfile.system_memory_bytes && formatBytes(systemProfile.system_memory_bytes),\n            repositories: calculateRepos(systemProfile.yum_repos),\n            network: calculateInterfaces(systemProfile.network_interfaces)\n        }\n    };\n}\n\nexport default applyReducerHash(\n    {\n        [ACTION_TYPES.LOAD_SYSTEM_PROFILE_FULFILLED]: onSystemProfile,\n        [ACTION_TYPES.LOAD_SYSTEM_PROFILE_PENDING]: systemProfilePending\n    },\n    {\n        systemProfile: defaultState\n    }\n);\n"],"names":["flag","flagsReady","useFlagsStatus","isFlagEnabled","useFlag","mergeWithDetail","storeMod","rest","AsyncInventory","component","onLoad","store","history","innerRef","props","useEffect","utils","api","apiMod","RBACProvider","appName","Provider","Router","isRbacEnabled","inventoryRef","cmp","propTypes","PropTypes","current","defaultProps","BaseInventoryTable","InventoryTableCmp","React","ref","defaultState","loaded","selected","Map","entityLoaded","state","reducers","notifications","notificationsReducer","systemProfileStore","groups","groupDetail","tableReducer","applyReducerHash","ACTION_TYPES","payload","rows","mergeArraysByKey","results","entities","INVENTORY_ACTION_TYPES","meta","lastDateRequest","map","result","has","id","systems","forEach","delete","SELECT_ENTITY","row","set","selectedRow","find","clear","SET_INVENTORY_FILTER","activeFilters","filtersList","SET_PAGINATION","perPage","parseInt","page","isNaN","updateEntity","entitesDetailReducer","mergeWithEntities","additionalReducers","entitiesReducer","entitiesDefault","entityDetails","entityDetailsReducer","entityDefault","sizes","formatBytes","bytes","Number","index","Math","floor","log","parseFloat","pow","toFixed","systemProfilePending","systemProfile","calculateRepos","repos","reduce","acc","curr","enabled","disabled","calculateInterfaces","interfaces","ipv4","ipv4_addresses","filter","Boolean","ipv6","ipv6_addresses","onSystemProfile","system_profile","cloudProviderObj","cloud_provider","disabledApps","ramSize","system_memory_bytes","repositories","yum_repos","network","network_interfaces"],"sourceRoot":""}