{"version":3,"file":"js/3825.1652963703669.32472bcc0b72e83570f2.js","mappings":"4MAYIA,E,uEAJSC,GAAkBC,EAAAA,EAAAA,eAAc,CACzCC,YAAa,eAKV,SAASC,IACZJ,EAAqB,IAAIK,EAAAA,EADQ,2BAAZC,EAAY,yBAAZA,EAAY,gBAEjC,OAAO,IAAIC,EAAAA,GACP,GADG,CAGCP,EAAmBQ,gBACnBC,KACAC,EAAAA,EAAAA,SAAwB,CACpBC,oBAAqB,CAAC,SAAU,YANrC,OAQIL,M,gLCJf,QAfsB,WAClB,IAAQM,GAAWC,EAAAA,EAAAA,eAAc,iBAAzBD,OACR,OAAO,kBAACE,EAAA,EAAD,CACHC,QAAQ,aACRC,OAAO,iBACPC,OAAOC,EAAAA,EAAAA,YACPC,YAAU,EACVC,UAAW,CACPC,OAAQC,UAAUC,SAASC,MAAM,EAAG,IAExCC,YAAcb,EAAOa,YACrBC,qBAAmB,K,eCE3B,QAbyB,WACrB,IAAQd,GAAWC,EAAAA,EAAAA,eAAc,iBAAzBD,OACAT,GAAgBwB,EAAAA,EAAAA,YAAW1B,EAAAA,IAA3BE,YAER,OAAO,kBAACW,EAAA,EAAD,CACHC,QAAQ,gBACRC,OAAO,iBACPb,YAAaA,EACbyB,oBAAkB,EAClBC,OAAS,CAAEC,GAAIlB,EAAOa,gBCE9B,EAZmB,WACf,OAAO,kBAACX,EAAA,EAAD,CACHC,QAAQ,UACRC,OAAO,iBACPC,OAAOC,EAAAA,EAAAA,YACPC,YAAU,EACVC,UAAW,CACPC,OAAQC,UAAUC,SAASC,MAAM,EAAG,O,eCGhD,QAViB,WACb,IAAQrB,GAAgBwB,EAAAA,EAAAA,YAAW1B,EAAAA,IAA3BE,YAER,OAAO,kBAACW,EAAA,EAAD,CACHC,QAAQ,QACRC,OAAO,iBACPb,YAAaA,KCOrB,EAZe,WACX,IAAQS,GAAWC,EAAAA,EAAAA,eAAc,iBAAzBD,OACAT,GAAgBwB,EAAAA,EAAAA,YAAW1B,EAAAA,IAA3BE,YAER,OAAO,kBAACW,EAAA,EAAD,CACHC,QAAQ,MACRC,OAAO,iBACPb,YAAcA,EACdsB,YAAcb,EAAOa,e,snBC6DtB,SAASM,EAAUC,EAAOC,GAC7B,cACOD,GADP,IAEIE,aAAc,EAAF,KACLF,MAAAA,OADK,EACLA,EAAOE,cACPD,IAAQ,UAAGA,EAAO,CAAEE,UAAU,OAK7C,wBACKC,EAAAA,GAAAA,sCAA0D,SAACJ,GAAD,OAAWD,EAAUC,EAAO,eAD3F,SAEKI,EAAAA,GAAAA,8BAAkD,SAACJ,GAAD,OAAWD,EAAUC,EAAO,WAFnF,SAGKI,EAAAA,GAAAA,oCAAwD,SAACJ,GAAD,OAAWD,EAAUC,EAAO,aAHzF,SAIKI,EAAAA,GAAAA,kCAAsD,SAACJ,GAAD,OAAWD,EAAUC,EAAO,kBAJvF,SAKKI,EAAAA,GAAAA,wCAtFE,SAAiBJ,EAAjB,GAAqC,IAAXK,EAAW,EAAXA,QAC7B,cACOL,GADP,IAEIE,aAAc,EAAF,KACLF,MAAAA,OADK,EACLA,EAAOE,cADF,IAERI,QAAS,CACLH,UAAU,EACVI,cAAeF,MAAAA,OAAF,EAAEA,EAASG,QAAO,SAAAC,GAAI,OAAIA,MAAAA,OAAA,EAAAA,EAAMC,aAAc,cA0E3E,SAMKN,EAAAA,GAAAA,gCA1EE,SAAaJ,EAAb,GAAiC,oBAAXK,EAAW,EAAXA,QACzB,cACOL,GADP,IAEIE,aAAc,EAAF,KACLF,MAAAA,OADK,EACLA,EAAOE,cADF,IAERS,IAAK,CACDR,UAAU,EACVS,SAAU,CACNC,OAAOR,MAAAA,GAAA,UAAAA,EAASO,gBAAT,mBAAmBE,YAAnB,eAAyBC,cAAe,GAEnDC,SAAU,CACNH,OAAOR,MAAAA,GAAA,UAAAA,EAASW,gBAAT,mBAAmBF,YAAnB,eAAyBC,cAAe,GAEnDE,UAAW,CACPJ,OAAOR,MAAAA,GAAA,UAAAA,EAASY,iBAAT,mBAAoBH,YAApB,eAA0BC,cAAe,GAEpDG,IAAK,CACDL,OAAOR,MAAAA,GAAA,UAAAA,EAASa,WAAT,mBAAcJ,YAAd,eAAoBC,cAAe,YAmD9D,SAOKX,EAAAA,GAAAA,sCAnDE,SAAeJ,EAAf,GAAmC,gBAAXK,EAAW,EAAXA,QAC3B,cACOL,GADP,IAEIE,aAAc,EAAF,KACLF,MAAAA,OADK,EACLA,EAAOE,cADF,IAERiB,MAAO,CACHhB,UAAU,EACViB,IAAK,CACDP,OAAOR,MAAAA,GAAA,UAAAA,EAASgB,YAAT,mBAAeC,kBAAf,eAA2BC,aAAc,GAEpDC,YAAa,CACTX,OAAOR,MAAAA,GAAA,UAAAA,EAASgB,YAAT,mBAAeC,kBAAf,eAA2BG,aAAc,GAEpDC,SAAU,CACNb,OAAOR,MAAAA,GAAA,UAAAA,EAASgB,YAAT,mBAAeC,kBAAf,eAA2BK,aAAc,YA8BpE,SAQKvB,EAAAA,GAAAA,oCA/BE,SAAoBJ,EAApB,GAAwC,QAAXK,EAAW,EAAXA,QAChC,cACOL,GADP,IAEIE,aAAc,EAAF,KACLF,MAAAA,OADK,EACLA,EAAOE,cADF,IAER0B,WAAY,CACRzB,UAAU,EACV0B,SAAUxB,MAAAA,GAAF,UAAEA,EAASgB,YAAX,iBAAE,EAAeS,cAAjB,aAAE,EAAuBD,iBAgBjD,G,2kBCjFO,IAAME,EAAqB,CAAEC,QAAQ,GAsC5C,QAAe,kBACVC,EAAAA,GAAAA,uBAAqC,kBAAMF,MADhD,SAEKE,EAAAA,GAAAA,qBAtCL,SAA6BjC,GACzB,cACOA,GADP,IAEIgC,QAAQ,QAiChB,SAGKC,EAAAA,GAAAA,uBAhCL,SAA4BjC,EAA5B,GAAgD,IAAXK,EAAW,EAAXA,QACjC,cACOL,GADP,IAEIgC,QAAQ,EACRnC,OAAQQ,EAAQ6B,QAAQ,SAyBhC,SAIKC,EAAAA,IAzBL,SAA+BnC,EAA/B,GAAmD,IAAXK,EAAW,EAAXA,QACpC,cACOL,GADP,IAEIoC,UAAW/B,QAkBnB,SAKK4B,EAAAA,GAAAA,UAAyBI,EAAAA,KAL9B,SAMKJ,EAAAA,GAAAA,mBAbL,SAAyBjC,GACrB,cACOA,GADP,IAEIsC,gBAAgB,QAIxB,SAOKL,EAAAA,GAAAA,oBAAmCI,EAAAA,KAPxC,SAQKE,EAAAA,GAAmBC,EAAAA,KARxB,SASKC,EAAAA,IAvBL,SAAsBzC,EAAtB,GAA0C,IAAXK,EAAW,EAAXA,QAC3B,cACOL,GADP,IAEI0C,eAAgBrC,MAAAA,OAAF,EAAEA,EAASsC,cAWjC,GAUOC,G,2kBCbP,SAT2BC,EAAAA,EAAAA,KAAgB,yBAE/BZ,EAAAA,GAAAA,uBAF+B,aA1BP,SAACjC,GAAD,SAAC,KAC9BA,GAD6B,IAEhC8C,eAAe,EACfC,SAAS,EACTC,sBAAkBC,QAsBqB,mBAG/BhB,EAAAA,GAAAA,uBAH+B,eAnBL,SAACjC,EAAD,OAAUK,EAAV,EAAUA,QAAV,SAAC,KAChCL,GAD+B,IAElC+C,SAAS,EACTD,eAAe,EACfE,iBAAkB3C,EAAQ2C,uBAea,mBAI/Bf,EAAAA,GAAAA,uBAJ+B,YAZR,SAACjC,GAAD,SAAC,KAC7BA,GAD4B,IAE/B+C,SAAS,EACTD,eAAe,OASwB,GANZ,CAC3BC,SAAS,EACTC,kBAAkB,EAClBF,eAAe,I,2kBCAnB,IAAMI,EAAe,CAAElB,QAAQ,EAAOmB,SAAU,IAAIC,KAqBpD,SAASC,EAAarD,GAClB,cACOA,GADP,IAEIgC,QAAQ,EACRsB,WAAY,CACR,CAAEC,MAAO,sBAAuBC,KAAM,sBAAuBC,UAAWC,EAAAA,SACxE,CAAEH,MAAO,UAAWC,KAAM,UAAWC,UAAWE,GAChD,CACIJ,MAAO,gBACPC,KAAM,kBACNC,UAAWG,GAEf,CACIL,MAAO,aACPC,KAAM,aACNC,UAAWI,GAEf,CACIN,MAAO,QACPC,KAAM,QACNC,UAAWK,GAEf,CACIP,MAAO,wBACPC,KAAM,MACNO,WAAW,EACXN,UAAWO,IAEjBxD,OAAOyD,WA6BjB,SAASC,EAAyBlE,EAAlC,GAAsD,MAAXK,EAAW,EAAXA,QACvC,cACOL,GADP,IAEIsD,WAAU,UAAEtD,EAAMsD,kBAAR,aAAE,EAAkBa,KAAI,SAACtE,GAAD,MAA4B,QAAhBA,EAAO2D,KAAP,OACvC3D,GADuC,IAE1CkE,UAAW1D,IACVR,OAgDb,IAAIuE,EAAW,CACXC,cAAeC,EAAAA,GACfC,mBAAAA,EAAAA,GACAC,mBAAAA,GAGSC,GAAe5B,EAAAA,EAAAA,KAAgB,aAAC,EAEpCZ,EAAAA,GAAAA,wBA1IT,SAAwBjC,EAAxB,GAA4C,IAAXK,EAAW,EAAXA,QAC7B,cACOL,GADP,IAEI0E,MAAMC,EAAAA,EAAAA,IAAiB,CAAC3E,EAAM0E,KAAMrE,EAAQ6B,UAC5C0C,UAAUD,EAAAA,EAAAA,IAAiB,CAAC3E,EAAM4E,SAAUvE,EAAQ6B,gBAoIhB,OAAC,EAGpC2C,EAAAA,GAAAA,yBA1CT,SAA0B7E,EAA1B,GAAoD,IAAjBK,EAAiB,EAAjBA,QAASS,EAAQ,EAARA,KACxC,OAAIA,MAAAA,OAAA,EAAAA,EAAMgE,kBAAkB9E,MAAAA,OAAxB,EAAwBA,EAAO8E,iBACxB9E,EAGX,OACOA,GADP,IAEI0E,MAAMC,EAAAA,EAAAA,IAAiB,CAAC3E,EAAM0E,KAAMrE,EAAQ6B,QAAQiC,KAAI,SAAAY,GACpD,cACOA,GADP,IAEI5B,SAAUnD,EAAMmD,UAAYnD,EAAMmD,SAAS6B,IAAID,EAAOjF,iBA6B1B,OAAC,YAIjCmC,EAAAA,GAAAA,cAJgC,eAjD5C,SAAuBjC,EAAvB,GAAwC,IAARc,EAAQ,EAARA,KACtBqC,EAAWnD,EAAMmD,UAAa,IAAIC,IAGxC,OAFAtC,EAAKmE,QAAQC,SAAQ,SAAApF,GAAE,OAAIqD,EAASgC,OAAOrF,MAE3C,OACOE,GADP,IAEImD,SAAU,IAAIC,IAAID,SA2CkB,OAAC,EAKpCiC,EAAAA,IA1FT,SAAwBpF,EAAxB,GAA4C,IAAXK,EAAW,EAAXA,QACvB8C,EAAWnD,EAAMmD,UAAa,IAAIC,IACxC,GAAI/C,EAAQ8C,SACR,GAAmB,IAAf9C,EAAQP,GACRE,EAAM0E,KAAKQ,SAAQ,SAAAG,GAAG,OAAIlC,EAASmC,IAAID,EAAIvF,GAAIuF,UAC5C,CACH,IAAME,EAAcvF,EAAM0E,MAAQ1E,EAAM0E,KAAKc,MAAK,qBAAG1F,KAAgBO,EAAQP,MAC7EqD,EAASmC,IAAIjF,EAAQP,GAArB,OAA8ByF,GAAe,IAA7C,IAAiDzF,GAAIO,EAAQP,WAG9C,IAAfO,EAAQP,GACRE,EAAM0E,KAAKQ,SAAQ,SAAAG,GAAG,OAAIlC,EAASgC,OAAOE,EAAIvF,QACvB,IAAhBO,EAAQP,GACfqD,EAASsC,QAETtC,EAASgC,OAAO9E,EAAQP,IAIhC,cACOE,GADP,IAEImD,SAAU,IAAIC,IAAID,SAgEkB,OAAC,mBAMtB,SAACnD,GAAD,SAAC,KAAgBA,GAAjB,IAAwBmD,SAAU,SANb,OAAC,EAOpCuC,EAAAA,IA9BT,SAAqB1F,EAArB,GAAyC,IAAXK,EAAW,EAAXA,QAC1B,cACOL,GADP,IAEI2F,cAAetF,EAAQuF,kBAoBa,OAAC,EAQpCC,EAAAA,IAxBT,SAAyB7F,EAAzB,GAA6C,IAAXK,EAAW,EAAXA,QACxByF,EAAUC,SAAS1F,EAAQyF,QAAS,IACpCE,EAAOD,SAAS1F,EAAQ2F,KAAM,IACpC,cACOhG,GADP,IAEI8F,QAASG,MAAMH,GAAW,GAAKA,EAC/BE,KAAMC,MAAMD,GAAQ,EAAIA,QAUY,OAAC,EASpC/D,EAAAA,GAAAA,+BAzIT,SAAsBjC,EAAtB,GAAuC,IAARc,EAAQ,EAARA,KAC3B,cACOd,GADP,IAEI0E,KAAM1E,EAAM0E,KAAKP,KAAI,SAACkB,GAAD,OAASA,EAAIvF,MAAOgB,MAAAA,OAAX,EAAWA,EAAMhB,IAAjB,OACvBuF,GADuB,IAG1Ba,aAAcpF,MAAAA,OAAF,EAAEA,EAAMqF,QACnBd,UAyH+B,GAWxCnC,GAGSkD,EAAuB,wBAAMvD,EAAAA,EAAAA,KAAgB,eAEjDgC,EAAAA,GAAAA,sBAA+CxB,IAFE,SAGjDwB,EAAAA,GAAAA,8BAAuDX,GAHN,GAKtDhB,IAGG,SAASmD,IAA4E,IAA1DC,EAA0D,uDAArC,SAACtG,GAAD,OAAWA,GAAOkD,EAAmB,uDAAJ,GACpF,MAAQ,CACJ0B,SAAU,SAAC5E,EAAOK,GAAR,YACHiG,EAAmB,MACfzD,EAAAA,EAAAA,IAAiB,KACb0D,EAAAA,IADY,EAAC,KAEZC,EAAAA,IAAoBtD,GAFzBL,CAEyC7C,EAAOK,IACpDA,MAKR,SAASoG,IAA0E,IAA1DH,EAA0D,uDAArC,SAACtG,GAAD,OAAWA,GAAOkD,EAAmB,uDAAJ,GAClF,MAAQ,CACJwD,cAAe,SAAC1G,EAAOK,GAAR,YACRiG,EAAmB,MACfzD,EAAAA,EAAAA,IAAiB,KACb8D,GADY,EAAC,KAEZC,GAAkB1D,GAFvBL,CAEuC7C,EAAOK,IAClDA,MAKf","sources":["webpack:///./src/store/index.js","webpack:///./src/components/SystemDetails/Compliance.js","webpack:///./src/components/SystemDetails/Vulnerability.js","webpack:///./src/components/SystemDetails/Advisor.js","webpack:///./src/components/SystemDetails/Patch.js","webpack:///./src/components/SystemDetails/Ros.js","webpack:///./src/store/systemIssues.js","webpack:///./src/store/entityDetails.js","webpack:///./src/store/permissions/reducer.js","webpack:///./src/store/reducers.js"],"sourcesContent":["\nimport { createContext } from 'react';\nimport MiddlewareListener from '@redhat-cloud-services/frontend-components-utilities/MiddlewareListener';\nimport { ReducerRegistry } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport notificationsMiddleware from '@redhat-cloud-services/frontend-components-notifications/notificationsMiddleware';\nimport promise  from 'redux-promise-middleware';\nexport { default as reducers, tableReducer, entitesDetailReducer } from './reducers';\n\nexport const RegistryContext = createContext({\n    getRegistry: () => {}\n});\n\nlet middlewareListener;\n\nexport function init (...middleware) {\n    middlewareListener = new MiddlewareListener();\n    return new ReducerRegistry(\n        {},\n        [\n            middlewareListener.getMiddleware(),\n            promise,\n            notificationsMiddleware({\n                errorDescriptionKey: ['detail', 'stack']\n            }),\n            ...middleware\n        ]\n    );\n}\n\nexport function addNewListener ({ actionType, callback }) {\n    return middlewareListener.addNew({\n        on: actionType,\n        callback\n    });\n}\n","import React from 'react';\nimport { useStore } from 'react-redux';\nimport { useRouteMatch } from 'react-router-dom';\nimport AsyncComponent from '@redhat-cloud-services/frontend-components/AsyncComponent';\n\nconst ComplianceTab = () => {\n    const { params } = useRouteMatch('/:inventoryId');\n    return <AsyncComponent\n        appName=\"compliance\"\n        module=\"./SystemDetail\"\n        store={useStore()}\n        customItnl\n        intlProps={{\n            locale: navigator.language.slice(0, 2)\n        }}\n        inventoryId={ params.inventoryId }\n        remediationsEnabled\n    />;\n};\n\nexport default ComplianceTab;\n","import React, { useContext } from 'react';\nimport { useRouteMatch } from 'react-router-dom';\nimport { RegistryContext } from '../../store';\nimport AsyncComponent from '@redhat-cloud-services/frontend-components/AsyncComponent';\n\nconst VulnerabilityTab = () => {\n    const { params } = useRouteMatch('/:inventoryId');\n    const { getRegistry } = useContext(RegistryContext);\n\n    return <AsyncComponent\n        appName=\"vulnerability\"\n        module=\"./SystemDetail\"\n        getRegistry={getRegistry}\n        customItnlProvider\n        entity={ { id: params.inventoryId } }\n    />;\n};\n\nexport default VulnerabilityTab;\n","import React from 'react';\nimport { useStore } from 'react-redux';\nimport AsyncComponent from '@redhat-cloud-services/frontend-components/AsyncComponent';\n\nconst AdvisorTab = () => {\n    return <AsyncComponent\n        appName=\"advisor\"\n        module=\"./SystemDetail\"\n        store={useStore()}\n        customItnl\n        intlProps={{\n            locale: navigator.language.slice(0, 2)\n        }}\n    />;\n};\n\nexport default AdvisorTab;\n","import React, { useContext } from 'react';\nimport { RegistryContext } from '../../store';\nimport AsyncComponent from '@redhat-cloud-services/frontend-components/AsyncComponent';\n\nconst PatchTab = () => {\n    const { getRegistry } = useContext(RegistryContext);\n\n    return <AsyncComponent\n        appName=\"patch\"\n        module=\"./SystemDetail\"\n        getRegistry={getRegistry}\n    />;\n};\n\nexport default PatchTab;\n","import React, { useContext } from 'react';\nimport { useRouteMatch } from 'react-router-dom';\nimport { RegistryContext } from '../../store';\nimport AsyncComponent from '@redhat-cloud-services/frontend-components/AsyncComponent';\n\nconst RosTab = () => {\n    const { params } = useRouteMatch('/:inventoryId');\n    const { getRegistry } = useContext(RegistryContext);\n\n    return <AsyncComponent\n        appName=\"ros\"\n        module=\"./SystemDetail\"\n        getRegistry={ getRegistry }\n        inventoryId={ params.inventoryId }\n    />;\n};\n\nexport default RosTab;\n","/* eslint-disable camelcase */\nimport { SYSTEM_ISSUE_TYPES } from './action-types';\n\nexport function advisor(state, { payload }) {\n    return {\n        ...state,\n        systemIssues: {\n            ...state?.systemIssues,\n            advisor: {\n                isLoaded: true,\n                criticalCount: payload?.filter(item => item?.total_risk >= 4)\n            }\n        }\n    };\n}\n\nexport function cve(state, { payload }) {\n    return {\n        ...state,\n        systemIssues: {\n            ...state?.systemIssues,\n            cve: {\n                isLoaded: true,\n                critical: {\n                    count: payload?.critical?.meta?.total_items || 0\n                },\n                moderate: {\n                    count: payload?.moderate?.meta?.total_items || 0\n                },\n                important: {\n                    count: payload?.important?.meta?.total_items || 0\n                },\n                low: {\n                    count: payload?.low?.meta?.total_items || 0\n                }\n            }\n        }\n    };\n}\n\nexport function patch(state, { payload }) {\n    return {\n        ...state,\n        systemIssues: {\n            ...state?.systemIssues,\n            patch: {\n                isLoaded: true,\n                bug: {\n                    count: payload?.data?.attributes?.rhba_count || 0\n                },\n                enhancement: {\n                    count: payload?.data?.attributes?.rhea_count || 0\n                },\n                security: {\n                    count: payload?.data?.attributes?.rhsa_count || 0\n                }\n            }\n        }\n    };\n}\n\nexport function compliance(state, { payload }) {\n    return {\n        ...state,\n        systemIssues: {\n            ...state?.systemIssues,\n            compliance: {\n                isLoaded: true,\n                profiles: payload?.data?.system?.profiles\n            }\n        }\n    };\n}\n\nexport function isPending(state, type) {\n    return {\n        ...state,\n        systemIssues: {\n            ...state?.systemIssues,\n            ...type && { [type]: { isLoaded: false } }\n        }\n    };\n}\n\nexport default {\n    [SYSTEM_ISSUE_TYPES.LOAD_ADVISOR_RECOMMENDATIONS_PENDING]: (state) => isPending(state, 'advisor'),\n    [SYSTEM_ISSUE_TYPES.LOAD_APPLICABLE_CVES_PENDING]: (state) => isPending(state, 'cve'),\n    [SYSTEM_ISSUE_TYPES.LOAD_APPLICABLE_ADVISORIES_PENDING]: (state) => isPending(state, 'patch'),\n    [SYSTEM_ISSUE_TYPES.LOAD_COMPLIANCE_POLICIES_PENDING]: (state) => isPending(state, 'compliance'),\n    [SYSTEM_ISSUE_TYPES.LOAD_ADVISOR_RECOMMENDATIONS_FULFILLED]: advisor,\n    [SYSTEM_ISSUE_TYPES.LOAD_APPLICABLE_CVES_FULFILLED]: cve,\n    [SYSTEM_ISSUE_TYPES.LOAD_APPLICABLE_ADVISORIES_FULFILLED]: patch,\n    [SYSTEM_ISSUE_TYPES.LOAD_COMPLIANCE_POLICIES_FULFILLED]: compliance\n};\n","import { ACTION_TYPES, APPLICATION_SELECTED, TOGGLE_TAG_MODAL, TOGGLE_DRAWER } from './action-types';\nimport { showTags, toggleTagModalReducer } from './entities';\nimport systemIssuesReducer from './systemIssues';\nexport const entityDefaultState = { loaded: false };\n\nfunction entityDetailPending(state) {\n    return {\n        ...state,\n        loaded: false\n    };\n}\n\nfunction entityDetailLoaded(state, { payload }) {\n    return {\n        ...state,\n        loaded: true,\n        entity: payload.results[0]\n    };\n}\n\nfunction onApplicationSelected(state, { payload }) {\n    return {\n        ...state,\n        activeApp: payload\n    };\n}\n\nfunction toggleDrawer(state, { payload }) {\n    return  {\n        ...state,\n        isToggleOpened: payload?.isOpened\n    };\n}\n\nfunction showTagsPending(state) {\n    return {\n        ...state,\n        tagModalLoaded: false\n    };\n}\n\nexport default {\n    [ACTION_TYPES.LOAD_ENTITIES_PENDING]: () => entityDefaultState,\n    [ACTION_TYPES.LOAD_ENTITY_PENDING]: entityDetailPending,\n    [ACTION_TYPES.LOAD_ENTITY_FULFILLED]: entityDetailLoaded,\n    [APPLICATION_SELECTED]: onApplicationSelected,\n    [ACTION_TYPES.LOAD_TAGS]: showTags,\n    [ACTION_TYPES.LOAD_TAGS_PENDING]: showTagsPending,\n    [ACTION_TYPES.LOAD_TAGS_FULFILLED]: showTags,\n    [TOGGLE_TAG_MODAL]: toggleTagModalReducer,\n    [TOGGLE_DRAWER]: toggleDrawer,\n    ...systemIssuesReducer\n};\n","import { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport { ACTION_TYPES } from '../action-types';\n\nconst loadWritePermissionsPending = (state) => ({\n    ...state,\n    loadingFailed: false,\n    loading: true,\n    writePermissions: undefined\n});\n\nconst loadWritePermissionsFulfilled = (state, { payload }) => ({\n    ...state,\n    loading: false,\n    loadingFailed: false,\n    writePermissions: payload.writePermissions\n});\n\nconst loadWritePermissionsFailed = (state) => ({\n    ...state,\n    loading: false,\n    loadingFailed: true\n});\n\nconst defaultPermissionState = {\n    loading: true,\n    writePermissions: false,\n    loadingFailed: false\n};\n\nconst permissionsReducer = applyReducerHash(\n    {\n        [`${ACTION_TYPES.LOAD_WRITE_PERMISSIONS}_PENDING`]: loadWritePermissionsPending,\n        [`${ACTION_TYPES.LOAD_WRITE_PERMISSIONS}_FULFILLED`]: loadWritePermissionsFulfilled,\n        [`${ACTION_TYPES.LOAD_WRITE_PERMISSIONS}_FAILED`]: loadWritePermissionsFailed\n    },\n    defaultPermissionState\n);\n\nexport default permissionsReducer;\n","import {\n    INVENTORY_ACTION_TYPES,\n    ACTION_TYPES,\n    SELECT_ENTITY,\n    SET_INVENTORY_FILTER,\n    SET_PAGINATION\n} from './action-types';\nimport systemProfileStore from './systemProfileStore';\nimport {\n    ComplianceTab,\n    VulnerabilityTab,\n    AdvisorTab,\n    GeneralInformationTab,\n    PatchTab,\n    RosTab\n} from '../components/SystemDetails';\nimport { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport { mergeArraysByKey } from '@redhat-cloud-services/frontend-components-utilities/helpers';\nimport { notificationsReducer } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport entitiesReducer, { defaultState as entitiesDefault } from './entities';\nimport entityDetailsReducer, { entityDefaultState as entityDefault } from './entityDetails';\n\nexport { entitiesReducer, entityDetailsReducer };\n\nimport permissionsReducer from './permissions/reducer';\n\nconst defaultState = { loaded: false, selected: new Map() };\n\nfunction entitiesLoaded(state, { payload }) {\n    return {\n        ...state,\n        rows: mergeArraysByKey([state.rows, payload.results]),\n        entities: mergeArraysByKey([state.entities, payload.results])\n    };\n}\n\nfunction updateEntity(state, { meta }) {\n    return {\n        ...state,\n        rows: state.rows.map((row) => row.id === meta?.id ? ({\n            ...row,\n            // eslint-disable-next-line camelcase\n            display_name: meta?.value\n        }) : row)\n    };\n}\n\nfunction entityLoaded(state) {\n    return {\n        ...state,\n        loaded: true,\n        activeApps: [\n            { title: 'General information', name: 'general_information', component: GeneralInformationTab },\n            { title: 'Advisor', name: 'advisor', component: AdvisorTab },\n            {\n                title: 'Vulnerability',\n                name: 'vulnerabilities',\n                component: VulnerabilityTab\n            },\n            {\n                title: 'Compliance',\n                name: 'compliance',\n                component: ComplianceTab\n            },\n            {\n                title: 'Patch',\n                name: 'patch',\n                component: PatchTab\n            },\n            {\n                title: 'Resource Optimization',\n                name: 'ros',\n                isVisible: false,\n                component: RosTab\n            }\n        ].filter(Boolean)\n    };\n}\n\nfunction entitySelected(state, { payload }) {\n    const selected = state.selected || (new Map());\n    if (payload.selected) {\n        if (payload.id === 0) {\n            state.rows.forEach(row => selected.set(row.id, row));\n        } else {\n            const selectedRow = state.rows && state.rows.find(({ id }) => id === payload.id);\n            selected.set(payload.id, { ...selectedRow || {}, id: payload.id });\n        }\n    } else {\n        if (payload.id === 0) {\n            state.rows.forEach(row => selected.delete(row.id));\n        } else if (payload.id === -1) {\n            selected.clear();\n        } else {\n            selected.delete(payload.id);\n        }\n    }\n\n    return {\n        ...state,\n        selected: new Map(selected)\n    };\n}\n\nfunction resourceOptTabVisibility(state, { payload }) {\n    return {\n        ...state,\n        activeApps: state.activeApps?.map((entity) => entity.name === 'ros' ? ({\n            ...entity,\n            isVisible: payload\n        }) : entity\n        )\n    };\n}\n\nfunction entityDeleted(state, { meta }) {\n    const selected = state.selected || (new Map());\n    meta.systems.forEach(id => selected.delete(id));\n\n    return {\n        ...state,\n        selected: new Map(selected)\n    };\n}\n\nfunction onEntitiesLoaded(state, { payload, meta }) {\n    if (meta?.lastDateRequest < state?.lastDateRequest) {\n        return state;\n    }\n\n    return {\n        ...state,\n        rows: mergeArraysByKey([state.rows, payload.results.map(result => {\n            return {\n                ...result,\n                selected: state.selected && state.selected.has(result.id)\n            };\n        })])\n    };\n}\n\nfunction onSetFilter(state, { payload }) {\n    return {\n        ...state,\n        activeFilters: payload.filtersList\n    };\n}\n\nfunction onSetPagination(state, { payload }) {\n    const perPage = parseInt(payload.perPage, 10);\n    const page = parseInt(payload.page, 10);\n    return {\n        ...state,\n        perPage: isNaN(perPage) ? 50 : perPage,\n        page: isNaN(page) ? 1 : page\n    };\n}\n\nlet reducers = {\n    notifications: notificationsReducer,\n    systemProfileStore,\n    permissionsReducer\n};\n\nexport const tableReducer = applyReducerHash(\n    {\n        [ACTION_TYPES.GET_ENTITIES_FULFILLED]: entitiesLoaded,\n        [INVENTORY_ACTION_TYPES.LOAD_ENTITIES_FULFILLED]: onEntitiesLoaded,\n        [`${ACTION_TYPES.REMOVE_ENTITY}_FULFILLED`]: entityDeleted,\n        [SELECT_ENTITY]: entitySelected,\n        FILTER_SELECT: (state) => ({ ...state, selected: {} }),\n        [SET_INVENTORY_FILTER]: onSetFilter,\n        [SET_PAGINATION]: onSetPagination,\n        [ACTION_TYPES.UPDATE_DISPLAY_NAME_FULFILLED]: updateEntity\n    },\n    defaultState\n);\n\nexport const entitesDetailReducer = () => applyReducerHash(\n    {\n        [INVENTORY_ACTION_TYPES.LOAD_ENTITY_FULFILLED]: entityLoaded,\n        [INVENTORY_ACTION_TYPES.LOAD_SYSTEM_PROFILE_FULFILLED]: resourceOptTabVisibility\n    },\n    defaultState\n);\n\nexport function mergeWithEntities(additionalReducers = (state) => state, defaultState = {}) {\n    return ({\n        entities: (state, payload) => ({\n            ...additionalReducers({\n                ...applyReducerHash({\n                    ...entitiesReducer\n                }, { ...entitiesDefault, ...defaultState })(state, payload)\n            }, payload)\n        })\n    });\n}\n\nexport function mergeWithDetail(additionalReducers = (state) => state, defaultState = {}) {\n    return ({\n        entityDetails: (state, payload) => ({\n            ...additionalReducers({\n                ...applyReducerHash({\n                    ...entityDetailsReducer\n                }, { ...entityDefault, ...defaultState })(state, payload)\n            }, payload)\n        })\n    });\n}\n\nexport default reducers;\n"],"names":["middlewareListener","RegistryContext","createContext","getRegistry","init","MiddlewareListener","middleware","ReducerRegistry","getMiddleware","promise","notificationsMiddleware","errorDescriptionKey","params","useRouteMatch","AsyncComponent","appName","module","store","useStore","customItnl","intlProps","locale","navigator","language","slice","inventoryId","remediationsEnabled","useContext","customItnlProvider","entity","id","isPending","state","type","systemIssues","isLoaded","SYSTEM_ISSUE_TYPES","payload","advisor","criticalCount","filter","item","total_risk","cve","critical","count","meta","total_items","moderate","important","low","patch","bug","data","attributes","rhba_count","enhancement","rhea_count","security","rhsa_count","compliance","profiles","system","entityDefaultState","loaded","ACTION_TYPES","results","APPLICATION_SELECTED","activeApp","showTags","tagModalLoaded","TOGGLE_TAG_MODAL","toggleTagModalReducer","TOGGLE_DRAWER","isToggleOpened","isOpened","systemIssuesReducer","applyReducerHash","loadingFailed","loading","writePermissions","undefined","defaultState","selected","Map","entityLoaded","activeApps","title","name","component","GeneralInformationTab","AdvisorTab","VulnerabilityTab","ComplianceTab","PatchTab","isVisible","RosTab","Boolean","resourceOptTabVisibility","map","reducers","notifications","notificationsReducer","systemProfileStore","permissionsReducer","tableReducer","rows","mergeArraysByKey","entities","INVENTORY_ACTION_TYPES","lastDateRequest","result","has","systems","forEach","delete","SELECT_ENTITY","row","set","selectedRow","find","clear","SET_INVENTORY_FILTER","activeFilters","filtersList","SET_PAGINATION","perPage","parseInt","page","isNaN","display_name","value","entitesDetailReducer","mergeWithEntities","additionalReducers","entitiesReducer","entitiesDefault","mergeWithDetail","entityDetails","entityDetailsReducer","entityDefault"],"sourceRoot":""}