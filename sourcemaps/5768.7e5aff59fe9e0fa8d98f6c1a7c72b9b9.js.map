{"version":3,"file":"js/5768.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/AsyncComponent/index.js","webpack:///./src/components/InventoryGroups/Modals/RemoveHostsFromGroupModal.js","webpack:///./src/components/SystemDetails/GeneralInfo.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/Main/Main.js","webpack:///./src/components/InventoryGroups/SmallComponents/CreateGroupButton.js","webpack:///./src/components/InventoryGroups/Modals/AddSelectedHostsToGroupModal.js","webpack:///./src/Utilities/hooks/useBulkSelectConfig.js","webpack:///./src/routes/InventoryTable.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react';\nimport { ScalprumComponent } from '@scalprum/react-core';\nimport { Bullseye, Spinner } from '@patternfly/react-core';\nimport classNames from 'classnames';\nvar BaseAsyncComponent = function (_a) {\n    var appName = _a.appName, scope = _a.scope, module = _a.module, _b = _a.fallback, fallback = _b === void 0 ? (_jsx(Bullseye, { children: _jsx(Spinner, { size: \"xl\" }) })) : _b, innerRef = _a.innerRef, className = _a.className, _c = _a.component, Cmp = _c === void 0 ? 'section' : _c, props = __rest(_a, [\"appName\", \"scope\", \"module\", \"fallback\", \"innerRef\", \"className\", \"component\"]);\n    var SCProps = __assign({ className: className, appName: appName, module: module, scope: scope !== null && scope !== void 0 ? scope : appName, ErrorComponent: fallback, ref: innerRef, fallback: fallback }, props);\n    return (_jsx(Cmp, __assign({ className: classNames(className, appName) }, { children: _jsx(ScalprumComponent, __assign({}, SCProps)) })));\n};\nvar AsynComponent = React.forwardRef(function (props, ref) { return _jsx(BaseAsyncComponent, __assign({ innerRef: ref }, props)); });\nexport default AsynComponent;\n//# sourceMappingURL=index.js.map","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Modal from './Modal';\nimport apiWithToast from '../utils/apiWithToast';\nimport { useDispatch } from 'react-redux';\nimport { removeHostsFromGroup } from '../utils/api';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport { Text } from '@patternfly/react-core';\n\nconst schema = (groupName, hosts) => ({\n    fields: [\n        {\n            component: componentTypes.PLAIN_TEXT,\n            name: 'warning-message',\n            label:\n                hosts.length === 1 ? (\n                    <Text>\n                        <strong>{hosts[0].display_name}</strong> will no longer be part of <strong>{groupName}</strong> and\n            its configuration will be impacted.\n                    </Text>\n                ) : (\n                    <Text>\n                        <strong>{hosts.length}</strong> systems will no longer be part of <strong>{groupName}</strong> and\n            their configuration will be impacted.\n                    </Text>\n                )\n        }\n    ]\n});\n\nconst RemoveHostsFromGroupModal = ({\n    isModalOpen,\n    setIsModalOpen,\n    modalState: hosts,\n    reloadData\n}) => {\n    const dispatch = useDispatch();\n    // the current iteration of groups feature a host can be in at maximum one group\n    const { name: groupName, id: groupId } = hosts[0].groups[0];\n\n    const handleRemoveHosts = () => {\n        const statusMessages = {\n            onSuccess: {\n                title: `${hosts.length} ${\n          hosts.length > 1 ? 'systems' : 'system'\n        } removed from ${groupName}`\n            },\n            onError: {\n                title: `Failed to remove ${hosts.length} ${\n          hosts.length > 1 ? 'systems' : 'system'\n        } from ${groupName}`\n            }\n        };\n\n        apiWithToast(\n            dispatch,\n            () =>\n                removeHostsFromGroup(\n                    groupId,\n                    hosts.map(({ id }) => id)\n                ),\n            statusMessages\n        );\n    };\n\n    return (\n        <Modal\n            isModalOpen={isModalOpen}\n            closeModal={() => setIsModalOpen(false)}\n            title=\"Remove from group\"\n            variant=\"danger\"\n            submitLabel=\"Remove\"\n            schema={schema(groupName, hosts)}\n            onSubmit={handleRemoveHosts}\n            reloadData={reloadData}\n        />\n    );\n};\n\nRemoveHostsFromGroupModal.propTypes = {\n    modalState: PropTypes.arrayOf(\n        PropTypes.shape({\n            // eslint-disable-next-line camelcase\n            display_name: PropTypes.string,\n            id: PropTypes.string,\n            groups: PropTypes.arrayOf(\n                PropTypes.shape({\n                    id: PropTypes.string,\n                    name: PropTypes.string\n                })\n            )\n        })\n    ).isRequired,\n    isModalOpen: PropTypes.bool.isRequired,\n    setIsModalOpen: PropTypes.func.isRequired,\n    reloadData: PropTypes.func\n};\n\nexport default RemoveHostsFromGroupModal;\n","import React from 'react';\n\nimport GeneralInformation from '../GeneralInfo/GeneralInformation';\nexport { default as TextInputModal } from '../GeneralInfo/TextInputModal';\n\nconst GeneralInfoTab = (props) => {\n    return <GeneralInformation  {...props} />;\n};\n\nexport default GeneralInfoTab;\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useEffect } from 'react';\nimport classNames from 'classnames';\nimport '../Main/main.css';\nexport var Main = function (_a) {\n    var children = _a.children, className = _a.className, props = __rest(_a, [\"children\", \"className\"]);\n    useEffect(function () {\n        console.error(\"Using deprecated \\\"Main\\\" component. Do not use it. Either remove it from your JSX or replace it by \\\"section\\\" HTML element.\");\n    }, []);\n    return (_jsx(\"section\", __assign({}, props, { className: \"\".concat(classNames(className, 'pf-l-page__main-section pf-c-page__main-section')) }, { children: children })));\n};\nexport var InternalMain = Main;\nexport default Main;\n//# sourceMappingURL=Main.js.map","import React from 'react';\nimport { Button, Text } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\n\nexport const CreateGroupButton = ({ closeModal }) => (\n    <>\n        <Text>Or</Text>\n        <Button variant=\"secondary\" className=\"pf-u-w-50\" onClick={closeModal}>\n        Create a new group\n        </Button>\n    </>\n);\n\nCreateGroupButton.propTypes = {\n    closeModal: PropTypes.func\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Modal from './Modal';\nimport { addHostsToGroupById } from '../utils/api';\nimport apiWithToast from '../utils/apiWithToast';\nimport { useDispatch } from 'react-redux';\nimport { CreateGroupButton } from '../SmallComponents/CreateGroupButton';\nimport { addHostSchema } from './ModalSchemas/schemes';\nimport CreateGroupModal from './CreateGroupModal';\n\nconst AddSelectedHostsToGroupModal = ({\n    isModalOpen,\n    setIsModalOpen,\n    modalState: hosts,\n    reloadData\n}) => {\n    const dispatch = useDispatch();\n\n    const [isCreateGroupModalOpen, setIsCreateGroupModalOpen] = useState(false);\n    const handleAddDevices = (values) => {\n        const { group } = values;\n        const statusMessages = {\n            onSuccess: {\n                title: 'Success',\n                description: `System(s) have been added to ${group.name} successfully`\n            },\n            onError: {\n                title: 'Error',\n                description: `Failed to add ${\n          hosts.length > 1 ? `${hosts.length} systems` : hosts[0].display_name\n        } to ${group.name}`\n            }\n        };\n\n        apiWithToast(\n            dispatch,\n            () => addHostsToGroupById(group.id, hosts.map(({ id }) => id)),\n            statusMessages\n        );\n    };\n\n    return (\n        <>\n            {!isCreateGroupModalOpen &&\n            <Modal\n                isModalOpen={isModalOpen}\n                closeModal={() => setIsModalOpen(false)}\n                title=\"Add to group\"\n                submitLabel=\"Add\"\n                schema={addHostSchema(hosts)}\n                additionalMappers={{\n                    'create-group-btn': {\n                        component: CreateGroupButton,\n                        closeModal: () => setIsCreateGroupModalOpen(true)\n                    }\n                }}\n                onSubmit={handleAddDevices}\n                reloadData={reloadData}\n            />\n            }\n            {isCreateGroupModalOpen && (\n                <CreateGroupModal\n                    isModalOpen={isCreateGroupModalOpen}\n                    setIsModalOpen={setIsCreateGroupModalOpen}\n                    //modal before prop tells create group modal that it should\n                    //reopen add host modal when user closes create group modal\n                    modalBefore={true}\n                    setterOfModalBefore={setIsModalOpen}\n                />\n            )}\n        </>\n    );\n};\n\nAddSelectedHostsToGroupModal.propTypes = {\n    modalState: PropTypes.arrayOf(\n        PropTypes.shape({\n            // eslint-disable-next-line camelcase\n            display_name: PropTypes.string,\n            id: PropTypes.string\n        })\n    ).isRequired,\n    isModalOpen: PropTypes.bool,\n    setIsModalOpen: PropTypes.func,\n    reloadData: PropTypes.func\n};\n\nexport default AddSelectedHostsToGroupModal;\n","/* eslint-disable camelcase */\nimport { Spinner } from '@patternfly/react-core';\nimport { flatten, map } from 'lodash';\nimport React, { useCallback, useState, Fragment } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as actions from '../../store/actions';\nimport { loadSystems } from '../sharedFunctions';\nimport useFetchBatched from './useFetchBatched';\n\nexport const useBulkSelectConfig = (selected, globalFilter, total, rows, loaded) => {\n    const [isBulkLoading, setBulkLoading] = useState(false);\n    const { fetchBatched } = useFetchBatched();\n    const dispatch = useDispatch();\n    const onSelectRows = (id, isSelected) => dispatch(actions.selectEntity(id, isSelected));\n    const calculateSelected = () => selected ? selected.size : 0;\n    const { activeFilters } = useSelector(({ entities }) => entities);\n\n    const getEntitiesWrapper = async (filters, { page, per_page }) => {\n        const resp = loadSystems(\n            { page, per_page, ...filters }\n        );\n\n        const data = await resp.payload;\n        return data;\n\n    };\n\n    const calculateChecked = (rows = [], selected) => (\n        rows.every(({ id }) => selected && selected.has(id))\n            ? rows.length > 0\n            : rows.some(({ id }) => selected && selected.has(id)) && null\n    );\n\n    const fetchAllSystemIds = useCallback((filters, total) => {\n        return fetchBatched(getEntitiesWrapper, total, filters);\n    }, []);\n\n    const selectAllIds = async (selected = true) => {\n        setBulkLoading(true);\n        const data = await fetchAllSystemIds({ filters: activeFilters, globalFilter }, total);\n        const results = flatten(map(data, 'results'));\n        dispatch(actions.selectEntity(results, selected));\n        setBulkLoading(false);\n    };\n\n    return (\n        {\n            id: 'bulk-select-systems',\n            items: [{\n                title: 'Select none (0)',\n                onClick: () => {\n                    onSelectRows(-1, false);\n                },\n                props: { isDisabled: !selected }\n            },\n            {\n                ...loaded && rows && rows.length > 0 ? {\n                    title: `Select page (${ rows.length })`,\n                    onClick: () => {\n                        onSelectRows(0, true);\n                    }\n                } : {}\n            },\n            {\n                ...loaded && rows && rows.length > 0 ? {\n                    title: `Select all (${ total })`,\n                    onClick: async () => {\n                        await selectAllIds();\n\n                    }\n                } : {}\n            }\n            ],\n            checked: calculateChecked(rows, selected),\n            onSelect: (value) => {\n                onSelectRows(0, value);\n            },\n            toggleProps: {\n                'data-ouia-component-type': 'bulk-select-toggle-button',\n                children: isBulkLoading ? [\n                    <Fragment key='sd'>\n                        <Spinner size=\"sm\" />\n                        {`${calculateSelected()} selected`}\n                    </Fragment>\n                ] : `${calculateSelected()} selected`\n            }\n        });\n\n};\n","/* eslint-disable camelcase */\nimport React, { useEffect, useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport './inventory.scss';\nimport { PageHeader, PageHeaderTitle, Main } from '@redhat-cloud-services/frontend-components';\nimport * as actions from '../store/actions';\nimport { Tabs, Tab, TabTitleText, Grid, GridItem } from '@patternfly/react-core';\nimport { addNotification as addNotificationAction } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport DeleteModal from '../Utilities/DeleteModal';\nimport { TextInputModal } from '../components/SystemDetails/GeneralInfo';\nimport flatMap from 'lodash/flatMap';\nimport { useWritePermissions, RHCD_FILTER_KEY, UPDATE_METHOD_KEY, generateFilter, HOST_GROUP_CHIP } from '../Utilities/constants';\nimport { InventoryTable as InventoryTableCmp } from '../components/InventoryTable';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\nimport AddSelectedHostsToGroupModal from '../components/InventoryGroups/Modals/AddSelectedHostsToGroupModal';\nimport useFeatureFlag from '../Utilities/useFeatureFlag';\nimport AsyncComponent from '@redhat-cloud-services/frontend-components/AsyncComponent';\nimport { useBulkSelectConfig } from '../Utilities/hooks/useBulkSelectConfig';\nimport RemoveHostsFromGroupModal from '../components/InventoryGroups/Modals/RemoveHostsFromGroupModal';\n\nconst mapTags = ({ category, values }) => values.map(({ tagKey, value }) => `${\n    category ? `${category}/` : ''\n}${\n    tagKey\n}${\n    value ? `=${value}` : ''\n}`);\n\nconst filterMapper = {\n    staleFilter: ({ staleFilter }, searchParams) => staleFilter.forEach(item => searchParams.append('status', item)),\n    osFilter: ({ osFilter }, searchParams) => osFilter\n    ?.forEach(item => searchParams.append('operating_system', item)),\n    registeredWithFilter: ({ registeredWithFilter }, searchParams) => registeredWithFilter\n    ?.forEach(item => searchParams.append('source', item)),\n    value: ({ value, filter }, searchParams) => value === 'hostname_or_id' &&\n    Boolean(filter) &&\n    searchParams.append('hostname_or_id', filter),\n    tagFilters: ({ tagFilters }, searchParams) => tagFilters?.length > 0 && searchParams.append(\n        'tags',\n        flatMap(tagFilters, mapTags)\n    ),\n    rhcdFilter: ({ rhcdFilter }, searchParams) => rhcdFilter?.forEach(item => searchParams.append(RHCD_FILTER_KEY, item)),\n    lastSeenFilter: ({ lastSeenFilter }, searchParams) =>\n        Object.keys(lastSeenFilter || {})?.forEach(item => item === 'mark' &&\n        searchParams.append('last_seen', lastSeenFilter[item])),\n    updateMethodFilter: ({ updateMethodFilter }, searchParams) =>\n        updateMethodFilter?.forEach(item => searchParams.append(UPDATE_METHOD_KEY, item)),\n    hostGroupFilter: ({ hostGroupFilter }, searchParams) => hostGroupFilter\n    ?.forEach(item => searchParams.append(HOST_GROUP_CHIP, item))\n};\n\nconst calculateFilters = (searchParams, filters = []) => {\n    filters.forEach((filter) => {\n        Object.keys(filter).forEach(key => {\n            filterMapper?.[key]?.(filter, searchParams);\n        });\n    });\n    return searchParams;\n};\n\nexport const calculatePagination = (searchParams, page, perPage) => {\n    const currSearch = new URLSearchParams(location.search);\n    const newPage = page !== undefined ? page : currSearch.get('page');\n    const newPerPage = perPage !== undefined ? perPage : currSearch.get('per_page');\n    !isNaN(parseInt(newPage)) && searchParams.append('page', newPage);\n    !isNaN(parseInt(newPerPage)) && searchParams.append('per_page', newPerPage);\n};\n\nconst Inventory = ({\n    status,\n    source,\n    filterbyName,\n    tagsFilter,\n    operatingSystem,\n    rhcdFilter,\n    updateMethodFilter,\n    lastSeenFilter,\n    page,\n    perPage,\n    initialLoading,\n    hasAccess,\n    hostGroupFilter\n}) => {\n    const history = useHistory();\n    const chrome = useChrome();\n    const inventory = useRef(null);\n    const [isModalOpen, handleModalToggle] = useState(false);\n    const [currentSystem, setCurrentSystem] = useState({});\n    const [filters, onSetfilters] = useState(\n        generateFilter(\n            status,\n            source,\n            tagsFilter,\n            filterbyName,\n            operatingSystem,\n            rhcdFilter,\n            updateMethodFilter,\n            hostGroupFilter,\n            lastSeenFilter)\n    );\n    const [activeTabKey, setActiveTabkey] = useState(0);\n    const handleTabClick = (_event, tabIndex) => setActiveTabkey(tabIndex);\n    const [ediOpen, onEditOpen] = useState(false);\n    const [addHostGroupModalOpen, setAddHostGroupModalOpen] = useState(false);\n    const [removeHostsFromGroupModalOpen, setRemoveHostsFromGroupModalOpen] = useState(false);\n    const [globalFilter, setGlobalFilter] = useState();\n    const writePermissions = useWritePermissions();\n    const rows = useSelector(({ entities }) => entities?.rows, shallowEqual);\n    const loaded = useSelector(({ entities }) => entities?.loaded);\n    const selected = useSelector(({ entities }) => entities?.selected);\n    const total = useSelector(({ entities }) => entities?.total);\n    const dispatch = useDispatch();\n    const groupsEnabled = useFeatureFlag('hbi.ui.inventory-groups');\n    const bulkSelectConfig = useBulkSelectConfig(selected, globalFilter, total, rows, loaded);\n\n    const onRefresh = (options, callback) => {\n        onSetfilters(options?.filters);\n        const searchParams = new URLSearchParams();\n        calculateFilters(searchParams, options?.filters);\n        // eslint-disable-next-line camelcase\n        calculatePagination(searchParams, options?.page, options?.per_page);\n        const search = searchParams.toString();\n        history.push({\n            search,\n            hash: location.hash\n        });\n\n        if (callback) {\n            callback(options);\n        }\n    };\n\n    const EdgeParityEnabled = useFeatureFlag('edgeParity.inventory-list');\n\n    useEffect(() => {\n        chrome.updateDocumentTitle('Systems | Red Hat Insights');\n        chrome?.hideGlobalFilter?.(false);\n        chrome.appAction('system-list');\n        chrome.appObjectId();\n        chrome.on('GLOBAL_FILTER_UPDATE', ({ data }) => {\n            const [workloads, SID, tags] = chrome?.mapGlobalFilter?.(data, false, true);\n            setGlobalFilter({\n                tags,\n                filter: {\n                    ...globalFilter?.filter,\n                    system_profile: {\n                        ...globalFilter?.filter?.system_profile,\n                        ...workloads?.SAP?.isSelected && { sap_system: true },\n                        ...workloads && workloads['Ansible Automation Platform']?.isSelected\n                            && { ansible: 'not_nil' },\n                        ...workloads?.['Microsoft SQL']?.isSelected\n                            && { mssql: 'not_nil' },\n                        ...SID?.length > 0 && { sap_sids: SID }\n                    }\n                }\n            });\n        });\n        dispatch(actions.clearNotifications());\n\n        if (perPage || page) {\n            dispatch(actions.setPagination(\n                Array.isArray(page) ? page[0] : page,\n                Array.isArray(perPage) ? perPage[0] : perPage\n            ));\n        }\n\n        return () => {\n            dispatch(actions.clearEntitiesAction());\n        };\n    }, []);\n\n    const calculateSelected = () => selected ? selected.size : 0;\n\n    const isBulkRemoveFromGroupsEnabled = () => {\n        if (calculateSelected() > 0) {\n            const selectedHosts = Array.from(selected.values());\n\n            return selectedHosts.every(\n                ({ groups }) =>\n                    groups.length !== 0 &&\n                groups[0].name === selectedHosts[0].groups[0].name\n            );\n        }\n\n        return false;\n    };\n\n    const isBulkAddHostsToGroupsEnabled = () => {\n        if (calculateSelected() > 0) {\n            const selectedHosts = Array.from(selected.values());\n\n            return selectedHosts.every(({ groups }) => groups.length === 0);\n        }\n\n        return false;\n    };\n\n    //This wrapping of table actions allows to pass feature flag status and receive a prepared array of actions\n    const tableActions = (groupsUiStatus, row) => {\n        const standardActions = [\n            {\n                title: 'Edit',\n                onClick: (_event, _index, rowData) => {\n                    setCurrentSystem(rowData);\n                    onEditOpen(() => true);\n                }\n            },\n            {\n                title: 'Delete',\n                onClick: (_event, _index, rowData) => {\n                    setCurrentSystem(rowData);\n                    handleModalToggle(() => true);\n                }\n            }\n        ];\n\n        const actionsBehindFeatureFlag = [\n            {\n                title: 'Add to group',\n                onClick: (_event, _index, rowData) => {\n                    setCurrentSystem([rowData]);\n                    setAddHostGroupModalOpen(true);\n                },\n                isDisabled: row.groups.length > 0\n            },\n            {\n                title: 'Remove from group',\n                onClick: (event, index, rowData) => {\n                    setCurrentSystem([rowData]);\n                    setRemoveHostsFromGroupModalOpen(true);\n                },\n                isDisabled: row.groups.length === 0\n            }\n        ];\n\n        return [...(groupsUiStatus ? actionsBehindFeatureFlag : []), ...standardActions];\n    };\n\n    const traditionalDevices = <Grid gutter=\"md\">\n        <GridItem span={12}>\n            <InventoryTableCmp\n                hasAccess={hasAccess}\n                isRbacEnabled\n                customFilters={{ filters, globalFilter }}\n                isFullView\n                showTags\n                onRefresh={onRefresh}\n                hasCheckbox={writePermissions}\n                autoRefresh\n                ignoreRefresh\n                initialLoading={initialLoading}\n                ref={inventory}\n                tableProps={\n                    (writePermissions && {\n                        actionResolver: (row) => tableActions(groupsEnabled, row), canSelectAll: false })}\n                {...(writePermissions && {\n                    actionsConfig: {\n                        actions: [{\n                            label: 'Delete',\n                            props: {\n                                isDisabled: calculateSelected() === 0,\n                                variant: 'secondary',\n                                onClick: () => {\n                                    setCurrentSystem(Array.from(selected.values()));\n                                    handleModalToggle(true);\n                                }\n                            }\n                        },\n                        ...groupsEnabled ? [\n                            {\n                                label: 'Add to group',\n                                props: {\n                                    isDisabled: !isBulkAddHostsToGroupsEnabled()\n                                },\n                                onClick: () => {\n                                    setCurrentSystem(Array.from(selected.values()));\n                                    setAddHostGroupModalOpen(true);\n                                }\n                            },\n                            {\n                                label: 'Remove from group',\n                                props: {\n                                    isDisabled: !isBulkRemoveFromGroupsEnabled()\n                                },\n                                onClick: () => {\n                                    setCurrentSystem(Array.from(selected.values()));\n                                    setRemoveHostsFromGroupModalOpen(true);\n                                }\n                            }] : []\n                        ]\n                    },\n                    bulkSelect: bulkSelectConfig\n                })}\n                onRowClick={(_e, id, app) => history.push(`/${id}${app ? `/${app}` : ''}`)}\n            />\n        </GridItem>\n    </Grid>;\n\n    return (\n\n        <React.Fragment>\n            <PageHeader className=\"pf-m-light\">\n                <PageHeaderTitle title='Systems'/>\n            </PageHeader>\n            <Main>\n\n                {EdgeParityEnabled ?\n                    <Tabs\n                        className=\"pf-m-light pf-c-table\"\n                        activeKey={activeTabKey}\n                        onSelect={handleTabClick}\n                    >\n                        <Tab eventKey={0} title={<TabTitleText>Traditional (RPM-DNF)</TabTitleText>}>\n                            {traditionalDevices}\n                        </Tab>\n                        <Tab eventKey={1} title={<TabTitleText>Immutable (OSTree)</TabTitleText>}>\n                            <AsyncComponent\n                                appName=\"edge\"\n                                module=\"./Inventory\"\n                                historyProp={useHistory}\n                                locationProp={useLocation}\n                                showHeaderProp={false}\n                            />\n                        </Tab>\n                    </Tabs>  :  traditionalDevices }\n\n            </Main>\n            <DeleteModal\n                className ='sentry-mask data-hj-suppress'\n                handleModalToggle={handleModalToggle}\n                isModalOpen={isModalOpen}\n                currentSytems={currentSystem}\n                onConfirm={() => {\n                    let displayName;\n                    let removeSystems;\n                    if (Array.isArray(currentSystem)) {\n                        removeSystems = currentSystem.map(({ id }) => id);\n                        displayName = currentSystem.length > 1 ?\n                            `${currentSystem.length} systems` :\n                            currentSystem[0].display_name;\n                    } else {\n                        displayName = currentSystem.display_name;\n                        removeSystems = [currentSystem.id];\n                    }\n\n                    dispatch(addNotificationAction({\n                        id: 'remove-initiated',\n                        variant: 'warning',\n                        title: 'Delete operation initiated',\n                        description: `Removal of ${displayName} started.`,\n                        dismissable: false\n                    }));\n                    dispatch(actions.deleteEntity(removeSystems, displayName));\n                    handleModalToggle(false);\n                }}\n            />\n            <TextInputModal\n                title=\"Edit display name\"\n                isOpen={ediOpen}\n                value={currentSystem.display_name}\n                onCancel={() => onEditOpen(false)}\n                onSubmit={(value) => {\n                    dispatch(actions.editDisplayName(currentSystem.id, value));\n                    onEditOpen(false);\n                }}\n            />\n            {\n                groupsEnabled === true &&\n                    <>\n                        {\n                            addHostGroupModalOpen &&\n                            <AddSelectedHostsToGroupModal\n                                isModalOpen={addHostGroupModalOpen}\n                                setIsModalOpen={setAddHostGroupModalOpen}\n                                modalState={currentSystem}\n                                reloadData={() => {\n                                    if (calculateSelected() > 0) {\n                                        dispatch(actions.selectEntity(-1, false));\n                                    }\n\n                                    inventory.current.onRefreshData(filters, false, true);\n                                }}\n                            />\n                        }\n                        {\n                            removeHostsFromGroupModalOpen &&\n                            <RemoveHostsFromGroupModal\n                                isModalOpen={removeHostsFromGroupModalOpen}\n                                setIsModalOpen={setRemoveHostsFromGroupModalOpen}\n                                modalState={currentSystem}\n                                reloadData={() => {\n                                    if (calculateSelected() > 0) {\n                                        dispatch(actions.selectEntity(-1, false));\n                                    }\n\n                                    inventory.current.onRefreshData(filters, false, true);\n                                }}\n                            />\n                        }\n                    </>\n            }\n        </React.Fragment>\n    );\n};\n\nInventory.propTypes = {\n    status: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.string]),\n    source: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.string]),\n    operatingSystem: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.string]),\n    filterbyName: PropTypes.arrayOf(PropTypes.string),\n    tagsFilter: PropTypes.any,\n    page: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])),\n    perPage: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])),\n    initialLoading: PropTypes.bool,\n    rhcdFilter: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.string]),\n    updateMethodFilter: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.string]),\n    hasAccess: PropTypes.bool,\n    hostGroupFilter: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.string]),\n    lastSeenFilter: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.string])\n};\n\nInventory.defaultProps = {\n    initialLoading: true\n};\n\nexport default Inventory;\n"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","BaseAsyncComponent","_a","appName","scope","module","_b","fallback","Bullseye","children","Spinner","size","innerRef","className","_c","component","Cmp","props","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__rest","SCProps","ErrorComponent","ref","ScalprumComponent","schema","groupName","hosts","fields","componentTypes","name","label","display_name","RemoveHostsFromGroupModal","isModalOpen","setIsModalOpen","modalState","reloadData","dispatch","useDispatch","groups","groupId","id","closeModal","title","variant","submitLabel","onSubmit","statusMessages","onSuccess","onError","apiWithToast","removeHostsFromGroup","map","propTypes","PropTypes","isRequired","GeneralInformation","useEffect","console","error","concat","CreateGroupButton","Text","Button","onClick","AddSelectedHostsToGroupModal","useState","isCreateGroupModalOpen","setIsCreateGroupModalOpen","Modal","addHostSchema","additionalMappers","values","group","description","addHostsToGroupById","CreateGroupModal","modalBefore","setterOfModalBefore","mapTags","category","tagKey","value","filterMapper","staleFilter","searchParams","forEach","item","append","osFilter","registeredWithFilter","filter","Boolean","tagFilters","flatMap","rhcdFilter","RHCD_FILTER_KEY","lastSeenFilter","keys","updateMethodFilter","UPDATE_METHOD_KEY","hostGroupFilter","HOST_GROUP_CHIP","calculatePagination","page","perPage","currSearch","URLSearchParams","location","search","newPage","undefined","get","newPerPage","isNaN","parseInt","Inventory","status","source","filterbyName","tagsFilter","operatingSystem","initialLoading","hasAccess","history","useHistory","chrome","useChrome","inventory","useRef","handleModalToggle","currentSystem","setCurrentSystem","generateFilter","filters","onSetfilters","activeTabKey","setActiveTabkey","ediOpen","onEditOpen","addHostGroupModalOpen","setAddHostGroupModalOpen","removeHostsFromGroupModalOpen","setRemoveHostsFromGroupModalOpen","globalFilter","setGlobalFilter","writePermissions","useWritePermissions","rows","useSelector","entities","shallowEqual","loaded","selected","total","groupsEnabled","useFeatureFlag","bulkSelectConfig","isBulkLoading","setBulkLoading","fetchBatched","useFetchBatched","onSelectRows","isSelected","actions","calculateSelected","activeFilters","getEntitiesWrapper","per_page","resp","loadSystems","payload","data","fetchAllSystemIds","useCallback","selectAllIds","results","flatten","items","isDisabled","checked","every","has","some","calculateChecked","onSelect","toggleProps","Fragment","key","useBulkSelectConfig","EdgeParityEnabled","updateDocumentTitle","hideGlobalFilter","appAction","appObjectId","on","mapGlobalFilter","workloads","SID","tags","system_profile","SAP","sap_system","ansible","mssql","sap_sids","Array","isArray","traditionalDevices","Grid","gutter","GridItem","span","InventoryTable","isRbacEnabled","customFilters","isFullView","showTags","onRefresh","options","callback","calculateFilters","toString","push","hash","hasCheckbox","autoRefresh","ignoreRefresh","tableProps","actionResolver","row","groupsUiStatus","standardActions","_event","_index","rowData","actionsBehindFeatureFlag","event","index","tableActions","canSelectAll","actionsConfig","from","selectedHosts","isBulkRemoveFromGroupsEnabled","bulkSelect","onRowClick","_e","app","PageHeader","PageHeaderTitle","Tabs","activeKey","tabIndex","Tab","eventKey","TabTitleText","T","AsyncComponent","historyProp","locationProp","useLocation","showHeaderProp","DeleteModal","currentSytems","onConfirm","displayName","removeSystems","addNotificationAction","dismissable","TextInputModal","isOpen","onCancel","current","onRefreshData","defaultProps"],"sourceRoot":""}