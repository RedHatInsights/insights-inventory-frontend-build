{"version":3,"file":"js/2884.c936a6cc47d5ca83cbe1.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-core/dist/esm/components/EmptyState/EmptyStateSecondaryActions.js","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/plus-circle-icon.js","webpack:///./node_modules/@patternfly/react-tokens/dist/esm/global_warning_color_100.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_palette_black_600.js","webpack:///./node_modules/@patternfly/react-tokens/dist/esm/global_danger_color_100.js","webpack:///./src/components/InventoryGroups/Modals/DeleteGroupModal.js","webpack:///./src/components/InventoryGroups/Modals/RenameGroupModal.js","webpack:///./node_modules/lodash/difference.js"],"sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/EmptyState/empty-state';\nexport const EmptyStateSecondaryActions = (_a) => {\n    var { children = null, className = '' } = _a, props = __rest(_a, [\"children\", \"className\"]);\n    return (React.createElement(\"div\", Object.assign({ className: css(styles.emptyStateSecondary, className) }, props), children));\n};\nEmptyStateSecondaryActions.displayName = 'EmptyStateSecondaryActions';\n//# sourceMappingURL=EmptyStateSecondaryActions.js.map","import { createIcon } from '../createIcon';\n\nexport const PlusCircleIconConfig = {\n  name: 'PlusCircleIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm144 276c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92h-92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const PlusCircleIcon = createIcon(PlusCircleIconConfig);\n\nexport default PlusCircleIcon;","export const global_warning_color_100 = {\n  \"name\": \"--pf-global--warning-color--100\",\n  \"value\": \"#f0ab00\",\n  \"var\": \"var(--pf-global--warning-color--100)\"\n};\nexport default global_warning_color_100;","\"use strict\";\nexports.__esModule = true;\nexports.global_palette_black_600 = {\n  \"name\": \"--pf-global--palette--black-600\",\n  \"value\": \"#6a6e73\",\n  \"var\": \"var(--pf-global--palette--black-600)\"\n};\nexports[\"default\"] = exports.global_palette_black_600;","export const global_danger_color_100 = {\n  \"name\": \"--pf-global--danger-color--100\",\n  \"value\": \"#c9190b\",\n  \"var\": \"var(--pf-global--danger-color--100)\"\n};\nexport default global_danger_color_100;","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport Modal from './Modal';\nimport { deleteGroupsById, getGroupsByIds } from '../utils/api';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons/dist/esm/icons/exclamation-triangle-icon';\nimport warningColor from '@patternfly/react-tokens/dist/esm/global_warning_color_100';\nimport dangerColor from '@patternfly/react-tokens/dist/esm/global_danger_color_100';\nimport { Backdrop, Bullseye, Spinner, Text } from '@patternfly/react-core';\nimport apiWithToast from '../utils/apiWithToast';\nimport { useDispatch } from 'react-redux';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\n\nconst generateTitle = (groups, groupsAreEmpty) => {\n    if (groupsAreEmpty) {\n        return groups.length > 1 ? 'Delete groups?' : 'Delete group?';\n    }\n\n    return groups.length > 1\n        ? 'Cannot delete groups at this time'\n        : 'Cannot delete group at this time';\n};\n\nconst generateIcon = (groupsAreEmpty) =>\n    groupsAreEmpty ? (\n        <ExclamationTriangleIcon color={warningColor.value} />\n    ) : (\n        <ExclamationCircleIcon color={dangerColor.value} />\n    );\n\nconst generateSchema = (groups, groupsAreEmpty) =>\n    groupsAreEmpty\n        ? {\n            fields: [\n                {\n                    component: componentTypes.PLAIN_TEXT,\n                    name: 'warning-message',\n                    label:\n                    groups.length > 1 ? (\n                        <Text>\n                            <strong>{groups.length}</strong> groups and all their data will\n                  be deleted.\n                        </Text>\n                    ) : (\n                        <Text>\n                            <strong>{groups[0]?.name}</strong> and all its data will be deleted.\n                        </Text>\n                    )\n                },\n                {\n                    component: componentTypes.CHECKBOX,\n                    name: 'confirmation',\n                    label: 'I understand that this action cannot be undone.',\n                    validate: [{ type: validatorTypes.REQUIRED }]\n                }\n            ]\n        } : {\n            fields: [\n                {\n                    component: componentTypes.PLAIN_TEXT,\n                    name: 'danger-message',\n                    label:\n          groups.length > 1 ? (\n              <Text>\n              Groups containing systems cannot be deleted. To delete groups,\n              first remove all of the systems from them.\n              </Text>\n          ) : (\n              <Text>\n              Groups containing systems cannot be deleted. To delete{' '}\n                  <strong>{groups[0].name}</strong>, first remove all of the systems\n              from it.\n              </Text>\n          )\n                }\n            ]\n        }\n     ;\n\nconst generateContent = (groups = [], groupsAreEmpty) => {\n    return {\n        title: generateTitle(groups, groupsAreEmpty),\n        titleIconVariant: () => generateIcon(groupsAreEmpty),\n        variant: groupsAreEmpty ? 'danger' : 'primary',\n        submitLabel: groupsAreEmpty ? 'Delete' : 'Close',\n        schema: generateSchema(groups, groupsAreEmpty)\n    };\n};\n\nconst DeleteGroupModal = ({\n    isModalOpen,\n    setIsModalOpen,\n    reloadData,\n    groupIds\n}) => {\n    const dispatch = useDispatch();\n    const [fetchedGroups, setFetchedGroups] = useState(undefined);\n    const groupsAreEmpty = (fetchedGroups || []).every(({ host_count: hostCount }) => hostCount === 0);\n    const [isLoading, setIsLoading] = useState(true);\n\n    useEffect(() => {\n        // check that all groups are empty before deletion\n        let ignore = false;\n\n        const verifyGroupsAreEmpty = async () => {\n            const fetchedGroups = await getGroupsByIds(groupIds);\n\n            if (!ignore) {\n                setFetchedGroups(fetchedGroups.results);\n                setIsLoading(false);\n            }\n\n            // TODO: treat the error case\n        };\n\n        verifyGroupsAreEmpty();\n\n        return () => {\n            ignore = true;\n        };\n    }, []);\n\n    const handleDeleteGroup = () => {\n        const statusMessages = {\n            onSuccess: {\n                title: 'Success',\n                description:\n          groupIds.length > 1\n              ? `${groupIds.length} groups deleted`\n              : `${name} has been removed successfully`\n            },\n            onError: {\n                title: 'Error',\n                description:\n                groupIds.length > 1\n                    ? `Failed to delete ${groupIds.length} groups`\n                    : `Failed to delete group ${name}`\n            }\n        };\n        apiWithToast(dispatch, () => deleteGroupsById(groupIds), statusMessages);\n    };\n\n    return (isLoading ?\n        <Backdrop>\n            <Bullseye>\n                <Spinner aria-label=\"Loading the modal spinner\" aria-valueText=\"Loading...\" />\n            </Bullseye>\n        </Backdrop>\n        : <Modal\n            isModalOpen={isModalOpen}\n            closeModal={() => setIsModalOpen(false)}\n            onSubmit={groupsAreEmpty ? handleDeleteGroup : () => setIsModalOpen(false)}\n            reloadData={reloadData}\n            {...generateContent(fetchedGroups, groupsAreEmpty)}\n        />\n    );\n};\n\nDeleteGroupModal.propTypes = {\n    groupIds: PropTypes.arrayOf(PropTypes.string).isRequired,\n    isModalOpen: PropTypes.bool,\n    setIsModalOpen: PropTypes.func,\n    reloadData: PropTypes.func\n};\nexport default DeleteGroupModal;\n","import React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport Modal from './Modal';\nimport awesomeDebouncePromise from 'awesome-debounce-promise';\nimport { validateGroupName, updateGroupById } from '../utils/api';\nimport { nameValidator } from '../helpers/validate';\nimport apiWithToast from '../utils/apiWithToast';\nimport { useDispatch } from 'react-redux';\n\nconst renameGroupSchema = (namePresenceValidator) => ({\n    fields: [\n        {\n            component: componentTypes.TEXT_FIELD,\n            name: 'name',\n            label: 'Name',\n            helperText:\n          'Can only contain letters, numbers, spaces, hyphens ( - ), and underscores( _ ).',\n            isRequired: true,\n            validate: [\n                namePresenceValidator,\n                { type: validatorTypes.REQUIRED },\n                { type: validatorTypes.MAX_LENGTH, threshold: 50 },\n                nameValidator\n            ]\n        }\n    ]\n});\n\nconst RenameGroupModal = ({\n    isModalOpen,\n    setIsModalOpen,\n    modalState,\n    reloadData\n}) => {\n    const { id, name } = modalState;\n    const dispatch = useDispatch();\n\n    const handleRenameModal = (values) => {\n        const statusMessages = {\n            onSuccess: {\n                title: 'Success',\n                description: `${name} has been renamed to ${values.name} successfully`\n            },\n            onError: { title: 'Error', description: 'Failed to rename group' }\n        };\n        apiWithToast(dispatch, () => updateGroupById(id, { name: values.name }), statusMessages);\n    };\n\n    const schema = useMemo(() => {\n        const check = async (value) => {\n            const results = await validateGroupName(value);\n            if (results === true) {\n                throw 'Group name already exists';\n            }\n\n            return undefined;\n        };\n\n        // eslint-disable-next-line new-cap\n        const d = awesomeDebouncePromise(check, 500, { onlyResolvesLast: false });\n        return renameGroupSchema(d);\n    }, []);\n\n    return (\n        <Modal\n            isModalOpen={isModalOpen}\n            closeModal={() => setIsModalOpen(false)}\n            title=\"Rename group\"\n            submitLabel=\"Save\"\n            schema={schema}\n            initialValues={modalState}\n            onSubmit={handleRenameModal}\n            reloadData={reloadData}\n        />\n    );\n};\n\nRenameGroupModal.propTypes = {\n    modalState: PropTypes.shape({\n        id: PropTypes.string,\n        name: PropTypes.string\n    }),\n    isModalOpen: PropTypes.bool,\n    setIsModalOpen: PropTypes.func,\n    reloadData: PropTypes.func\n};\n\nexport default RenameGroupModal;\n","var baseDifference = require('./_baseDifference'),\n    baseFlatten = require('./_baseFlatten'),\n    baseRest = require('./_baseRest'),\n    isArrayLikeObject = require('./isArrayLikeObject');\n\n/**\n * Creates an array of `array` values not included in the other given arrays\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons. The order and references of result values are\n * determined by the first array.\n *\n * **Note:** Unlike `_.pullAll`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {...Array} [values] The values to exclude.\n * @returns {Array} Returns the new array of filtered values.\n * @see _.without, _.xor\n * @example\n *\n * _.difference([2, 1], [2, 3]);\n * // => [1]\n */\nvar difference = baseRest(function(array, values) {\n  return isArrayLikeObject(array)\n    ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n    : [];\n});\n\nmodule.exports = difference;\n"],"names":["EmptyStateSecondaryActions","_a","children","className","props","__rest","Object","assign","displayName","PlusCircleIconConfig","name","height","width","svgPath","yOffset","xOffset","PlusCircleIcon","exports","i","generateTitle","groups","groupsAreEmpty","length","generateSchema","fields","component","componentTypes","label","Text","validate","type","validatorTypes","DeleteGroupModal","isModalOpen","setIsModalOpen","reloadData","groupIds","dispatch","useDispatch","useState","undefined","fetchedGroups","setFetchedGroups","every","host_count","isLoading","setIsLoading","useEffect","ignore","verifyGroupsAreEmpty","getGroupsByIds","results","Backdrop","Bullseye","Spinner","Modal","closeModal","onSubmit","statusMessages","onSuccess","title","description","onError","apiWithToast","deleteGroupsById","titleIconVariant","color","warningColor","dangerColor","generateIcon","variant","submitLabel","schema","generateContent","propTypes","PropTypes","isRequired","RenameGroupModal","modalState","id","useMemo","namePresenceValidator","check","value","validateGroupName","awesomeDebouncePromise","onlyResolvesLast","helperText","threshold","nameValidator","initialValues","values","updateGroupById","baseDifference","baseFlatten","baseRest","isArrayLikeObject","difference","array","module"],"sourceRoot":""}