{"version":3,"file":"js/8004.1ceba0ccd9262111a506.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/outlined-arrow-alt-circle-down-icon.js","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/outlined-arrow-alt-circle-up-icon.js","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/outlined-question-circle-icon.js","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/pencil-alt-icon.js","webpack:///./src/components/GeneralInfo/LoadingCard/LoadingCard.js","webpack:///./src/components/GeneralInfo/EditButton/EditButton.js","webpack:///./src/components/GeneralInfo/SystemCard/SystemCard.js","webpack:///./src/components/GeneralInfo/TextInputModal/TextInputModal.js","webpack:///./src/components/GeneralInfo/dataMapper/dataMapper.js","webpack:///./src/components/GeneralInfo/selectors/selectors.js"],"sourcesContent":["import { createIcon } from '../createIcon';\n\nexport const OutlinedArrowAltCircleDownIconConfig = {\n  name: 'OutlinedArrowAltCircleDownIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm0 448c-110.5 0-200-89.5-200-200S145.5 56 256 56s200 89.5 200 200-89.5 200-200 200zm-32-316v116h-67c-10.7 0-16 12.9-8.5 20.5l99 99c4.7 4.7 12.3 4.7 17 0l99-99c7.6-7.6 2.2-20.5-8.5-20.5h-67V140c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const OutlinedArrowAltCircleDownIcon = createIcon(OutlinedArrowAltCircleDownIconConfig);\n\nexport default OutlinedArrowAltCircleDownIcon;","import { createIcon } from '../createIcon';\n\nexport const OutlinedArrowAltCircleUpIconConfig = {\n  name: 'OutlinedArrowAltCircleUpIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M256 504c137 0 248-111 248-248S393 8 256 8 8 119 8 256s111 248 248 248zm0-448c110.5 0 200 89.5 200 200s-89.5 200-200 200S56 366.5 56 256 145.5 56 256 56zm20 328h-40c-6.6 0-12-5.4-12-12V256h-67c-10.7 0-16-12.9-8.5-20.5l99-99c4.7-4.7 12.3-4.7 17 0l99 99c7.6 7.6 2.2 20.5-8.5 20.5h-67v116c0 6.6-5.4 12-12 12z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const OutlinedArrowAltCircleUpIcon = createIcon(OutlinedArrowAltCircleUpIconConfig);\n\nexport default OutlinedArrowAltCircleUpIcon;","import { createIcon } from '../createIcon';\n\nexport const OutlinedQuestionCircleIconConfig = {\n  name: 'OutlinedQuestionCircleIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M256 8C119.043 8 8 119.083 8 256c0 136.997 111.043 248 248 248s248-111.003 248-248C504 119.083 392.957 8 256 8zm0 448c-110.532 0-200-89.431-200-200 0-110.495 89.472-200 200-200 110.491 0 200 89.471 200 200 0 110.53-89.431 200-200 200zm107.244-255.2c0 67.052-72.421 68.084-72.421 92.863V300c0 6.627-5.373 12-12 12h-45.647c-6.627 0-12-5.373-12-12v-8.659c0-35.745 27.1-50.034 47.579-61.516 17.561-9.845 28.324-16.541 28.324-29.579 0-17.246-21.999-28.693-39.784-28.693-23.189 0-33.894 10.977-48.942 29.969-4.057 5.12-11.46 6.071-16.666 2.124l-27.824-21.098c-5.107-3.872-6.251-11.066-2.644-16.363C184.846 131.491 214.94 112 261.794 112c49.071 0 101.45 38.304 101.45 88.8zM298 368c0 23.159-18.841 42-42 42s-42-18.841-42-42 18.841-42 42-42 42 18.841 42 42z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const OutlinedQuestionCircleIcon = createIcon(OutlinedQuestionCircleIconConfig);\n\nexport default OutlinedQuestionCircleIcon;","import { createIcon } from '../createIcon';\n\nexport const PencilAltIconConfig = {\n  name: 'PencilAltIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M497.9 142.1l-46.1 46.1c-4.7 4.7-12.3 4.7-17 0l-111-111c-4.7-4.7-4.7-12.3 0-17l46.1-46.1c18.7-18.7 49.1-18.7 67.9 0l60.1 60.1c18.8 18.7 18.8 49.1 0 67.9zM284.2 99.8L21.6 362.4.4 483.9c-2.9 16.4 11.4 30.6 27.8 27.8l121.5-21.3 262.6-262.6c4.7-4.7 4.7-12.3 0-17l-111-111c-4.8-4.7-12.4-4.7-17.1 0zM124.1 339.9c-5.5-5.5-5.5-14.3 0-19.8l154-154c5.5-5.5 14.3-5.5 19.8 0s5.5 14.3 0 19.8l-154 154c-5.5 5.5-14.3 5.5-19.8 0zM88 424h48v36.3l-64.5 11.3-31.1-31.1L51.7 376H88v48z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const PencilAltIcon = createIcon(PencilAltIconConfig);\n\nexport default PencilAltIcon;","import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  CardBody,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextList,\n  TextListItem,\n  TextListItemVariants,\n  TextListVariants,\n  TextVariants,\n} from '@patternfly/react-core';\nimport {\n  Skeleton,\n  SkeletonSize,\n} from '@redhat-cloud-services/frontend-components/Skeleton';\nimport { Link, useParams } from 'react-router-dom';\n\nconst valueToText = (value, singular, plural) => {\n  if ((value || value === 0) && singular) {\n    return value === 1\n      ? `1 ${singular}`\n      : `${value} ${plural || `${singular}s`}`;\n  }\n\n  if (value === 0) {\n    return 'None';\n  }\n\n  return value || 'Not available';\n};\n\nexport const Clickable = ({ value, target, plural, singular, onClick }) => {\n  const { modalId } = useParams();\n  useEffect(() => {\n    if (target === modalId) {\n      onClick({ value, target });\n    }\n  }, [modalId, target]);\n\n  return <Link to={`./${target}`}>{valueToText(value, singular, plural)}</Link>;\n};\n\nClickable.propTypes = {\n  value: PropTypes.node,\n  target: PropTypes.string,\n  onClick: PropTypes.func,\n  plural: PropTypes.string,\n  singular: PropTypes.string,\n};\n\nconst LoadingCard = ({ title, isLoading, items, children }) => (\n  <Card ouiaId=\"system-properties-card\">\n    <CardBody>\n      <Stack hasGutter>\n        <StackItem>\n          <TextContent>\n            <Text component={TextVariants.h1}>{title}</Text>\n          </TextContent>\n        </StackItem>\n        <StackItem isFilled>\n          {items.length ? (\n            <TextContent>\n              <TextList component={TextListVariants.dl}>\n                {items.map(\n                  (\n                    {\n                      onClick,\n                      value,\n                      target,\n                      plural,\n                      singular,\n                      size,\n                      title: itemTitle,\n                      customClass,\n                    },\n                    key\n                  ) => (\n                    <Fragment key={key}>\n                      <TextListItem\n                        component={TextListItemVariants.dt}\n                        data-ouia-component-id={`${\n                          typeof itemTitle === 'string'\n                            ? itemTitle\n                            : itemTitle?.props?.title\n                        } title`}\n                      >\n                        {itemTitle}\n                      </TextListItem>\n                      <TextListItem\n                        className={customClass}\n                        component={TextListItemVariants.dd}\n                        data-ouia-component-id={`${\n                          typeof itemTitle === 'string'\n                            ? itemTitle\n                            : itemTitle?.props?.title\n                        } value`}\n                      >\n                        {isLoading && (\n                          <Skeleton size={size || SkeletonSize.sm} />\n                        )}\n                        {!isLoading &&\n                          (onClick && value ? (\n                            <div>\n                              <Clickable\n                                onClick={onClick}\n                                value={value}\n                                target={target}\n                                plural={plural}\n                                singular={singular}\n                              />\n                            </div>\n                          ) : (\n                            valueToText(value, singular, plural)\n                          ))}\n                      </TextListItem>\n                    </Fragment>\n                  )\n                )}\n              </TextList>\n            </TextContent>\n          ) : null}\n          {children}\n        </StackItem>\n      </Stack>\n    </CardBody>\n  </Card>\n);\n\nLoadingCard.propTypes = {\n  title: PropTypes.node.isRequired,\n  isLoading: PropTypes.bool,\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.node,\n      value: PropTypes.node,\n      onClick: PropTypes.func,\n      size: PropTypes.oneOf(Object.values(SkeletonSize)),\n      plural: PropTypes.string,\n      singular: PropTypes.string,\n      customClass: PropTypes.string,\n    })\n  ),\n  children: PropTypes.node,\n};\n\nLoadingCard.defaultProps = {\n  isLoading: true,\n  items: [],\n};\n\nexport default LoadingCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { usePermissionsWithContext } from '@redhat-cloud-services/frontend-components-utilities/RBACHook';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\n\nimport { PencilAltIcon } from '@patternfly/react-icons';\nimport {\n  NO_MODIFY_HOST_TOOLTIP_MESSAGE,\n  REQUIRED_PERMISSION_TO_MODIFY_HOST_IN_GROUP,\n} from '../../../constants';\nimport { useSelector } from 'react-redux';\nimport { Button, Tooltip } from '@patternfly/react-core';\n\nconst InnerButton = ({ link, onClick }) => (\n  <Button\n    component=\"a\"\n    href={`${window.location.href}/${link}`}\n    onClick={onClick}\n    className=\"ins-c-inventory__detail--action\"\n    aria-label=\"Edit\"\n    variant=\"link\"\n  >\n    <PencilAltIcon />\n  </Button>\n);\n\nInnerButton.propTypes = {\n  link: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nconst EditButtonUnknownPermissions = (props) => {\n  const entity = useSelector(({ entityDetails }) => entityDetails?.entity);\n\n  const { hasAccess: canEditHost } = usePermissionsWithContext([\n    REQUIRED_PERMISSION_TO_MODIFY_HOST_IN_GROUP(\n      entity?.groups?.[0]?.id ?? null // null stands for ungroupped hosts\n    ),\n  ]);\n\n  if (!canEditHost) {\n    return (\n      <Tooltip content={NO_MODIFY_HOST_TOOLTIP_MESSAGE}>\n        <Button isAriaDisabled aria-label=\"Edit\" variant=\"plain\">\n          <PencilAltIcon />\n        </Button>\n      </Tooltip>\n    );\n  }\n\n  return <InnerButton {...props} />;\n};\n\nEditButtonUnknownPermissions.propTypes = {\n  link: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nconst EditButtonWrapper = ({ writePermissions, ...props }) => {\n  const { isProd } = useChrome();\n\n  if (isProd?.() || writePermissions) {\n    return <InnerButton {...props} />;\n  }\n\n  if (typeof writePermissions !== 'boolean') {\n    return <EditButtonUnknownPermissions {...props} />;\n  }\n\n  return (\n    <Tooltip content={NO_MODIFY_HOST_TOOLTIP_MESSAGE}>\n      <Button isAriaDisabled aria-label=\"Edit\" variant=\"plain\">\n        <PencilAltIcon />\n      </Button>\n    </Tooltip>\n  );\n};\n\nEditButtonWrapper.propTypes = {\n  writePermissions: PropTypes.bool,\n};\n\nexport default EditButtonWrapper;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport LoadingCard from '../LoadingCard';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport { propertiesSelector } from '../selectors';\nimport { editAnsibleHost, editDisplayName } from '../../../store/actions';\nimport TextInputModal from '../TextInputModal';\nimport { Button, Popover } from '@patternfly/react-core';\nimport EditButton from '../EditButton';\nimport { generalMapper } from '../dataMapper';\nimport { extraShape } from '../../../constants';\n\nconst TitleWithPopover = ({ title, content }) => (\n  <React.Fragment>\n    <span>{title}</span>\n    <Popover\n      headerContent={<div>{title}</div>}\n      bodyContent={<div>{content}</div>}\n    >\n      <Button\n        variant=\"plain\"\n        aria-label={`Action for ${title}`}\n        className=\"ins-active-general_information__popover-icon\"\n      >\n        <OutlinedQuestionCircleIcon />\n      </Button>\n    </Popover>\n  </React.Fragment>\n);\n\nclass SystemCardCore extends Component {\n  state = {\n    isDisplayNameModalOpen: false,\n    isAnsibleHostModalOpen: false,\n  };\n\n  onCancel = () => {\n    this.setState({\n      isDisplayNameModalOpen: false,\n      isAnsibleHostModalOpen: false,\n    });\n  };\n\n  onSubmit = (fn, origValue) => (value) => {\n    const { entity } = this.props;\n    fn(entity.id, value, origValue);\n    this.onCancel();\n  };\n\n  onShowDisplayModal = (event) => {\n    event.preventDefault();\n    this.setState({\n      isDisplayNameModalOpen: true,\n    });\n  };\n\n  onShowAnsibleModal = (event) => {\n    event.preventDefault();\n    this.setState({\n      isAnsibleHostModalOpen: true,\n    });\n  };\n\n  getAnsibleHost = () => {\n    const { entity } = this.props;\n    return entity.ansible_host || entity.fqdn || entity.id;\n  };\n\n  render() {\n    const {\n      detailLoaded,\n      entity,\n      properties,\n      setDisplayName,\n      setAnsibleHost,\n      writePermissions,\n      handleClick,\n      hasHostName,\n      hasDisplayName,\n      hasAnsibleHostname,\n      hasSAP,\n      hasSystemPurpose,\n      hasCPUs,\n      hasSockets,\n      hasCores,\n      hasCPUFlags,\n      hasRAM,\n      extra,\n    } = this.props;\n    const { isDisplayNameModalOpen, isAnsibleHostModalOpen } = this.state;\n    return (\n      <Fragment>\n        <LoadingCard\n          title=\"System properties\"\n          isLoading={!detailLoaded}\n          items={[\n            ...(hasHostName\n              ? [\n                  {\n                    title: (\n                      <TitleWithPopover\n                        title=\"Host name\"\n                        content=\"Name imported from the system.\"\n                      />\n                    ),\n                    value: entity.fqdn,\n                    size: 'md',\n                    customClass: 'sentry-mask data-hj-suppress',\n                  },\n                ]\n              : []),\n            ...(hasDisplayName\n              ? [\n                  {\n                    title: (\n                      <TitleWithPopover\n                        title=\"Display name\"\n                        content=\"System name displayed in an inventory list.\"\n                      />\n                    ),\n                    value: (\n                      <Fragment>\n                        {entity.display_name}\n                        <EditButton\n                          writePermissions={writePermissions}\n                          link=\"display_name\"\n                          onClick={this.onShowDisplayModal}\n                        />\n                      </Fragment>\n                    ),\n                    size: 'md',\n                    customClass: 'sentry-mask data-hj-suppress',\n                  },\n                ]\n              : []),\n            ...(hasAnsibleHostname\n              ? [\n                  {\n                    title: (\n                      <TitleWithPopover\n                        title=\"Ansible hostname\"\n                        content=\"Hostname that is used in playbooks by Remediations.\"\n                      />\n                    ),\n                    value: (\n                      <Fragment>\n                        {this.getAnsibleHost()}\n                        <EditButton\n                          writePermissions={writePermissions}\n                          link=\"ansible_name\"\n                          onClick={this.onShowAnsibleModal}\n                        />\n                      </Fragment>\n                    ),\n                    size: 'md',\n                    customClass: 'sentry-mask data-hj-suppress',\n                  },\n                ]\n              : []),\n            ...(hasSAP\n              ? [\n                  {\n                    title: 'SAP',\n                    value: properties.sapIds?.length,\n                    singular: 'identifier',\n                    target: 'sap_sids',\n                    onClick: () => {\n                      handleClick(\n                        'SAP IDs (SID)',\n                        generalMapper(properties.sapIds, 'SID')\n                      );\n                    },\n                  },\n                ]\n              : []),\n            ...(hasSystemPurpose\n              ? [{ title: 'System purpose', value: properties.systemPurpose }]\n              : []),\n            ...(hasCPUs\n              ? [{ title: 'Number of CPUs', value: properties.cpuNumber }]\n              : []),\n            ...(hasSockets\n              ? [{ title: 'Sockets', value: properties.sockets }]\n              : []),\n            ...(hasCores\n              ? [\n                  {\n                    title: 'Cores per socket',\n                    value: properties.coresPerSocket,\n                  },\n                ]\n              : []),\n            ...(hasCPUFlags\n              ? [\n                  {\n                    title: 'CPU flags',\n                    value: properties?.cpuFlags?.length,\n                    singular: 'flag',\n                    target: 'flag',\n                    onClick: () =>\n                      handleClick(\n                        'CPU flags',\n                        generalMapper(properties.cpuFlags, 'flag name')\n                      ),\n                  },\n                ]\n              : []),\n            ...(hasRAM ? [{ title: 'RAM', value: properties.ramSize }] : []),\n            ...extra.map(({ onClick, ...item }) => ({\n              ...item,\n              ...(onClick && { onClick: (e) => onClick(e, handleClick) }),\n            })),\n          ]}\n        />\n        <TextInputModal\n          isOpen={isDisplayNameModalOpen}\n          title=\"Edit display name\"\n          value={entity && entity.display_name}\n          ariaLabel=\"Host inventory display name\"\n          modalOuiaId=\"edit-display-name-modal\"\n          cancelOuiaId=\"cancel-edit-display-name\"\n          confirmOuiaId=\"confirm-edit-display-name\"\n          inputOuiaId=\"input-edit-display-name\"\n          onCancel={this.onCancel}\n          onSubmit={this.onSubmit(\n            setDisplayName,\n            entity && entity.display_name\n          )}\n          className=\"sentry-mask data-hj-suppress\"\n        />\n        <TextInputModal\n          isOpen={isAnsibleHostModalOpen}\n          title=\"Edit Ansible host\"\n          value={entity && this.getAnsibleHost()}\n          ariaLabel=\"Ansible host\"\n          modalOuiaId=\"edit-ansible-name-modal\"\n          cancelOuiaId=\"cancel-edit-ansible-name\"\n          confirmOuiaId=\"confirm-edit-ansible-name\"\n          inputOuiaId=\"input-edit-ansible-name\"\n          onCancel={this.onCancel}\n          onSubmit={this.onSubmit(\n            setAnsibleHost,\n            entity && this.getAnsibleHost()\n          )}\n          className=\"sentry-mask data-hj-suppress\"\n        />\n      </Fragment>\n    );\n  }\n}\n\nSystemCardCore.propTypes = {\n  detailLoaded: PropTypes.bool,\n  entity: PropTypes.shape({\n    // eslint-disable-next-line camelcase\n    display_name: PropTypes.string,\n    // eslint-disable-next-line camelcase\n    ansible_host: PropTypes.string,\n    fqdn: PropTypes.string,\n    id: PropTypes.string,\n  }),\n  properties: PropTypes.shape({\n    cpuNumber: PropTypes.number,\n    sockets: PropTypes.number,\n    coresPerSocket: PropTypes.number,\n    ramSize: PropTypes.string,\n    storage: PropTypes.arrayOf(\n      PropTypes.shape({\n        device: PropTypes.string,\n        // eslint-disable-next-line camelcase\n        mount_point: PropTypes.string,\n        options: PropTypes.shape({}),\n        type: PropTypes.string,\n      })\n    ),\n    sapIds: PropTypes.arrayOf(PropTypes.string),\n    systemPurpose: PropTypes.string,\n    cpuFlags: PropTypes.array,\n  }),\n  setDisplayName: PropTypes.func,\n  setAnsibleHost: PropTypes.func,\n  writePermissions: PropTypes.bool,\n  handleClick: PropTypes.func,\n  hasHostName: PropTypes.bool,\n  hasDisplayName: PropTypes.bool,\n  hasAnsibleHostname: PropTypes.bool,\n  hasSAP: PropTypes.bool,\n  hasSystemPurpose: PropTypes.bool,\n  hasCPUs: PropTypes.bool,\n  hasSockets: PropTypes.bool,\n  hasCores: PropTypes.bool,\n  hasCPUFlags: PropTypes.bool,\n  hasRAM: PropTypes.bool,\n  extra: PropTypes.arrayOf(extraShape),\n};\nSystemCardCore.defaultProps = {\n  detailLoaded: false,\n  entity: {},\n  properties: {},\n  hasHostName: true,\n  hasDisplayName: true,\n  hasAnsibleHostname: true,\n  hasSAP: true,\n  hasSystemPurpose: true,\n  hasCPUs: true,\n  hasSockets: true,\n  hasCores: true,\n  hasCPUFlags: true,\n  hasRAM: true,\n  extra: [],\n};\n\nTitleWithPopover.propTypes = {\n  title: PropTypes.string.isRequired,\n  content: PropTypes.string.isRequired,\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setDisplayName: (id, value, origValue) => {\n      dispatch(editDisplayName(id, value, origValue));\n    },\n\n    setAnsibleHost: (id, value, origValue) => {\n      dispatch(editAnsibleHost(id, value, origValue));\n    },\n  };\n}\n\nexport const SystemCard = connect(\n  ({ entityDetails: { entity }, systemProfileStore: { systemProfile } }) => ({\n    entity,\n    detailLoaded: systemProfile && systemProfile.loaded,\n    properties: propertiesSelector(systemProfile, entity),\n  }),\n  mapDispatchToProps\n)(SystemCardCore);\n\nSystemCard.propTypes = SystemCardCore.propTypes;\nSystemCard.defaultProps = SystemCardCore.defaultProps;\n\nexport default SystemCard;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Button, Modal, TextInput } from '@patternfly/react-core';\n\nexport default class TextInputModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (!props.isOpen) {\n      return { value: undefined };\n    }\n\n    if (state.value !== undefined) {\n      return null;\n    }\n\n    return {\n      value: props.value || '',\n    };\n  }\n\n  render() {\n    const {\n      title,\n      isOpen,\n      onCancel,\n      onSubmit,\n      ariaLabel,\n      modalOuiaId,\n      cancelOuiaId,\n      confirmOuiaId,\n      inputOuiaId,\n    } = this.props;\n    const { value } = this.state;\n\n    return (\n      <Modal\n        variant=\"small\"\n        title={title}\n        className=\"ins-c-inventory__detail--edit\"\n        aria-label={ariaLabel ? `${ariaLabel} - modal` : 'input modal'}\n        ouiaId={modalOuiaId}\n        isOpen={isOpen}\n        onClose={(event) => onCancel(event)}\n        actions={[\n          <Button\n            key=\"confirm\"\n            data-action=\"confirm\"\n            variant=\"primary\"\n            onClick={() => onSubmit(this.state.value)}\n            ouiaId={confirmOuiaId}\n            isDisabled={this.props.value === this.state.value}\n          >\n            Save\n          </Button>,\n          <Button\n            key=\"cancel\"\n            data-action=\"cancel\"\n            variant=\"link\"\n            onClick={onCancel}\n            ouiaId={cancelOuiaId}\n          >\n            Cancel\n          </Button>,\n        ]}\n      >\n        <TextInput\n          value={value}\n          type=\"text\"\n          ouiaId={inputOuiaId}\n          onChange={(value) => this.setState({ value })}\n          aria-label={ariaLabel}\n        />\n      </Modal>\n    );\n  }\n}\n\nTextInputModal.propTypes = {\n  title: PropTypes.string,\n  isOpen: PropTypes.bool,\n  onCancel: PropTypes.func,\n  onSubmit: PropTypes.func,\n  ariaLabel: PropTypes.string,\n  modalOuiaId: PropTypes.string,\n  cancelOuiaId: PropTypes.string,\n  confirmOuiaId: PropTypes.string,\n  inputOuiaId: PropTypes.string,\n  value: PropTypes.string,\n};\n\nTextInputModal.defaultProps = {\n  onCancel: () => undefined,\n  onSubmit: () => undefined,\n  isOpen: false,\n  title: '',\n  ariaLabel: 'input text',\n};\n","/* eslint-disable camelcase */\n\nimport React from 'react';\nimport {\n  CheckCircleIcon,\n  OutlinedArrowAltCircleDownIcon,\n  OutlinedArrowAltCircleUpIcon,\n  OutlinedQuestionCircleIcon,\n  TimesIcon,\n} from '@patternfly/react-icons';\nimport { sortable } from '@patternfly/react-table';\nimport { Tooltip } from '@patternfly/react-core';\n\nexport const statusHelper = {\n  UP: (\n    <Tooltip content=\"Service is running\">\n      <OutlinedArrowAltCircleUpIcon className=\"ins-c-inventory__detail--up\" />\n    </Tooltip>\n  ),\n  DOWN: (\n    <Tooltip content=\"Service has stopped\">\n      <OutlinedArrowAltCircleDownIcon className=\"ins-c-inventory__detail--down\" />\n    </Tooltip>\n  ),\n};\n\nexport const enabledHelper = {\n  true: (\n    <Tooltip content=\"Source enabled\">\n      <CheckCircleIcon className=\"ins-c-inventory__detail--enabled\" />\n    </Tooltip>\n  ),\n  false: (\n    <Tooltip content=\"Source disabled\">\n      <TimesIcon className=\"ins-c-inventory__detail--disabled\" />\n    </Tooltip>\n  ),\n};\n\nexport const diskMapper = (devices = []) => ({\n  cells: [\n    {\n      title: 'Device',\n      transforms: [sortable],\n    },\n    {\n      title: 'Label',\n      transforms: [sortable],\n    },\n    {\n      title: 'Mount point',\n      transforms: [sortable],\n    },\n    {\n      title: 'Type',\n      transforms: [sortable],\n    },\n  ],\n  rows: devices.map(({ device, label, mountpoint, options, mounttype }) => {\n    const calculatedOptions = (options && options.options) || options;\n    return {\n      isOpen: false,\n      child: (\n        <div>\n          {calculatedOptions &&\n            Object.entries(calculatedOptions.value || calculatedOptions)\n              .map(([oneKey, option]) => `${oneKey}=${option.value || option}`)\n              .join(',  ')}\n        </div>\n      ),\n      cells: [\n        (device && device.value) || device,\n        label,\n        (mountpoint && mountpoint.value) || mountpoint,\n        (mounttype && mounttype.value) || mounttype,\n      ],\n    };\n  }),\n  expandable: true,\n});\n\nexport const productsMapper = (products = []) => ({\n  cells: [\n    {\n      title: 'Name',\n      transforms: [sortable],\n    },\n    'Status',\n  ],\n  rows: products.map((product) => [\n    product.name,\n    {\n      title: statusHelper[product.status] || (\n        <Tooltip content=\"Unknown service status\">\n          <OutlinedQuestionCircleIcon className=\"ins-c-inventory__detail--unknown\" />\n        </Tooltip>\n      ),\n    },\n  ]),\n});\n\nexport const interfaceMapper = (data = []) => ({\n  cells: [\n    {\n      title: 'MAC address',\n      transforms: [sortable],\n    },\n    {\n      title: 'MTU',\n      transforms: [sortable],\n    },\n    {\n      title: 'Name',\n      transforms: [sortable],\n    },\n    'State',\n    {\n      title: 'Type',\n      transforms: [sortable],\n    },\n  ],\n  rows: data.map((item) => [\n    item.mac_address,\n    item.mtu,\n    item.name,\n    {\n      title: statusHelper[item.state] || (\n        <Tooltip content=\"Unknown service status\">\n          <OutlinedQuestionCircleIcon className=\"ins-c-inventory__detail--unknown\" />\n        </Tooltip>\n      ),\n    },\n    item.type,\n  ]),\n});\n\nexport const repositoriesMapper = (\n  { enabled, disabled } = { enabled: [], disabled: [] }\n) => ({\n  cells: [\n    {\n      title: 'Name',\n      transforms: [sortable],\n    },\n    {\n      title: 'Enabled',\n      transforms: [sortable],\n    },\n    {\n      title: 'GPG check',\n      transforms: [sortable],\n    },\n  ],\n  rows: [...enabled, ...disabled].map((repository) => [\n    {\n      title: repository.name,\n      sortValue: repository.name,\n    },\n    {\n      title: enabledHelper[Boolean(repository.enabled)],\n      sortValue: `${repository.enabled}`,\n    },\n    {\n      title: enabledHelper[Boolean(repository.gpgcheck)],\n      sortValue: `${repository.gpgcheck}`,\n    },\n  ]),\n  filters: [\n    { type: 'textual' },\n    {\n      type: 'checkbox',\n      options: [\n        { label: 'Is enabled', value: 'true' },\n        { label: 'Not enabled', value: 'false' },\n      ],\n    },\n    {\n      type: 'checkbox',\n      options: [\n        { label: 'Is enabled', value: 'true' },\n        { label: 'Not enabled', value: 'false' },\n      ],\n    },\n  ],\n});\n\nexport const generalMapper = (data = [], title = '') => ({\n  cells: [\n    {\n      title,\n      transforms: [sortable],\n    },\n  ],\n  rows: data.map((item) => [item]),\n  filters: [{ type: 'textual' }],\n});\n","/* eslint-disable camelcase */\nimport { registered } from '../../../Utilities/index';\nimport { verifyCollectorStaleness } from '../../../Utilities/sharedFunctions';\nfunction safeParser(toParse, key) {\n  try {\n    return JSON.parse(toParse);\n  } catch {\n    return { [key]: toParse };\n  }\n}\n\nexport const propertiesSelector = (\n  {\n    number_of_cpus,\n    number_of_sockets,\n    cores_per_socket,\n    ramSize,\n    disk_devices,\n    sap_sids,\n    system_purpose,\n    cpu_flags,\n  } = {},\n  { facts } = {}\n) => ({\n  cpuNumber: number_of_cpus || facts?.rhsm?.CPU_CORES,\n  sockets: number_of_sockets || facts?.rhsm?.CPU_SOCKETS,\n  coresPerSocket:\n    cores_per_socket ||\n    (facts?.rhsm?.CPU_CORES &&\n      facts?.rhsm?.CPU_CORES &&\n      Number(facts?.rhsm?.CPU_CORES, 10) /\n        Number(facts?.rhsm?.CPU_SOCKETS, 10)),\n  ramSize: ramSize || (facts?.rhsm?.MEMORY && `${facts?.rhsm?.MEMORY} GB`),\n  storage:\n    disk_devices &&\n    disk_devices.map(({ device, label, mount_point, options, type }) => ({\n      ...(device && safeParser(device, 'device')),\n      label,\n      ...(mount_point && safeParser(mount_point, 'mountpoint')),\n      ...(options && safeParser(options, 'options')),\n      ...(type && safeParser(type, 'mounttype')),\n    })),\n  sapIds: sap_sids,\n  systemPurpose: system_purpose?.usage,\n  cpuFlags: cpu_flags,\n});\n\nexport const operatingSystem = (\n  {\n    arch,\n    operating_system,\n    os_kernel_version,\n    last_boot_time,\n    kernel_modules,\n    system_update_method,\n  } = {},\n  { facts } = {}\n) => ({\n  release: operating_system,\n  kernelRelease: os_kernel_version,\n  architecture: arch || facts?.rhsm?.ARCHITECTURE,\n  bootTime: last_boot_time,\n  kernelModules: kernel_modules,\n  systemUpdateMethod: system_update_method,\n});\n\nexport const biosSelector = ({\n  bios_vendor,\n  bios_version,\n  bios_release_date,\n} = {}) => ({\n  vendor: bios_vendor,\n  version: bios_version,\n  releaseDate: bios_release_date,\n});\n\nexport const infrastructureSelector = (\n  { infrastructure_type, infrastructure_vendor, network = {} } = {},\n  { facts } = {}\n) => ({\n  type:\n    infrastructure_type ||\n    (facts?.rhsm?.IS_VIRTUAL !== undefined &&\n      (facts?.rhsm?.IS_VIRTUAL ? 'virtual' : 'physical')) ||\n    undefined,\n  vendor: infrastructure_vendor,\n  ipv4: network.ipv4,\n  ipv6: network.ipv6,\n  nics: network.interfaces,\n});\n\nexport const configurationSelector = ({\n  installed_packages,\n  enabled_services,\n  running_processes,\n  repositories,\n} = {}) => ({\n  packages: installed_packages,\n  services: enabled_services,\n  processes: running_processes,\n  repositories,\n});\n\nexport const collectionInformationSelector = ({\n  insights_client_version,\n  insights_egg_version,\n} = {}) => ({\n  client: insights_client_version,\n  egg: insights_egg_version,\n});\n\nexport const getCollectorStatus = (collectorStaleness) => {\n  return collectorStaleness\n    ? verifyCollectorStaleness(collectorStaleness) !== 'Fresh'\n      ? 'Stale'\n      : 'Active'\n    : 'N/A';\n};\n\nexport const getDefaultCollectors = (entity) =>\n  registered\n    ?.filter((reporter) => reporter.label !== 'insights-client not connected')\n    .map((reporter) => ({\n      name: reporter.label,\n      status: getCollectorStatus(\n        entity?.per_reporter_staleness[reporter.value]\n      ),\n      updated: entity?.per_reporter_staleness[reporter.value]?.last_check_in,\n      details: {\n        name: reporter.idName,\n        id: entity?.[reporter.idValue],\n      },\n    }));\n\nexport const systemStatus = ({ stale_timestamp } = {}) => ({\n  stale: new Date() > new Date(stale_timestamp),\n});\n"],"names":["OutlinedArrowAltCircleDownIconConfig","name","height","width","svgPath","yOffset","xOffset","OutlinedArrowAltCircleDownIcon","OutlinedArrowAltCircleUpIconConfig","OutlinedArrowAltCircleUpIcon","OutlinedQuestionCircleIconConfig","OutlinedQuestionCircleIcon","PencilAltIconConfig","PencilAltIcon","valueToText","value","singular","plural","Clickable","target","onClick","modalId","useParams","useEffect","Link","to","propTypes","PropTypes","LoadingCard","title","isLoading","items","children","ouiaId","hasGutter","component","TextVariants","h1","isFilled","length","TextListVariants","dl","map","key","size","itemTitle","customClass","Fragment","T","TextListItemVariants","dt","props","className","dd","SkeletonSize","sm","isRequired","Object","values","defaultProps","InnerButton","link","Button","href","window","location","variant","EditButtonUnknownPermissions","entity","useSelector","entityDetails","usePermissionsWithContext","REQUIRED_PERMISSION_TO_MODIFY_HOST_IN_GROUP","groups","id","hasAccess","Tooltip","content","NO_MODIFY_HOST_TOOLTIP_MESSAGE","isAriaDisabled","EditButtonWrapper","writePermissions","isProd","useChrome","TitleWithPopover","Popover","headerContent","bodyContent","SystemCardCore","isDisplayNameModalOpen","isAnsibleHostModalOpen","setState","fn","origValue","onCancel","event","preventDefault","ansible_host","fqdn","this","detailLoaded","properties","setDisplayName","setAnsibleHost","handleClick","hasHostName","hasDisplayName","hasAnsibleHostname","hasSAP","hasSystemPurpose","hasCPUs","hasSockets","hasCores","hasCPUFlags","hasRAM","extra","state","display_name","EditButton","onShowDisplayModal","getAnsibleHost","onShowAnsibleModal","sapIds","generalMapper","systemPurpose","cpuNumber","sockets","coresPerSocket","cpuFlags","ramSize","e","TextInputModal","isOpen","ariaLabel","modalOuiaId","cancelOuiaId","confirmOuiaId","inputOuiaId","onSubmit","Component","storage","device","mount_point","options","type","extraShape","SystemCard","connect","systemProfile","systemProfileStore","loaded","propertiesSelector","dispatch","editDisplayName","editAnsibleHost","onClose","actions","isDisabled","onChange","undefined","statusHelper","UP","DOWN","enabledHelper","true","false","diskMapper","devices","cells","transforms","sortable","rows","label","mountpoint","mounttype","calculatedOptions","child","entries","oneKey","option","join","expandable","productsMapper","products","product","status","interfaceMapper","data","item","mac_address","mtu","repositoriesMapper","enabled","disabled","repository","sortValue","Boolean","gpgcheck","filters","safeParser","toParse","JSON","parse","number_of_cpus","number_of_sockets","cores_per_socket","disk_devices","sap_sids","system_purpose","cpu_flags","facts","rhsm","CPU_CORES","CPU_SOCKETS","Number","MEMORY","usage","operatingSystem","arch","operating_system","os_kernel_version","last_boot_time","kernel_modules","system_update_method","release","kernelRelease","architecture","ARCHITECTURE","bootTime","kernelModules","systemUpdateMethod","biosSelector","vendor","bios_vendor","version","bios_version","releaseDate","bios_release_date","infrastructureSelector","infrastructure_type","infrastructure_vendor","network","IS_VIRTUAL","ipv4","ipv6","nics","interfaces","configurationSelector","packages","installed_packages","services","enabled_services","processes","running_processes","repositories","collectionInformationSelector","client","insights_client_version","egg","insights_egg_version","getCollectorStatus","collectorStaleness","verifyCollectorStaleness","getDefaultCollectors","registered","filter","reporter","per_reporter_staleness","updated","last_check_in","details","idName","idValue","systemStatus","stale_timestamp","stale","Date"],"sourceRoot":""}