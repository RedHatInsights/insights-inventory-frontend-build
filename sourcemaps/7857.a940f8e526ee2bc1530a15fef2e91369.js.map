{"version":3,"file":"js/7857.1667494406324.9ceffa9bf8e693d3804b.js","mappings":"i0BAMA,IAAMA,GAAiBC,EAAAA,EAAAA,OAAK,kBAAM,sFAAN,IACtBC,GAAkBD,EAAAA,EAAAA,OAAK,kBAAM,sFAAN,IAEhBE,EAAS,CAClBC,MAAO,IACPC,OAAQ,gBACRC,gBAAiB,0BAGRC,EAAS,WAClB,IAAQC,GAAgBC,EAAAA,EAAAA,YAAWC,EAAAA,IAA3BF,aACRG,EAAAA,EAAAA,YAAU,WACNH,IAAcI,SAAd,OACOC,EAAAA,KACAC,EAAAA,EAAAA,IAAkBC,EAAAA,IAE5B,GAAE,CAACP,IACJ,IAAMQ,EAAe,IAAIC,gBAAgBC,SAASC,QAElD,OACI,kBAAC,EAAAC,SAAD,CAAUC,SAAS,IACf,kBAAC,EAAAC,OAAD,KACI,kBAAC,EAAAC,MAAD,CACIC,OAAK,EACLC,KAAMtB,EAAOC,MACbsB,OAAQ,gCAAM,kBAAC1B,EAAD,CACV2B,OAAQX,EAAaY,OAAO,UAC5BC,OAAQb,EAAaY,OAAO,UAC5BE,aAAcd,EAAaY,OAAO,kBAClCG,WAAU,UAAEf,EAAaY,OAAO,eAAtB,iBAAE,EAA8B,UAAhC,iBAAE,EAAkCI,aAApC,kBAAE,WAA0C,MAAKC,cAAjD,aAAE,SAAwDC,EAAAA,GAAY,IAChFC,gBAAiBnB,EAAaY,OAAO,oBACrCQ,KAAMpB,EAAaY,OAAO,QAC1BS,QAASrB,EAAaY,OAAO,aAPzB,EASRU,UAAU,cAEd,kBAAC,EAAAf,MAAD,CAAOC,OAAK,EAACC,KAAMtB,EAAOG,gBAAiBiC,UAAWrC,EAAiBoC,UAAU,cACjF,kBAAC,EAAAf,MAAD,CAAOC,OAAK,EAACC,KAAMtB,EAAOE,OAAQkC,UAAWrC,EAAiBoC,UAAU,cACxE,kBAAC,EAAAE,SAAD,CAAUf,KAAK,IAAIgB,GAAG,OAIrC,C,2vBCbD,QA3BY,WACR,IAAMC,GAAUC,EAAAA,EAAAA,cAgBhB,OAfAhC,EAAAA,EAAAA,YAAU,WAGN,OAFAiC,SAASC,OAAOC,OAChBF,SAASC,OAAOE,YCVM,aDWfH,SAASC,OAAOG,GACnB,kBACA,SAAAC,GACwB,cAAhBA,EAAMC,MACNR,EAAQS,KAAR,WAAiBjC,SAASC,QAA1B,OAAmCD,SAASkC,OAE5CV,EAAQS,KAAR,WAAiBF,EAAMC,OAAvB,OAA+BhC,SAASC,QAAxC,OAAiDD,SAASkC,MAEjE,GAER,GAAE,IAGC,yBAAKC,UAAU,aACX,kBAAC,EAAAC,oBAAD,MACA,kBAACC,EAAA,EAAD,CAAcC,QAAQ,aAClB,kBAACjD,EAAA,EAAD,OAIf,E,qCECD,QAzBqB,WACjB,OAAgCkD,EAAAA,EAAAA,YAAhC,eAAOC,EAAP,KAAiBC,EAAjB,KACMC,EAAQF,aAAH,EAAGA,EAAUG,WAUxB,OARAlD,EAAAA,EAAAA,YAAU,WAGN,OAFAgD,GAAoCb,EAAAA,EAAAA,OAE7B,WACHa,OAAYG,EACf,CACJ,GAAE,IAEKJ,EACJ,kBAAC,cAAD,CAA0BK,MAAO,CAC7BvD,YAAa,kBAAMkD,CAAN,IAEb,kBAAC,EAAAM,SAAD,CAAUJ,MAAOA,GACb,kBAAC,gBAAD,CAAQK,UAAUC,EAAAA,EAAAA,IAAYC,OAAOjD,SAASkD,WAC1C,kBAAC,EAAD,SAIZ,kBAAC,IAAD,KACP,EC5BDC,IAAAA,OACI,kBAAC,EAAD,MACAC,SAASC,eAAe,Q,+vBCE5B,IAAMC,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,aAAcC,EAAvB,EAAuBA,UAAWC,EAAlC,EAAkCA,WAAYC,EAA9C,EAA8CA,YAAaC,EAA3D,EAA2DA,eAAgBC,EAA3E,EAA2EA,MAA3E,OAAwF,kBAAC,IAAD,CACzGC,MAAM,OACNC,WAAaP,EACbQ,MAAK,kBACEP,EAAY,CAAC,CAAEK,MAAO,SAAUjB,MAAOU,EAAKU,SAAY,KAD1D,OAEEP,EAAa,CAAC,CAAEI,MAAO,UAAWjB,MAAOU,EAAKW,UAAa,KAF7D,OAGEN,EAAiB,CAAC,CAAEE,MAAO,eAAgBjB,OAAQsB,EAAAA,EAAAA,IAAOZ,EAAKa,aAC9D,kBAAC,IAAD,CAAYC,KAAO,IAAIC,KAAKf,EAAKa,aAAeG,KAAK,aACrD,kBACG,KANN,OAOEV,EAAMW,KAAI,gBAAGC,EAAH,EAAGA,QAAH,4BAENA,GAAW,CAAEA,QAAS,SAACC,GAAD,OAAOD,EAAQC,EAAGf,EAAlB,GAFhB,OAVA,EAiBrBL,EAAaqB,UAAY,CACrBnB,aAAcoB,IAAAA,KACdjB,YAAaiB,IAAAA,KACbrB,KAAMqB,IAAAA,MAAgB,CAClBX,OAAQW,IAAAA,OACRV,QAASU,IAAAA,OACTR,YAAaQ,IAAAA,OACbC,IAAKD,IAAAA,QAAkBA,IAAAA,UAE3BnB,UAAWmB,IAAAA,KACXlB,WAAYkB,IAAAA,KACZhB,eAAgBgB,IAAAA,KAChBf,MAAOe,IAAAA,QAAkBE,EAAAA,KAE7BxB,EAAayB,aAAe,CACxBvB,cAAc,EACdG,YAAa,aACbE,MAAO,GACPJ,WAAW,EACXC,YAAY,EACZE,gBAAgB,GAGb,IAAMoB,GAAWC,EAAAA,EAAAA,UAAQ,gBAExBC,EAFwB,EAC5BC,mBACID,cAFwB,MAIzB,CACH1B,aAAc0B,GAAiBA,EAAcE,OAC7C7B,MAAM8B,EAAAA,EAAAA,cAAaH,GANS,GAARD,CAOpB3B,GAEJ0B,EAASL,UAAYrB,EAAaqB,UAClCK,EAASD,aAAezB,EAAayB,Y,ywBClD9B,SAASO,EAAaC,GACzB,GAAIA,EACA,MAAO,CACHA,EAAaC,SAAWD,EAAaC,QAAQC,OAAS,GAAtD,UAA8DF,EAAaC,QAAQC,OAAnF,YACAF,EAAaG,UAAYH,EAAaG,SAASD,OAAS,GAAxD,UAAgEF,EAAaG,SAASD,OAAtF,cACFE,OAAOC,SAASC,KAAK,MAE9B,CAED,IAAMC,EAAwB,SAAC,GAAD,UAC1BtC,EAD0B,EAC1BA,aACAuC,EAF0B,EAE1BA,cACApC,EAH0B,EAG1BA,YACAqC,EAJ0B,EAI1BA,YACAC,EAL0B,EAK1BA,YACAC,EAN0B,EAM1BA,aACAC,EAP0B,EAO1BA,gBACAtC,EAR0B,EAQ1BA,MAR0B,OASvB,kBAAC,IAAD,CACHC,MAAM,gBACNC,WAAaP,EACbQ,MAAK,kBACEgC,EAAc,CAAC,CACdlC,MAAO,qBACPjB,MAAK,UAAEkD,EAAcK,gBAAhB,aAAE,EAAwBX,OAC/BY,SAAU,UACVC,OAAQ,qBACR7B,QAAS,WACLd,EACI,sBACA4C,EAAAA,EAAAA,eAAcR,EAAcK,SAAU,gBAE7C,IACA,KAZJ,OAaEH,EAAc,CAAC,CACdnC,MAAO,WACPjB,MAAK,UAAEkD,EAAcS,gBAAhB,aAAE,EAAwBf,OAC/BY,SAAU,UACVC,OAAQ,WACR7B,QAAS,WACLd,EACI,YACA4C,EAAAA,EAAAA,eAAcR,EAAcS,SAAU,gBAE7C,IACA,KAxBJ,OAyBEN,EAAe,CAAC,CACfpC,MAAO,oBACPjB,MAAK,UAAEkD,EAAcU,iBAAhB,aAAE,EAAyBhB,OAChCY,SAAU,UACVK,OAAQ,YACRJ,OAAQ,oBACR7B,QAAS,WACLd,EACI,qBACA4C,EAAAA,EAAAA,eAAcR,EAAcU,UAAW,gBAE9C,IACA,KArCJ,OAsCEN,EAAkB,CAAC,CAClBrC,MAAO,eACPjB,MAAOyC,EAAaS,EAAcR,cAClCe,OAAQ,eACR7B,QAAS,WACLd,EACI,gBACAgD,EAAAA,EAAAA,oBAAmBZ,EAAcR,cACjC,SAEP,IACA,KAjDJ,OAkDE1B,EAAMW,KAAI,gBAAGC,EAAH,EAAGA,QAAH,4BAENA,GAAW,CAAEA,QAAS,SAACC,GAAD,OAAOD,EAAQC,EAAGf,EAAlB,GAFhB,OA9DS,EAqE9BmC,EAAsBnB,UAAY,CAC9BnB,aAAcoB,IAAAA,KACdjB,YAAaiB,IAAAA,KACbmB,cAAenB,IAAAA,MAAgB,CAC3BwB,SAAUxB,IAAAA,QAAkBA,IAAAA,QAC5B4B,SAAU5B,IAAAA,QAAkBA,IAAAA,QAC5B6B,UAAW7B,IAAAA,QAAkBA,IAAAA,QAC7BW,aAAcX,IAAAA,MAAgB,CAC1BY,QAASZ,IAAAA,QAAkBA,IAAAA,MAAgB,CAEvCgC,SAAUhC,IAAAA,OACViC,KAAMjC,IAAAA,OACNY,QAASZ,IAAAA,KACTkC,SAAUlC,IAAAA,QAEdc,SAAUd,IAAAA,QAAkBA,IAAAA,MAAgB,CAExCgC,SAAUhC,IAAAA,OACViC,KAAMjC,IAAAA,OACNY,QAASZ,IAAAA,KACTkC,SAAUlC,IAAAA,YAItBoB,YAAapB,IAAAA,KACbqB,YAAarB,IAAAA,KACbsB,aAActB,IAAAA,KACduB,gBAAiBvB,IAAAA,KACjBf,MAAOe,IAAAA,QAAkBE,EAAAA,KAE7BgB,EAAsBf,aAAe,CACjCvB,cAAc,EACdG,YAAa,aACbqC,aAAa,EACbC,aAAa,EACbC,cAAc,EACdC,iBAAiB,EACjBtC,MAAO,IAGJ,IAAMkD,GAAoB9B,EAAAA,EAAAA,UAAQ,gBAEjCC,EAFiC,EACrCC,mBACID,cAFiC,MAIlC,CACH1B,aAAc0B,GAAiBA,EAAcE,OAC7CW,eAAeiB,EAAAA,EAAAA,uBAAsB9B,GANA,GAARD,CAO7Ba,GAEJiB,EAAkBpC,UAAYmB,EAAsBnB,UACpDoC,EAAkBhC,aAAee,EAAsBf,Y,mMC9HjDkC,EAAyB,SAAC,GAK1B,IAJFzD,EAIE,EAJFA,aACA0D,EAGE,EAHFA,WACAC,EAEE,EAFFA,OACAC,EACE,EADFA,WAEA,GAA0C7E,EAAAA,EAAAA,UAAS,IAAnD,eAAO8E,EAAP,KAAsBC,EAAtB,KACMC,GAAcC,EAAAA,EAAAA,cAAY,SAACC,GAAD,IAAYC,IAAZ,gEAAmCJ,GAAiB,SAAAK,GAChF,IAAMC,EAAqBD,EAAahC,QAAO,SAAAkC,GAAC,OAAIA,IAAMJ,EAAUZ,IAApB,IAChD,OAAOa,EAAc,GAAH,eAAOE,GAAP,CAA2BH,EAAUZ,OAAQe,CAClE,GAH+B,GAG5B,IACEE,EAAa,SAACL,GAAD,OAAeJ,EAAcU,SAASN,EAAUZ,KAAhD,EACbmB,EAAOd,QAAAA,GAAce,EAAAA,EAAAA,IAAqBd,GAChD,OAAQ,kBAAC,IAAD,CACJrD,MAAM,kBACNC,WAAaP,GAEb,kBAAC,EAAA0E,gBAAD,CACI,aAAW,kBACXC,QAASC,EAAAA,aAAAA,QACTC,SAAS,GAET,kBAAC,EAAAC,MAAD,KACI,kBAAC,EAAAC,GAAD,CAAIpG,UAAU,oBACV,kBAAC,EAAAqG,GAAD,MACA,kBAAC,EAAAA,GAAD,aACA,kBAAC,EAAAA,GAAD,eACA,kBAAC,EAAAA,GAAD,sBAGPpB,EAAaA,EAAWY,EAAMF,EAAYP,GAAeS,EAAKxD,KAAI,SAACiD,EAAWgB,GAAZ,aAC/D,kBAAC,EAAAC,MAAD,CAAOC,IAAKlB,EAAUZ,KAAMiB,WAAYA,EAAWL,IAC/C,kBAAC,EAAAc,GAAD,KACKd,EAAUmB,QAAQ/B,KACf,kBAAC,EAAAgC,GAAD,CACIC,OACIrB,EAAUmB,QACJ,CACEH,SAAAA,EACAX,WAAYA,EAAWL,GACvBsB,SAAU,kBAAMxB,EAAYE,GAAYK,EAAWL,GAAzC,QAEZ7E,EAEVoG,MAAO,CAAEC,YAAa,KACrB,kBAAC,EAAAJ,GAAD,MACT,kBAAC,EAAAA,GAAD,CAAIK,UAAU,QAAQzB,EAAUZ,MAChC,kBAAC,EAAAgC,GAAD,CAAIK,UAAU,UAAUzB,EAAUhH,QAClC,kBAAC,EAAAoI,GAAD,CAAIK,UAAU,eACTzB,EAAU0B,QACP,kBAAC,IAAD,CAAY9E,KAAOoD,EAAU0B,QAAU5E,KAAK,UAC5C,QAGXkD,EAAUmB,SAAWnB,EAAUmB,QAAQ/B,MACpC,kBAAC,EAAA0B,GAAD,CAAIT,WAAYA,EAAWL,IACvB,kBAAC,EAAAoB,GAAD,MACA,kBAAC,EAAAA,GAAD,CAAIO,QAAS,GACT,kBAAC,EAAAC,qBAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAUlH,UAAU,0BAApB,UACQsF,EAAUmB,QAAQ/B,KAD1B,MAGA,kBAAC,IAAD,CAAUyC,KAAM,CAAEC,QAAS,SAA3B,UACK9B,EAAUmB,QAAQY,UADvB,QAC6B,WAlCU,KA4C9E,EAEDvC,EAAuBtC,UAAY,CAC/BnB,aAAcoB,IAAAA,KACdsC,WAAYtC,IAAAA,MACZwC,WAAYxC,IAAAA,KACZuC,OAAQvC,IAAAA,MAAgB,CACpB6E,uBAAwB7E,IAAAA,UAGhCqC,EAAuBlC,aAAe,CAClCvB,cAAc,GAGX,IAAMkG,GAAqBzE,EAAAA,EAAAA,UAAQ,gBAElCkC,EAFkC,EACtCwC,cACIxC,OAGAjC,EALkC,EAItCC,mBACID,cALkC,MAOnC,CACHiC,OAAAA,EACAjC,cAAAA,EACA1B,aAAc0B,aAAF,EAAEA,EAAeE,OAC7BwE,mBAAmB3B,EAAAA,EAAAA,IAAqBd,GAXF,GAARlC,CAY9BgC,GAEJyC,EAAmB/E,UAAYsC,EAAuBtC,UACtD+E,EAAmB3E,aAAekC,EAAuBlC,Y,uUCzFnD8E,EAAAA,SAAAA,I,2mBACM,CACJC,aAAa,EACbC,WAAY,GACZC,aAAc,W,4BAGT,SAACC,EAAQC,EAAOC,EAAWC,GAChC,IAAQC,EAAS,EAAKC,MAAdD,KACFE,GAAUH,GAAcC,GAAMG,MAAK,SAACC,EAAGC,GACzC,IAAMC,EAAWF,EAAEG,OAASH,EACtBI,EAAYH,EAAEE,OAASF,EAG7B,OAFiB,IAAMC,EAAST,GAAOY,WAAaH,EAAST,KAASa,qBACrD,IAAMF,EAAUX,GAAOY,WAAaD,EAAUX,KAASa,qBAC1C,EAAI,CACrC,IACD,EAAKC,SAAS,CACVX,KAAMF,IAAcc,EAAAA,gBAAAA,IAAsBV,EAASA,EAAOW,WAEjE,K,uCAEmB,WAAwF,IAAvFnB,EAAuF,uDAA1E,GAA0E,yDAA/B,CAAC,EAAtCa,EAAoE,EAApEA,MAAOP,EAA6D,EAA7DA,KAAMc,EAAuD,EAAvDA,WAAYC,EAA2C,EAA3CA,QAAgBpB,EAA2B,uDAAZ,QAC5FK,GAAQ,EAAKgB,YAAOzI,EAAWuI,EAAa,EAAI,EAAGF,EAAAA,gBAAAA,IAAqBZ,GACpE,EAAKC,MAAMR,aACX,EAAKwB,MAAM9J,QAAQS,KAAK,EAAKqJ,MAAMtL,SAASkD,SAASpC,MAAM,KAAKyK,MAAM,GAAI,GAAG1F,KAAK,MAGtF,EAAKmF,UAAS,kBAAsB,CAChClB,aADU,EAAGA,YAEbC,WAAAA,EACAa,MAAAA,EACAO,WAAAA,EACAC,QAAAA,EACApB,aAAAA,EANU,GAQjB,I,kDAED,WACIwB,KAAKF,MAAMG,kBAAoBD,KAAKF,MAAMG,iBAAiBD,KAAKF,MAAMnE,OAAOqC,GAChF,G,oBAED,WAAS,WACL,EAAoFgC,KAAKlB,MAAjFR,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,WAAYa,EAAjC,EAAiCA,MAAOP,EAAxC,EAAwCA,KAAMc,EAA9C,EAA8CA,WAAYC,EAA1D,EAA0DA,QAASpB,EAAnE,EAAmEA,aACnE,EAYIwB,KAAKF,MAXL5I,EADJ,EACIA,MACAgJ,EAFJ,EAEIA,iBACAC,EAHJ,EAGIA,kBACAC,EAJJ,EAIIA,2BACAC,EALJ,EAKIA,gBACAC,EANJ,EAMIA,0BACAC,EAPJ,EAOIA,yBACAC,EARJ,EAQIA,wBACAC,EATJ,EASIA,0BACAC,EAVJ,EAUIA,sBACAC,EAXJ,EAWIA,SAEEC,EAAU1J,EAAQI,EAAAA,SAAWuJ,EAAAA,SACnC,OACI,kBAACD,EAAa1J,GAAS,CAAEA,MAAAA,GACrB,yBAAKP,UAAU,6BACX,kBAAC,IAAD,CAAMmK,GAAI,GAAIC,GAAI,EAAGC,WAAS,GACzBb,GAAqB,kBAAC,IAAD,KAClB,kBAACA,EAAD,CAAmBhI,YAAc6H,KAAKiB,kBAAoBf,iBAAkBA,KAE/EE,GAA8B,kBAAC,IAAD,KAC3B,kBAACA,EAAD,CAA4BjI,YAAc6H,KAAKiB,qBAElDX,GAA6B,kBAAC,IAAD,KAC1B,kBAACA,EAAD,CAA2BnI,YAAc6H,KAAKiB,qBAEjDZ,GAAmB,kBAAC,IAAD,KAChB,kBAACA,EAAD,CAAiBlI,YAAc6H,KAAKiB,qBAEvCT,GAA2B,kBAAC,IAAD,KACxB,kBAACA,EAAD,CAAyBrI,YAAc6H,KAAKiB,qBAE/CV,GAA4B,kBAAC,IAAD,KACzB,kBAACA,EAAD,CAA0BpI,YAAc6H,KAAKiB,qBAEhDR,GAA6B,kBAAC,IAAD,KAC1B,kBAACA,EAAD,CAA2BtI,YAAc6H,KAAKiB,qBAEjDP,GAAyB,kBAAC,IAAD,KACtB,kBAACA,EAAD,CAAuBvI,YAAc6H,KAAKiB,qBAE7CN,EACD,kBAAC,IAAD,CACIrI,MAAQiG,GAAc,GACtB,uBAAeA,GAAc,GAA7B,UACA2C,OAAS5C,EACT6C,QAAU,kBAAM,EAAKF,mBAAX,EACVtK,UAAU,kCACVgG,QAAU6B,GAEV,kBAAC,IAAD,CACIY,MAAQA,EACRP,KAAOA,EACPc,WAAaA,EACbE,OAASG,KAAKH,OACdD,QAAUA,OAOrC,K,EA1GCvB,CAA2B+C,EAAAA,WA6GjC/C,EAAmBlF,UAAY,CAC3BwC,OAAQvC,IAAAA,MAAgB,CACpB4E,GAAI5E,IAAAA,UAAoB,CAACA,IAAAA,OAAkBA,IAAAA,WAE/C6G,iBAAkB7G,IAAAA,KAClBlC,MAAOkC,IAAAA,IACP8G,iBAAkB9G,IAAAA,KAClB+G,kBAAmB/G,IAAAA,UAAoB,CAACA,IAAAA,KAAgBA,IAAAA,OACxDgH,2BAA4BhH,IAAAA,UAAoB,CAACA,IAAAA,KAAgBA,IAAAA,OACjEiH,gBAAiBjH,IAAAA,UAAoB,CAACA,IAAAA,KAAgBA,IAAAA,OACtDkH,0BAA2BlH,IAAAA,UAAoB,CAACA,IAAAA,KAAgBA,IAAAA,OAChEmH,yBAA0BnH,IAAAA,UAAoB,CAACA,IAAAA,KAAgBA,IAAAA,OAC/DoH,wBAAyBpH,IAAAA,UAAoB,CAACA,IAAAA,KAAgBA,IAAAA,OAC9DqH,0BAA2BrH,IAAAA,UAAoB,CAACA,IAAAA,KAAgBA,IAAAA,OAChEsH,sBAAuBtH,IAAAA,UAAoB,CAACA,IAAAA,KAAgBA,IAAAA,OAC5DuH,SAAUvH,IAAAA,KACVpD,QAASoD,IAAAA,IACT5E,SAAU4E,IAAAA,KAEdiF,EAAmB9E,aAAe,CAC9BoC,OAAQ,CAAC,EACTwE,kBAAmBkB,EAAAA,EACnBjB,2BAA4BkB,EAAAA,EAC5BjB,gBAAiB7G,EAAAA,EACjB8G,0BAA2BiB,EAAAA,EAC3BhB,yBAA0BhF,EAAAA,GAC1BiF,wBAAyBgB,EAAAA,EACzBf,0BAA2BvC,EAAAA,mBAC3BwC,uBAAuB,GAc3B,SAAee,EAAAA,EAAAA,aAAWhI,EAAAA,EAAAA,UAXF,SAAC,GAAD,MAIjB,CACHkC,OALoB,EACpBwC,cACIxC,OAFgB,IAOG,SAAC+F,GAAD,MAAe,CACtCzB,iBAAkB,SAAC0B,GAAD,OAAYD,GAAShI,EAAAA,EAAAA,IAAciI,GAAnC,EADK,GAIDlI,CAA6C4E,G,0wBCvKvE,IAAMuD,EAAyB,SAAC,GAAD,UAC3BC,EAD2B,EAC3BA,eACA1J,EAF2B,EAE3BA,YACAH,EAH2B,EAG3BA,aACA8J,EAJ2B,EAI3BA,QACA7J,EAL2B,EAK3BA,UACA8J,EAN2B,EAM3BA,QACAC,EAP2B,EAO3BA,QACAC,EAR2B,EAQ3BA,cACA5J,EAT2B,EAS3BA,MAT2B,OAUxB,kBAAC,IAAD,CACHC,MAAM,iBACNC,WAAaP,EACbQ,MAAK,kBACEsJ,EAAU,CAAC,CAAExJ,MAAO,OAAQjB,MAAOwK,EAAe9I,OAAU,KAD9D,OAEEd,EAAY,CAAC,CAAEK,MAAO,SAAUjB,MAAOwK,EAAepJ,SAAY,KAFpE,OAGEsJ,EAAU,CAAC,CACVzJ,MAAO,iBACPjB,MAAK,UAAEwK,EAAeK,YAAjB,aAAE,EAAqBjI,OAC5BiB,OAAQ,YACRL,SAAU,UACVC,OAAQ,OACR7B,QAAS,WACLd,EACI,QACA4C,EAAAA,EAAAA,eAAc8G,EAAeK,KAAM,cAE1C,IACA,KAfJ,OAgBEF,EAAU,CAAC,CACV1J,MAAO,iBACPjB,MAAK,UAAEwK,EAAeM,YAAjB,aAAE,EAAqBlI,OAC5BiB,OAAQ,YACRL,SAAU,UACVC,OAAQ,OACR7B,QAAS,WACLd,EACI,QACA4C,EAAAA,EAAAA,eAAc8G,EAAeM,KAAM,cAE1C,IACA,KA5BJ,OA6BEF,EAAgB,CAAC,CAChB3J,MAAO,kBACPjB,MAAK,UAAEwK,EAAeO,YAAjB,aAAE,EAAqBnI,OAC5BY,SAAU,MACVC,OAAQ,aACR7B,QAAS,WACLd,EACI,mBACAkK,EAAAA,EAAAA,iBAAgBR,EAAeO,MAC/B,SAEP,IACA,KAzCJ,OA0CE/J,EAAMW,KAAI,gBAAGC,EAAH,EAAGA,QAAH,4BAENA,GAAW,CAAEA,QAAS,SAACC,GAAD,OAAOD,EAAQC,EAAGf,EAAlB,GAFhB,OAvDU,EA8D/ByJ,EAAuBzI,UAAY,CAC/BnB,aAAcoB,IAAAA,KACdjB,YAAaiB,IAAAA,KACbyI,eAAgBzI,IAAAA,MAAgB,CAC5BL,KAAMK,IAAAA,OACNX,OAAQW,IAAAA,OACR8I,KAAM9I,IAAAA,MACN+I,KAAM/I,IAAAA,MACNgJ,KAAMhJ,IAAAA,QAEV0I,QAAS1I,IAAAA,KACTnB,UAAWmB,IAAAA,KACX2I,QAAS3I,IAAAA,KACT4I,QAAS5I,IAAAA,KACT6I,cAAe7I,IAAAA,KACff,MAAOe,IAAAA,QAAkBE,EAAAA,KAE7BsI,EAAuBrI,aAAe,CAClCvB,cAAc,EACdG,YAAa,aACb2J,SAAS,EACT7J,WAAW,EACX8J,SAAS,EACTC,SAAS,EACTC,eAAe,EACf5J,MAAO,IAGJ,IAAMkJ,GAAqB9H,EAAAA,EAAAA,UAAQ,gBAElCkC,EAFkC,EACtCwC,cACIxC,OAGAjC,EALkC,EAItCC,mBACID,cALkC,MAOnC,CACH1B,aAAc0B,GAAiBA,EAAcE,OAC7CiI,gBAAgBS,EAAAA,EAAAA,wBAAuB5I,EAAeiC,GAThB,GAARlC,CAU9BmI,GAEJL,EAAmBpI,UAAYyI,EAAuBzI,UACtDoI,EAAmBhI,aAAeqI,EAAuBrI,Y,+xBCrGzD,IAAMgJ,EAA0B,SAAC,GAAD,MAC5BC,EAD4B,EAC5BA,WACAxK,EAF4B,EAE5BA,aACAG,EAH4B,EAG5BA,YACAsK,EAJ4B,EAI5BA,WACAC,EAL4B,EAK5BA,iBACAC,EAN4B,EAM5BA,gBACAC,EAP4B,EAO5BA,YACAC,EAR4B,EAQ5BA,iBACAxK,EAT4B,EAS5BA,MAT4B,OAW5B,kBAAC,IAAD,CACIC,MAAM,mBACNC,WAAaP,EACbQ,MAAK,kBACEiK,EAAa,CAAC,CAAEnK,MAAO,UAAWjB,MAAO,kBAAC,IAAD,CAA0B5B,gBAAiB+M,EAAWM,YAAiB,KADlH,OAEEJ,EAAmB,CAAC,CAAEpK,MAAO,iBAAkBjB,MAAOmL,EAAWO,gBAAmB,KAFtF,OAGEJ,EAAkB,CAAC,CAAErK,MAAO,eAAgBjB,MAAOmL,EAAWQ,eAAkB,KAHlF,OAIEJ,EAAc,CAAC,CAAEtK,MAAO,iBAAkBjB,OAAQsB,EAAAA,EAAAA,IAAO6J,EAAWS,UACnE,kBAAC,IAAD,CAAYpK,KAAO2J,EAAWS,SAAWlK,KAAK,aAC9C,kBAEC,KARJ,OASE8J,EAAmB,CAAC,CACnBvK,MAAO,iBACPjB,MAAK,UAAEmL,EAAWU,qBAAb,aAAE,EAA0BjJ,OACjCY,SAAU,SACVC,OAAQ,iBACR7B,QAAS,WACLd,EACI,kBACA4C,EAAAA,EAAAA,eAAcyH,EAAWU,cAAe,UAE/C,IACA,KApBJ,OAqBE7K,EAAMW,KAAI,gBAAGC,EAAH,EAAGA,QAAH,4BAENA,GAAW,CAAEA,QAAS,SAACC,GAAD,OAAOD,EAAQC,EAAGf,EAAlB,GAFhB,OAnCO,EA2ChCoK,EAAwBpJ,UAAY,CAChCnB,aAAcoB,IAAAA,KACdjB,YAAaiB,IAAAA,KACboJ,WAAYpJ,IAAAA,MAAgB,CACxB0J,QAAS1J,IAAAA,OACT4J,aAAc5J,IAAAA,OACd2J,cAAe3J,IAAAA,OACf6J,SAAU7J,IAAAA,OACV8J,cAAe9J,IAAAA,QAAkBA,IAAAA,UAErCqJ,WAAYrJ,IAAAA,KACZsJ,iBAAkBtJ,IAAAA,KAClBuJ,gBAAiBvJ,IAAAA,KACjBwJ,YAAaxJ,IAAAA,KACbyJ,iBAAkBzJ,IAAAA,KAClBf,MAAOe,IAAAA,QAAkBE,EAAAA,KAE7BiJ,EAAwBhJ,aAAe,CACnCvB,cAAc,EACdG,YAAa,aACbsK,YAAY,EACZC,kBAAkB,EAClBC,iBAAiB,EACjBC,aAAa,EACbC,kBAAkB,EAClBxK,MAAO,IAGJ,IAAMiJ,GAAsB7H,EAAAA,EAAAA,UAAQ,gBAEnCkC,EAFmC,EACvCwC,cACIxC,OAGAjC,EALmC,EAIvCC,mBACID,cALmC,MAOpC,CACH1B,aAAc0B,GAAiBA,EAAcE,OAC7C4I,YAAY/M,EAAAA,EAAAA,iBAAgBiE,EAAeiC,GATJ,GAARlC,CAU/B8I,GAEJjB,EAAoBnI,UAAYoJ,EAAwBpJ,UACxDmI,EAAoB/H,aAAegJ,EAAwBhJ,Y,o4BCjF3D,IAAM4J,EAAmB,SAAC,GAAD,IAAG7K,EAAH,EAAGA,MAAO8K,EAAV,EAAUA,QAAV,OACrB,kBAAC,aAAD,KACI,8BAAQ9K,GACR,kBAAC,IAAD,CACI+K,cAAe,6BAAO/K,GACtBgL,YAAa,6BAAOF,IACpB,kBAAC,KAAD,CACIzG,QAAQ,QACR,kCAA0BrE,GAC1B3B,UAAU,gDACV,kBAAC,KAAD,QAVS,EAgBnB4M,EAAAA,SAAAA,I,2mBACM,CACJC,wBAAwB,EACxBC,wBAAwB,K,8BAGjB,WACP,EAAKjE,SAAS,CACVgE,wBAAwB,EACxBC,wBAAwB,GAE/B,K,8BAEU,SAACC,EAAIC,GAAL,OAAmB,SAACtM,GAC3B,IAAQsE,EAAW,EAAKmE,MAAhBnE,OACR+H,EAAG/H,EAAOqC,GAAI3G,EAAOsM,GACrB,EAAKC,UACR,CAJU,K,wCAMU,SAACrN,GAClBA,EAAMsN,iBACN,EAAKrE,SAAS,CACVgE,wBAAwB,GAE/B,K,wCAEoB,SAACjN,GAClBA,EAAMsN,iBACN,EAAKrE,SAAS,CACViE,wBAAwB,GAE/B,K,oCAEgB,WACb,IAAQ9H,EAAW,EAAKmE,MAAhBnE,OACR,OAAOA,EAAOmI,cAAgBnI,EAAOoI,MAAQpI,EAAOqC,EACvD,I,uCAED,WAAS,QACL,EAmBIgC,KAAKF,MAlBL9H,EADJ,EACIA,aACA2D,EAFJ,EAEIA,OACAqI,EAHJ,EAGIA,WACAC,EAJJ,EAIIA,eACAC,EALJ,EAKIA,eACAhE,EANJ,EAMIA,iBACA/H,EAPJ,EAOIA,YACAgM,EARJ,EAQIA,YACAC,EATJ,EASIA,eACAC,EAVJ,EAUIA,mBACAC,EAXJ,EAWIA,OACAC,EAZJ,EAYIA,iBACAC,EAbJ,EAaIA,QACAC,EAdJ,EAcIA,WACAC,EAfJ,EAeIA,SACAC,EAhBJ,EAgBIA,YACAC,EAjBJ,EAiBIA,OACAvM,EAlBJ,EAkBIA,MAEJ,EAA2D2H,KAAKlB,MAAxD0E,EAAR,EAAQA,uBAAwBC,EAAhC,EAAgCA,uBAChC,OACI,kBAAC,EAAA5C,SAAD,KACI,kBAAC,IAAD,CACIvI,MAAM,oBACNC,WAAaP,EACbQ,MAAK,kBACE2L,EAAc,CAAC,CACd7L,MAAO,kBAAC6K,EAAD,CACH7K,MAAM,YACN8K,QAAQ,mCACZ/L,MAAOsE,EAAOoI,KAAMc,KAAM,OACzB,KANJ,OAOET,EAAiB,CAAC,CACjB9L,MAAO,kBAAC6K,EAAD,CACH7K,MAAM,eACN8K,QAAQ,gDACZ/L,MACI,kBAAC,EAAAwJ,SAAD,KACMlF,EAAOmJ,aACT,kBAAC,IAAD,CACI5E,iBAAkBA,EAClB6E,KAAK,eACL9L,QAAS+G,KAAKgF,sBAGvBH,KAAM,OACR,KArBJ,OAsBER,EAAqB,CAAC,CACrB/L,MAAO,kBAAC6K,EAAD,CACH7K,MAAM,mBACN8K,QAAQ,wDACZ/L,MACI,kBAAC,EAAAwJ,SAAD,KACMb,KAAKiF,iBACP,kBAAC,IAAD,CACI/E,iBAAkBA,EAClB6E,KAAK,eACL9L,QAAS+G,KAAKkF,sBAGvBL,KAAM,OACR,KApCJ,OAqCEP,EAAS,CAAC,CACThM,MAAO,MACPjB,MAAK,UAAE2M,EAAWmB,cAAb,aAAE,EAAmBlL,OAC1BY,SAAU,aACVC,OAAQ,WACR7B,QAAS,WACLd,EACI,iBACA4C,EAAAA,EAAAA,eAAciJ,EAAWmB,OAAQ,OAExC,IACA,KAhDJ,OAiDEZ,EAAmB,CAAC,CAAEjM,MAAO,iBAAkBjB,MAAO2M,EAAWoB,gBAAmB,KAjDtF,OAkDEZ,EAAU,CAAC,CAAElM,MAAO,iBAAkBjB,MAAO2M,EAAWqB,YAAe,KAlDzE,OAmDEZ,EAAa,CAAC,CAAEnM,MAAO,UAAWjB,MAAO2M,EAAWsB,UAAa,KAnDnE,OAoDEZ,EAAW,CAAC,CAAEpM,MAAO,mBAAoBjB,MAAO2M,EAAWuB,iBAAoB,KApDjF,OAqDEZ,EAAc,CAAC,CACdrM,MAAO,YACPjB,MAAO2M,SAAF,UAAEA,EAAYwB,gBAAd,aAAE,EAAsBvL,OAC7BY,SAAU,OACVC,OAAQ,OACR7B,QAAS,kBAAMd,EAAY,aAAa4C,EAAAA,EAAAA,eAAciJ,EAAWwB,SAAU,aAAlE,IACR,KA3DJ,OA4DEZ,EAAS,CAAC,CAAEtM,MAAO,MAAOjB,MAAO2M,EAAWyB,UAAa,KA5D3D,OA6DEpN,EAAMW,KAAI,gBAAGC,EAAH,EAAGA,QAAH,4BAENA,GAAW,CAAEA,QAAS,SAACC,GAAD,OAAOD,EAAQC,EAAGf,EAAlB,GAFhB,QAMrB,kBAAC,IAAD,CACI+I,OAASsC,EACTlL,MAAM,oBACNjB,MAAQsE,GAAUA,EAAOmJ,aACzBY,UAAU,8BACVC,YAAY,0BACZC,aAAa,2BACbC,cAAc,4BACdC,YAAY,0BACZlC,SAAW5D,KAAK4D,SAChBmC,SAAW/F,KAAK+F,SAAS9B,EAAgBtI,GAAUA,EAAOmJ,gBAE9D,kBAAC,IAAD,CACI5D,OAASuC,EACTnL,MAAM,oBACNjB,MAAQsE,GAAUqE,KAAKiF,iBACvBS,UAAU,eACVC,YAAY,0BACZC,aAAa,2BACbC,cAAc,4BACdC,YAAY,0BACZlC,SAAW5D,KAAK4D,SAChBmC,SAAW/F,KAAK+F,SAAS7B,EAAgBvI,GAAUqE,KAAKiF,oBAIvE,K,EA9JC1B,CAAuBnC,EAAAA,WAiK7BmC,EAAepK,UAAY,CACvBnB,aAAcoB,IAAAA,KACduC,OAAQvC,IAAAA,MAAgB,CAEpB0L,aAAc1L,IAAAA,OAEd0K,aAAc1K,IAAAA,OACd2K,KAAM3K,IAAAA,OACN4E,GAAI5E,IAAAA,SAER4K,WAAY5K,IAAAA,MAAgB,CACxBiM,UAAWjM,IAAAA,OACXkM,QAASlM,IAAAA,OACTmM,eAAgBnM,IAAAA,OAChBqM,QAASrM,IAAAA,OACT4M,QAAS5M,IAAAA,QAAkBA,IAAAA,MAAgB,CACvC6M,OAAQ7M,IAAAA,OAER8M,YAAa9M,IAAAA,OACb+M,QAAS/M,IAAAA,MAAgB,CAAC,GAC1BL,KAAMK,IAAAA,UAEV+L,OAAQ/L,IAAAA,QAAkBA,IAAAA,QAC1BgM,cAAehM,IAAAA,OACfoM,SAAUpM,IAAAA,QAEd6K,eAAgB7K,IAAAA,KAChB8K,eAAgB9K,IAAAA,KAChB8G,iBAAkB9G,IAAAA,KAClBjB,YAAaiB,IAAAA,KACb+K,YAAa/K,IAAAA,KACbgL,eAAgBhL,IAAAA,KAChBiL,mBAAoBjL,IAAAA,KACpBkL,OAAQlL,IAAAA,KACRmL,iBAAkBnL,IAAAA,KAClBoL,QAASpL,IAAAA,KACTqL,WAAYrL,IAAAA,KACZsL,SAAUtL,IAAAA,KACVuL,YAAavL,IAAAA,KACbwL,OAAQxL,IAAAA,KACRf,MAAOe,IAAAA,QAAkBE,EAAAA,KAE7BiK,EAAehK,aAAe,CAC1BvB,cAAc,EACd2D,OAAQ,CAAC,EACTqI,WAAY,CAAC,EACbG,aAAa,EACbC,gBAAgB,EAChBC,oBAAoB,EACpBC,QAAQ,EACRC,kBAAkB,EAClBC,SAAS,EACTC,YAAY,EACZC,UAAU,EACVC,aAAa,EACbC,QAAQ,EACRvM,MAAO,IAGX8K,EAAiBhK,UAAY,CACzBb,MAAOc,IAAAA,OAAAA,WACPgK,QAAShK,IAAAA,OAAAA,YAeN,IAAMiI,GAAa5H,EAAAA,EAAAA,UAAQ,gBAE1BkC,EAF0B,EAC9BwC,cACIxC,OAGAjC,EAL0B,EAI9BC,mBACID,cAL0B,MAO3B,CACHiC,OAAAA,EACA3D,aAAc0B,GAAiBA,EAAcE,OAC7CoK,YAAYoC,EAAAA,EAAAA,oBAAmB1M,EAAeiC,GAVhB,IAZlC,SAA4B+F,GACxB,MAAO,CACHuC,eAAgB,SAACjG,EAAI3G,EAAOsM,GACxBjC,GAAS2E,EAAAA,EAAAA,IAAgBrI,EAAI3G,EAAOsM,GACvC,EAEDO,eAAgB,SAAClG,EAAI3G,EAAOsM,GACxBjC,GAAS4E,EAAAA,EAAAA,IAAgBtI,EAAI3G,EAAOsM,GACvC,EAER,GAEyBlK,CAWF8J,GAExBlC,EAAWlI,UAAYoK,EAAepK,UACtCkI,EAAW9H,aAAegK,EAAehK,Y,8MC3Q5BgN,EAAe,CACxBC,GAAI,kBAAC,IAAD,CAASpD,QAAQ,sBACjB,kBAAC,KAAD,CAA8BzM,UAAU,iCAE5C8P,KAAM,kBAAC,IAAD,CAASrD,QAAQ,uBACnB,kBAAC,KAAD,CAAgCzM,UAAU,oCAIrC+P,EAAgB,CACzBC,KAAM,kBAAC,IAAD,CAASvD,QAAQ,kBACnB,kBAAC,KAAD,CAAiBzM,UAAU,sCAE/BiQ,MAAO,kBAAC,IAAD,CAASxD,QAAQ,mBACpB,kBAAC,KAAD,CAAWzM,UAAU,wCAsEhB0L,EAAkB,eAAC7F,EAAD,uDAAQ,GAAR,MAAgB,CAC3C4C,MAAO,CACH,CACI9G,MAAO,cACPuO,WAAY,CAACC,EAAAA,WAEjB,CACIxO,MAAO,MACPuO,WAAY,CAACC,EAAAA,WAEjB,CACIxO,MAAO,OACPuO,WAAY,CAACC,EAAAA,WAEjB,QACA,CACIxO,MAAO,OACPuO,WAAY,CAACC,EAAAA,YAGrBjI,KAAMrC,EAAKxD,KAAI,SAAA+N,GAAI,MAAK,CACpBA,EAAKC,YACLD,EAAKE,IACLF,EAAK1L,KACL,CACI/C,MAAOiO,EAAaQ,EAAKjI,QACzB,kBAAC,IAAD,CAASsE,QAAQ,0BACb,kBAAC,KAAD,CAA4BzM,UAAU,uCAG9CoQ,EAAKhO,KAVU,IApBQ,EAkClBoC,EAAqB,wEAAyB,CAAEnB,QAAS,GAAIE,SAAU,IAA/CF,EAAH,EAAGA,QAASE,EAAZ,EAAYA,SAAZ,MAA4D,CAC1FkF,MAAO,CACH,CACI9G,MAAO,OACPuO,WAAY,CAACC,EAAAA,WAEjB,CACIxO,MAAO,UACPuO,WAAY,CAACC,EAAAA,WAEjB,CACIxO,MAAO,YACPuO,WAAY,CAACC,EAAAA,YAGrBjI,KAAM,kBAAI7E,IAAJ,OAAgBE,IAAUlB,KAAI,SAAAkO,GAAU,MAAK,CAC/C,CACI5O,MAAO4O,EAAW7L,KAClBiE,UAAW4H,EAAW7L,MAE1B,CACI/C,MAAOoO,EAActM,QAAQ8M,EAAWlN,UACxCsF,UAAW,GAAF,OAAK4H,EAAWlN,UAE7B,CACI1B,MAAOoO,EAActM,QAAQ8M,EAAW5L,WACxCgE,UAAW,GAAF,OAAK4H,EAAW5L,WAXa,IAc9CsE,QAAS,CACL,CAAE7G,KAAM,WACR,CACIA,KAAM,WACNoN,QAAS,CACL,CAAEgB,MAAO,aAAc9P,MAAO,QAC9B,CAAE8P,MAAO,cAAe9P,MAAO,WAGvC,CACI0B,KAAM,WACNoN,QAAS,CACL,CAAEgB,MAAO,aAAc9P,MAAO,QAC9B,CAAE8P,MAAO,cAAe9P,MAAO,YA1Cb,EAgDrB0D,EAAgB,eAACyB,EAAD,uDAAQ,GAAIlE,EAAZ,uDAAoB,GAApB,MAA4B,CACrD8G,MAAO,CAAC,CACJ9G,MAAAA,EACAuO,WAAY,CAACC,EAAAA,YAEjBjI,KAAMrC,EAAKxD,KAAI,SAAA+N,GAAI,MAAK,CAACA,EAAN,IACnBnH,QAAS,CAAC,CAAE7G,KAAM,YANO,C,44BChL7B,SAASqO,EAAWC,EAASlK,GACzB,IACI,OAAOmK,KAAKC,MAAMF,EAGrB,CAFC,SACE,iBAAUlK,EAAMkK,EACnB,CACJ,CAEM,IAAMjB,EAAqB,wFAS9B,CAAC,EARDoB,EAD8B,EAC9BA,eACAC,EAF8B,EAE9BA,kBACAC,EAH8B,EAG9BA,iBACAjC,EAJ8B,EAI9BA,QACAkC,EAL8B,EAK9BA,aACAC,EAN8B,EAM9BA,SACAC,EAP8B,EAO9BA,eACAC,EAR8B,EAQ9BA,UAR8B,yDASd,CAAC,EAAXC,EATwB,EASxBA,MATwB,MASL,CACzB1C,UAAWmC,IAAkBO,SAAJ,UAAIA,EAAOC,YAAX,aAAI,EAAaC,WAC1C3C,QAASmC,IAAqBM,SAAJ,UAAIA,EAAOC,YAAX,aAAI,EAAaE,aAC3C3C,eAAgBmC,IACZK,SAAA,UAAAA,EAAOC,YAAP,eAAaC,aACNF,SADP,UACOA,EAAOC,YADd,aACO,EAAaC,YACbE,OAAOJ,SAAD,UAACA,EAAOC,YAAR,aAAC,EAAaC,UAAW,IAAME,OAAOJ,SAAD,UAACA,EAAOC,YAAR,aAAC,EAAaE,YAAa,IAEjFzC,QAASA,IAAYsC,SAAA,UAAAA,EAAOC,YAAP,eAAaI,SAAb,UAA0BL,SAA1B,UAA0BA,EAAOC,YAAjC,aAA0B,EAAaI,OAAvC,OACrBpC,QAAS2B,GAAgBA,EAAa3O,KAAI,gBAAGiN,EAAH,EAAGA,OAAQkB,EAAX,EAAWA,MAAOjB,EAAlB,EAAkBA,YAAaC,EAA/B,EAA+BA,QAASpN,EAAxC,EAAwCA,KAAxC,kBACnCkN,GAAUmB,EAAWnB,EAAQ,WADM,IAEtCkB,MAAAA,GACGjB,GAAekB,EAAWlB,EAAa,eACvCC,GAAWiB,EAAWjB,EAAS,YAC/BpN,GAAQqO,EAAWrO,EAAM,aALU,IAQ1CoM,OAAQyC,EACRxC,cAAeyC,aAAF,EAAEA,EAAgBQ,MAC/B7C,SAAUsC,EA5BoB,EA+BrBrS,EAAkB,0EAM3B,CAAC,EALD6S,EAD2B,EAC3BA,KACAC,EAF2B,EAE3BA,iBACAC,EAH2B,EAG3BA,kBACAC,EAJ2B,EAI3BA,eACAC,EAL2B,EAK3BA,eAL2B,yDAMX,CAAC,EAAXX,EANqB,EAMrBA,MANqB,MAMH,CACxBjF,QAASyF,EACTxF,cAAeyF,EACfxF,aAAcsF,IAAQP,SAAJ,UAAIA,EAAOC,YAAX,aAAI,EAAaW,cACnC1F,SAAUwF,EACVvF,cAAewF,EAXY,EAclB7O,EAAe,wEAIxB,CAAC,EAHD+O,EADwB,EACxBA,YACAC,EAFwB,EAExBA,aACAC,EAHwB,EAGxBA,kBAHwB,MAIhB,CACRrQ,OAAQmQ,EACRlQ,QAASmQ,EACTjQ,YAAakQ,EAPW,EAUfxG,EAAyB,4EAIlC,CAAC,EAHDyG,EADkC,EAClCA,oBACAC,EAFkC,EAElCA,sBAFkC,IAGlCC,QAAAA,OAHkC,MAGxB,CAAC,EAHuB,2DAIlB,CAAC,EAAXlB,EAJ4B,EAI5BA,MAJ4B,MAIV,CACxBhP,KAAMgQ,QAC0B3R,KAA5B2Q,SAAA,UAAAA,EAAOC,YAAP,eAAakB,cAA6BnB,SAAA,UAAAA,EAAOC,YAAP,SAAakB,WAAa,UAAY,kBAC/E9R,EACLqB,OAAQuQ,EACR9G,KAAM+G,EAAQ/G,KACdC,KAAM8G,EAAQ9G,KACdC,KAAM6G,EAAQE,WAXoB,EAczB3N,EAAwB,wEAKjC,CAAC,EAJD4N,EADiC,EACjCA,mBACAC,EAFiC,EAEjCA,iBACAC,EAHiC,EAGjCA,kBACAvP,EAJiC,EAIjCA,aAJiC,MAKzB,CACRa,SAAUwO,EACVpO,SAAUqO,EACVpO,UAAWqO,EACXvP,aAAAA,EATiC,EA0BxB0C,EAAuB,SAACd,GAAD,cAChC4N,EAAAA,iBADgC,IAChCA,EAAAA,gBADgC,EAChCA,EAAAA,WAAAA,QAAmB,SAAAC,GAAQ,MAAuB,kCAAnBA,EAASrC,KAAb,IAC1BnO,KAAI,SAAAwQ,GAAQ,MARkBC,EAQlB,MAAK,CACdpO,KAAMmO,EAASrC,MACflS,QAV2BwU,EAUA9N,aAAD,EAACA,EAAQsC,uBAAuBuL,EAASnS,OAThEoS,EAC+C,WAAjDC,EAAAA,EAAAA,IAAyBD,GAAkC,QAAU,SACpE,OAQF9L,QAAShC,SAAF,UAAEA,EAAQsC,uBAAuBuL,EAASnS,cAA1C,aAAE,EAAgDsS,cACzDvM,QAAS,CACL/B,KAAMmO,EAASI,OACf5L,GAAIrC,aAAF,EAAEA,EAAS6N,EAASK,UANjB,GAFmB,EAYvBC,EAAe,wEAExB,CAAC,EADDC,EADwB,EACxBA,gBADwB,MAEhB,CACRC,MAAO,IAAIlR,KAAS,IAAIA,KAAKiR,GAHL,C,2MC9GtBE,EAAiB,SAAC,GAA8B,IAA5BnW,EAA4B,EAA5BA,YAAgBgM,GAAY,YAClD,GAA8B/I,EAAAA,EAAAA,YAA9B,eAAO6J,EAAP,KAAgBsJ,EAAhB,KAQA,OAPAjW,EAAAA,EAAAA,YAAU,WACW,QAAbH,IACW,QAAX,EAAAA,WAAA,mBAAeI,gBAAf,gBAA0B,CAAEyF,mBAAAA,EAAAA,WAGhCuQ,GAAW,kBAAMpW,EAAcwD,EAAAA,SAAWuJ,EAAAA,QAA/B,GACd,GAAE,IACID,EAAU,kBAACA,EACV9M,GAAe,CACfoD,MAAOpD,IAAcqD,YAGzB,kBAAC,IAAuB2I,IACfnL,EAAAA,CAChB,EAEDsV,EAAe9Q,UAAY,CACvBrF,YAAasF,IAAAA,MAGjB,S,g1BCLO,IAAM+Q,EAAe,WAA6F,IAA5F3R,EAA4F,uDAApF,GAAoF,kGAAzC,CAAC,EAAd4R,EAAsD,EAAtDA,SAAiBC,EAAqC,uDAAvBC,EAAAA,YAAvD1K,EAA8E,EAA9EA,QAAY2K,GAAkE,YAC/GC,EAAUhS,EAAMjD,QAAO,SAACkV,EAAKC,GAAN,wBAElBD,GAFkB,CAGrBC,GAAwB,iBAATA,EAAoBA,EAAOA,EAAK1M,IAH1B,GAK1B,IAAI7D,OAAOC,SAERuQ,EAAmB,SAACtP,GAAD,iBAAU,UAAAkP,EAAOK,mBAAP,eAAqBvP,MACvD,UAAAkP,EAAOK,mBAAP,eAAoBC,OAAsC,KAA/B,UAAAN,EAAOK,mBAAP,eAAqBvP,GADxB,EAGnByP,EAAiBlL,EAAUA,EAAQrK,OAAOwV,EAAAA,eAAf,aAC1BC,EAAAA,IACmB,IAAnBpL,EAAQ3F,QAAgB,CAAEgR,qBAAsB,KAC/CN,EAAiB,UAAY,CAAEO,iBAAa9T,IAC5CuT,EAAiB,mBAAqB,CAAEM,0BAAsB7T,IAC9DuT,EAAiB,qBAAuB,CAAEQ,cAAU/T,KAL9B,WAMpB4T,EAAAA,IACFL,EAAiB,UAAY,CAAEO,iBAAa9T,IAC5CuT,EAAiB,mBAAqB,CAAEM,0BAAsB7T,IAC9DuT,EAAiB,qBAAuB,CAAEQ,cAAU/T,IAGtDgU,EAAUb,EAAOa,SAAW,UAC5BC,EAAiBd,EAAOc,gBAAkB,OAE1CC,EAAkBxS,KAAKyS,MAE7B,MAAO,CACHxS,KAAMyS,EAAAA,GAAAA,cACNC,QAASpB,EAAYG,EAAD,KAChB5K,QAASkL,GACNP,GAFa,IAGhBa,QAAAA,EACAC,eAAAA,IACDjB,EAAUE,EAAAA,aAAoBoB,MAAK,gBAAGC,EAAH,EAAGA,QAAYnP,GAAf,0BAC/BA,GAD+B,IAElCoD,QAAAA,EACAgM,OAAQ,CAAEzO,IAAKiO,EAASzM,UAAW0M,GACnCM,QAASnT,EAAMyB,OAAS,EAAIzB,EAAMQ,KAAI,SAAC+N,GAAD,cAC/BA,EAAK/I,GAAK+I,EAAO,CAAE/I,GAAI+I,IACvB4E,EAAQE,MAAK,gBAAG7N,EAAH,EAAGA,GAAH,OAAYA,IAAO+I,GAAQ/I,IAAO+I,EAAK/I,EAAvC,KAA8C,CAAC,EAF7B,IAGhC2N,EACNjW,KAAM6U,EAAO7U,OAAS8G,aAAhB,EAAgBA,EAAM9G,MAE5BoW,SAAUvB,EAAOuB,WAAatP,aAApB,EAAoBA,EAAMsP,UACpClB,YAAaL,EAAOK,aAXc,IAatCmB,KAAM,CACF3B,SAAAA,EACAkB,gBAAAA,GAGX,EAEYU,EAAiB,eAACxT,EAAD,uDAAS,GAAT,MAAiB,CAC3CO,KAAMkT,EAAAA,GACNR,QAAS,CACLE,QAASnT,GAHa,EAOjB0T,EAAe,SAACC,GAAD,MAAmB,CAC3CpT,KAAMqT,EAAAA,GACNX,QAASU,EAFe,EAKfE,EAAa,SAACrO,EAAIuM,EAAL,OAAeH,EAAf,EAAeA,SAAf,MAA+B,CACrDrR,KAAMyS,EAAAA,GAAAA,YACNC,SAASnB,EAAAA,EAAAA,aAAmBtM,EAAIuM,EAAQH,GACxC2B,KAAM,CACF3B,SAAAA,GAJkB,EAQbkC,EAAe,SAACtO,EAAIuO,GAAL,MAAmB,CAC3CxT,KAAMyT,EAAAA,GACNf,QAAS,CAAEzN,GAAAA,EAAIuO,SAAAA,GAFS,EAKfE,EAAU,SAACjQ,GAAD,MAAW,CAC9BzD,KAAM2T,EAAAA,GACNjB,QAASjP,EAFU,EAKVmQ,EAAiB,SAACxP,EAAKyP,GAAN,MAAwB,CAClD7T,KAAM8T,EAAAA,GACNpB,QAAS,CAAEtO,IAAAA,EAAKyP,aAAAA,GAFU,EAKjBE,EAAe,SAAChW,GAAD,MAAc,CACtCiC,KAAMgU,EAAAA,GACNtB,QAAS,CAAE3U,QAAAA,GAFa,EAKfkW,EAAkB,eAACzU,IAAD,+DAAuB,CAClDQ,KAAMkU,EAAAA,GACNxB,QAAS,CAAElT,UAAAA,GAFgB,EAKlB2U,EAAe,iBAAO,CAC/BnU,KAAMoU,EAAAA,GADkB,EAqCfC,EAAW,SAACC,EAAU5Y,EAAQ0R,EAASmH,GAA5B,MAAuC,CAC3DvU,KAAMyS,EAAAA,GAAAA,UACNC,SAAS8B,EAAAA,EAAAA,SAAQF,EAAU5Y,EAAQ0R,GACnC4F,KAAM,CACFyB,UAAWF,EACXD,SAAAA,GALgB,EASXI,EAAiB,SAACvM,GAAD,MAAa,CACvCnI,KAAM2U,EAAAA,GACNjC,QAAS,CAAEvK,OAAAA,GAFe,EAKjByM,EAAe,SAAClZ,EAAQmZ,GAAT,IAAqBL,EAArB,uDAA+BM,EAAAA,WAA/B,MAAsD,CAC9E9U,KAAMyS,EAAAA,GAAAA,SACNC,QAAS8B,EAAQ9Y,EAAQmZ,GACzB7B,KAAM,CAAE+B,oBAAqBhV,KAAKyS,OAHV,EAMfwC,EAAwB,eAACC,EAAD,uDAAU,GAAV,MAAkB,CACnDjV,KAAMyS,EAAAA,GAAAA,kBACNC,SAASwC,EAAAA,EAAAA,qBAAoBD,GAFI,EAqBxBE,EAAgB,SAAC3D,GAAD,MAAa,CACtCxR,KAAMoV,EAAAA,GACN1C,QAASlB,EAFgB,EAKhB6D,EAAe,SAACC,GAAD,MAAe,CACvCtV,KAAMuV,EAAAA,GACN7C,QAAS,CAAE4C,SAAAA,GAFa,C,8pBC7MrB,IAEME,EAAQ,CAAC,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAGxDC,EAAc,SAACC,GACxB,GAAc,IAAVA,GAAeC,MAAMvG,OAAOsG,IAC5B,MAAO,MAGX,IAAM/P,EAAQiQ,KAAKC,MAAMD,KAAKE,IAAIJ,GAASE,KAAKE,IAAI,OACpD,gBAAUC,YAAYL,EAAQE,KAAKI,IAAI,KAAMrQ,IAAQsQ,QAAQ,IAA7D,YAAoET,EAAM7P,GAC7E,EAiDD,SAAeuQ,EAAAA,EAAAA,KAAgB,eAEtBzD,EAAAA,GAAAA,+BArBF,SAAyB1M,EAAzB,GAA0D,IAR7BqK,EAXL+F,EAmBqBvD,EAAa,EAAxBF,QAAWE,QAC1CjS,EAAiBiS,GAAWA,EAAQ,IAAMA,EAAQ,GAAGwD,gBAAmB,CAAC,EACzEC,EAAoBzD,GAAWA,EAAQ,SAA2D,IAA7CA,EAAQ,GAAGwD,eAAeE,gBAC9D1D,EAAQ,GAAGwD,eAAeE,eACjD,cACOvQ,GADP,IAEIwQ,cAAc,OACe,QAArBF,GAAmD,UAArBA,EAAgC,GAAK,CAAC,QAE5E1V,cAAe,EAAF,GACTE,QAAQ,GACLF,GAFM,IAGT+L,QAAS/L,EAAc6V,qBAAuBf,EAAY9U,EAAc6V,qBACxExV,cAhCmBmV,EAgCUxV,EAAc8V,UA/B5CN,GAASA,EAAM3Z,QAAO,SAACkV,EAAKC,GAAN,cACtBD,GACAC,EAAK1Q,QAAU,CACdA,QAAS,GAAF,eAAMyQ,EAAIzQ,SAAV,CAAmB0Q,KAC1B,CACAxQ,SAAU,GAAF,eAAMuQ,EAAIvQ,UAAV,CAAoBwQ,KALP,GAOzB,CAAE1Q,QAAS,GAAIE,SAAU,MAyBrB+O,SAtBwBE,EAsBKzP,EAAc+V,mBArB5CtG,GAAcA,EAAW5T,QAAO,SAACkV,EAAKC,GAAN,MAAgB,CACnDvB,WAAY,GAAF,eAAMsB,EAAItB,YAAV,CAAsBuB,IAChCxI,KAAM,kBAAIuI,EAAIvI,OAAR,OAAiBwI,EAAKgF,gBAAkB,KAAIvV,OAAOC,SACzD+H,KAAM,kBAAIsI,EAAItI,OAAR,OAAiBuI,EAAKiF,gBAAkB,KAAIxV,OAAOC,SAHtB,GAInC,CAAE+O,WAAY,GAAIjH,KAAM,GAAIC,KAAM,SAoBzC,KAE8B,SAGtBqJ,EAAAA,GAAAA,6BAlDF,SAA8B1M,GACjC,cACOA,GADP,IAEIpF,cAAe,CACXE,QAAQ,IAGnB,IAwC8B,GAK3B,CACIF,cAnEoB,CAAEE,QAAQ,I,yGCctC,SAfO,SAA0CgW,GAC/C,MAAqC,mBAAvBA,GAAoC,EAAAC,EAAA,IAAmBD,EAAoB,2BAAwBxY,CACnH,EACO,SAAyCwY,GAC9C,OAAQA,OAIHxY,GAJwB,EAAAyY,EAAA,KAAuB,SAAUnO,GAC5D,MAAO,CACLA,SAAUA,EAEd,GACF,EACO,SAAwCkO,GAC7C,OAAOA,GAAoD,iBAAvBA,GAAkC,EAAAC,EAAA,KAAuB,SAAUnO,GACrG,OAAO,EAAAoO,EAAA,GAAmBF,EAAoBlO,EAChD,SAAKtK,CACP,GCPA,GARO,SAAuC2Y,GAC5C,MAAkC,mBAApBA,GAAiC,EAAAF,EAAA,IAAmBE,EAAiB,wBAAqB3Y,CAC1G,EACO,SAAsC2Y,GAC3C,OAAQA,OAEH3Y,GAFqB,EAAAyY,EAAA,KAAuB,WAC/C,MAAO,CAAC,CACV,GACF,GCNO,SAASG,EAAkBC,EAAYC,EAAeC,GAC3D,OAAO,OAAS,CAAC,EAAGA,EAAUF,EAAYC,EAC5C,CA+BA,SARO,SAAkCE,GACvC,MAA6B,mBAAfA,EAvBT,SAA4BA,GACjC,OAAO,SAA6B1O,EAAU2O,GAC1BA,EAAKC,YAAvB,IAIIC,EAHAC,EAAOH,EAAKG,KACZC,EAAsBJ,EAAKI,oBAC3BC,GAAa,EAEjB,OAAO,SAAyBT,EAAYC,EAAeC,GACzD,IAAIQ,EAAkBP,EAAWH,EAAYC,EAAeC,GAU5D,OARIO,EACGF,GAASC,EAAoBE,EAAiBJ,KAAcA,EAAcI,IAE/ED,GAAa,EACbH,EAAcI,GAITJ,CACT,CACF,CACF,CAE4CK,CAAmBR,QAAchZ,CAC7E,EACO,SAAiCgZ,GACtC,OAAQA,OAEJhZ,EAFiB,WACnB,OAAO4Y,CACT,CACF,G,eChCIa,EAAY,CAAC,OAAQ,iBAAkB,mBAAoB,qBAAsB,uBAwBrF,SAASC,EAAMC,EAAKC,EAAW3V,GAC7B,IAAK,IAAI4V,EAAID,EAAU/W,OAAS,EAAGgX,GAAK,EAAGA,IAAK,CAC9C,IAAIC,EAASF,EAAUC,GAAGF,GAC1B,GAAIG,EAAQ,OAAOA,CACrB,CAEA,OAAO,SAAUxP,EAAUyE,GACzB,MAAM,IAAIgL,MAAM,gCAAkCJ,EAAM,QAAU1V,EAAO,uCAAyC8K,EAAQiL,qBAAuB,IACnJ,CACF,CAEA,SAASC,EAAYpS,EAAGC,GACtB,OAAOD,IAAMC,CACf,CAIO,SAASoS,EAAcC,GAC5B,IAAIlB,OAAiB,IAAVkB,EAAmB,CAAC,EAAIA,EAC/BC,EAAkBnB,EAAKoB,WACvBA,OAAiC,IAApBD,EAA6BE,EAAA,EAAkBF,EAC5DG,EAAwBtB,EAAKuB,yBAC7BA,OAAqD,IAA1BD,EAAmC,EAAkCA,EAChGE,EAAwBxB,EAAKyB,4BAC7BA,OAAwD,IAA1BD,EAAmC,EAAqCA,EACtGE,EAAwB1B,EAAK2B,oBAC7BA,OAAgD,IAA1BD,EAAmC,EAA6BA,EACtFE,EAAuB5B,EAAK6B,gBAC5BA,OAA2C,IAAzBD,EAAkC,KAAyBA,EAEjF,OAAO,SAAiBlC,EAAiBH,EAAoBQ,EAAY+B,QACzD,IAAVA,IACFA,EAAQ,CAAC,GAGX,IAAIC,EAAQD,EACRE,EAAaD,EAAM5B,KACnBA,OAAsB,IAAf6B,GAA+BA,EACtCC,EAAuBF,EAAMG,eAC7BA,OAA0C,IAAzBD,EAAkCjB,EAAciB,EACjEE,EAAwBJ,EAAMK,iBAC9BA,OAA6C,IAA1BD,EAAmCE,EAAA,EAAeF,EACrEG,EAAwBP,EAAMQ,mBAC9BA,OAA+C,IAA1BD,EAAmCD,EAAA,EAAeC,EACvEE,EAAwBT,EAAM3B,oBAC9BA,OAAgD,IAA1BoC,EAAmCH,EAAA,EAAeG,EACxEC,GAAe,OAA8BV,EAAOvB,GAEpDkC,EAAsBjC,EAAMf,EAAiB6B,EAA0B,mBACvEoB,EAAyBlC,EAAMlB,EAAoBkC,EAA6B,sBAChFmB,EAAiBnC,EAAMV,EAAY4B,EAAqB,cAC5D,OAAOP,EAAWS,GAAiB,OAAS,CAE1CgB,WAAY,UAEZC,eAAgB,SAAwB9X,GACtC,MAAO,WAAaA,EAAO,GAC7B,EAEA+X,yBAA0BhZ,QAAQ2V,GAElCgD,oBAAqBA,EACrBC,uBAAwBA,EACxBC,eAAgBA,EAChBzC,KAAMA,EACN+B,eAAgBA,EAChBE,iBAAkBA,EAClBG,mBAAoBA,EACpBnC,oBAAqBA,GACpBqC,GACL,CACF,CACA,QAA4BxB,G","sources":["webpack:///./src/Routes.js","webpack:///./src/App.js","webpack:///./src/config.js","webpack:///./src/AppEntry.js","webpack:///./src/bootstrap.js","webpack:///./src/components/GeneralInfo/BiosCard/BiosCard.js","webpack:///./src/components/GeneralInfo/ConfigurationCard/ConfigurationCard.js","webpack:///./src/components/GeneralInfo/DataCollectorsCard/DataCollectorsCard.js","webpack:///./src/components/GeneralInfo/GeneralInformation/GeneralInformation.js","webpack:///./src/components/GeneralInfo/InfrastructureCard/InfrastructureCard.js","webpack:///./src/components/GeneralInfo/OperatingSystemCard/OperatingSystemCard.js","webpack:///./src/components/GeneralInfo/SystemCard/SystemCard.js","webpack:///./src/components/GeneralInfo/dataMapper/dataMapper.js","webpack:///./src/components/GeneralInfo/selectors/selectors.js","webpack:///./src/components/SystemDetails/GeneralInfo.js","webpack:///./src/store/inventory-actions.js","webpack:///./src/store/systemProfileStore.js","webpack:///./node_modules/react-redux/es/connect/mapDispatchToProps.js","webpack:///./node_modules/react-redux/es/connect/mapStateToProps.js","webpack:///./node_modules/react-redux/es/connect/mergeProps.js","webpack:///./node_modules/react-redux/es/connect/connect.js"],"sourcesContent":["import { Route, Redirect, Switch } from 'react-router-dom';\nimport React, { lazy, Suspense, useContext, useEffect } from 'react';\nimport { tagsMapper } from './constants';\nimport { reducers, RegistryContext, tableReducer } from './store';\nimport { mergeWithEntities } from './store/reducers';\n\nconst InventoryTable = lazy(() => import('./routes/InventoryTable'));\nconst InventoryDetail = lazy(() => import('./routes/InventoryDetail'));\n\nexport const routes = {\n    table: '/',\n    detail: '/:inventoryId',\n    detailWithModal: '/:inventoryId/:modalId'\n};\n\nexport const Routes = () => {\n    const { getRegistry } = useContext(RegistryContext);\n    useEffect(() => {\n        getRegistry().register({\n            ...reducers,\n            ...mergeWithEntities(tableReducer)\n        });\n    }, [getRegistry]);\n    const searchParams = new URLSearchParams(location.search);\n\n    return (\n        <Suspense fallback=\"\">\n            <Switch>\n                <Route\n                    exact\n                    path={routes.table}\n                    render={() => <InventoryTable\n                        status={searchParams.getAll('status')}\n                        source={searchParams.getAll('source')}\n                        filterbyName={searchParams.getAll('hostname_or_id')}\n                        tagsFilter={searchParams.getAll('tags')?.[0]?.split?.(',').reduce?.(tagsMapper, [])}\n                        operatingSystem={searchParams.getAll('operating_system')}\n                        page={searchParams.getAll('page')}\n                        perPage={searchParams.getAll('per_page')}\n                    />}\n                    rootClass='inventory'\n                />\n                <Route exact path={routes.detailWithModal} component={InventoryDetail} rootClass='inventory' />\n                <Route exact path={routes.detail} component={InventoryDetail} rootClass='inventory' />\n                <Redirect path=\"*\" to=\"/\" />\n            </Switch>\n        </Suspense>\n    );\n};\n","import React, { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Routes } from './Routes';\nimport './App.scss';\nimport { INVENTORY_ROOT } from './config';\nimport { NotificationsPortal } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { RBACProvider } from '@redhat-cloud-services/frontend-components/RBACProvider';\n\nconst App = () => {\n    const history = useHistory();\n    useEffect(() => {\n        insights.chrome.init();\n        insights.chrome.identifyApp(INVENTORY_ROOT);\n        return insights.chrome.on(\n            'APP_NAVIGATION',\n            event => {\n                if (event.navId === 'inventory') {\n                    history.push(`/${location.search}${location.hash}`);\n                } else {\n                    history.push(`/${event.navId}${location.search}${location.hash}`);\n                }\n            }\n        );\n    }, []);\n\n    return (\n        <div className=\"inventory\">\n            <NotificationsPortal />\n            <RBACProvider appName=\"inventory\">\n                <Routes />\n            </RBACProvider>\n        </div>\n    );\n};\n\nexport default App;\n","\nexport const INVENTORY_API_BASE = '/api/inventory/v1';\nexport const INVENTORY_ROOT = 'inventory';\n","import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { init, RegistryContext } from './store';\nimport App from './App';\nimport { getBaseName } from '@redhat-cloud-services/frontend-components-utilities/helpers';\nimport logger from 'redux-logger';\nimport Fallback from './components/SpinnerFallback';\n\nconst InventoryApp = () => {\n    const [registry, setRegistry] = useState();\n    const store = registry?.getStore();\n\n    useEffect(() => {\n        setRegistry(IS_DEV ? init(logger) : init());\n\n        return () => {\n            setRegistry(undefined);\n        };\n    }, []);\n\n    return (registry ? (\n        <RegistryContext.Provider value={{\n            getRegistry: () => registry\n        }}>\n            <Provider store={store}>\n                <Router basename={getBaseName(window.location.pathname)}>\n                    <App />\n                </Router>\n            </Provider>\n        </RegistryContext.Provider>\n    ) : <Fallback />);\n};\n\nexport default InventoryApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport InventoryApp from './AppEntry';\n\nReactDOM.render(\n    <InventoryApp />,\n    document.getElementById('root')\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport LoadingCard from '../LoadingCard';\nimport { biosSelector } from '../selectors';\nimport DateFormat from '@redhat-cloud-services/frontend-components/DateFormat';\nimport { extraShape, isDate } from '../../../constants';\n\nconst BiosCardCore = ({ bios, detailLoaded, hasVendor, hasVersion, handleClick, hasReleaseDate, extra }) => (<LoadingCard\n    title=\"BIOS\"\n    isLoading={ !detailLoaded }\n    items={ [\n        ...hasVendor ? [{ title: 'Vendor', value: bios.vendor }] : [],\n        ...hasVersion ? [{ title: 'Version', value: bios.version }] : [],\n        ...hasReleaseDate ? [{ title: 'Release date', value: (isDate(bios.releaseDate) ?\n            <DateFormat date={ new Date(bios.releaseDate) } type=\"onlyDate\" /> :\n            'Not available'\n        ) }] : [],\n        ...extra.map(({ onClick, ...item }) => ({\n            ...item,\n            ...onClick && { onClick: (e) => onClick(e, handleClick) }\n        }))\n    ] }\n/>);\n\nBiosCardCore.propTypes = {\n    detailLoaded: PropTypes.bool,\n    handleClick: PropTypes.func,\n    bios: PropTypes.shape({\n        vendor: PropTypes.string,\n        version: PropTypes.string,\n        releaseDate: PropTypes.string,\n        csm: PropTypes.arrayOf(PropTypes.string)\n    }),\n    hasVendor: PropTypes.bool,\n    hasVersion: PropTypes.bool,\n    hasReleaseDate: PropTypes.bool,\n    extra: PropTypes.arrayOf(extraShape)\n};\nBiosCardCore.defaultProps = {\n    detailLoaded: false,\n    handleClick: () => undefined,\n    extra: [],\n    hasVendor: true,\n    hasVersion: true,\n    hasReleaseDate: true\n};\n\nexport const BiosCard = connect(({\n    systemProfileStore: {\n        systemProfile\n    }\n}) => ({\n    detailLoaded: systemProfile && systemProfile.loaded,\n    bios: biosSelector(systemProfile)\n}))(BiosCardCore);\n\nBiosCard.propTypes = BiosCardCore.propTypes;\nBiosCard.defaultProps = BiosCardCore.defaultProps;\n\nexport default BiosCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport LoadingCard from '../LoadingCard';\nimport { generalMapper, repositoriesMapper } from '../dataMapper';\nimport { configurationSelector } from '../selectors';\nimport { extraShape } from '../../../constants';\n\nexport function enabledRepos(repositories) {\n    if (repositories) {\n        return [\n            repositories.enabled && repositories.enabled.length > 0 && `${repositories.enabled.length} enabled`,\n            repositories.disabled && repositories.disabled.length > 0 && `${repositories.disabled.length} disabled`\n        ].filter(Boolean).join(' / ');\n    }\n}\n\nconst ConfigurationCardCore = ({\n    detailLoaded,\n    configuration,\n    handleClick,\n    hasPackages,\n    hasServices,\n    hasProcesses,\n    hasRepositories,\n    extra\n}) => (<LoadingCard\n    title=\"Configuration\"\n    isLoading={ !detailLoaded }\n    items={ [\n        ...hasPackages ? [{\n            title: 'Installed packages',\n            value: configuration.packages?.length,\n            singular: 'package',\n            target: 'installed_packages',\n            onClick: () => {\n                handleClick(\n                    'Installed packages',\n                    generalMapper(configuration.packages, 'Package name')\n                );\n            }\n        }] : [],\n        ...hasServices ? [{\n            title: 'Services',\n            value: configuration.services?.length,\n            singular: 'service',\n            target: 'services',\n            onClick: () => {\n                handleClick(\n                    'Services',\n                    generalMapper(configuration.services, 'Service name')\n                );\n            }\n        }] : [],\n        ...hasProcesses ? [{\n            title: 'Running processes',\n            value: configuration.processes?.length,\n            singular: 'process',\n            plural: 'processes',\n            target: 'running_processes',\n            onClick: () => {\n                handleClick(\n                    'Running processes',\n                    generalMapper(configuration.processes, 'Process name')\n                );\n            }\n        }] : [],\n        ...hasRepositories ? [{\n            title: 'Repositories',\n            value: enabledRepos(configuration.repositories),\n            target: 'repositories',\n            onClick: () => {\n                handleClick(\n                    'Repositories',\n                    repositoriesMapper(configuration.repositories),\n                    'medium'\n                );\n            }\n        }] : [],\n        ...extra.map(({ onClick, ...item }) => ({\n            ...item,\n            ...onClick && { onClick: (e) => onClick(e, handleClick) }\n        }))\n    ] }\n/>);\n\nConfigurationCardCore.propTypes = {\n    detailLoaded: PropTypes.bool,\n    handleClick: PropTypes.func,\n    configuration: PropTypes.shape({\n        packages: PropTypes.arrayOf(PropTypes.string),\n        services: PropTypes.arrayOf(PropTypes.string),\n        processes: PropTypes.arrayOf(PropTypes.string),\n        repositories: PropTypes.shape({\n            enabled: PropTypes.arrayOf(PropTypes.shape({\n                // eslint-disable-next-line camelcase\n                base_url: PropTypes.string,\n                name: PropTypes.string,\n                enabled: PropTypes.bool,\n                gpgcheck: PropTypes.bool\n            })),\n            disabled: PropTypes.arrayOf(PropTypes.shape({\n                // eslint-disable-next-line camelcase\n                base_url: PropTypes.string,\n                name: PropTypes.string,\n                enabled: PropTypes.bool,\n                gpgcheck: PropTypes.bool\n            }))\n        })\n    }),\n    hasPackages: PropTypes.bool,\n    hasServices: PropTypes.bool,\n    hasProcesses: PropTypes.bool,\n    hasRepositories: PropTypes.bool,\n    extra: PropTypes.arrayOf(extraShape)\n};\nConfigurationCardCore.defaultProps = {\n    detailLoaded: false,\n    handleClick: () => undefined,\n    hasPackages: true,\n    hasServices: true,\n    hasProcesses: true,\n    hasRepositories: true,\n    extra: []\n};\n\nexport const ConfigurationCard = connect(({\n    systemProfileStore: {\n        systemProfile\n    }\n}) => ({\n    detailLoaded: systemProfile && systemProfile.loaded,\n    configuration: configurationSelector(systemProfile)\n}))(ConfigurationCardCore);\n\nConfigurationCard.propTypes = ConfigurationCardCore.propTypes;\nConfigurationCard.defaultProps = ConfigurationCardCore.defaultProps;\n\nexport default ConfigurationCard;\n","/* eslint-disable camelcase */\nimport React, { useState, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport LoadingCard from '../LoadingCard';\nimport DateFormat from '@redhat-cloud-services/frontend-components/DateFormat';\nimport { TableComposable, Thead, Tr, Th, Tbody, Td, TableVariant, ExpandableRowContent } from '@patternfly/react-table';\nimport { Flex, FlexItem } from '@patternfly/react-core';\nimport { getDefaultCollectors } from '../selectors/selectors';\n\nconst DataCollectorsCardCore = ({\n    detailLoaded,\n    collectors,\n    entity,\n    dataMapper\n}) => {\n    const [expandedNames, setExpandedNames] = useState([]);\n    const setExpanded = useCallback((collector, isExpanding = true) => setExpandedNames(prevExpanded => {\n        const otherExpandedNames = prevExpanded.filter(r => r !== collector.name);\n        return isExpanding ? [...otherExpandedNames, collector.name] : otherExpandedNames;\n    }), []);\n    const isExpanded = (collector) => expandedNames.includes(collector.name);\n    const data = collectors ?? getDefaultCollectors(entity);\n    return (<LoadingCard\n        title=\"Data collectors\"\n        isLoading={ !detailLoaded }\n    >\n        <TableComposable\n            aria-label=\"Data collectors\"\n            variant={TableVariant.compact}\n            borders={false}\n        >\n            <Thead>\n                <Tr className=\"ins-c__no-border\">\n                    <Th />\n                    <Th>Name</Th>\n                    <Th>Status</Th>\n                    <Th>Last upload</Th>\n                </Tr>\n            </Thead>\n            {dataMapper ? dataMapper(data, isExpanded, setExpanded) : data.map((collector, rowIndex) => (\n                <Tbody key={collector.name} isExpanded={isExpanded(collector)}>\n                    <Tr>\n                        {collector.details.name ?\n                            <Td\n                                expand={\n                                    collector.details\n                                        ? {\n                                            rowIndex,\n                                            isExpanded: isExpanded(collector),\n                                            onToggle: () => setExpanded(collector, !isExpanded(collector))\n                                        }\n                                        : undefined\n                                }\n                                style={{ paddingLeft: 0 }}\n                            /> : <Td />}\n                        <Td dataLabel=\"Name\">{collector.name}</Td>\n                        <Td dataLabel=\"Status\">{collector.status}</Td>\n                        <Td dataLabel=\"Last upload\">\n                            {collector.updated ?\n                                <DateFormat date={ collector.updated } type=\"exact\" /> :\n                                'N/A'\n                            }</Td>\n                    </Tr>\n                    {collector.details && collector.details.name && (\n                        <Tr isExpanded={isExpanded(collector)}>\n                            <Td />\n                            <Td colSpan={3}>\n                                <ExpandableRowContent>\n                                    <Flex>\n                                        <FlexItem className=\"ins-c__flex-row-margin\">\n                                            {`${collector.details.name}:`}\n                                        </FlexItem>\n                                        <FlexItem grow={{ default: 'grow' }}>\n                                            {collector.details.id ?? 'N/A'}\n                                        </FlexItem>\n                                    </Flex>\n                                </ExpandableRowContent>\n                            </Td>\n                        </Tr>\n                    )}\n                </Tbody>))}\n        </TableComposable>\n    </LoadingCard>);\n};\n\nDataCollectorsCardCore.propTypes = {\n    detailLoaded: PropTypes.bool,\n    collectors: PropTypes.array,\n    dataMapper: PropTypes.func,\n    entity: PropTypes.shape({\n        per_reporter_staleness: PropTypes.object\n    })\n};\nDataCollectorsCardCore.defaultProps = {\n    detailLoaded: false\n};\n\nexport const DataCollectorsCard = connect(({\n    entityDetails: {\n        entity\n    },\n    systemProfileStore: {\n        systemProfile\n    }\n}) => ({\n    entity,\n    systemProfile,\n    detailLoaded: systemProfile?.loaded,\n    defaultCollectors: getDefaultCollectors(entity)\n}))(DataCollectorsCardCore);\n\nDataCollectorsCard.propTypes = DataCollectorsCardCore.propTypes;\nDataCollectorsCard.defaultProps = DataCollectorsCardCore.defaultProps;\n\nexport default DataCollectorsCard;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport {\n    Grid,\n    GridItem,\n    Modal\n} from '@patternfly/react-core';\nimport { SortByDirection } from '@patternfly/react-table';\n\nimport { systemProfile } from '../../../store/actions';\nimport InfoTable from '../InfoTable';\n// Since there's a problem with cards loading asynchronously we have to import the cards here as named\nimport { OperatingSystemCard } from '../OperatingSystemCard';\nimport { SystemCard } from '../SystemCard';\nimport { BiosCard } from '../BiosCard';\nimport { InfrastructureCard } from '../InfrastructureCard';\nimport { ConfigurationCard } from '../ConfigurationCard';\nimport { SystemStatusCard } from '../SystemStatusCard';\nimport { DataCollectorsCard } from '../DataCollectorsCard/DataCollectorsCard';\nimport { Provider } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport './general-information.scss';\n\nclass GeneralInformation extends Component {\n    state = {\n        isModalOpen: false,\n        modalTitle: '',\n        modalVariant: 'small'\n    };\n\n    onSort = (_event, index, direction, customRows) => {\n        const { rows } = this.state;\n        const sorted = (customRows || rows).sort((a, b) => {\n            const firstRow = a.cells || a;\n            const secondRow = b.cells || b;\n            const aSortBy = ('' + (firstRow[index].sortValue || firstRow[index])).toLocaleLowerCase();\n            const bSortBy = ('' + (secondRow[index].sortValue || secondRow[index])).toLocaleLowerCase();\n            return (aSortBy > bSortBy) ? -1 : 1;\n        });\n        this.setState({\n            rows: direction === SortByDirection.asc ? sorted : sorted.reverse()\n        });\n    }\n\n    handleModalToggle = (modalTitle = '', { cells, rows, expandable, filters } = {}, modalVariant = 'small') => {\n        rows && this.onSort(undefined, expandable ? 1 : 0, SortByDirection.asc, rows);\n        if (this.state.isModalOpen) {\n            this.props.history.push(this.props.location.pathname.split('/').slice(0, -1).join('/'));\n        }\n\n        this.setState(({ isModalOpen }) => ({\n            isModalOpen: !isModalOpen,\n            modalTitle,\n            cells,\n            expandable,\n            filters,\n            modalVariant\n        }));\n    };\n\n    componentDidMount() {\n        this.props.loadSystemDetail && this.props.loadSystemDetail(this.props.entity.id);\n    };\n\n    render() {\n        const { isModalOpen, modalTitle, cells, rows, expandable, filters, modalVariant } = this.state;\n        const {\n            store,\n            writePermissions,\n            SystemCardWrapper,\n            OperatingSystemCardWrapper,\n            BiosCardWrapper,\n            InfrastructureCardWrapper,\n            ConfigurationCardWrapper,\n            SystemStatusCardWrapper,\n            DataCollectorsCardWrapper,\n            CollectionCardWrapper,\n            children\n        } = this.props;\n        const Wrapper = store ? Provider : Fragment;\n        return (\n            <Wrapper {...(store && { store })}>\n                <div className=\"ins-c-general-information\">\n                    <Grid sm={12} md={6} hasGutter>\n                        {SystemCardWrapper && <GridItem>\n                            <SystemCardWrapper handleClick={ this.handleModalToggle } writePermissions={writePermissions} />\n                        </GridItem>}\n                        {OperatingSystemCardWrapper && <GridItem>\n                            <OperatingSystemCardWrapper handleClick={ this.handleModalToggle } />\n                        </GridItem>}\n                        {InfrastructureCardWrapper && <GridItem>\n                            <InfrastructureCardWrapper handleClick={ this.handleModalToggle } />\n                        </GridItem>}\n                        {BiosCardWrapper && <GridItem>\n                            <BiosCardWrapper handleClick={ this.handleModalToggle } />\n                        </GridItem>}\n                        {SystemStatusCardWrapper && <GridItem>\n                            <SystemStatusCardWrapper handleClick={ this.handleModalToggle } />\n                        </GridItem>}\n                        {ConfigurationCardWrapper && <GridItem>\n                            <ConfigurationCardWrapper handleClick={ this.handleModalToggle } />\n                        </GridItem>}\n                        {DataCollectorsCardWrapper && <GridItem>\n                            <DataCollectorsCardWrapper handleClick={ this.handleModalToggle } />\n                        </GridItem>}\n                        {CollectionCardWrapper && <GridItem>\n                            <CollectionCardWrapper handleClick={ this.handleModalToggle } />\n                        </GridItem>}\n                        {children}\n                        <Modal\n                            title={ modalTitle || '' }\n                            aria-label={`${modalTitle || ''} modal`}\n                            isOpen={ isModalOpen }\n                            onClose={ () => this.handleModalToggle() }\n                            className=\"ins-c-inventory__detail--dialog\"\n                            variant={ modalVariant }\n                        >\n                            <InfoTable\n                                cells={ cells }\n                                rows={ rows }\n                                expandable={ expandable }\n                                onSort={ this.onSort }\n                                filters={ filters }\n                            />\n                        </Modal>\n                    </Grid>\n                </div>\n            </Wrapper>\n        );\n    }\n}\n\nGeneralInformation.propTypes = {\n    entity: PropTypes.shape({\n        id: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    }),\n    loadSystemDetail: PropTypes.func,\n    store: PropTypes.any,\n    writePermissions: PropTypes.bool,\n    SystemCardWrapper: PropTypes.oneOfType([PropTypes.node, PropTypes.bool]),\n    OperatingSystemCardWrapper: PropTypes.oneOfType([PropTypes.node, PropTypes.bool]),\n    BiosCardWrapper: PropTypes.oneOfType([PropTypes.node, PropTypes.bool]),\n    InfrastructureCardWrapper: PropTypes.oneOfType([PropTypes.node, PropTypes.bool]),\n    ConfigurationCardWrapper: PropTypes.oneOfType([PropTypes.node, PropTypes.bool]),\n    SystemStatusCardWrapper: PropTypes.oneOfType([PropTypes.node, PropTypes.bool]),\n    DataCollectorsCardWrapper: PropTypes.oneOfType([PropTypes.node, PropTypes.bool]),\n    CollectionCardWrapper: PropTypes.oneOfType([PropTypes.node, PropTypes.bool]),\n    children: PropTypes.node,\n    history: PropTypes.any,\n    location: PropTypes.any\n};\nGeneralInformation.defaultProps = {\n    entity: {},\n    SystemCardWrapper: SystemCard,\n    OperatingSystemCardWrapper: OperatingSystemCard,\n    BiosCardWrapper: BiosCard,\n    InfrastructureCardWrapper: InfrastructureCard,\n    ConfigurationCardWrapper: ConfigurationCard,\n    SystemStatusCardWrapper: SystemStatusCard,\n    DataCollectorsCardWrapper: DataCollectorsCard,\n    CollectionCardWrapper: false\n};\n\nconst mapStateToProps = ({\n    entityDetails: {\n        entity\n    }\n}) => ({\n    entity\n});\nconst mapDispatchToProps = (dispatch) => ({\n    loadSystemDetail: (itemId) => dispatch(systemProfile(itemId))\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(GeneralInformation));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport LoadingCard from '../LoadingCard';\nimport { generalMapper, interfaceMapper } from '../dataMapper';\nimport { infrastructureSelector } from '../selectors';\nimport { extraShape } from '../../../constants';\n\nconst InfrastructureCardCore = ({\n    infrastructure,\n    handleClick,\n    detailLoaded,\n    hasType,\n    hasVendor,\n    hasIPv4,\n    hasIPv6,\n    hasInterfaces,\n    extra\n}) => (<LoadingCard\n    title=\"Infrastructure\"\n    isLoading={ !detailLoaded }\n    items={ [\n        ...hasType ? [{ title: 'Type', value: infrastructure.type }] : [],\n        ...hasVendor ? [{ title: 'Vendor', value: infrastructure.vendor }] : [],\n        ...hasIPv4 ? [{\n            title: 'IPv4 addresses',\n            value: infrastructure.ipv4?.length,\n            plural: 'addresses',\n            singular: 'address',\n            target: 'ipv4',\n            onClick: () => {\n                handleClick(\n                    'IPv4',\n                    generalMapper(infrastructure.ipv4, 'IP address')\n                );\n            }\n        }] : [],\n        ...hasIPv6 ? [{\n            title: 'IPv6 addresses',\n            value: infrastructure.ipv6?.length,\n            plural: 'addresses',\n            singular: 'address',\n            target: 'ipv6',\n            onClick: () => {\n                handleClick(\n                    'IPv6',\n                    generalMapper(infrastructure.ipv6, 'IP address')\n                );\n            }\n        }] : [],\n        ...hasInterfaces ? [{\n            title: 'Interfaces/NICs',\n            value: infrastructure.nics?.length,\n            singular: 'NIC',\n            target: 'interfaces',\n            onClick: () => {\n                handleClick(\n                    'Interfaces/NICs',\n                    interfaceMapper(infrastructure.nics),\n                    'medium'\n                );\n            }\n        }] : [],\n        ...extra.map(({ onClick, ...item }) => ({\n            ...item,\n            ...onClick && { onClick: (e) => onClick(e, handleClick) }\n        }))\n    ] }\n/>);\n\nInfrastructureCardCore.propTypes = {\n    detailLoaded: PropTypes.bool,\n    handleClick: PropTypes.func,\n    infrastructure: PropTypes.shape({\n        type: PropTypes.string,\n        vendor: PropTypes.string,\n        ipv4: PropTypes.array,\n        ipv6: PropTypes.array,\n        nics: PropTypes.array\n    }),\n    hasType: PropTypes.bool,\n    hasVendor: PropTypes.bool,\n    hasIPv4: PropTypes.bool,\n    hasIPv6: PropTypes.bool,\n    hasInterfaces: PropTypes.bool,\n    extra: PropTypes.arrayOf(extraShape)\n};\nInfrastructureCardCore.defaultProps = {\n    detailLoaded: false,\n    handleClick: () => undefined,\n    hasType: true,\n    hasVendor: true,\n    hasIPv4: true,\n    hasIPv6: true,\n    hasInterfaces: true,\n    extra: []\n};\n\nexport const InfrastructureCard = connect(({\n    entityDetails: {\n        entity\n    },\n    systemProfileStore: {\n        systemProfile\n    }\n}) => ({\n    detailLoaded: systemProfile && systemProfile.loaded,\n    infrastructure: infrastructureSelector(systemProfile, entity)\n}))(InfrastructureCardCore);\n\nInfrastructureCard.propTypes = InfrastructureCardCore.propTypes;\nInfrastructureCard.defaultProps = InfrastructureCardCore.defaultProps;\n\nexport default InfrastructureCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport LoadingCard from '../LoadingCard';\nimport { generalMapper } from '../dataMapper';\nimport { operatingSystem } from '../selectors';\nimport DateFormat from '@redhat-cloud-services/frontend-components/DateFormat';\nimport { extraShape, isDate } from '../../../constants';\nimport OperatingSystemFormatter from '../../../Utilities/OperatingSystemFormatter';\n\nconst OperatingSystemCardCore = ({\n    systemInfo,\n    detailLoaded,\n    handleClick,\n    hasRelease,\n    hasKernelRelease,\n    hasArchitecture,\n    hasLastBoot,\n    hasKernelModules,\n    extra\n}) => (\n    <LoadingCard\n        title=\"Operating system\"\n        isLoading={ !detailLoaded }\n        items={ [\n            ...hasRelease ? [{ title: 'Release', value: <OperatingSystemFormatter operatingSystem={systemInfo.release} /> }] : [],\n            ...hasKernelRelease ? [{ title: 'Kernel release', value: systemInfo.kernelRelease }] : [],\n            ...hasArchitecture ? [{ title: 'Architecture', value: systemInfo.architecture }] : [],\n            ...hasLastBoot ? [{ title: 'Last boot time', value: (isDate(systemInfo.bootTime) ?\n                <DateFormat date={ systemInfo.bootTime } type=\"onlyDate\" /> :\n                'Not available'\n            )\n            }] : [],\n            ...hasKernelModules ? [{\n                title: 'Kernel modules',\n                value: systemInfo.kernelModules?.length,\n                singular: 'module',\n                target: 'kernel_modules',\n                onClick: () => {\n                    handleClick(\n                        'Kernel modules',\n                        generalMapper(systemInfo.kernelModules, 'Module')\n                    );\n                }\n            }] : [],\n            ...extra.map(({ onClick, ...item }) => ({\n                ...item,\n                ...onClick && { onClick: (e) => onClick(e, handleClick) }\n            }))\n        ] }\n    />\n);\n\nOperatingSystemCardCore.propTypes = {\n    detailLoaded: PropTypes.bool,\n    handleClick: PropTypes.func,\n    systemInfo: PropTypes.shape({\n        release: PropTypes.string,\n        architecture: PropTypes.string,\n        kernelRelease: PropTypes.string,\n        bootTime: PropTypes.string,\n        kernelModules: PropTypes.arrayOf(PropTypes.string)\n    }),\n    hasRelease: PropTypes.bool,\n    hasKernelRelease: PropTypes.bool,\n    hasArchitecture: PropTypes.bool,\n    hasLastBoot: PropTypes.bool,\n    hasKernelModules: PropTypes.bool,\n    extra: PropTypes.arrayOf(extraShape)\n};\nOperatingSystemCardCore.defaultProps = {\n    detailLoaded: false,\n    handleClick: () => undefined,\n    hasRelease: true,\n    hasKernelRelease: true,\n    hasArchitecture: true,\n    hasLastBoot: true,\n    hasKernelModules: true,\n    extra: []\n};\n\nexport const OperatingSystemCard = connect(({\n    entityDetails: {\n        entity\n    },\n    systemProfileStore: {\n        systemProfile\n    }\n}) => ({\n    detailLoaded: systemProfile && systemProfile.loaded,\n    systemInfo: operatingSystem(systemProfile, entity)\n}))(OperatingSystemCardCore);\n\nOperatingSystemCard.propTypes = OperatingSystemCardCore.propTypes;\nOperatingSystemCard.defaultProps = OperatingSystemCardCore.defaultProps;\n\nexport default OperatingSystemCard;\n","import React, { Fragment, Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport LoadingCard from '../LoadingCard';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport { propertiesSelector } from '../selectors';\nimport { editDisplayName, editAnsibleHost } from '../../../store/actions';\nimport TextInputModal from '../TextInputModal';\nimport { Popover, Button } from '@patternfly/react-core';\nimport EditButton from '../EditButton';\nimport { generalMapper } from '../dataMapper';\nimport { extraShape } from '../../../constants';\n\nconst TitleWithPopover = ({ title, content }) => (\n    <React.Fragment>\n        <span>{ title }</span>\n        <Popover\n            headerContent={<div>{ title }</div>}\n            bodyContent={<div>{ content }</div>}>\n            <Button\n                variant=\"plain\"\n                aria-label={`Action for ${title}`}\n                className='ins-active-general_information__popover-icon'>\n                <OutlinedQuestionCircleIcon />\n            </Button>\n        </Popover>\n    </React.Fragment>\n);\n\nclass SystemCardCore extends Component {\n    state = {\n        isDisplayNameModalOpen: false,\n        isAnsibleHostModalOpen: false\n    };\n\n    onCancel = () => {\n        this.setState({\n            isDisplayNameModalOpen: false,\n            isAnsibleHostModalOpen: false\n        });\n    };\n\n    onSubmit = (fn, origValue) => (value) => {\n        const { entity } = this.props;\n        fn(entity.id, value, origValue);\n        this.onCancel();\n    }\n\n    onShowDisplayModal = (event) => {\n        event.preventDefault();\n        this.setState({\n            isDisplayNameModalOpen: true\n        });\n    };\n\n    onShowAnsibleModal = (event) => {\n        event.preventDefault();\n        this.setState({\n            isAnsibleHostModalOpen: true\n        });\n    };\n\n    getAnsibleHost = () => {\n        const { entity } = this.props;\n        return entity.ansible_host || entity.fqdn || entity.id;\n    };\n\n    render() {\n        const {\n            detailLoaded,\n            entity,\n            properties,\n            setDisplayName,\n            setAnsibleHost,\n            writePermissions,\n            handleClick,\n            hasHostName,\n            hasDisplayName,\n            hasAnsibleHostname,\n            hasSAP,\n            hasSystemPurpose,\n            hasCPUs,\n            hasSockets,\n            hasCores,\n            hasCPUFlags,\n            hasRAM,\n            extra\n        } = this.props;\n        const { isDisplayNameModalOpen, isAnsibleHostModalOpen } = this.state;\n        return (\n            <Fragment>\n                <LoadingCard\n                    title=\"System properties\"\n                    isLoading={ !detailLoaded }\n                    items={ [\n                        ...hasHostName ? [{\n                            title: <TitleWithPopover\n                                title='Host name'\n                                content='Name imported from the system.'/>,\n                            value: entity.fqdn, size: 'md'\n                        }] : [],\n                        ...hasDisplayName ? [{\n                            title: <TitleWithPopover\n                                title='Display name'\n                                content='System name displayed in an inventory list.'/>,\n                            value: (\n                                <Fragment>\n                                    { entity.display_name }\n                                    <EditButton\n                                        writePermissions={writePermissions}\n                                        link=\"display_name\"\n                                        onClick={this.onShowDisplayModal}\n                                    />\n                                </Fragment>\n                            ), size: 'md'\n                        }] : [],\n                        ...hasAnsibleHostname ? [{\n                            title: <TitleWithPopover\n                                title='Ansible hostname'\n                                content='Hostname that is used in playbooks by Remediations.'/>,\n                            value: (\n                                <Fragment>\n                                    { this.getAnsibleHost() }\n                                    <EditButton\n                                        writePermissions={writePermissions}\n                                        link=\"ansible_name\"\n                                        onClick={this.onShowAnsibleModal}\n                                    />\n                                </Fragment>\n                            ), size: 'md'\n                        }] : [],\n                        ...hasSAP ? [{\n                            title: 'SAP',\n                            value: properties.sapIds?.length,\n                            singular: 'identifier',\n                            target: 'sap_sids',\n                            onClick: () => {\n                                handleClick(\n                                    'SAP IDs (SID)',\n                                    generalMapper(properties.sapIds, 'SID')\n                                );\n                            }\n                        }] : [],\n                        ...hasSystemPurpose ? [{ title: 'System purpose', value: properties.systemPurpose }] : [],\n                        ...hasCPUs ? [{ title: 'Number of CPUs', value: properties.cpuNumber }] : [],\n                        ...hasSockets ? [{ title: 'Sockets', value: properties.sockets }] : [],\n                        ...hasCores ? [{ title: 'Cores per socket', value: properties.coresPerSocket }] : [],\n                        ...hasCPUFlags ? [{\n                            title: 'CPU flags',\n                            value: properties?.cpuFlags?.length,\n                            singular: 'flag',\n                            target: 'flag',\n                            onClick: () => handleClick('CPU flags', generalMapper(properties.cpuFlags, 'flag name'))\n                        }] : [],\n                        ...hasRAM ? [{ title: 'RAM', value: properties.ramSize }] : [],\n                        ...extra.map(({ onClick, ...item }) => ({\n                            ...item,\n                            ...onClick && { onClick: (e) => onClick(e, handleClick) }\n                        }))\n                    ] }\n                />\n                <TextInputModal\n                    isOpen={ isDisplayNameModalOpen }\n                    title='Edit display name'\n                    value={ entity && entity.display_name }\n                    ariaLabel='Host inventory display name'\n                    modalOuiaId=\"edit-display-name-modal\"\n                    cancelOuiaId=\"cancel-edit-display-name\"\n                    confirmOuiaId=\"confirm-edit-display-name\"\n                    inputOuiaId=\"input-edit-display-name\"\n                    onCancel={ this.onCancel }\n                    onSubmit={ this.onSubmit(setDisplayName, entity && entity.display_name) }\n                />\n                <TextInputModal\n                    isOpen={ isAnsibleHostModalOpen }\n                    title='Edit Ansible host'\n                    value={ entity && this.getAnsibleHost() }\n                    ariaLabel='Ansible host'\n                    modalOuiaId=\"edit-ansible-name-modal\"\n                    cancelOuiaId=\"cancel-edit-ansible-name\"\n                    confirmOuiaId=\"confirm-edit-ansible-name\"\n                    inputOuiaId=\"input-edit-ansible-name\"\n                    onCancel={ this.onCancel }\n                    onSubmit={ this.onSubmit(setAnsibleHost, entity && this.getAnsibleHost()) }\n                />\n            </Fragment>\n        );\n    }\n}\n\nSystemCardCore.propTypes = {\n    detailLoaded: PropTypes.bool,\n    entity: PropTypes.shape({\n        // eslint-disable-next-line camelcase\n        display_name: PropTypes.string,\n        // eslint-disable-next-line camelcase\n        ansible_host: PropTypes.string,\n        fqdn: PropTypes.string,\n        id: PropTypes.string\n    }),\n    properties: PropTypes.shape({\n        cpuNumber: PropTypes.number,\n        sockets: PropTypes.number,\n        coresPerSocket: PropTypes.number,\n        ramSize: PropTypes.string,\n        storage: PropTypes.arrayOf(PropTypes.shape({\n            device: PropTypes.string,\n            // eslint-disable-next-line camelcase\n            mount_point: PropTypes.string,\n            options: PropTypes.shape({}),\n            type: PropTypes.string\n        })),\n        sapIds: PropTypes.arrayOf(PropTypes.string),\n        systemPurpose: PropTypes.string,\n        cpuFlags: PropTypes.array\n    }),\n    setDisplayName: PropTypes.func,\n    setAnsibleHost: PropTypes.func,\n    writePermissions: PropTypes.bool,\n    handleClick: PropTypes.func,\n    hasHostName: PropTypes.bool,\n    hasDisplayName: PropTypes.bool,\n    hasAnsibleHostname: PropTypes.bool,\n    hasSAP: PropTypes.bool,\n    hasSystemPurpose: PropTypes.bool,\n    hasCPUs: PropTypes.bool,\n    hasSockets: PropTypes.bool,\n    hasCores: PropTypes.bool,\n    hasCPUFlags: PropTypes.bool,\n    hasRAM: PropTypes.bool,\n    extra: PropTypes.arrayOf(extraShape)\n};\nSystemCardCore.defaultProps = {\n    detailLoaded: false,\n    entity: {},\n    properties: {},\n    hasHostName: true,\n    hasDisplayName: true,\n    hasAnsibleHostname: true,\n    hasSAP: true,\n    hasSystemPurpose: true,\n    hasCPUs: true,\n    hasSockets: true,\n    hasCores: true,\n    hasCPUFlags: true,\n    hasRAM: true,\n    extra: []\n};\n\nTitleWithPopover.propTypes = {\n    title: PropTypes.string.isRequired,\n    content: PropTypes.string.isRequired\n};\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        setDisplayName: (id, value, origValue) => {\n            dispatch(editDisplayName(id, value, origValue));\n        },\n\n        setAnsibleHost: (id, value, origValue) => {\n            dispatch(editAnsibleHost(id, value, origValue));\n        }\n    };\n}\n\nexport const SystemCard = connect(({\n    entityDetails: {\n        entity\n    },\n    systemProfileStore: {\n        systemProfile\n    }\n}) => ({\n    entity,\n    detailLoaded: systemProfile && systemProfile.loaded,\n    properties: propertiesSelector(systemProfile, entity)\n}), mapDispatchToProps)(SystemCardCore);\n\nSystemCard.propTypes = SystemCardCore.propTypes;\nSystemCard.defaultProps = SystemCardCore.defaultProps;\n\nexport default SystemCard;\n","/* eslint-disable camelcase */\n\nimport React from 'react';\nimport {\n    CheckCircleIcon,\n    TimesIcon,\n    OutlinedQuestionCircleIcon,\n    OutlinedArrowAltCircleUpIcon,\n    OutlinedArrowAltCircleDownIcon\n} from '@patternfly/react-icons';\nimport { sortable } from '@patternfly/react-table';\nimport { Tooltip } from '@patternfly/react-core';\n\nexport const statusHelper = {\n    UP: <Tooltip content=\"Service is running\">\n        <OutlinedArrowAltCircleUpIcon className=\"ins-c-inventory__detail--up\" />\n    </Tooltip>,\n    DOWN: <Tooltip content=\"Service has stopped\">\n        <OutlinedArrowAltCircleDownIcon className=\"ins-c-inventory__detail--down\" />\n    </Tooltip>\n};\n\nexport const enabledHelper = {\n    true: <Tooltip content=\"Source enabled\">\n        <CheckCircleIcon className=\"ins-c-inventory__detail--enabled\" />\n    </Tooltip>,\n    false: <Tooltip content=\"Source disabled\">\n        <TimesIcon className=\"ins-c-inventory__detail--disabled\" />\n    </Tooltip>\n};\n\nexport const diskMapper = (devices = []) => ({\n    cells: [\n        {\n            title: 'Device',\n            transforms: [sortable]\n        },\n        {\n            title: 'Label',\n            transforms: [sortable]\n        },\n        {\n            title: 'Mount point',\n            transforms: [sortable]\n        },\n        {\n            title: 'Type',\n            transforms: [sortable]\n        }\n    ],\n    rows: devices.map(({\n        device,\n        label,\n        mountpoint,\n        options,\n        mounttype\n    }) => {\n        const calculatedOptions = (options && options.options) || options;\n        return ({\n            isOpen: false,\n            child: <div>\n                {\n                    calculatedOptions &&\n                    Object.entries(calculatedOptions.value || calculatedOptions)\n                    .map(([oneKey, option]) => `${oneKey}=${option.value || option}`).join(',  ')\n                }\n            </div>,\n            cells: [\n                (device && device.value) || device,\n                label,\n                (mountpoint && mountpoint.value) || mountpoint,\n                (mounttype && mounttype.value) || mounttype\n            ]\n        });\n    }),\n    expandable: true\n});\n\nexport const productsMapper = (products = []) => ({\n    cells: [\n        {\n            title: 'Name',\n            transforms: [sortable]\n        },\n        'Status'\n    ],\n    rows: products.map(product => ([\n        product.name,\n        {\n            title: statusHelper[product.status] ||\n            <Tooltip content=\"Unknown service status\">\n                <OutlinedQuestionCircleIcon className=\"ins-c-inventory__detail--unknown\" />\n            </Tooltip>\n        }\n    ]))\n});\n\nexport const interfaceMapper = (data = []) => ({\n    cells: [\n        {\n            title: 'MAC address',\n            transforms: [sortable]\n        },\n        {\n            title: 'MTU',\n            transforms: [sortable]\n        },\n        {\n            title: 'Name',\n            transforms: [sortable]\n        },\n        'State',\n        {\n            title: 'Type',\n            transforms: [sortable]\n        }\n    ],\n    rows: data.map(item => ([\n        item.mac_address,\n        item.mtu,\n        item.name,\n        {\n            title: statusHelper[item.state] ||\n            <Tooltip content=\"Unknown service status\">\n                <OutlinedQuestionCircleIcon className=\"ins-c-inventory__detail--unknown\" />\n            </Tooltip>\n        },\n        item.type\n    ]))\n});\n\nexport const repositoriesMapper = ({ enabled, disabled } = { enabled: [], disabled: [] }) => ({\n    cells: [\n        {\n            title: 'Name',\n            transforms: [sortable]\n        },\n        {\n            title: 'Enabled',\n            transforms: [sortable]\n        },\n        {\n            title: 'GPG check',\n            transforms: [sortable]\n        }\n    ],\n    rows: [...enabled, ...disabled].map(repository => ([\n        {\n            title: repository.name,\n            sortValue: repository.name\n        },\n        {\n            title: enabledHelper[Boolean(repository.enabled)],\n            sortValue: `${repository.enabled}`\n        },\n        {\n            title: enabledHelper[Boolean(repository.gpgcheck)],\n            sortValue: `${repository.gpgcheck}`\n        }\n    ])),\n    filters: [\n        { type: 'textual' },\n        {\n            type: 'checkbox',\n            options: [\n                { label: 'Is enabled', value: 'true' },\n                { label: 'Not enabled', value: 'false' }\n            ]\n        },\n        {\n            type: 'checkbox',\n            options: [\n                { label: 'Is enabled', value: 'true' },\n                { label: 'Not enabled', value: 'false' }\n            ]\n        }\n    ]\n});\n\nexport const generalMapper = (data = [], title = '') => ({\n    cells: [{\n        title,\n        transforms: [sortable]\n    }],\n    rows: data.map(item => ([item])),\n    filters: [{ type: 'textual' }]\n});\n","/* eslint-disable camelcase */\nimport { registered } from '../../../Utilities/index';\nimport { verifyCollectorStaleness } from '../../../Utilities/sharedFunctions';\nfunction safeParser(toParse, key) {\n    try {\n        return JSON.parse(toParse);\n    } catch {\n        return { [key]: toParse };\n    }\n}\n\nexport const propertiesSelector = ({\n    number_of_cpus,\n    number_of_sockets,\n    cores_per_socket,\n    ramSize,\n    disk_devices,\n    sap_sids,\n    system_purpose,\n    cpu_flags\n} = {}, { facts } = { }) => ({\n    cpuNumber: number_of_cpus || facts?.rhsm?.CPU_CORES,\n    sockets: number_of_sockets || facts?.rhsm?.CPU_SOCKETS,\n    coresPerSocket: cores_per_socket || (\n        facts?.rhsm?.CPU_CORES\n            && facts?.rhsm?.CPU_CORES\n            && Number(facts?.rhsm?.CPU_CORES, 10) / Number(facts?.rhsm?.CPU_SOCKETS, 10)\n    ),\n    ramSize: ramSize || (facts?.rhsm?.MEMORY && `${facts?.rhsm?.MEMORY} GB`),\n    storage: disk_devices && disk_devices.map(({ device, label, mount_point, options, type }) => ({\n        ...device && safeParser(device, 'device'),\n        label,\n        ...mount_point && safeParser(mount_point, 'mountpoint'),\n        ...options && safeParser(options, 'options'),\n        ...type && safeParser(type, 'mounttype')\n    })\n    ),\n    sapIds: sap_sids,\n    systemPurpose: system_purpose?.usage,\n    cpuFlags: cpu_flags\n});\n\nexport const operatingSystem = ({\n    arch,\n    operating_system,\n    os_kernel_version,\n    last_boot_time,\n    kernel_modules\n} = {}, { facts } = {}) => ({\n    release: operating_system,\n    kernelRelease: os_kernel_version,\n    architecture: arch || facts?.rhsm?.ARCHITECTURE,\n    bootTime: last_boot_time,\n    kernelModules: kernel_modules\n});\n\nexport const biosSelector = ({\n    bios_vendor,\n    bios_version,\n    bios_release_date\n} = {}) => ({\n    vendor: bios_vendor,\n    version: bios_version,\n    releaseDate: bios_release_date\n});\n\nexport const infrastructureSelector = ({\n    infrastructure_type,\n    infrastructure_vendor,\n    network = {}\n} = {}, { facts } = {}) => ({\n    type: infrastructure_type || (\n        facts?.rhsm?.IS_VIRTUAL !== undefined && (facts?.rhsm?.IS_VIRTUAL ? 'virtual' : 'physical')\n    ) || undefined,\n    vendor: infrastructure_vendor,\n    ipv4: network.ipv4,\n    ipv6: network.ipv6,\n    nics: network.interfaces\n});\n\nexport const configurationSelector = ({\n    installed_packages,\n    enabled_services,\n    running_processes,\n    repositories\n} = {}) => ({\n    packages: installed_packages,\n    services: enabled_services,\n    processes: running_processes,\n    repositories\n});\n\nexport const collectionInformationSelector = ({\n    insights_client_version,\n    insights_egg_version\n} = {}) => ({\n    client: insights_client_version,\n    egg: insights_egg_version\n});\n\nexport const getCollectorStatus = (collectorStaleness) =>{\n    return collectorStaleness ?\n        (verifyCollectorStaleness(collectorStaleness) !== 'Fresh' ? 'Stale' : 'Active')\n        : 'N/A';\n};\n\nexport const getDefaultCollectors = (entity) =>\n    registered?.filter(reporter => reporter.label !== 'insights-client not connected')\n    .map(reporter => ({\n        name: reporter.label,\n        status: getCollectorStatus(entity?.per_reporter_staleness[reporter.value]),\n        updated: entity?.per_reporter_staleness[reporter.value]?.last_check_in,\n        details: {\n            name: reporter.idName,\n            id: entity?.[reporter.idValue]\n        }\n    }));\n\nexport const systemStatus = ({\n    stale_timestamp\n} = {}) => ({\n    stale: new Date() > new Date(stale_timestamp)\n});\n","import React, { useEffect, useState, Fragment } from 'react';\nimport { Provider } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport GeneralInformation from '../GeneralInfo/GeneralInformation';\nexport { default as TextInputModal } from '../GeneralInfo/TextInputModal';\nimport fallback from '../SpinnerFallback';\nimport systemProfileStore from '../../store/systemProfileStore';\n\nconst GeneralInfoTab = ({ getRegistry, ...props }) => {\n    const [Wrapper, setWrapper] = useState();\n    useEffect(() => {\n        if (getRegistry) {\n            getRegistry()?.register?.({ systemProfileStore });\n        }\n\n        setWrapper(() => getRegistry ? Provider : Fragment);\n    }, []);\n    return Wrapper ? <Wrapper\n        {...getRegistry && {\n            store: getRegistry().getStore()\n        }}\n    >\n        <GeneralInformation {...props} />\n    </Wrapper> : fallback;\n};\n\nGeneralInfoTab.propTypes = {\n    getRegistry: PropTypes.func\n};\n\nexport default GeneralInfoTab;\n","import {\n    ACTION_TYPES,\n    SELECT_ENTITY,\n    CHANGE_SORT,\n    FILTER_ENTITIES,\n    APPLICATION_SELECTED,\n    FILTER_SELECT,\n    UPDATE_ENTITIES,\n    ENTITIES_LOADING,\n    CLEAR_FILTERS,\n    TOGGLE_TAG_MODAL,\n    CONFIG_CHANGED,\n    TOGGLE_DRAWER\n} from './action-types';\nimport {\n    getEntities as defaultGetEntities,\n    getEntitySystemProfile,\n    hosts,\n    getAllTags as defaultGetAllTags,\n    getTags,\n    filtersReducer,\n    getOperatingSystems\n} from '../api';\nimport { defaultFilters } from '../Utilities/constants';\n\nexport const loadEntities = (items = [], { filters, ...config }, { showTags } = {}, getEntities = defaultGetEntities) => {\n    const itemIds = items.reduce((acc, curr) => (\n        [\n            ...acc,\n            curr && typeof curr === 'string' ? curr : curr.id\n        ]\n    ), []).filter(Boolean);\n\n    const isFilterDisabled = (name) => config.hideFilters?.[name] ||\n    (config.hideFilters?.all && config.hideFilters?.[name] !== false);\n\n    const updatedFilters = filters ? filters.reduce(filtersReducer, {\n        ...defaultFilters,\n        ...filters.length === 0 && { registeredWithFilter: [] },\n        ...(isFilterDisabled('stale') && { staleFilter: undefined }),\n        ...(isFilterDisabled('registeredWith') && { registeredWithFilter: undefined }),\n        ...(isFilterDisabled('operating_system') && { osFilter: undefined })\n    }) : { ...defaultFilters,\n        ...(isFilterDisabled('stale') && { staleFilter: undefined }),\n        ...(isFilterDisabled('registeredWith') && { registeredWithFilter: undefined }),\n        ...(isFilterDisabled('operating_system') && { osFilter: undefined })\n    };\n\n    const orderBy = config.orderBy || 'updated';\n    const orderDirection = config.orderDirection || 'DESC';\n\n    const lastDateRequest = Date.now();\n\n    return {\n        type: ACTION_TYPES.LOAD_ENTITIES,\n        payload: getEntities(itemIds, {\n            filters: updatedFilters,\n            ...config,\n            orderBy,\n            orderDirection\n        }, showTags, defaultGetEntities).then(({ results, ...data }) => ({\n            ...data,\n            filters,\n            sortBy: { key: orderBy, direction: orderDirection },\n            results: items.length > 0 ? items.map((item) => ({\n                ...item.id ? item : { id: item },\n                ...results.find(({ id }) => id === item || id === item.id) || {}\n            })) : results,\n            page: config.page || (data?.page),\n            // eslint-disable-next-line camelcase\n            per_page: config.per_page || (data?.per_page),\n            hideFilters: config.hideFilters\n        })),\n        meta: {\n            showTags,\n            lastDateRequest\n        }\n    };\n};\n\nexport const updateEntities = (items = []) => ({\n    type: UPDATE_ENTITIES,\n    payload: {\n        results: items\n    }\n});\n\nexport const filterSelect = (selectedItem) => ({\n    type: FILTER_SELECT,\n    payload: selectedItem\n});\n\nexport const loadEntity = (id, config, { showTags }) => ({\n    type: ACTION_TYPES.LOAD_ENTITY,\n    payload: defaultGetEntities(id, config, showTags),\n    meta: {\n        showTags\n    }\n});\n\nexport const selectEntity = (id, selected) => ({\n    type: SELECT_ENTITY,\n    payload: { id, selected }\n});\n\nexport const setSort = (data) => ({\n    type: CHANGE_SORT,\n    payload: data\n});\n\nexport const filterEntities = (key, filterString) => ({\n    type: FILTER_ENTITIES,\n    payload: { key, filterString }\n});\n\nexport const detailSelect = (appName) => ({\n    type: APPLICATION_SELECTED,\n    payload: { appName }\n});\n\nexport const entitiesLoading = (isLoading = true) => ({\n    type: ENTITIES_LOADING,\n    payload: { isLoading }\n});\n\nexport const clearFilters = () => ({\n    type: CLEAR_FILTERS\n});\n\nexport const systemProfile = (itemId) => ({\n    type: ACTION_TYPES.LOAD_SYSTEM_PROFILE,\n    payload: getEntitySystemProfile(itemId, {})\n});\n\nexport const editDisplayName = (id, value) => ({\n    type: ACTION_TYPES.SET_DISPLAY_NAME,\n    payload: hosts.apiHostPatchHost(id, { display_name: value }), // eslint-disable-line camelcase\n    meta: {\n        notifications: {\n            fulfilled: {\n                variant: 'success',\n                title: 'Display name has been updated',\n                dismissable: true\n            }\n        }\n    }\n});\n\nexport const editAnsibleHost = (id, value) => ({\n    type: ACTION_TYPES.SET_ANSIBLE_HOST,\n    payload: hosts.apiHostPatchHost(id, { ansible_host: value }), // eslint-disable-line camelcase\n    meta: {\n        notifications: {\n            fulfilled: {\n                variant: 'success',\n                title: 'Ansible hostname has been updated',\n                dismissable: true\n            }\n        }\n    }\n});\n\nexport const loadTags = (systemId, search, options, count) => ({\n    type: ACTION_TYPES.LOAD_TAGS,\n    payload: getTags(systemId, search, options),\n    meta: {\n        tagsCount: count,\n        systemId\n    }\n});\n\nexport const toggleTagModal = (isOpen) => ({\n    type: TOGGLE_TAG_MODAL,\n    payload: { isOpen }\n});\n\nexport const fetchAllTags = (search, pagination, getTags = defaultGetAllTags) => ({\n    type: ACTION_TYPES.ALL_TAGS,\n    payload: getTags(search, pagination),\n    meta: { lastDateRequestTags: Date.now() }\n});\n\nexport const fetchOperatingSystems = (params = []) => ({\n    type: ACTION_TYPES.OPERATING_SYSTEMS,\n    payload: getOperatingSystems(params)\n});\n\nexport const deleteEntity = (systems, displayName) => ({\n    type: ACTION_TYPES.REMOVE_ENTITY,\n    payload: hosts.apiHostDeleteById(systems),\n    meta: {\n        notifications: {\n            fulfilled: {\n                variant: 'success',\n                title: 'Delete operation finished',\n                description: `${displayName} has been successfully removed.`,\n                dismissable: true\n            }\n        },\n        systems\n    }\n});\n\nexport const configChanged = (config) => ({\n    type: CONFIG_CHANGED,\n    payload: config\n});\n\nexport const toggleDrawer = (isOpened) => ({\n    type: TOGGLE_DRAWER,\n    payload: { isOpened }\n});\n","import { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport { ACTION_TYPES } from './action-types';\n\nexport const defaultState = { loaded: false };\n\nexport const sizes = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n\n// Kudos to https://stackoverflow.com/a/18650828/2560321\nexport const formatBytes = (bytes) => {\n    if (bytes === 0 || isNaN(Number(bytes))) {\n        return '0 B';\n    }\n\n    const index = Math.floor(Math.log(bytes) / Math.log(1024));\n    return `${parseFloat((bytes / Math.pow(1024, index)).toFixed(2))} ${sizes[index]}`;\n};\n\nexport function systemProfilePending(state) {\n    return {\n        ...state,\n        systemProfile: {\n            loaded: false\n        }\n    };\n}\n\nexport function calculateRepos(repos) {\n    return repos && repos.reduce((acc, curr) => ({\n        ...acc,\n        ...curr.enabled ? {\n            enabled: [...acc.enabled, curr]\n        } : {\n            disabled: [...acc.disabled, curr]\n        }\n    }), { enabled: [], disabled: [] });\n}\n\nexport function calculateInterfaces(interfaces) {\n    return interfaces && interfaces.reduce((acc, curr) => ({\n        interfaces: [...acc.interfaces, curr],\n        ipv4: [...acc.ipv4, ...curr.ipv4_addresses || []].filter(Boolean),\n        ipv6: [...acc.ipv6, ...curr.ipv6_addresses || []].filter(Boolean)\n    }), { interfaces: [], ipv4: [], ipv6: [] });\n}\n\nexport function onSystemProfile(state, { payload: { results } }) {\n    const systemProfile = (results && results[0] && results[0].system_profile) || {};\n    const cloudProviderObj = (results && results[0] && (typeof results[0].system_profile.cloud_provider !== 'undefined'))\n                        && results[0].system_profile.cloud_provider;\n    return {\n        ...state,\n        disabledApps: [\n            ...(cloudProviderObj === 'aws' || cloudProviderObj === 'azure') ? [] : ['ros']\n        ],\n        systemProfile: {\n            loaded: true,\n            ...systemProfile,\n            ramSize: systemProfile.system_memory_bytes && formatBytes(systemProfile.system_memory_bytes),\n            repositories: calculateRepos(systemProfile.yum_repos),\n            network: calculateInterfaces(systemProfile.network_interfaces)\n        }\n    };\n}\n\nexport default applyReducerHash(\n    {\n        [ACTION_TYPES.LOAD_SYSTEM_PROFILE_FULFILLED]: onSystemProfile,\n        [ACTION_TYPES.LOAD_SYSTEM_PROFILE_PENDING]: systemProfilePending\n    },\n    {\n        systemProfile: defaultState\n    }\n);\n","import bindActionCreators from '../utils/bindActionCreators';\nimport { wrapMapToPropsConstant, wrapMapToPropsFunc } from './wrapMapToProps';\nexport function whenMapDispatchToPropsIsFunction(mapDispatchToProps) {\n  return typeof mapDispatchToProps === 'function' ? wrapMapToPropsFunc(mapDispatchToProps, 'mapDispatchToProps') : undefined;\n}\nexport function whenMapDispatchToPropsIsMissing(mapDispatchToProps) {\n  return !mapDispatchToProps ? wrapMapToPropsConstant(function (dispatch) {\n    return {\n      dispatch: dispatch\n    };\n  }) : undefined;\n}\nexport function whenMapDispatchToPropsIsObject(mapDispatchToProps) {\n  return mapDispatchToProps && typeof mapDispatchToProps === 'object' ? wrapMapToPropsConstant(function (dispatch) {\n    return bindActionCreators(mapDispatchToProps, dispatch);\n  }) : undefined;\n}\nexport default [whenMapDispatchToPropsIsFunction, whenMapDispatchToPropsIsMissing, whenMapDispatchToPropsIsObject];","import { wrapMapToPropsConstant, wrapMapToPropsFunc } from './wrapMapToProps';\nexport function whenMapStateToPropsIsFunction(mapStateToProps) {\n  return typeof mapStateToProps === 'function' ? wrapMapToPropsFunc(mapStateToProps, 'mapStateToProps') : undefined;\n}\nexport function whenMapStateToPropsIsMissing(mapStateToProps) {\n  return !mapStateToProps ? wrapMapToPropsConstant(function () {\n    return {};\n  }) : undefined;\n}\nexport default [whenMapStateToPropsIsFunction, whenMapStateToPropsIsMissing];","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport verifyPlainObject from '../utils/verifyPlainObject';\nexport function defaultMergeProps(stateProps, dispatchProps, ownProps) {\n  return _extends({}, ownProps, stateProps, dispatchProps);\n}\nexport function wrapMergePropsFunc(mergeProps) {\n  return function initMergePropsProxy(dispatch, _ref) {\n    var displayName = _ref.displayName,\n        pure = _ref.pure,\n        areMergedPropsEqual = _ref.areMergedPropsEqual;\n    var hasRunOnce = false;\n    var mergedProps;\n    return function mergePropsProxy(stateProps, dispatchProps, ownProps) {\n      var nextMergedProps = mergeProps(stateProps, dispatchProps, ownProps);\n\n      if (hasRunOnce) {\n        if (!pure || !areMergedPropsEqual(nextMergedProps, mergedProps)) mergedProps = nextMergedProps;\n      } else {\n        hasRunOnce = true;\n        mergedProps = nextMergedProps;\n        if (process.env.NODE_ENV !== 'production') verifyPlainObject(mergedProps, displayName, 'mergeProps');\n      }\n\n      return mergedProps;\n    };\n  };\n}\nexport function whenMergePropsIsFunction(mergeProps) {\n  return typeof mergeProps === 'function' ? wrapMergePropsFunc(mergeProps) : undefined;\n}\nexport function whenMergePropsIsOmitted(mergeProps) {\n  return !mergeProps ? function () {\n    return defaultMergeProps;\n  } : undefined;\n}\nexport default [whenMergePropsIsFunction, whenMergePropsIsOmitted];","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"pure\", \"areStatesEqual\", \"areOwnPropsEqual\", \"areStatePropsEqual\", \"areMergedPropsEqual\"];\nimport connectAdvanced from '../components/connectAdvanced';\nimport shallowEqual from '../utils/shallowEqual';\nimport defaultMapDispatchToPropsFactories from './mapDispatchToProps';\nimport defaultMapStateToPropsFactories from './mapStateToProps';\nimport defaultMergePropsFactories from './mergeProps';\nimport defaultSelectorFactory from './selectorFactory';\n/*\r\n  connect is a facade over connectAdvanced. It turns its args into a compatible\r\n  selectorFactory, which has the signature:\r\n\r\n    (dispatch, options) => (nextState, nextOwnProps) => nextFinalProps\r\n  \r\n  connect passes its args to connectAdvanced as options, which will in turn pass them to\r\n  selectorFactory each time a Connect component instance is instantiated or hot reloaded.\r\n\r\n  selectorFactory returns a final props selector from its mapStateToProps,\r\n  mapStateToPropsFactories, mapDispatchToProps, mapDispatchToPropsFactories, mergeProps,\r\n  mergePropsFactories, and pure args.\r\n\r\n  The resulting final props selector is called by the Connect component instance whenever\r\n  it receives new props or store state.\r\n */\n\nfunction match(arg, factories, name) {\n  for (var i = factories.length - 1; i >= 0; i--) {\n    var result = factories[i](arg);\n    if (result) return result;\n  }\n\n  return function (dispatch, options) {\n    throw new Error(\"Invalid value of type \" + typeof arg + \" for \" + name + \" argument when connecting component \" + options.wrappedComponentName + \".\");\n  };\n}\n\nfunction strictEqual(a, b) {\n  return a === b;\n} // createConnect with default args builds the 'official' connect behavior. Calling it with\n// different options opens up some testing and extensibility scenarios\n\n\nexport function createConnect(_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      _ref$connectHOC = _ref.connectHOC,\n      connectHOC = _ref$connectHOC === void 0 ? connectAdvanced : _ref$connectHOC,\n      _ref$mapStateToPropsF = _ref.mapStateToPropsFactories,\n      mapStateToPropsFactories = _ref$mapStateToPropsF === void 0 ? defaultMapStateToPropsFactories : _ref$mapStateToPropsF,\n      _ref$mapDispatchToPro = _ref.mapDispatchToPropsFactories,\n      mapDispatchToPropsFactories = _ref$mapDispatchToPro === void 0 ? defaultMapDispatchToPropsFactories : _ref$mapDispatchToPro,\n      _ref$mergePropsFactor = _ref.mergePropsFactories,\n      mergePropsFactories = _ref$mergePropsFactor === void 0 ? defaultMergePropsFactories : _ref$mergePropsFactor,\n      _ref$selectorFactory = _ref.selectorFactory,\n      selectorFactory = _ref$selectorFactory === void 0 ? defaultSelectorFactory : _ref$selectorFactory;\n\n  return function connect(mapStateToProps, mapDispatchToProps, mergeProps, _ref2) {\n    if (_ref2 === void 0) {\n      _ref2 = {};\n    }\n\n    var _ref3 = _ref2,\n        _ref3$pure = _ref3.pure,\n        pure = _ref3$pure === void 0 ? true : _ref3$pure,\n        _ref3$areStatesEqual = _ref3.areStatesEqual,\n        areStatesEqual = _ref3$areStatesEqual === void 0 ? strictEqual : _ref3$areStatesEqual,\n        _ref3$areOwnPropsEqua = _ref3.areOwnPropsEqual,\n        areOwnPropsEqual = _ref3$areOwnPropsEqua === void 0 ? shallowEqual : _ref3$areOwnPropsEqua,\n        _ref3$areStatePropsEq = _ref3.areStatePropsEqual,\n        areStatePropsEqual = _ref3$areStatePropsEq === void 0 ? shallowEqual : _ref3$areStatePropsEq,\n        _ref3$areMergedPropsE = _ref3.areMergedPropsEqual,\n        areMergedPropsEqual = _ref3$areMergedPropsE === void 0 ? shallowEqual : _ref3$areMergedPropsE,\n        extraOptions = _objectWithoutPropertiesLoose(_ref3, _excluded);\n\n    var initMapStateToProps = match(mapStateToProps, mapStateToPropsFactories, 'mapStateToProps');\n    var initMapDispatchToProps = match(mapDispatchToProps, mapDispatchToPropsFactories, 'mapDispatchToProps');\n    var initMergeProps = match(mergeProps, mergePropsFactories, 'mergeProps');\n    return connectHOC(selectorFactory, _extends({\n      // used in error messages\n      methodName: 'connect',\n      // used to compute Connect's displayName from the wrapped component's displayName.\n      getDisplayName: function getDisplayName(name) {\n        return \"Connect(\" + name + \")\";\n      },\n      // if mapStateToProps is falsy, the Connect component doesn't subscribe to store state changes\n      shouldHandleStateChanges: Boolean(mapStateToProps),\n      // passed through to selectorFactory\n      initMapStateToProps: initMapStateToProps,\n      initMapDispatchToProps: initMapDispatchToProps,\n      initMergeProps: initMergeProps,\n      pure: pure,\n      areStatesEqual: areStatesEqual,\n      areOwnPropsEqual: areOwnPropsEqual,\n      areStatePropsEqual: areStatePropsEqual,\n      areMergedPropsEqual: areMergedPropsEqual\n    }, extraOptions));\n  };\n}\nexport default /*#__PURE__*/createConnect();"],"names":["InventoryTable","lazy","InventoryDetail","routes","table","detail","detailWithModal","Routes","getRegistry","useContext","RegistryContext","useEffect","register","reducers","mergeWithEntities","tableReducer","searchParams","URLSearchParams","location","search","Suspense","fallback","Switch","Route","exact","path","render","status","getAll","source","filterbyName","tagsFilter","split","reduce","tagsMapper","operatingSystem","page","perPage","rootClass","component","Redirect","to","history","useHistory","insights","chrome","init","identifyApp","on","event","navId","push","hash","className","NotificationsPortal","RBACProvider","appName","useState","registry","setRegistry","store","getStore","undefined","value","Provider","basename","getBaseName","window","pathname","ReactDOM","document","getElementById","BiosCardCore","bios","detailLoaded","hasVendor","hasVersion","handleClick","hasReleaseDate","extra","title","isLoading","items","vendor","version","isDate","releaseDate","date","Date","type","map","onClick","e","propTypes","PropTypes","csm","extraShape","defaultProps","BiosCard","connect","systemProfile","systemProfileStore","loaded","biosSelector","enabledRepos","repositories","enabled","length","disabled","filter","Boolean","join","ConfigurationCardCore","configuration","hasPackages","hasServices","hasProcesses","hasRepositories","packages","singular","target","generalMapper","services","processes","plural","repositoriesMapper","base_url","name","gpgcheck","ConfigurationCard","configurationSelector","DataCollectorsCardCore","collectors","entity","dataMapper","expandedNames","setExpandedNames","setExpanded","useCallback","collector","isExpanding","prevExpanded","otherExpandedNames","r","isExpanded","includes","data","getDefaultCollectors","TableComposable","variant","TableVariant","borders","Thead","Tr","Th","rowIndex","Tbody","key","details","Td","expand","onToggle","style","paddingLeft","dataLabel","updated","colSpan","ExpandableRowContent","grow","default","id","per_reporter_staleness","DataCollectorsCard","entityDetails","defaultCollectors","GeneralInformation","isModalOpen","modalTitle","modalVariant","_event","index","direction","customRows","rows","state","sorted","sort","a","b","firstRow","cells","secondRow","sortValue","toLocaleLowerCase","setState","SortByDirection","reverse","expandable","filters","onSort","props","slice","this","loadSystemDetail","writePermissions","SystemCardWrapper","OperatingSystemCardWrapper","BiosCardWrapper","InfrastructureCardWrapper","ConfigurationCardWrapper","SystemStatusCardWrapper","DataCollectorsCardWrapper","CollectionCardWrapper","children","Wrapper","Fragment","sm","md","hasGutter","handleModalToggle","isOpen","onClose","Component","SystemCard","OperatingSystemCard","InfrastructureCard","SystemStatusCard","withRouter","dispatch","itemId","InfrastructureCardCore","infrastructure","hasType","hasIPv4","hasIPv6","hasInterfaces","ipv4","ipv6","nics","interfaceMapper","infrastructureSelector","OperatingSystemCardCore","systemInfo","hasRelease","hasKernelRelease","hasArchitecture","hasLastBoot","hasKernelModules","release","kernelRelease","architecture","bootTime","kernelModules","TitleWithPopover","content","headerContent","bodyContent","SystemCardCore","isDisplayNameModalOpen","isAnsibleHostModalOpen","fn","origValue","onCancel","preventDefault","ansible_host","fqdn","properties","setDisplayName","setAnsibleHost","hasHostName","hasDisplayName","hasAnsibleHostname","hasSAP","hasSystemPurpose","hasCPUs","hasSockets","hasCores","hasCPUFlags","hasRAM","size","display_name","link","onShowDisplayModal","getAnsibleHost","onShowAnsibleModal","sapIds","systemPurpose","cpuNumber","sockets","coresPerSocket","cpuFlags","ramSize","ariaLabel","modalOuiaId","cancelOuiaId","confirmOuiaId","inputOuiaId","onSubmit","storage","device","mount_point","options","propertiesSelector","editDisplayName","editAnsibleHost","statusHelper","UP","DOWN","enabledHelper","true","false","transforms","sortable","item","mac_address","mtu","repository","label","safeParser","toParse","JSON","parse","number_of_cpus","number_of_sockets","cores_per_socket","disk_devices","sap_sids","system_purpose","cpu_flags","facts","rhsm","CPU_CORES","CPU_SOCKETS","Number","MEMORY","usage","arch","operating_system","os_kernel_version","last_boot_time","kernel_modules","ARCHITECTURE","bios_vendor","bios_version","bios_release_date","infrastructure_type","infrastructure_vendor","network","IS_VIRTUAL","interfaces","installed_packages","enabled_services","running_processes","registered","reporter","collectorStaleness","verifyCollectorStaleness","last_check_in","idName","idValue","systemStatus","stale_timestamp","stale","GeneralInfoTab","setWrapper","loadEntities","showTags","getEntities","defaultGetEntities","config","itemIds","acc","curr","isFilterDisabled","hideFilters","all","updatedFilters","filtersReducer","defaultFilters","registeredWithFilter","staleFilter","osFilter","orderBy","orderDirection","lastDateRequest","now","ACTION_TYPES","payload","then","results","sortBy","find","per_page","meta","updateEntities","UPDATE_ENTITIES","filterSelect","selectedItem","FILTER_SELECT","loadEntity","selectEntity","selected","SELECT_ENTITY","setSort","CHANGE_SORT","filterEntities","filterString","FILTER_ENTITIES","detailSelect","APPLICATION_SELECTED","entitiesLoading","ENTITIES_LOADING","clearFilters","CLEAR_FILTERS","loadTags","systemId","count","getTags","tagsCount","toggleTagModal","TOGGLE_TAG_MODAL","fetchAllTags","pagination","defaultGetAllTags","lastDateRequestTags","fetchOperatingSystems","params","getOperatingSystems","configChanged","CONFIG_CHANGED","toggleDrawer","isOpened","TOGGLE_DRAWER","sizes","formatBytes","bytes","isNaN","Math","floor","log","parseFloat","pow","toFixed","applyReducerHash","repos","system_profile","cloudProviderObj","cloud_provider","disabledApps","system_memory_bytes","yum_repos","network_interfaces","ipv4_addresses","ipv6_addresses","mapDispatchToProps","wrapMapToProps","bindActionCreators","mapStateToProps","defaultMergeProps","stateProps","dispatchProps","ownProps","mergeProps","_ref","displayName","mergedProps","pure","areMergedPropsEqual","hasRunOnce","nextMergedProps","wrapMergePropsFunc","_excluded","match","arg","factories","i","result","Error","wrappedComponentName","strictEqual","createConnect","_temp","_ref$connectHOC","connectHOC","connectAdvanced","_ref$mapStateToPropsF","mapStateToPropsFactories","_ref$mapDispatchToPro","mapDispatchToPropsFactories","_ref$mergePropsFactor","mergePropsFactories","_ref$selectorFactory","selectorFactory","_ref2","_ref3","_ref3$pure","_ref3$areStatesEqual","areStatesEqual","_ref3$areOwnPropsEqua","areOwnPropsEqual","shallowEqual","_ref3$areStatePropsEq","areStatePropsEqual","_ref3$areMergedPropsE","extraOptions","initMapStateToProps","initMapDispatchToProps","initMergeProps","methodName","getDisplayName","shouldHandleStateChanges"],"sourceRoot":""}