{"version":3,"file":"js/2560.91772ff700d3e379fcc0.js","mappings":"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","sources":["webpack:///./node_modules/@redhat-cloud-services/frontend-components-notifications/esm/redux/actions/notifications.js","webpack:///./src/App.js","webpack:///./src/AppEntry.js","webpack:///./src/components/LostPage.js","webpack:///./src/Routes.js","webpack:///./src/Utilities/useFeatureFlag.js","webpack:///./src/components/SpinnerFallback.js","webpack:///./src/store/index.js","webpack:///./src/store/reducers.js","webpack:///./src/store/registeryContext.js","webpack:///./src/store/systemProfileStore.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { ADD_NOTIFICATION, CLEAR_NOTIFICATIONS, REMOVE_NOTIFICATION } from './action-types';\nfunction generateID(type) {\n    return 'cloud-services' + type + '-' + new Date().getTime() + Math.random().toString(36).slice(2);\n}\nexport var addNotification = function (notification) { return ({\n    type: ADD_NOTIFICATION,\n    payload: __assign({ id: generateID('notification') }, notification),\n}); };\nexport var removeNotification = function (index) { return ({\n    type: REMOVE_NOTIFICATION,\n    payload: index,\n}); };\nexport var clearNotifications = function () { return ({\n    type: CLEAR_NOTIFICATIONS,\n}); };\nexport default {\n    addNotification: addNotification,\n    removeNotification: removeNotification,\n    clearNotifications: clearNotifications,\n};\n//# sourceMappingURL=notifications.js.map","import React, { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Routes } from './Routes';\nimport './App.scss';\nimport { NotificationsPortal } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { RBACProvider } from '@redhat-cloud-services/frontend-components/RBACProvider';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\n\nconst App = () => {\n    const history = useHistory();\n    const chrome = useChrome();\n    useEffect(() => {\n        return chrome.on(\n            'APP_NAVIGATION',\n            event => {\n                if (event.navId === 'inventory') {\n                    history.push(`/${location.search}${location.hash}`);\n                } else {\n                    history.push(`/${event.navId}${location.search}${location.hash}`);\n                }\n            }\n        );\n    }, []);\n\n    return (\n        <div className=\"inventory\">\n            <NotificationsPortal />\n            <RBACProvider appName=\"inventory\">\n                <Routes />\n            </RBACProvider>\n        </div>\n    );\n};\n\nexport default App;\n","import React, { useMemo } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { getStore, updateReducers } from './store';\nimport RegistryContext from './store/registeryContext';\nimport App from './App';\nimport { getBaseName } from '@redhat-cloud-services/frontend-components-utilities/helpers';\nimport logger from 'redux-logger';\nimport Fallback from './components/SpinnerFallback';\n\nconst InventoryApp = () => {\n    const registry = useMemo(() => {\n        const store = IS_DEV ? getStore(logger) : getStore();\n        return {\n            register: (newReducers) => store.replaceReducer(updateReducers(newReducers)),\n            getStore: () => store\n        };\n    }, []);\n\n    return (registry ? (\n        <RegistryContext.Provider value={{\n            getRegistry: () => registry\n        }}>\n            <Provider store={registry.getStore()}>\n                <Router basename={getBaseName(window.location.pathname)}>\n                    <App />\n                </Router>\n            </Provider>\n        </RegistryContext.Provider>\n    ) : <Fallback />);\n};\n\nexport default InventoryApp;\n","import { EmptyState, EmptyStateBody } from '@patternfly/react-core';\nimport { InvalidObject } from '@redhat-cloud-services/frontend-components';\nimport React from 'react';\n\nconst LostPage = () => (\n    <EmptyState>\n        <EmptyStateBody>\n            <InvalidObject />\n        </EmptyStateBody>\n    </EmptyState>\n);\n\nexport default LostPage;\n","import { Route, Redirect, Switch } from 'react-router-dom';\nimport React, { lazy, Suspense, useMemo } from 'react';\nimport { getSearchParams } from './constants';\nimport RenderWrapper from './Utilities/Wrapper';\nimport useFeatureFlag from './Utilities/useFeatureFlag';\nimport LostPage from './components/LostPage';\n\nconst InventoryTable = lazy(() => import('./routes/InventoryTable'));\nconst InventoryDetail = lazy(() => import('./routes/InventoryDetail'));\nconst InventoryGroups = lazy(() => import('./routes/InventoryGroups'));\nconst InventoryGroupDetail = lazy(() => import('./routes/InventoryGroupDetail'));\n\nexport const routes = {\n    table: '/',\n    detail: '/:inventoryId',\n    detailWithModal: '/:inventoryId/:modalId',\n    groups: '/groups',\n    groupDetail: '/groups/:groupId'\n};\n\nexport const Routes = () => {\n    const searchParams = useMemo(() => getSearchParams(), []);\n    const groupsEnabled = useFeatureFlag('hbi.ui.inventory-groups');\n\n    return (\n        <Suspense fallback=\"\">\n            <Switch>\n                <Route\n                    exact\n                    path={routes.table}\n                    render={() =>\n                        <RenderWrapper\n                            cmp={InventoryTable}\n                            isRbacEnabled\n                            {...searchParams}\n                        />}\n                    rootClass='inventory'\n                />\n                <Route\n                    exact\n                    path={routes.groups}\n                    component={groupsEnabled ? InventoryGroups : LostPage}\n                    rootClass=\"inventory\"\n                />\n                <Route\n                    exact\n                    path={routes.groupDetail}\n                    component={groupsEnabled ? InventoryGroupDetail : LostPage}\n                    rootClass=\"inventory\"\n                />\n                <Route exact path={routes.detailWithModal} component={InventoryDetail} rootClass='inventory' />\n                <Route exact path={routes.detail} component={InventoryDetail} rootClass='inventory' />\n                <Redirect path=\"*\" to=\"/\" />\n            </Switch>\n        </Suspense>\n    );\n};\n","import { useFlag, useFlagsStatus } from '@unleash/proxy-client-react';\n\nexport default (flag) => {\n    const { flagsReady } = useFlagsStatus();\n    const isFlagEnabled = useFlag(flag);\n    return flagsReady ? isFlagEnabled : false;\n};\n","import React from 'react';\nimport { Bullseye, Spinner } from '@patternfly/react-core';\n\nconst Fallback = () => (\n    <Bullseye>\n        <Spinner size=\"xl\" />\n    </Bullseye>\n);\n\nexport default Fallback;\n","\nimport MiddlewareListener from '@redhat-cloud-services/frontend-components-utilities/MiddlewareListener';\nimport notificationsMiddleware from '@redhat-cloud-services/frontend-components-notifications/notificationsMiddleware';\nimport promise  from 'redux-promise-middleware';\nimport reducers, { entitesDetailReducer, mergeWithDetail, mergeWithEntities, tableReducer } from './reducers';\nexport { default as reducers, tableReducer, entitesDetailReducer } from './reducers';\nimport { applyMiddleware, combineReducers, compose, legacy_createStore as createStore } from 'redux';\nimport { INVENTORY_ACTION_TYPES } from './action-types';\n\nlet middlewareListener;\n\nconst appReducers = {\n    ...reducers,\n    ...mergeWithEntities(tableReducer),\n    ...mergeWithDetail(entitesDetailReducer(INVENTORY_ACTION_TYPES))\n};\n\nconst composeEnhancers = IS_DEV ? (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose) : compose;\n\nexport const getStore = (...middleware) => {\n    middlewareListener = new MiddlewareListener();\n    return createStore(combineReducers(appReducers), {}, composeEnhancers(applyMiddleware(...[\n        middlewareListener.getMiddleware(),\n        promise,\n        notificationsMiddleware({\n            errorTitleKey: ['message'],\n            errorDescriptionKey: ['response.data.detail']\n        }),\n        ...middleware\n    ])));\n};\n\nexport const updateReducers = (newReducers = {}) =>\n    combineReducers({\n        ...appReducers,\n        ...newReducers\n    });\n\nexport function addNewListener ({ actionType, callback }) {\n    return middlewareListener.addNew({\n        on: actionType,\n        callback\n    });\n}\n","import {\n    INVENTORY_ACTION_TYPES,\n    ACTION_TYPES,\n    SELECT_ENTITY,\n    SET_INVENTORY_FILTER,\n    SET_PAGINATION\n} from './action-types';\nimport systemProfileStore from './systemProfileStore';\nimport { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport { mergeArraysByKey } from '@redhat-cloud-services/frontend-components-utilities/helpers';\nimport { notificationsReducer } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport entitiesReducer, { defaultState as entitiesDefault } from './entities';\nimport entityDetailsReducer, { entityDefaultState as entityDefault, updateEntity } from './entityDetails';\nimport groups from './groups';\nimport groupDetail from './groupDetail';\n\nexport { entitiesReducer, entityDetailsReducer };\n\nconst defaultState = { loaded: false, selected: new Map() };\n\nfunction entitiesLoaded(state, { payload }) {\n    return {\n        ...state,\n        rows: mergeArraysByKey([state.rows, payload.results]),\n        entities: mergeArraysByKey([state.entities, payload.results])\n    };\n}\n\nfunction entityLoaded(state) {\n    return {\n        ...state,\n        loaded: true\n    };\n}\n\nfunction entitySelected(state, { payload }) {\n    const selected = state.selected || (new Map());\n    if (payload.selected) {\n        if (payload.id === 0) {\n            state.rows.forEach(row => selected.set(row.id, row));\n        } else {\n            const selectedRow = state.rows && state.rows.find(({ id }) => id === payload.id);\n            selected.set(payload.id, { ...selectedRow || {}, id: payload.id });\n        }\n    } else {\n        if (payload.id === 0) {\n            state.rows.forEach(row => selected.delete(row.id));\n        } else if (payload.id === -1) {\n            selected.clear();\n        } else {\n            selected.delete(payload.id);\n        }\n    }\n\n    return {\n        ...state,\n        selected: new Map(selected)\n    };\n}\n\nfunction entityDeleted(state, { meta }) {\n    const selected = state.selected || (new Map());\n    meta.systems.forEach(id => selected.delete(id));\n\n    return {\n        ...state,\n        selected: new Map(selected)\n    };\n}\n\nfunction onEntitiesLoaded(state, { payload, meta }) {\n    if (meta?.lastDateRequest < state?.lastDateRequest) {\n        return state;\n    }\n\n    return {\n        ...state,\n        rows: mergeArraysByKey([state.rows, payload.results.map(result => {\n            return {\n                ...result,\n                selected: state.selected && state.selected.has(result.id)\n            };\n        })])\n    };\n}\n\nfunction onSetFilter(state, { payload }) {\n    return {\n        ...state,\n        activeFilters: payload.filtersList\n    };\n}\n\nfunction onSetPagination(state, { payload }) {\n    const perPage = parseInt(payload.perPage, 10);\n    const page = parseInt(payload.page, 10);\n    return {\n        ...state,\n        perPage: isNaN(perPage) ? 50 : perPage,\n        page: isNaN(page) ? 1 : page\n    };\n}\n\nlet reducers = {\n    notifications: notificationsReducer,\n    systemProfileStore,\n    groups,\n    groupDetail\n};\n\nexport const tableReducer = applyReducerHash(\n    {\n        [ACTION_TYPES.GET_ENTITIES_FULFILLED]: entitiesLoaded,\n        [INVENTORY_ACTION_TYPES.LOAD_ENTITIES_FULFILLED]: onEntitiesLoaded,\n        [`${ACTION_TYPES.REMOVE_ENTITY}_FULFILLED`]: entityDeleted,\n        [SELECT_ENTITY]: entitySelected,\n        FILTER_SELECT: (state) => ({ ...state, selected: {} }),\n        [SET_INVENTORY_FILTER]: onSetFilter,\n        [SET_PAGINATION]: onSetPagination,\n        [ACTION_TYPES.UPDATE_DISPLAY_NAME_FULFILLED]: updateEntity\n    },\n    defaultState\n);\n\nexport const entitesDetailReducer = () => applyReducerHash(\n    {\n        [INVENTORY_ACTION_TYPES.LOAD_ENTITY_FULFILLED]: entityLoaded\n    },\n    defaultState\n);\n\nexport function mergeWithEntities(additionalReducers = (state) => state, defaultState = {}) {\n    return ({\n        entities: (state, payload) => ({\n            ...additionalReducers({\n                ...applyReducerHash({\n                    ...entitiesReducer\n                }, { ...entitiesDefault, ...defaultState })(state, payload)\n            }, payload)\n        })\n    });\n}\n\nexport function mergeWithDetail(additionalReducers = (state) => state, defaultState = {}) {\n    return ({\n        entityDetails: (state, payload) => ({\n            ...additionalReducers({\n                ...applyReducerHash({\n                    ...entityDetailsReducer\n                }, { ...entityDefault, ...defaultState })(state, payload)\n            }, payload)\n        })\n    });\n}\n\nexport default reducers;\n","import { createContext } from 'react';\n\nconst RegistryContext = createContext({\n    getRegistry: () => { }\n});\n\nexport default RegistryContext;\n","import { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport { ACTION_TYPES } from './action-types';\n\nexport const defaultState = { loaded: false };\n\nexport const sizes = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n\n// Kudos to https://stackoverflow.com/a/18650828/2560321\nexport const formatBytes = (bytes) => {\n    if (bytes === 0 || isNaN(Number(bytes))) {\n        return '0 B';\n    }\n\n    const index = Math.floor(Math.log(bytes) / Math.log(1024));\n    return `${parseFloat((bytes / Math.pow(1024, index)).toFixed(2))} ${sizes[index]}`;\n};\n\nexport function systemProfilePending(state) {\n    return {\n        ...state,\n        systemProfile: {\n            loaded: false\n        }\n    };\n}\n\nexport function calculateRepos(repos) {\n    return repos && repos.reduce((acc, curr) => ({\n        ...acc,\n        ...curr.enabled ? {\n            enabled: [...acc.enabled, curr]\n        } : {\n            disabled: [...acc.disabled, curr]\n        }\n    }), { enabled: [], disabled: [] });\n}\n\nexport function calculateInterfaces(interfaces) {\n    return interfaces && interfaces.reduce((acc, curr) => ({\n        interfaces: [...acc.interfaces, curr],\n        ipv4: [...acc.ipv4, ...curr.ipv4_addresses || []].filter(Boolean),\n        ipv6: [...acc.ipv6, ...curr.ipv6_addresses || []].filter(Boolean)\n    }), { interfaces: [], ipv4: [], ipv6: [] });\n}\n\nexport function onSystemProfile(state, { payload: { results } }) {\n    const systemProfile = (results && results[0] && results[0].system_profile) || {};\n    const cloudProviderObj = (results && results[0] && (typeof results[0].system_profile.cloud_provider !== 'undefined'))\n                        && results[0].system_profile.cloud_provider;\n    return {\n        ...state,\n        disabledApps: [\n            ...(cloudProviderObj === 'aws' || cloudProviderObj === 'azure') ? [] : ['ros']\n        ],\n        systemProfile: {\n            loaded: true,\n            ...systemProfile,\n            ramSize: systemProfile.system_memory_bytes && formatBytes(systemProfile.system_memory_bytes),\n            repositories: calculateRepos(systemProfile.yum_repos),\n            network: calculateInterfaces(systemProfile.network_interfaces)\n        }\n    };\n}\n\nexport default applyReducerHash(\n    {\n        [ACTION_TYPES.LOAD_SYSTEM_PROFILE_FULFILLED]: onSystemProfile,\n        [ACTION_TYPES.LOAD_SYSTEM_PROFILE_PENDING]: systemProfilePending\n    },\n    {\n        systemProfile: defaultState\n    }\n);\n"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","addNotification","notification","type","payload","id","Date","getTime","Math","random","toString","slice","history","useHistory","chrome","useChrome","useEffect","on","event","navId","push","location","search","hash","className","NotificationsPortal","appName","registry","useMemo","store","getStore","register","newReducers","replaceReducer","updateReducers","value","getRegistry","Provider","basename","getBaseName","window","pathname","EmptyState","EmptyStateBody","InvalidObject","InventoryTable","lazy","InventoryDetail","InventoryGroups","InventoryGroupDetail","routes","table","detail","detailWithModal","groups","groupDetail","Routes","searchParams","getSearchParams","groupsEnabled","useFeatureFlag","Suspense","fallback","Switch","Route","exact","path","render","cmp","isRbacEnabled","rootClass","component","LostPage","Redirect","to","flag","flagsReady","useFlagsStatus","isFlagEnabled","useFlag","size","middlewareListener","appReducers","reducers","mergeWithEntities","tableReducer","mergeWithDetail","entitesDetailReducer","INVENTORY_ACTION_TYPES","composeEnhancers","compose","MiddlewareListener","middleware","createStore","combineReducers","applyMiddleware","getMiddleware","promise","notificationsMiddleware","errorTitleKey","errorDescriptionKey","defaultState","loaded","selected","Map","entityLoaded","state","notifications","notificationsReducer","systemProfileStore","applyReducerHash","ACTION_TYPES","rows","mergeArraysByKey","results","entities","meta","lastDateRequest","map","result","has","systems","forEach","delete","SELECT_ENTITY","row","set","selectedRow","find","clear","SET_INVENTORY_FILTER","activeFilters","filtersList","SET_PAGINATION","perPage","parseInt","page","isNaN","updateEntity","additionalReducers","entitiesReducer","entitiesDefault","entityDetails","entityDetailsReducer","entityDefault","createContext","sizes","formatBytes","bytes","Number","index","floor","log","parseFloat","pow","toFixed","systemProfilePending","systemProfile","calculateRepos","repos","reduce","acc","curr","enabled","disabled","calculateInterfaces","interfaces","ipv4","ipv4_addresses","filter","Boolean","ipv6","ipv6_addresses","onSystemProfile","system_profile","cloudProviderObj","cloud_provider","disabledApps","ramSize","system_memory_bytes","repositories","yum_repos","network","network_interfaces"],"sourceRoot":""}