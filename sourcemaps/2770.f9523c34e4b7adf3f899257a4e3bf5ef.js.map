{"version":3,"file":"js/2770.f6d366add725057dc72f.js","mappings":"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","sources":["webpack:///./node_modules/@redhat-cloud-services/frontend-components-notifications/esm/redux/actions/notifications.js","webpack:///./src/modules/AsyncInventory.js","webpack:///./src/modules/TagWithDialog.js","webpack:///./src/store/reducers.js","webpack:///./src/store/systemProfileStore.js","webpack:///./node_modules/lodash/flatMap.js","webpack:///./node_modules/react-redux/es/connect/mapDispatchToProps.js","webpack:///./node_modules/react-redux/es/connect/mapStateToProps.js","webpack:///./node_modules/react-redux/es/connect/mergeProps.js","webpack:///./node_modules/react-redux/es/connect/connect.js","webpack:///./node_modules/react-redux/es/index.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { ADD_NOTIFICATION, CLEAR_NOTIFICATIONS, REMOVE_NOTIFICATION } from './action-types';\nfunction generateID(type) {\n    return 'cloud-services' + type + '-' + new Date().getTime() + Math.random().toString(36).slice(2);\n}\nexport var addNotification = function (notification) { return ({\n    type: ADD_NOTIFICATION,\n    payload: __assign({ id: generateID('notification') }, notification),\n}); };\nexport var removeNotification = function (index) { return ({\n    type: REMOVE_NOTIFICATION,\n    payload: index,\n}); };\nexport var clearNotifications = function () { return ({\n    type: CLEAR_NOTIFICATIONS,\n}); };\nexport default {\n    addNotification: addNotification,\n    removeNotification: removeNotification,\n    clearNotifications: clearNotifications,\n};\n//# sourceMappingURL=notifications.js.map","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Provider } from 'react-redux';\nimport { Router } from 'react-router-dom';\nimport { RBACProvider } from '@redhat-cloud-services/frontend-components/RBACProvider';\n\nimport * as storeMod from '../store/redux';\nimport * as utils from '../Utilities/index';\nimport * as apiMod from '../api/index';\nimport RenderWrapper from '../Utilities/Wrapper';\nconst { mergeWithDetail, ...rest } = storeMod;\n\nconst AsyncInventory = ({ component, onLoad, store, history, innerRef, ...props }) => {\n    useEffect(() => {\n        onLoad?.({\n            ...rest,\n            ...utils,\n            api: apiMod,\n            mergeWithDetail\n        });\n    }, []);\n\n    return (\n        <RBACProvider appName=\"inventory\">\n            <Provider store={store}>\n                <Router history={history}>\n                    <RenderWrapper\n                        { ...props }\n                        isRbacEnabled\n                        inventoryRef={ innerRef }\n                        store={ store }\n                        cmp={ component } />\n                </Router>\n            </Provider>\n        </RBACProvider>\n    );\n};\n\nAsyncInventory.propTypes = {\n    store: PropTypes.object,\n    onLoad: PropTypes.func,\n    component: PropTypes.elementType.isRequired,\n    history: PropTypes.object,\n    innerRef: PropTypes.shape({\n        current: PropTypes.any\n    })\n};\n\nAsyncInventory.defaultProps = {\n    onLoad: () => undefined\n};\n\nexport default AsyncInventory;\n","import React from 'react';\nimport AsyncInventory from './AsyncInventory';\nimport TagWithDialogCmp from '../Utilities/TagWithDialog';\n\nconst BaseTagWithDialog = (props) => <AsyncInventory {...props} component={TagWithDialogCmp}  />;\n\nconst TagWithDialog = React.forwardRef((props, ref) => <BaseTagWithDialog {...props} innerRef={ref} />);\n\nexport default TagWithDialog;\n","import {\n    INVENTORY_ACTION_TYPES,\n    ACTION_TYPES,\n    SELECT_ENTITY,\n    SET_INVENTORY_FILTER,\n    SET_PAGINATION\n} from './action-types';\nimport systemProfileStore from './systemProfileStore';\nimport { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport { mergeArraysByKey } from '@redhat-cloud-services/frontend-components-utilities/helpers';\nimport { notificationsReducer } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport entitiesReducer, { defaultState as entitiesDefault } from './entities';\nimport entityDetailsReducer, { entityDefaultState as entityDefault, updateEntity } from './entityDetails';\nimport groups from './groups';\nimport groupDetail from './groupDetail';\n\nexport { entitiesReducer, entityDetailsReducer };\n\nconst defaultState = { loaded: false, selected: new Map() };\n\nfunction entitiesLoaded(state, { payload }) {\n    return {\n        ...state,\n        rows: mergeArraysByKey([state.rows, payload.results]),\n        entities: mergeArraysByKey([state.entities, payload.results])\n    };\n}\n\nfunction entityLoaded(state) {\n    return {\n        ...state,\n        loaded: true\n    };\n}\n\nfunction entitySelected(state, { payload }) {\n    const selected = state.selected || (new Map());\n    if (payload.selected) {\n        if (payload.id === 0) {\n            state.rows.forEach(row => selected.set(row.id, row));\n        } else {\n            const selectedRow = state.rows && state.rows.find(({ id }) => id === payload.id);\n            selected.set(payload.id, { ...selectedRow || {}, id: payload.id });\n        }\n    } else {\n        if (payload.id === 0) {\n            state.rows.forEach(row => selected.delete(row.id));\n        } else if (payload.id === -1) {\n            selected.clear();\n        } else {\n            selected.delete(payload.id);\n        }\n    }\n\n    return {\n        ...state,\n        selected: new Map(selected)\n    };\n}\n\nfunction resourceOptTabVisibility(state, { payload }) {\n    return {\n        ...state,\n        activeApps: state.activeApps?.map((entity) => entity.name === 'ros' ? ({\n            ...entity,\n            isVisible: payload\n        }) : entity\n        )\n    };\n}\n\nfunction entityDeleted(state, { meta }) {\n    const selected = state.selected || (new Map());\n    meta.systems.forEach(id => selected.delete(id));\n\n    return {\n        ...state,\n        selected: new Map(selected)\n    };\n}\n\nfunction onEntitiesLoaded(state, { payload, meta }) {\n    if (meta?.lastDateRequest < state?.lastDateRequest) {\n        return state;\n    }\n\n    return {\n        ...state,\n        rows: mergeArraysByKey([state.rows, payload.results.map(result => {\n            return {\n                ...result,\n                selected: state.selected && state.selected.has(result.id)\n            };\n        })])\n    };\n}\n\nfunction onSetFilter(state, { payload }) {\n    return {\n        ...state,\n        activeFilters: payload.filtersList\n    };\n}\n\nfunction onSetPagination(state, { payload }) {\n    const perPage = parseInt(payload.perPage, 10);\n    const page = parseInt(payload.page, 10);\n    return {\n        ...state,\n        perPage: isNaN(perPage) ? 50 : perPage,\n        page: isNaN(page) ? 1 : page\n    };\n}\n\nlet reducers = {\n    notifications: notificationsReducer,\n    systemProfileStore,\n    groups,\n    groupDetail\n};\n\nexport const tableReducer = applyReducerHash(\n    {\n        [ACTION_TYPES.GET_ENTITIES_FULFILLED]: entitiesLoaded,\n        [INVENTORY_ACTION_TYPES.LOAD_ENTITIES_FULFILLED]: onEntitiesLoaded,\n        [`${ACTION_TYPES.REMOVE_ENTITY}_FULFILLED`]: entityDeleted,\n        [SELECT_ENTITY]: entitySelected,\n        FILTER_SELECT: (state) => ({ ...state, selected: {} }),\n        [SET_INVENTORY_FILTER]: onSetFilter,\n        [SET_PAGINATION]: onSetPagination,\n        [ACTION_TYPES.UPDATE_DISPLAY_NAME_FULFILLED]: updateEntity\n    },\n    defaultState\n);\n\nexport const entitesDetailReducer = () => applyReducerHash(\n    {\n        [INVENTORY_ACTION_TYPES.LOAD_ENTITY_FULFILLED]: entityLoaded,\n        [INVENTORY_ACTION_TYPES.LOAD_SYSTEM_PROFILE_FULFILLED]: resourceOptTabVisibility\n    },\n    defaultState\n);\n\nexport function mergeWithEntities(additionalReducers = (state) => state, defaultState = {}) {\n    return ({\n        entities: (state, payload) => ({\n            ...additionalReducers({\n                ...applyReducerHash({\n                    ...entitiesReducer\n                }, { ...entitiesDefault, ...defaultState })(state, payload)\n            }, payload)\n        })\n    });\n}\n\nexport function mergeWithDetail(additionalReducers = (state) => state, defaultState = {}) {\n    return ({\n        entityDetails: (state, payload) => ({\n            ...additionalReducers({\n                ...applyReducerHash({\n                    ...entityDetailsReducer\n                }, { ...entityDefault, ...defaultState })(state, payload)\n            }, payload)\n        })\n    });\n}\n\nexport default reducers;\n","import { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport { ACTION_TYPES } from './action-types';\n\nexport const defaultState = { loaded: false };\n\nexport const sizes = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n\n// Kudos to https://stackoverflow.com/a/18650828/2560321\nexport const formatBytes = (bytes) => {\n    if (bytes === 0 || isNaN(Number(bytes))) {\n        return '0 B';\n    }\n\n    const index = Math.floor(Math.log(bytes) / Math.log(1024));\n    return `${parseFloat((bytes / Math.pow(1024, index)).toFixed(2))} ${sizes[index]}`;\n};\n\nexport function systemProfilePending(state) {\n    return {\n        ...state,\n        systemProfile: {\n            loaded: false\n        }\n    };\n}\n\nexport function calculateRepos(repos) {\n    return repos && repos.reduce((acc, curr) => ({\n        ...acc,\n        ...curr.enabled ? {\n            enabled: [...acc.enabled, curr]\n        } : {\n            disabled: [...acc.disabled, curr]\n        }\n    }), { enabled: [], disabled: [] });\n}\n\nexport function calculateInterfaces(interfaces) {\n    return interfaces && interfaces.reduce((acc, curr) => ({\n        interfaces: [...acc.interfaces, curr],\n        ipv4: [...acc.ipv4, ...curr.ipv4_addresses || []].filter(Boolean),\n        ipv6: [...acc.ipv6, ...curr.ipv6_addresses || []].filter(Boolean)\n    }), { interfaces: [], ipv4: [], ipv6: [] });\n}\n\nexport function onSystemProfile(state, { payload: { results } }) {\n    const systemProfile = (results && results[0] && results[0].system_profile) || {};\n    const cloudProviderObj = (results && results[0] && (typeof results[0].system_profile.cloud_provider !== 'undefined'))\n                        && results[0].system_profile.cloud_provider;\n    return {\n        ...state,\n        disabledApps: [\n            ...(cloudProviderObj === 'aws' || cloudProviderObj === 'azure') ? [] : ['ros']\n        ],\n        systemProfile: {\n            loaded: true,\n            ...systemProfile,\n            ramSize: systemProfile.system_memory_bytes && formatBytes(systemProfile.system_memory_bytes),\n            repositories: calculateRepos(systemProfile.yum_repos),\n            network: calculateInterfaces(systemProfile.network_interfaces)\n        }\n    };\n}\n\nexport default applyReducerHash(\n    {\n        [ACTION_TYPES.LOAD_SYSTEM_PROFILE_FULFILLED]: onSystemProfile,\n        [ACTION_TYPES.LOAD_SYSTEM_PROFILE_PENDING]: systemProfilePending\n    },\n    {\n        systemProfile: defaultState\n    }\n);\n","var baseFlatten = require('./_baseFlatten'),\n    map = require('./map');\n\n/**\n * Creates a flattened array of values by running each element in `collection`\n * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n * with three arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * function duplicate(n) {\n *   return [n, n];\n * }\n *\n * _.flatMap([1, 2], duplicate);\n * // => [1, 1, 2, 2]\n */\nfunction flatMap(collection, iteratee) {\n  return baseFlatten(map(collection, iteratee), 1);\n}\n\nmodule.exports = flatMap;\n","import bindActionCreators from '../utils/bindActionCreators';\nimport { wrapMapToPropsConstant, wrapMapToPropsFunc } from './wrapMapToProps';\nexport function whenMapDispatchToPropsIsFunction(mapDispatchToProps) {\n  return typeof mapDispatchToProps === 'function' ? wrapMapToPropsFunc(mapDispatchToProps, 'mapDispatchToProps') : undefined;\n}\nexport function whenMapDispatchToPropsIsMissing(mapDispatchToProps) {\n  return !mapDispatchToProps ? wrapMapToPropsConstant(function (dispatch) {\n    return {\n      dispatch: dispatch\n    };\n  }) : undefined;\n}\nexport function whenMapDispatchToPropsIsObject(mapDispatchToProps) {\n  return mapDispatchToProps && typeof mapDispatchToProps === 'object' ? wrapMapToPropsConstant(function (dispatch) {\n    return bindActionCreators(mapDispatchToProps, dispatch);\n  }) : undefined;\n}\nexport default [whenMapDispatchToPropsIsFunction, whenMapDispatchToPropsIsMissing, whenMapDispatchToPropsIsObject];","import { wrapMapToPropsConstant, wrapMapToPropsFunc } from './wrapMapToProps';\nexport function whenMapStateToPropsIsFunction(mapStateToProps) {\n  return typeof mapStateToProps === 'function' ? wrapMapToPropsFunc(mapStateToProps, 'mapStateToProps') : undefined;\n}\nexport function whenMapStateToPropsIsMissing(mapStateToProps) {\n  return !mapStateToProps ? wrapMapToPropsConstant(function () {\n    return {};\n  }) : undefined;\n}\nexport default [whenMapStateToPropsIsFunction, whenMapStateToPropsIsMissing];","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport verifyPlainObject from '../utils/verifyPlainObject';\nexport function defaultMergeProps(stateProps, dispatchProps, ownProps) {\n  return _extends({}, ownProps, stateProps, dispatchProps);\n}\nexport function wrapMergePropsFunc(mergeProps) {\n  return function initMergePropsProxy(dispatch, _ref) {\n    var displayName = _ref.displayName,\n        pure = _ref.pure,\n        areMergedPropsEqual = _ref.areMergedPropsEqual;\n    var hasRunOnce = false;\n    var mergedProps;\n    return function mergePropsProxy(stateProps, dispatchProps, ownProps) {\n      var nextMergedProps = mergeProps(stateProps, dispatchProps, ownProps);\n\n      if (hasRunOnce) {\n        if (!pure || !areMergedPropsEqual(nextMergedProps, mergedProps)) mergedProps = nextMergedProps;\n      } else {\n        hasRunOnce = true;\n        mergedProps = nextMergedProps;\n        if (process.env.NODE_ENV !== 'production') verifyPlainObject(mergedProps, displayName, 'mergeProps');\n      }\n\n      return mergedProps;\n    };\n  };\n}\nexport function whenMergePropsIsFunction(mergeProps) {\n  return typeof mergeProps === 'function' ? wrapMergePropsFunc(mergeProps) : undefined;\n}\nexport function whenMergePropsIsOmitted(mergeProps) {\n  return !mergeProps ? function () {\n    return defaultMergeProps;\n  } : undefined;\n}\nexport default [whenMergePropsIsFunction, whenMergePropsIsOmitted];","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"pure\", \"areStatesEqual\", \"areOwnPropsEqual\", \"areStatePropsEqual\", \"areMergedPropsEqual\"];\nimport connectAdvanced from '../components/connectAdvanced';\nimport shallowEqual from '../utils/shallowEqual';\nimport defaultMapDispatchToPropsFactories from './mapDispatchToProps';\nimport defaultMapStateToPropsFactories from './mapStateToProps';\nimport defaultMergePropsFactories from './mergeProps';\nimport defaultSelectorFactory from './selectorFactory';\n/*\r\n  connect is a facade over connectAdvanced. It turns its args into a compatible\r\n  selectorFactory, which has the signature:\r\n\r\n    (dispatch, options) => (nextState, nextOwnProps) => nextFinalProps\r\n  \r\n  connect passes its args to connectAdvanced as options, which will in turn pass them to\r\n  selectorFactory each time a Connect component instance is instantiated or hot reloaded.\r\n\r\n  selectorFactory returns a final props selector from its mapStateToProps,\r\n  mapStateToPropsFactories, mapDispatchToProps, mapDispatchToPropsFactories, mergeProps,\r\n  mergePropsFactories, and pure args.\r\n\r\n  The resulting final props selector is called by the Connect component instance whenever\r\n  it receives new props or store state.\r\n */\n\nfunction match(arg, factories, name) {\n  for (var i = factories.length - 1; i >= 0; i--) {\n    var result = factories[i](arg);\n    if (result) return result;\n  }\n\n  return function (dispatch, options) {\n    throw new Error(\"Invalid value of type \" + typeof arg + \" for \" + name + \" argument when connecting component \" + options.wrappedComponentName + \".\");\n  };\n}\n\nfunction strictEqual(a, b) {\n  return a === b;\n} // createConnect with default args builds the 'official' connect behavior. Calling it with\n// different options opens up some testing and extensibility scenarios\n\n\nexport function createConnect(_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      _ref$connectHOC = _ref.connectHOC,\n      connectHOC = _ref$connectHOC === void 0 ? connectAdvanced : _ref$connectHOC,\n      _ref$mapStateToPropsF = _ref.mapStateToPropsFactories,\n      mapStateToPropsFactories = _ref$mapStateToPropsF === void 0 ? defaultMapStateToPropsFactories : _ref$mapStateToPropsF,\n      _ref$mapDispatchToPro = _ref.mapDispatchToPropsFactories,\n      mapDispatchToPropsFactories = _ref$mapDispatchToPro === void 0 ? defaultMapDispatchToPropsFactories : _ref$mapDispatchToPro,\n      _ref$mergePropsFactor = _ref.mergePropsFactories,\n      mergePropsFactories = _ref$mergePropsFactor === void 0 ? defaultMergePropsFactories : _ref$mergePropsFactor,\n      _ref$selectorFactory = _ref.selectorFactory,\n      selectorFactory = _ref$selectorFactory === void 0 ? defaultSelectorFactory : _ref$selectorFactory;\n\n  return function connect(mapStateToProps, mapDispatchToProps, mergeProps, _ref2) {\n    if (_ref2 === void 0) {\n      _ref2 = {};\n    }\n\n    var _ref3 = _ref2,\n        _ref3$pure = _ref3.pure,\n        pure = _ref3$pure === void 0 ? true : _ref3$pure,\n        _ref3$areStatesEqual = _ref3.areStatesEqual,\n        areStatesEqual = _ref3$areStatesEqual === void 0 ? strictEqual : _ref3$areStatesEqual,\n        _ref3$areOwnPropsEqua = _ref3.areOwnPropsEqual,\n        areOwnPropsEqual = _ref3$areOwnPropsEqua === void 0 ? shallowEqual : _ref3$areOwnPropsEqua,\n        _ref3$areStatePropsEq = _ref3.areStatePropsEqual,\n        areStatePropsEqual = _ref3$areStatePropsEq === void 0 ? shallowEqual : _ref3$areStatePropsEq,\n        _ref3$areMergedPropsE = _ref3.areMergedPropsEqual,\n        areMergedPropsEqual = _ref3$areMergedPropsE === void 0 ? shallowEqual : _ref3$areMergedPropsE,\n        extraOptions = _objectWithoutPropertiesLoose(_ref3, _excluded);\n\n    var initMapStateToProps = match(mapStateToProps, mapStateToPropsFactories, 'mapStateToProps');\n    var initMapDispatchToProps = match(mapDispatchToProps, mapDispatchToPropsFactories, 'mapDispatchToProps');\n    var initMergeProps = match(mergeProps, mergePropsFactories, 'mergeProps');\n    return connectHOC(selectorFactory, _extends({\n      // used in error messages\n      methodName: 'connect',\n      // used to compute Connect's displayName from the wrapped component's displayName.\n      getDisplayName: function getDisplayName(name) {\n        return \"Connect(\" + name + \")\";\n      },\n      // if mapStateToProps is falsy, the Connect component doesn't subscribe to store state changes\n      shouldHandleStateChanges: Boolean(mapStateToProps),\n      // passed through to selectorFactory\n      initMapStateToProps: initMapStateToProps,\n      initMapDispatchToProps: initMapDispatchToProps,\n      initMergeProps: initMergeProps,\n      pure: pure,\n      areStatesEqual: areStatesEqual,\n      areOwnPropsEqual: areOwnPropsEqual,\n      areStatePropsEqual: areStatePropsEqual,\n      areMergedPropsEqual: areMergedPropsEqual\n    }, extraOptions));\n  };\n}\nexport default /*#__PURE__*/createConnect();","export * from './exports';\nimport { unstable_batchedUpdates as batch } from './utils/reactBatchedUpdates';\nimport { setBatch } from './utils/batch'; // Enable batched updates in our subscriptions for use\n// with standard React renderers (ReactDOM, React Native)\n\nsetBatch(batch);\nexport { batch };"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","addNotification","notification","type","payload","id","Date","getTime","Math","random","toString","slice","mergeWithDetail","storeMod","rest","AsyncInventory","component","onLoad","store","history","innerRef","props","useEffect","utils","api","apiMod","RBACProvider","appName","Provider","Router","isRbacEnabled","inventoryRef","cmp","propTypes","PropTypes","current","defaultProps","BaseTagWithDialog","TagWithDialogCmp","React","ref","defaultState","loaded","selected","Map","entityLoaded","state","resourceOptTabVisibility","activeApps","map","entity","name","isVisible","reducers","notifications","notificationsReducer","systemProfileStore","groups","groupDetail","tableReducer","applyReducerHash","ACTION_TYPES","rows","mergeArraysByKey","results","entities","INVENTORY_ACTION_TYPES","meta","lastDateRequest","result","has","systems","forEach","delete","SELECT_ENTITY","row","set","selectedRow","find","clear","SET_INVENTORY_FILTER","activeFilters","filtersList","SET_PAGINATION","perPage","parseInt","page","isNaN","updateEntity","entitesDetailReducer","mergeWithEntities","additionalReducers","entitiesReducer","entitiesDefault","entityDetails","entityDetailsReducer","entityDefault","sizes","formatBytes","bytes","Number","index","floor","log","parseFloat","pow","toFixed","systemProfilePending","systemProfile","calculateRepos","repos","reduce","acc","curr","enabled","disabled","calculateInterfaces","interfaces","ipv4","ipv4_addresses","filter","Boolean","ipv6","ipv6_addresses","onSystemProfile","system_profile","cloudProviderObj","cloud_provider","disabledApps","ramSize","system_memory_bytes","repositories","yum_repos","network","network_interfaces","baseFlatten","module","exports","collection","iteratee","mapDispatchToProps","wrapMapToProps","undefined","dispatch","bindActionCreators","mapStateToProps","defaultMergeProps","stateProps","dispatchProps","ownProps","mergeProps","_ref","displayName","mergedProps","pure","areMergedPropsEqual","hasRunOnce","nextMergedProps","wrapMergePropsFunc","_excluded","match","arg","factories","options","Error","wrappedComponentName","strictEqual","a","b","createConnect","_temp","_ref$connectHOC","connectHOC","connectAdvanced","_ref$mapStateToPropsF","mapStateToPropsFactories","_ref$mapDispatchToPro","mapDispatchToPropsFactories","_ref$mergePropsFactor","mergePropsFactories","_ref$selectorFactory","selectorFactory","_ref2","_ref3","_ref3$pure","_ref3$areStatesEqual","areStatesEqual","_ref3$areOwnPropsEqua","areOwnPropsEqual","shallowEqual","_ref3$areStatePropsEq","areStatePropsEqual","_ref3$areMergedPropsE","extraOptions","initMapStateToProps","initMapDispatchToProps","initMergeProps","methodName","getDisplayName","shouldHandleStateChanges"],"sourceRoot":""}