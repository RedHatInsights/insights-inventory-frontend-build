{"version":3,"file":"js/3880.3c3bf9941c665d048a91.js","mappings":"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","sources":["webpack:///./src/Utilities/DeleteModal.js","webpack:///./src/Utilities/Wrapper.js","webpack:///./src/Utilities/constants.js","webpack:///./src/Utilities/TagsModal.js","webpack:///./src/api/api.js","webpack:///./src/api/systemIssues.js","webpack:///./src/components/InventoryGroups/utils/api.js","webpack:///./src/constants.js","webpack:///./src/store/action-types.js","webpack:///./src/store/system-issues-actions.js","webpack:///./src/store/actions.js","webpack:///./src/store/inventory-actions.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    ClipboardCopy,\n    Modal,\n    Split,\n    SplitItem,\n    Stack,\n    StackItem,\n    Level,\n    LevelItem,\n    Button\n} from '@patternfly/react-core';\n\nimport ExclamationTriangleIcon from  '@patternfly/react-icons/dist/js/icons/exclamation-triangle-icon';\n\nconst DeleteModal = ({ handleModalToggle, isModalOpen, currentSytems, onConfirm }) => {\n    let systemToRemove;\n    let systemLabel = 'system';\n    if (Array.isArray(currentSytems)) {\n        systemToRemove = currentSytems.length === 1 ? currentSytems[0].display_name : `${currentSytems.length} systems`;\n        systemLabel = currentSytems.length === 1 ? systemLabel : 'systems';\n    } else {\n        systemToRemove = currentSytems.display_name;\n    }\n\n    return <Modal\n        variant=\"small\"\n        title=\"Remove from inventory\"\n        className=\"ins-c-inventory__table--remove\"\n        ouiaId=\"inventory-delete-modal\"\n        isOpen={isModalOpen}\n        onClose={() => handleModalToggle(false)}\n        appendTo={document.getElementsByClassName('inventory')[0] || document.body}\n    >\n        <Split hasGutter>\n            <SplitItem><ExclamationTriangleIcon size=\"xl\" className=\"ins-m-alert\" /></SplitItem>\n            <SplitItem isFilled>\n                <Stack hasGutter>\n                    <StackItem>\n                        {systemToRemove} will be removed from\n                                    all {location.host} applications and services. You need to re-register\n                        the {systemLabel} to add it back to your inventory.\n                    </StackItem>\n                    <StackItem>\n                        To disable the daily upload for this {systemLabel}, use the following command:\n                    </StackItem>\n                    <StackItem>\n                        <ClipboardCopy>insights-client --unregister</ClipboardCopy>\n                    </StackItem>\n                </Stack>\n            </SplitItem>\n        </Split>\n        <Level hasGutter>\n            <LevelItem>\n                <Button\n                    variant=\"danger\"\n                    ouiaId=\"confirm-inventory-delete\"\n                    onClick={onConfirm}\n                >\n                    Remove\n                </Button>\n                <Button\n                    variant=\"link\"\n                    ouiaId=\"cancel-inventory-delete\"\n                    onClick={() => handleModalToggle(false)}\n                >\n                    Cancel\n                </Button>\n            </LevelItem>\n        </Level>\n    </Modal>;\n};\n\nconst ActiveSystemProp = PropTypes.shape({\n    id: PropTypes.string,\n    displayName: PropTypes.string\n});\n\nDeleteModal.propTypes = {\n    isModalOpen: PropTypes.bool,\n    currentSytems: PropTypes.oneOfType([ActiveSystemProp, PropTypes.arrayOf(ActiveSystemProp)]),\n    handleModalToggle: PropTypes.func,\n    onConfirm: PropTypes.func\n};\n\nDeleteModal.defaultProps = {\n    isModalOpen: false,\n    currentSytems: {},\n    handleModalToggle: () => undefined,\n    onConfirm: () => undefined\n};\n\nexport default DeleteModal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { usePermissionsWithContext } from '@redhat-cloud-services/frontend-components-utilities/RBACHook';\n\nconst RenderWrapper = ({ cmp: Component, isRbacEnabled, inventoryRef, store, ...props }) => {\n    const { hasAccess } = usePermissionsWithContext([\n        'inventory:*:*',\n        'inventory:*:read',\n        'inventory:hosts:read'\n    ]);\n\n    return (\n        <Component\n            {...props}\n            { ...inventoryRef && {\n                ref: inventoryRef\n            }}\n            isRbacEnabled={isRbacEnabled}\n            hasAccess={isRbacEnabled ? hasAccess : true}\n            store={ store }\n        />\n    );\n};\n\nRenderWrapper.propTypes = {\n    cmp: PropTypes.any,\n    inventoryRef: PropTypes.any,\n    store: PropTypes.object,\n    customRender: PropTypes.bool,\n    isRbacEnabled: PropTypes.bool\n};\n\nexport default RenderWrapper;\n","import { createContext } from 'react';\nimport { usePermissionsWithContext } from '@redhat-cloud-services/frontend-components-utilities/RBACHook';\nimport { INVENTORY_WRITE_PERMISSIONS } from '../constants';\n\nexport const TEXT_FILTER = 'hostname_or_id';\nexport const TEXTUAL_CHIP = 'textual';\nexport const TAG_CHIP = 'tags';\nexport const STALE_CHIP = 'staleness';\nexport const REGISTERED_CHIP = 'registered_with';\nexport const OS_CHIP = 'operating_system';\nexport const RHCD_FILTER_KEY = 'rhc_client_id';\nexport const UPDATE_METHOD_KEY = 'system_update_method';\nexport const LAST_SEEN_CHIP = 'last_seen';\nexport const HOST_GROUP_CHIP = 'host_group';\n\nexport function subtractDate(days) {\n    const date = new Date();\n    date.setDate(date.getDate() - days);\n    return date.toISOString();\n}\n\nexport const staleness = [\n    { label: 'Fresh', value: 'fresh' },\n    { label: 'Stale', value: 'stale' },\n    { label: 'Stale warning', value: 'stale_warning' },\n    { label: 'Unknown', value: 'unknown' }\n];\n\nexport const currentDate = new Date().toISOString();\nexport const lastSeenItems = [\n    {\n        value: { updatedStart: subtractDate(1), updatedEnd: currentDate, mark: 'last24' },\n        label: 'Within the last 24 hours'    },\n    {\n        value: {  updatedEnd: subtractDate(1), mark: '24more' },\n        label: 'More than 1 day ago'\n\n    },\n    {\n        value: { updatedEnd: subtractDate(7), mark: '7more' },\n        label: 'More than 7 days ago'\n    },\n    {\n        value: { updatedEnd: subtractDate(15), mark: '15more' },\n        label: 'More than 15 days ago'\n    },\n    {\n        value: { updatedEnd: subtractDate(30), mark: '30more' },\n        label: 'More than 30 days ago'\n    },\n    {\n        value: { mark: 'custom' },\n        label: 'Custom'\n    }\n];\nexport const registered = [\n    { label: 'insights-client', value: 'puptoo', idName: 'Insights id', idValue: 'insights_id' },\n    { label: 'subscription-manager', value: 'rhsm-conduit',\n        idName: 'Subscription manager id', idValue: 'subscription_manager_id' },\n    { label: 'Satellite/Discovery', value: 'yupana' },\n    { label: 'insights-client not connected', value: '!puptoo' }\n];\nexport const InventoryContext = createContext({});\n\nexport const rhcdOptions = [\n    { label: 'Active', value: 'not_nil' },\n    { label: 'Inactive', value: 'nil' }\n];\n\nexport const updateMethodOptions = [\n    { label: 'yum', value: 'yum' },\n    { label: 'dnf', value: 'dnf' },\n    { label: 'rpm-ostree', value: 'rpm-ostree' }\n];\n\nexport function filterToGroup(filter = [], valuesKey = 'values') {\n    return filter.reduce((accGroup, group) => ({\n        ...accGroup,\n        [group.key]: group[valuesKey].reduce((acc, curr) => ({ ...acc, [curr.key]: {\n            isSelected: true,\n            group: curr.group,\n            item: {\n                meta: {\n                    tag: {\n                        key: curr.tagKey,\n                        value: curr.value\n                    }\n                }\n            }\n        } }), {})\n    }), {});\n}\n\nexport const arrayToSelection = (selected) => selected.reduce((acc, { cells: [key, value, namespace] }) => ({\n    ...acc,\n    [namespace]: {\n        ...acc[namespace?.title || namespace],\n        [key?.title || key]: {\n            isSelected: true,\n            group: { value: namespace?.title || namespace, label: namespace?.title || namespace },\n            item: {\n                value: key?.title || key,\n                meta: { tag: { key: key?.title || key, value: value?.title || value } }\n            }\n        }\n    }\n}), {});\n\nexport function reduceFilters(filters = []) {\n    return filters.reduce((acc, oneFilter) => {\n        if (oneFilter.value === TEXT_FILTER) {\n            return { ...acc, textFilter: oneFilter.filter };\n        } else if ('tagFilters' in oneFilter) {\n            return {\n                ...acc,\n                tagFilters: filterToGroup(oneFilter.tagFilters)\n            };\n        }\n\n        const foundKey = ['staleFilter', 'registeredWithFilter', 'osFilter', 'rhcdFilter', 'updateMethodFilter',\n            'lastSeenFilter', '']\n        .find(item => Object.keys(oneFilter).includes(item));\n\n        return {\n            ...acc,\n            ...foundKey && { [foundKey]: oneFilter[foundKey] }\n        };\n    }, {\n        textFilter: '',\n        tagFilters: {}\n    });\n}\n\nexport const reloadWrapper = (event, callback) => {\n    event.payload.then(data => {\n        callback();\n        return data;\n    });\n\n    return event;\n};\n\nexport const isEmpty = (check) => !check || check?.length === 0;\n\nexport const generateFilter = (status,\n    source,\n    tagsFilter,\n    filterbyName,\n    operatingSystem,\n    rhcdFilter,\n    updateMethodFilter,\n    hostGroup,\n    lastSeenFilter\n) => ([\n    !isEmpty(status) && {\n        staleFilter: Array.isArray(status) ? status : [status]\n    },\n    !isEmpty(tagsFilter) && {\n        tagFilters: Array.isArray(tagsFilter) ? tagsFilter : [tagsFilter]\n    },\n    !isEmpty(source) && {\n        registeredWithFilter: Array.isArray(source) ? source : [source]\n    },\n    !isEmpty(filterbyName) && {\n        value: 'hostname_or_id',\n        filter: Array.isArray(filterbyName) ? filterbyName[0] : filterbyName\n    },\n    (!isEmpty(status) || !isEmpty(tagsFilter) || !isEmpty(filterbyName)) && isEmpty(source) && {\n        registeredWithFilter: []\n    },\n    (!isEmpty(source) || !isEmpty(tagsFilter) || !isEmpty(filterbyName)) && isEmpty(status) && {\n        staleFilter: []\n    },\n    !isEmpty(operatingSystem) && {\n        osFilter: Array.isArray(operatingSystem) ? operatingSystem : [operatingSystem]\n    },\n    !isEmpty(rhcdFilter) && {\n        rhcdFilter: Array.isArray(rhcdFilter) ? rhcdFilter : [rhcdFilter]\n    },\n    !isEmpty(lastSeenFilter) && {\n        lastSeenFilter: Array.isArray(lastSeenFilter) ? lastSeenFilter : [lastSeenFilter]\n    },\n    !isEmpty(updateMethodFilter) && {\n        updateMethodFilter: Array.isArray(updateMethodFilter) ? updateMethodFilter : [updateMethodFilter]\n    },\n    !isEmpty(hostGroup) && {\n        hostGroupFilter: Array.isArray(hostGroup) ? hostGroup : [hostGroup]\n    }\n].filter(Boolean));\n\nexport const useWritePermissions = () => {\n    const { hasAccess } = usePermissionsWithContext(INVENTORY_WRITE_PERMISSIONS);\n\n    return hasAccess;\n};\n\nexport const allStaleFilters = ['fresh', 'stale', 'stale_warning', 'unknown'];\n","import React, { useState, useCallback, useEffect } from 'react';\nimport { useSelector, useDispatch, shallowEqual } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { toggleTagModal, fetchAllTags } from '../store/actions';\nimport { TagModal } from '@redhat-cloud-services/frontend-components/TagModal';\nimport { cellWidth } from '@patternfly/react-table';\nimport debounce from 'lodash/debounce';\nimport flatten from 'lodash/flatten';\n\nconst TagsModal = ({\n    filterTagsBy,\n    onToggleModal,\n    onApply,\n    getTags\n}) => {\n    const dispatch = useDispatch();\n    const [filterBy, setFilterBy] = useState('');\n    const [selected, setSelected] = useState([]);\n    const [statePagination, setStatePagination] = useState({\n        perPage: 10,\n        page: 1\n    });\n\n    const showTagDialog = useSelector(({ entities, entityDetails }) => (entities || entityDetails)?.showTagDialog);\n\n    const pagination = useSelector(({ entities, entityDetails }) => {\n        if (entities?.activeSystemTag || entityDetails?.entity) {\n            return statePagination;\n        }\n\n        return entities?.allTagsPagination || statePagination;\n    }, shallowEqual);\n\n    const loaded = useSelector(({ entities, entityDetails }) => entities?.tagModalLoaded || entityDetails?.tagModalLoaded);\n\n    const activeSystemTag = useSelector(({ entities, entityDetails }) => entities?.activeSystemTag || entityDetails?.entity);\n    const tags = useSelector(({ entities, entityDetails }) => {\n        const activeTags = entities?.activeSystemTag?.tags || entityDetails?.entity?.tags;\n        if (activeTags) {\n            return activeTags?.filter(\n                (tag) => Object.values(tag).some((val) => val?.includes(filterBy))\n            ).slice(statePagination?.perPage * (statePagination?.page - 1), statePagination?.perPage * statePagination?.page);\n        }\n\n        return entities?.allTags?.reduce((acc, { tags }) => ([\n            ...acc,\n            ...flatten(tags.map(({ tag }) => tag))\n        ]), []);\n    });\n\n    const tagsCount = useSelector(({ entities, entityDetails }) => {\n        const activeTags = (entities?.activeSystemTag?.tags || entityDetails?.entity?.tags)?.filter(\n            (tag) => Object.values(tag).some((val) => val?.includes(filterBy))\n        );\n        return activeTags ? activeTags.length : entities?.allTagsTotal;\n    });\n\n    useEffect(() => {\n        setFilterBy(filterTagsBy);\n    }, [filterTagsBy]);\n\n    const fetchTags = (pagination, filterBy) => {\n        if (!activeSystemTag) {\n            dispatch(fetchAllTags(filterBy, pagination, getTags));\n        } else {\n            setStatePagination(() => pagination);\n        }\n    };\n\n    const debouncedFetch = useCallback(debounce(fetchTags, 800), [activeSystemTag]);\n\n    return (\n        <TagModal\n            className=\"ins-c-inventory__tags-modal\"\n            tableProps={{\n                canSelectAll: false\n            }}\n            {...loaded && {\n                loaded,\n                pagination: {\n                    ...pagination,\n                    count: tagsCount\n                },\n                rows: tags?.map(({ key, value, namespace }) => ({\n                    id: `${namespace}/${key}=${value}`,\n                    selected: selected.find(({ id }) => id === `${namespace}/${key}=${value}`),\n                    cells: [key, value, namespace]\n                })) || []\n            }}\n            loaded={ loaded }\n            width=\"auto\"\n            isOpen={ showTagDialog }\n            toggleModal={() => {\n                setSelected([]);\n                setFilterBy('');\n                onToggleModal();\n                dispatch(toggleTagModal(false));\n            }}\n            filters={[\n                {\n                    label: 'Tags filter',\n                    placeholder: 'Filter tags',\n                    value: 'tags-filter',\n                    filterValues: {\n                        value: filterBy,\n                        onChange: (_e, value) => {\n                            debouncedFetch(pagination, value);\n                            setFilterBy(value);\n                        }\n                    }\n                }\n            ]}\n            onUpdateData={ (pagination) => fetchTags(pagination, filterBy) }\n            columns={ [\n                { title: 'Name' },\n                { title: 'Value', transforms: [cellWidth(30)] },\n                { title: 'Tag source', transforms: [cellWidth(30)] }\n            ] }\n            {...!activeSystemTag && {\n                onSelect: (selected) => setSelected(selected),\n                selected,\n                onApply: () => onApply && onApply(selected)\n            }}\n            bulkSelect={{ id: 'bulk-select-tags' }}\n            title={ activeSystemTag ?\n                `${activeSystemTag.display_name} (${tagsCount})` :\n                `All tags in inventory (${tagsCount})`\n            }\n        />\n    );\n};\n\nTagsModal.propTypes = {\n    onApply: PropTypes.func,\n    onToggleModal: PropTypes.func,\n    filterTagsBy: PropTypes.string,\n    customFilters: PropTypes.shape({\n        tags: PropTypes.oneOfType([\n            PropTypes.object,\n            PropTypes.arrayOf(PropTypes.string)\n        ])\n    }),\n    getTags: PropTypes.func\n};\n\nTagsModal.defaultProps = {\n    filterTagsBy: '',\n    onToggleModal: () => undefined\n};\n\nexport default TagsModal;\n","import 'abortcontroller-polyfill/dist/polyfill-patch-fetch';\nexport const INVENTORY_API_BASE = '/api/inventory/v1';\nimport flatMap from 'lodash/flatMap';\n\nimport instance from '@redhat-cloud-services/frontend-components-utilities/interceptors';\nimport { generateFilter, mergeArraysByKey } from '@redhat-cloud-services/frontend-components-utilities/helpers';\nimport { HostsApi, TagsApi, SystemProfileApi } from '@redhat-cloud-services/host-inventory-client';\nimport { allStaleFilters, RHCD_FILTER_KEY, UPDATE_METHOD_KEY } from '../Utilities/constants';\n\nexport { instance };\nexport const hosts = new HostsApi(undefined, INVENTORY_API_BASE, instance);\nexport const tags = new TagsApi(undefined, INVENTORY_API_BASE, instance);\nexport const systemProfile = new SystemProfileApi(undefined, INVENTORY_API_BASE, instance);\n\nexport const getEntitySystemProfile = (item) => hosts.apiHostGetHostSystemProfileById([item]);\n\n/* eslint camelcase: off */\nexport const mapData = ({ facts = {}, ...oneResult }) => ({\n    ...oneResult,\n    rawFacts: facts,\n    facts: {\n        ...facts.reduce?.((acc, curr) => ({ ...acc, [curr.namespace]: curr.facts }), {}),\n        ...flatMap(facts, (oneFact => Object.values(oneFact)))\n        .map(item => typeof item !== 'string' ? ({\n            ...item,\n            // eslint-disable-next-line camelcase\n            os_release: item.os_release || item.release,\n            // eslint-disable-next-line camelcase\n            display_name: item.display_name || item.fqdn || item.id\n        }) : item)\n        .reduce(\n            (acc, curr) => ({ ...acc, ...(typeof curr !== 'string') ? curr : {} }), {}\n        )\n    }\n});\n\nexport const mapTags = (data = { results: [] }, { orderBy, orderDirection } = {}) => {\n    if (data.results.length > 0) {\n        return hosts.apiHostGetHostTags(data.results.map(({ id }) => id), data.per_page, 1, orderBy, orderDirection)\n        .then(({ results: tags }) => ({\n            ...data,\n            results: data.results.map(row => ({ ...row, tags: tags[row.id] || [] }))\n        }))\n        .catch(() => ({\n            ...data,\n            results: data.results.map(row => ({\n                ...row,\n                tags: []\n            }))\n        }));\n    }\n\n    return data;\n};\n\nexport const constructTags = (tagFilters) => {\n    return flatMap(\n        tagFilters,\n        ({ values, category: namespace }) => values.map(({ value: tagValue, tagKey }) => (\n            `${namespace ? `${namespace}/` : ''}${tagKey}${tagValue ? `=${tagValue}` : ''}`\n        ))\n    ) || '';\n};\n\nexport const calculateSystemProfile = ({ osFilter, rhcdFilter, updateMethodFilter }) => {\n    let systemProfile = {};\n    const osFilterValues = Array.isArray(osFilter) ? osFilter : Object.values(osFilter || {})\n    .flatMap((majorOsVersion) => Object.keys(majorOsVersion));\n\n    if (osFilterValues?.length > 0) {\n        systemProfile.operating_system = {\n            RHEL: {\n                version: {\n                    eq: osFilterValues\n                }\n            }\n        };\n    }\n\n    if (rhcdFilter) {\n        systemProfile[RHCD_FILTER_KEY] = rhcdFilter;\n    }\n\n    if (updateMethodFilter) {\n        systemProfile[UPDATE_METHOD_KEY] =  {\n            eq: updateMethodFilter\n        };\n    }\n\n    return generateFilter({ system_profile: systemProfile });\n};\n\nexport const filtersReducer = (acc, filter = {}) => ({\n    ...acc,\n    ...filter.value === 'hostname_or_id' && { hostnameOrId: filter.filter },\n    ...'tagFilters' in filter && { tagFilters: filter.tagFilters },\n    ...'staleFilter' in filter && { staleFilter: filter.staleFilter },\n    ...'registeredWithFilter' in filter && { registeredWithFilter: filter.registeredWithFilter },\n    ...'osFilter' in filter && { osFilter: filter.osFilter },\n    ...'rhcdFilter' in filter && { rhcdFilter: filter.rhcdFilter },\n    ...'lastSeenFilter' in filter && { lastSeenFilter: filter.lastSeenFilter },\n    ...'updateMethodFilter' in filter && { updateMethodFilter: filter.updateMethodFilter },\n    ...'groupHostFilter' in filter && { groupHostFilter: filter.groupHostFilter }\n});\n\nexport async function getEntities(items, {\n    controller,\n    hasItems,\n    filters,\n    per_page: perPage,\n    page,\n    orderBy,\n    orderDirection,\n    fields = { system_profile: ['operating_system', /* needed by inventory groups */ 'system_update_method'] },\n    ...options\n}, showTags) {\n\n    if (hasItems && items?.length > 0) {\n        let data = await hosts.apiHostGetHostById(\n            items,\n            undefined,\n            perPage,\n            page,\n            orderBy,\n            orderDirection,\n            undefined,\n            undefined,\n            { cancelToken: controller && controller.token }\n        );\n\n        if (fields && Object.keys(fields).length) {\n            try {\n                const result = await hosts.apiHostGetHostSystemProfileById(\n                    items,\n                    perPage,\n                    undefined,\n                    undefined,\n                    undefined,\n                    undefined,\n                    undefined,\n                    {\n                        cancelToken: controller && controller.token,\n                        query: generateFilter(fields, 'fields')\n                    }\n                );\n\n                data = {\n                    ...data,\n                    results: mergeArraysByKey([\n                        data?.results,\n                        result?.results || []\n                    ], 'id')\n                };\n            } catch (e) {\n                console.error(e); // eslint-disable-line\n            }\n        }\n\n        data = showTags ? await mapTags(data) : data;\n\n        data = {\n            ...data,\n            filters,\n            results: data.results.map(result => mapData({\n                ...result,\n                display_name: result.display_name || result.fqdn || result.id\n            }))\n        };\n\n        return data;\n    } else if (!hasItems) {\n        return hosts.apiHostGetHostList(\n            undefined,\n            undefined,\n            filters.hostnameOrId,\n            undefined,\n            undefined,\n            undefined,\n            undefined,\n            perPage,\n            page,\n            orderBy,\n            orderDirection,\n            filters.staleFilter,\n            [\n                ...constructTags(filters?.tagFilters),\n                ...options?.globalFilter?.tags || []\n            ],\n            filters?.registeredWithFilter,\n            undefined,\n            undefined,\n            {\n                cancelToken: controller && controller.token,\n                query: {\n                    ...(options?.globalFilter?.filter && generateFilter(options.globalFilter.filter)),\n                    ...(options.filter && Object.keys(options.filter).length && generateFilter(options.filter)),\n                    ...(calculateSystemProfile(filters)),\n                    ...(fields && Object.keys(fields).length && generateFilter(fields, 'fields')),\n                    ...filters?.lastSeenFilter?.updatedStart && { updated_start: filters.lastSeenFilter.updatedStart },\n                    ...filters?.lastSeenFilter?.updatedEnd && { updated_end: filters.lastSeenFilter.updatedEnd }\n                }\n            }\n        )\n        .then((data) => showTags ? mapTags(data, { orderBy, orderDirection }) : data)\n        .then(({ results = [], ...data } = {}) => ({\n            ...data,\n            filters,\n            results: results.map(result => mapData({\n                ...result,\n                display_name: result.display_name || result.fqdn || result.id\n            }))\n        }));\n    }\n\n    return {\n        page,\n        per_page: perPage,\n        results: []\n    };\n}\n\nexport function getTags(systemId, search, { pagination } = { pagination: {} }) {\n    return hosts.apiHostGetHostTags(\n        systemId,\n        pagination.perPage || 10,\n        pagination.page || 1,\n        undefined,\n        undefined,\n        search\n    );\n}\n\nexport function getAllTags(search, pagination = {}) {\n    return tags.apiTagGetTags(\n        [],\n        'tag',\n        'ASC',\n        pagination.perPage || 10,\n        pagination.page || 1,\n        //TODO: ask the backend to return all tags by default.\n        allStaleFilters,\n        search,\n        undefined,\n        undefined,\n        undefined,\n        undefined,\n        undefined,\n        undefined,\n        undefined,\n        undefined,\n        undefined\n    );\n}\n\nexport function getOperatingSystems(params = []) {\n    return systemProfile.apiSystemProfileGetOperatingSystem(...params);\n}\n","import instance from '@redhat-cloud-services/frontend-components-utilities/interceptors';\nexport const systemIssuesInstance = instance;\n\nexport const cves = async (systemId) => {\n    try {\n        const [low, moderate, important, critical] = await Promise.all([2, 4, 5, 7].map((impact) => (\n            instance.get(\n                `/api/vulnerability//v1/systems/${systemId}/cves?page=1&page_size=1&impact=${impact}`\n            )\n        )));\n        return { low, moderate, important, critical };\n    } catch (_e) {\n        return {};\n    }\n};\n\nexport const patch = async (systemId) => {\n    try {\n        return await instance.get(`/api/patch/v1/systems/${systemId}`);\n    } catch (_e) {\n        return {};\n    }\n};\n\nexport const advisor = async (systemId) => {\n    try {\n        return await instance.get(`/api/insights/v1/system/${systemId}/reports/`);\n    } catch (_e) {\n        return {};\n    }\n};\n\nexport const compliance = async (systemId) => {\n    const query = `query System($systemId: String!) {\n        system(id: $systemId) {\n            id\n            name\n            profiles {\n                id\n                name\n                refId\n                compliant\n                rulesFailed\n                rulesPassed\n                lastScanned\n                score\n                __typename\n            }\n            __typename\n        }\n    }`;\n    try {\n        return await instance.post('/api/compliance/graphql', {\n            operationName: 'System',\n            query,\n            variables: {\n                systemId\n            }\n        });\n    } catch (_e) {\n        return {};\n    }\n};\n","import { instance } from '@redhat-cloud-services/frontend-components-utilities/interceptors/interceptors';\nimport { INVENTORY_API_BASE } from '../../../api';\nimport { TABLE_DEFAULT_PAGINATION } from '../../../constants';\nimport PropTypes from 'prop-types';\nimport fixtureGroups from '../../../../cypress/fixtures/groups.json';\nimport fixtureGroupsDetails from '../../../../cypress/fixtures/groups/Ba8B79ab5adC8E41e255D5f8aDb8f1F3.json';\n\n// eslint-disable-next-line camelcase\nexport const getGroups = (search = {}, pagination = { page: 1, per_page: TABLE_DEFAULT_PAGINATION }) => {\n    if (window.Cypress) {\n        const parameters = new URLSearchParams({\n            ...search,\n            ...pagination\n        }).toString();\n\n        return instance.get(`${INVENTORY_API_BASE}/groups?${parameters}`);\n    }\n\n    // FIXME: remove mock data when API is implemented\n    return Promise.resolve(fixtureGroups);\n};\n\nexport const createGroup = (payload) => {\n    return instance.post(`${INVENTORY_API_BASE}/groups`, {\n        name: payload.name,\n        // eslint-disable-next-line camelcase\n        host_ids: []\n    });\n};\n\nexport const validateGroupName = (name) => {\n    if (window.Cypress) {\n        return instance.get(`${INVENTORY_API_BASE}/groups`)\n        .then((resp) => resp?.results.some((group) => group.name === name));\n    }\n\n    // FIXME: remove mock data when API is implemented\n    return Promise.resolve(fixtureGroups).then((resp) => resp?.results.some((group) => group.name === name));\n};\n\nexport const getGroupDetail = (groupId) => {\n    if (window.Cypress) {\n        return instance.get(`${INVENTORY_API_BASE}/groups/${groupId}`);\n    }\n\n    // FIXME: remove mock data when API is implemented\n    return Promise.resolve(fixtureGroupsDetails);\n};\n\nexport const updateGroupById = (id, payload) => {\n    return instance.patch(`${INVENTORY_API_BASE}/groups/${id}`, {\n        name: payload.name\n    });\n};\n\nexport const deleteGroupsById = (ids = []) => {\n    return instance.delete(`${INVENTORY_API_BASE}/groups/${ids.join(',')}`);\n\n};\n\ngetGroups.propTypes = {\n    search: PropTypes.shape({\n    // eslint-disable-next-line camelcase\n        hostname_or_id: PropTypes.string\n    }),\n    pagination: PropTypes.shape({\n        perPage: PropTypes.number,\n        page: PropTypes.number\n    })\n};\n\ngetGroupDetail.propTypes = {\n    groupId: PropTypes.string.isRequired\n};\n","import PropTypes from 'prop-types';\nimport { RHCD_FILTER_KEY, UPDATE_METHOD_KEY, HOST_GROUP_CHIP } from './Utilities/constants';\n\nexport const tagsMapper = (acc, curr) => {\n    let [namespace, keyValue] = curr.split('/');\n    if (!keyValue) {\n        keyValue = namespace;\n        namespace = null;\n    }\n\n    const [key, value = null] = keyValue.split('=');\n    const currTagKey = acc.findIndex(({ category }) => category === namespace);\n    const currTag = acc[currTagKey] || {\n        category: namespace,\n        key: namespace,\n        type: 'tags',\n        values: []\n    };\n    currTag.values.push({\n        name: `${key}${value ? `=${value}` : ''}`,\n        key: `${key}${value ? `=${value}` : ''}`,\n        tagKey: key,\n        value,\n        group: {\n            label: namespace,\n            value: namespace,\n            type: 'checkbox'\n        }\n    });\n    if (!acc[currTagKey]) {\n        acc.push(currTag);\n    }\n\n    return acc;\n};\n\nexport const prepareRows = (rows = [], pagination = {}) => (\n    rows\n    .slice((pagination.page - 1) * pagination.perPage, pagination.page * pagination.perPage)\n);\n\nexport const isDate = (date) => {\n    return !(isNaN(date) && isNaN(Date.parse(date)));\n};\n\nexport const filterRows = (rows = [], activeFilters = {}) => (\n    rows\n    .filter(row => (\n        Object.values(activeFilters).length === 0 ||\n        Object.values(activeFilters)\n        .every(\n            filter => {\n                const rowValue = row[filter.key] && (row[filter.key].sortValue || row[filter.key]);\n                return rowValue && (\n                    Array.isArray(filter.value) ?\n                        filter.value.includes(rowValue) :\n                        rowValue.toLocaleLowerCase().indexOf(filter.value.toLocaleLowerCase()) !== -1\n                );\n            }\n        )\n    ))\n);\n\nexport const generateFilters = (cells = [], filters = [], activeFilters = {}, onChange = () => undefined) => (\n    filters.map((filter, key) => {\n        const activeKey = filter.index || key;\n        const activeLabel = cells[activeKey] && (cells[activeKey].title || cells[activeKey]);\n        return ({\n            value: String(activeKey),\n            label: activeLabel,\n            type: filter.type || 'text',\n            filterValues: {\n                id: filter.id || `${activeLabel}-${activeKey}`,\n                onChange: (_e, newFilter) => onChange(activeKey, newFilter, activeLabel),\n                value: activeFilters[activeKey] && activeFilters[activeKey].value,\n                ...filter.options && { items: filter.options }\n            }\n        });\n    })\n);\n\nexport const onDeleteFilter = (deleted = {}, deleteAll = false, activeFilters = {}) => {\n    if (deleteAll) {\n        return {};\n    } else {\n        const { [deleted.key]: workingItem, ...filtersRest } = activeFilters;\n        const newValue = workingItem && Array.isArray(workingItem.value) &&\n            workingItem.value.filter(item => !deleted.chips.find(({ name }) => name === item));\n        const newFilter = workingItem && Array.isArray(workingItem.value) && newValue && newValue.length > 0 ? {\n            [deleted.key]: {\n                ...workingItem,\n                value: newValue\n            }\n        } : {};\n        return {\n            ...filtersRest,\n            ...newFilter\n        };\n    }\n};\n\nexport const extraShape = PropTypes.shape({\n    title: PropTypes.node,\n    value: PropTypes.node,\n    singular: PropTypes.node,\n    plural: PropTypes.node,\n    onClick: PropTypes.func\n});\n\nexport const INVENTORY_WRITE_PERMISSIONS = [\n    'inventory:*:*',\n    'inventory:hosts:write',\n    'inventory:*:write'\n];\n\nexport const getSearchParams = () => {\n    const searchParams = new URLSearchParams(location.search);\n    const status = searchParams.getAll('status');\n    const source = searchParams.getAll('source');\n    const filterbyName = searchParams.getAll('hostname_or_id');\n    const tagsFilter = searchParams.getAll('tags')?.[0]?.split?.(',').reduce?.(tagsMapper, []);\n    const operatingSystem = searchParams.getAll('operating_system');\n    const rhcdFilter = searchParams.getAll(RHCD_FILTER_KEY);\n    const updateMethodFilter = searchParams.getAll(UPDATE_METHOD_KEY);\n    const groupHostsFilter = searchParams.getAll(HOST_GROUP_CHIP);\n    const page = searchParams.getAll('page');\n    const perPage = searchParams.getAll('per_page');\n    // const lastSeenFilter = searchParams.getAll('last_seen');\n    return { status, source, tagsFilter, filterbyName, operatingSystem, rhcdFilter, updateMethodFilter,\n        page, perPage, groupHostsFilter };\n};\n\nexport const TABLE_DEFAULT_PAGINATION = 50; // from UX table audit\n","import keyBy from 'lodash/keyBy';\n\nconst makeActions = (actions) => {\n    return actions?.reduce?.((acc, curr) => ({\n        ...acc,\n        [curr]: curr,\n        [`${curr}_PENDING`]: `${curr}_PENDING`,\n        [`${curr}_FULFILLED`]: `${curr}_FULFILLED`,\n        [`${curr}_REJECTED`]: `${curr}_REJECTED`\n    }), {});\n};\n\nconst actions = [\n    'ALERT_ADD',\n    'ALERT_DISMISS',\n    'REMOVE_ENTITY'\n];\n\nexport const asyncActions = [\n    'GET_ENTITIES',\n    'GET_ENTITY',\n    'UPDATE_DISPLAY_NAME',\n    'LOAD_WRITE_PERMISSIONS',\n    'LOAD_SYSTEM_PROFILE',\n    'SET_ANSIBLE_HOST'\n];\n\nexport const asyncInventory = [\n    'LOAD_ENTITIES',\n    'LOAD_ENTITY',\n    'REMOVE_ENTITY',\n    'LOAD_SYSTEM_PROFILE',\n    'SET_DISPLAY_NAME',\n    'SET_ANSIBLE_HOST',\n    'LOAD_TAGS',\n    'ALL_TAGS',\n    'OPERATING_SYSTEMS',\n    'GROUPS',\n    'GROUP_DETAIL'\n];\n\nexport const systemIssues = [\n    'LOAD_ADVISOR_RECOMMENDATIONS',\n    'LOAD_APPLICABLE_CVES',\n    'LOAD_APPLICABLE_ADVISORIES',\n    'LOAD_COMPLIANCE_POLICIES'\n];\n\nexport const ACTION_TYPES = { ...keyBy(actions, k => k), ...makeActions(asyncActions), ...makeActions(asyncInventory) };\nexport const INVENTORY_ACTION_TYPES = makeActions(asyncInventory);\nexport const SYSTEM_ISSUE_TYPES = makeActions(systemIssues);\n\nexport const CLEAR_NOTIFICATIONS = '@@INSIGHTS-CORE/NOTIFICATIONS/CLEAR_NOTIFICATIONS';\nexport const SELECT_ENTITY = 'SELECT_ENTITY';\nexport const SET_INVENTORY_FILTER = 'SET_INVENTORY_FILTER';\nexport const SET_PAGINATION = 'SET_PAGINATION';\nexport const SET_DISPLAY_NAME = 'SET_DISPLAY_NAME';\nexport const SET_ANSIBLE_HOST = 'SET_ANSIBLE_HOST';\n\nexport const UPDATE_ENTITIES = 'UPDATE_ENTITIES';\nexport const CHANGE_SORT = 'CHANGE_SORT';\nexport const FILTER_ENTITIES = 'FILTER_ENTITIES';\nexport const SHOW_ENTITIES = 'SHOW_ENTITIES';\nexport const FILTER_SELECT = 'FILTER_SELECT';\nexport const ENTITIES_LOADING = 'ENTITIES_LOADING';\nexport const CLEAR_FILTERS = 'CLEAR_FILTERS';\nexport const TOGGLE_TAG_MODAL = 'TOGGLE_TAG_MODAL';\nexport const CONFIG_CHANGED = 'CONFIG_CHANGED';\nexport const TOGGLE_DRAWER = 'TOGGLE_INVENTORY_DRAWER';\n","import { SYSTEM_ISSUE_TYPES } from './action-types';\nimport {\n    cves,\n    compliance,\n    advisor,\n    patch\n} from '../api';\n\nexport const getAdvisorData = (systemId) => ({\n    type: SYSTEM_ISSUE_TYPES.LOAD_ADVISOR_RECOMMENDATIONS,\n    payload: advisor(systemId)\n});\n\nexport const getVulnData = (systemId) => ({\n    type: SYSTEM_ISSUE_TYPES.LOAD_APPLICABLE_CVES,\n    payload: cves(systemId)\n});\n\nexport const getPatchData = (systemId) => ({\n    type: SYSTEM_ISSUE_TYPES.LOAD_APPLICABLE_ADVISORIES,\n    payload: patch(systemId)\n});\n\nexport const getComplianceData = (systemId) => ({\n    type: SYSTEM_ISSUE_TYPES.LOAD_COMPLIANCE_POLICIES,\n    payload: compliance(systemId)\n});\n","import { ACTION_TYPES, CLEAR_NOTIFICATIONS, SET_INVENTORY_FILTER, SET_PAGINATION } from './action-types';\nimport { hosts, getEntitySystemProfile } from '../api';\nexport * from './system-issues-actions';\nexport * from './inventory-actions';\n\nexport const deleteEntity = (systems, displayName) => ({\n    type: ACTION_TYPES.REMOVE_ENTITY,\n    payload: hosts.apiHostDeleteById(systems),\n    meta: {\n        notifications: {\n            fulfilled: {\n                variant: 'success',\n                title: 'Delete operation finished',\n                description: `${displayName} has been successfully removed.`,\n                dismissable: true\n            }\n        },\n        systems\n    }\n});\n\nexport const setFilter = (filtersList) => ({\n    type: SET_INVENTORY_FILTER,\n    payload: {\n        filtersList\n    }\n});\n\nexport const clearNotifications = () => {\n    return ({\n        type: CLEAR_NOTIFICATIONS\n    });\n};\n\nexport const editDisplayName = (id, value, origValue) => ({\n    type: ACTION_TYPES.UPDATE_DISPLAY_NAME,\n    payload: hosts.apiHostPatchById([id], { display_name: value }), // eslint-disable-line camelcase\n    meta: {\n        id,\n        value,\n        origValue,\n        notifications: {\n            fulfilled: {\n                variant: 'success',\n                title: `Display name for entity with ID ${id} has been changed to ${value}`,\n                dismissable: true\n            }\n        }\n    }\n});\n\nexport const setPagination = (page, perPage) => ({\n    type: SET_PAGINATION,\n    payload: {\n        page, perPage\n    }\n});\n\nexport const systemProfile = (itemId) => ({\n    type: ACTION_TYPES.LOAD_SYSTEM_PROFILE,\n    payload: getEntitySystemProfile(itemId, {})\n});\n\nexport const editAnsibleHost = (id, value, origValue) => ({\n    type: ACTION_TYPES.SET_ANSIBLE_HOST,\n    payload: hosts.apiHostPatchById([id], { ansible_host: value }), // eslint-disable-line camelcase\n    meta: {\n        id,\n        value,\n        origValue,\n        notifications: {\n            fulfilled: {\n                variant: 'success',\n                title: 'Ansible hostname has been updated',\n                dismissable: true\n            }\n        }\n    }\n});\n","import {\n    ACTION_TYPES,\n    SELECT_ENTITY,\n    CHANGE_SORT,\n    FILTER_ENTITIES,\n    FILTER_SELECT,\n    UPDATE_ENTITIES,\n    ENTITIES_LOADING,\n    CLEAR_FILTERS,\n    TOGGLE_TAG_MODAL,\n    CONFIG_CHANGED,\n    TOGGLE_DRAWER\n} from './action-types';\nimport {\n    getEntities as defaultGetEntities,\n    getEntitySystemProfile,\n    hosts,\n    getAllTags as defaultGetAllTags,\n    getTags,\n    filtersReducer,\n    getOperatingSystems\n} from '../api';\nimport { getGroupDetail, getGroups } from '../components/InventoryGroups/utils/api';\n\nexport const loadEntities = (items = [], { filters, ...config }, { showTags } = {}, getEntities = defaultGetEntities) => {\n    const itemIds = items.reduce((acc, curr) => (\n        [\n            ...acc,\n            curr && typeof curr === 'string' ? curr : curr.id\n        ]\n    ), []).filter(Boolean);\n\n    const isFilterDisabled = (name) => config.hideFilters?.[name] ||\n    (config.hideFilters?.all && config.hideFilters?.[name] !== false);\n\n    const updatedFilters = filters ? filters.reduce(filtersReducer, {\n        ...filters.length === 0 && { registeredWithFilter: [] },\n        ...(isFilterDisabled('stale') && { staleFilter: undefined }),\n        ...(isFilterDisabled('registeredWith') && { registeredWithFilter: undefined }),\n        ...(isFilterDisabled('operating_system') && { osFilter: undefined }),\n        ...(isFilterDisabled('host_group')) && { groupHostFilter: undefined }\n    }) : {\n        ...(isFilterDisabled('stale') && { staleFilter: undefined }),\n        ...(isFilterDisabled('last_seen') && { lastSeenFilter: undefined }),\n        ...(isFilterDisabled('registeredWith') && { registeredWithFilter: undefined }),\n        ...(isFilterDisabled('operating_system') && { osFilter: undefined }),\n        ...(isFilterDisabled('host_group')) && { groupHostFilter: undefined }\n    };\n\n    const orderBy = config.orderBy || 'updated';\n    const orderDirection = config.orderDirection || 'DESC';\n\n    const lastDateRequest = Date.now();\n\n    return {\n        type: ACTION_TYPES.LOAD_ENTITIES,\n        payload: getEntities(itemIds, {\n            filters: updatedFilters,\n            ...config,\n            orderBy,\n            orderDirection\n        }, showTags, defaultGetEntities).then(({ results, ...data }) => ({\n            ...data,\n            filters,\n            sortBy: { key: orderBy, direction: orderDirection },\n            results: items.length > 0 ? items.map((item) => ({\n                ...item.id ? item : { id: item },\n                ...results.find(({ id }) => id === item || id === item.id) || {}\n            })) : results,\n            page: config.page || (data?.page),\n            // eslint-disable-next-line camelcase\n            per_page: config.per_page || (data?.per_page),\n            hideFilters: config.hideFilters\n        })),\n        meta: {\n            showTags,\n            lastDateRequest\n        }\n    };\n};\n\nexport const updateEntities = (items = []) => ({\n    type: UPDATE_ENTITIES,\n    payload: {\n        results: items\n    }\n});\n\nexport const filterSelect = (selectedItem) => ({\n    type: FILTER_SELECT,\n    payload: selectedItem\n});\n\nexport const loadEntity = (id, config, { showTags }) => ({\n    type: ACTION_TYPES.LOAD_ENTITY,\n    payload: defaultGetEntities(id, config, showTags),\n    meta: {\n        showTags\n    }\n});\n\nexport const selectEntity = (id, selected) => ({\n    type: SELECT_ENTITY,\n    payload: { id, selected }\n});\n\nexport const setSort = (data) => ({\n    type: CHANGE_SORT,\n    payload: data\n});\n\nexport const filterEntities = (key, filterString) => ({\n    type: FILTER_ENTITIES,\n    payload: { key, filterString }\n});\n\nexport const entitiesLoading = (isLoading = true) => ({\n    type: ENTITIES_LOADING,\n    payload: { isLoading }\n});\n\nexport const clearFilters = () => ({\n    type: CLEAR_FILTERS\n});\n\nexport const systemProfile = (itemId) => ({\n    type: ACTION_TYPES.LOAD_SYSTEM_PROFILE,\n    payload: getEntitySystemProfile(itemId, {})\n});\n\nexport const editDisplayName = (id, value) => ({\n    type: ACTION_TYPES.SET_DISPLAY_NAME,\n    payload: hosts.apiHostPatchHost(id, { display_name: value }), // eslint-disable-line camelcase\n    meta: {\n        notifications: {\n            fulfilled: {\n                variant: 'success',\n                title: 'Display name has been updated',\n                dismissable: true\n            }\n        }\n    }\n});\n\nexport const editAnsibleHost = (id, value) => ({\n    type: ACTION_TYPES.SET_ANSIBLE_HOST,\n    payload: hosts.apiHostPatchHost(id, { ansible_host: value }), // eslint-disable-line camelcase\n    meta: {\n        notifications: {\n            fulfilled: {\n                variant: 'success',\n                title: 'Ansible hostname has been updated',\n                dismissable: true\n            }\n        }\n    }\n});\n\nexport const loadTags = (systemId, search, options, count) => ({\n    type: ACTION_TYPES.LOAD_TAGS,\n    payload: getTags(systemId, search, options),\n    meta: {\n        tagsCount: count,\n        systemId\n    }\n});\n\nexport const toggleTagModal = (isOpen) => ({\n    type: TOGGLE_TAG_MODAL,\n    payload: { isOpen }\n});\n\nexport const fetchAllTags = (search, pagination, getTags = defaultGetAllTags) => ({\n    type: ACTION_TYPES.ALL_TAGS,\n    payload: getTags(search, pagination),\n    meta: { lastDateRequestTags: Date.now() }\n});\n\nexport const fetchGroups = (search, pagination) => ({\n    type: ACTION_TYPES.GROUPS,\n    payload: getGroups(search, pagination)\n});\n\nexport const fetchGroupDetail = (groupId) => ({\n    type: ACTION_TYPES.GROUP_DETAIL,\n    payload: getGroupDetail(groupId)\n});\n\nexport const fetchOperatingSystems = (params = []) => ({\n    type: ACTION_TYPES.OPERATING_SYSTEMS,\n    payload: getOperatingSystems(params)\n});\n\nexport const deleteEntity = (systems, displayName) => ({\n    type: ACTION_TYPES.REMOVE_ENTITY,\n    payload: hosts.apiHostDeleteById(systems),\n    meta: {\n        notifications: {\n            fulfilled: {\n                variant: 'success',\n                title: 'Delete operation finished',\n                description: `${displayName} has been successfully removed.`,\n                dismissable: true\n            }\n        },\n        systems\n    }\n});\n\nexport const configChanged = (config) => ({\n    type: CONFIG_CHANGED,\n    payload: config\n});\n\nexport const toggleDrawer = (isOpened) => ({\n    type: TOGGLE_DRAWER,\n    payload: { isOpened }\n});\n"],"names":["DeleteModal","systemToRemove","handleModalToggle","isModalOpen","currentSytems","onConfirm","systemLabel","Array","isArray","length","display_name","variant","title","className","ouiaId","isOpen","onClose","appendTo","document","getElementsByClassName","body","hasGutter","size","isFilled","location","host","onClick","ActiveSystemProp","PropTypes","id","displayName","propTypes","defaultProps","RenderWrapper","Component","cmp","isRbacEnabled","inventoryRef","store","props","hasAccess","usePermissionsWithContext","ref","customRender","TEXT_FILTER","TEXTUAL_CHIP","TAG_CHIP","STALE_CHIP","REGISTERED_CHIP","OS_CHIP","RHCD_FILTER_KEY","UPDATE_METHOD_KEY","LAST_SEEN_CHIP","HOST_GROUP_CHIP","subtractDate","days","date","Date","setDate","getDate","toISOString","staleness","label","value","currentDate","lastSeenItems","updatedStart","updatedEnd","mark","registered","idName","idValue","InventoryContext","createContext","rhcdOptions","updateMethodOptions","filterToGroup","filter","valuesKey","reduce","accGroup","group","key","acc","curr","isSelected","item","meta","tag","tagKey","arrayToSelection","selected","cells","namespace","reduceFilters","filters","oneFilter","textFilter","tagFilters","foundKey","find","Object","keys","includes","reloadWrapper","event","callback","payload","then","data","isEmpty","check","generateFilter","status","source","tagsFilter","filterbyName","operatingSystem","rhcdFilter","updateMethodFilter","hostGroup","lastSeenFilter","staleFilter","registeredWithFilter","osFilter","hostGroupFilter","Boolean","useWritePermissions","INVENTORY_WRITE_PERMISSIONS","allStaleFilters","TagsModal","filterTagsBy","onToggleModal","onApply","getTags","dispatch","useDispatch","useState","filterBy","setFilterBy","setSelected","perPage","page","statePagination","setStatePagination","showTagDialog","useSelector","entities","entityDetails","pagination","activeSystemTag","entity","allTagsPagination","shallowEqual","loaded","tagModalLoaded","tags","activeTags","values","some","val","slice","allTags","flatten","map","tagsCount","allTagsTotal","useEffect","fetchTags","fetchAllTags","debouncedFetch","useCallback","debounce","TagModal","tableProps","canSelectAll","count","rows","width","toggleModal","toggleTagModal","placeholder","filterValues","onChange","_e","onUpdateData","columns","transforms","cellWidth","onSelect","bulkSelect","customFilters","INVENTORY_API_BASE","hosts","HostsApi","undefined","instance","TagsApi","systemProfile","SystemProfileApi","getEntitySystemProfile","apiHostGetHostSystemProfileById","mapData","facts","rawFacts","flatMap","oneFact","os_release","release","fqdn","mapTags","results","orderBy","orderDirection","apiHostGetHostTags","per_page","row","catch","constructTags","category","tagValue","calculateSystemProfile","osFilterValues","majorOsVersion","operating_system","RHEL","version","eq","system_profile","filtersReducer","hostnameOrId","groupHostFilter","getEntities","items","showTags","controller","hasItems","fields","options","apiHostGetHostById","cancelToken","token","query","result","mergeArraysByKey","console","error","apiHostGetHostList","globalFilter","updated_start","updated_end","systemId","search","getAllTags","apiTagGetTags","getOperatingSystems","params","apiSystemProfileGetOperatingSystem","systemIssuesInstance","cves","Promise","all","impact","low","moderate","important","critical","patch","advisor","compliance","operationName","variables","getGroups","TABLE_DEFAULT_PAGINATION","window","Cypress","parameters","URLSearchParams","toString","resolve","fixtureGroups","createGroup","name","host_ids","validateGroupName","resp","getGroupDetail","groupId","fixtureGroupsDetails","updateGroupById","deleteGroupsById","ids","join","hostname_or_id","tagsMapper","split","keyValue","currTagKey","findIndex","currTag","type","push","prepareRows","isDate","isNaN","parse","filterRows","activeFilters","every","rowValue","sortValue","toLocaleLowerCase","indexOf","generateFilters","activeKey","index","activeLabel","String","newFilter","onDeleteFilter","deleted","deleteAll","workingItem","filtersRest","newValue","chips","extraShape","singular","plural","getSearchParams","searchParams","getAll","groupHostsFilter","makeActions","actions","asyncActions","asyncInventory","systemIssues","ACTION_TYPES","keyBy","k","INVENTORY_ACTION_TYPES","SYSTEM_ISSUE_TYPES","CLEAR_NOTIFICATIONS","SELECT_ENTITY","SET_INVENTORY_FILTER","SET_PAGINATION","SET_DISPLAY_NAME","SET_ANSIBLE_HOST","UPDATE_ENTITIES","CHANGE_SORT","FILTER_ENTITIES","SHOW_ENTITIES","FILTER_SELECT","ENTITIES_LOADING","CLEAR_FILTERS","TOGGLE_TAG_MODAL","CONFIG_CHANGED","TOGGLE_DRAWER","getAdvisorData","getVulnData","getPatchData","getComplianceData","deleteEntity","systems","notifications","fulfilled","description","dismissable","setFilter","filtersList","clearNotifications","editDisplayName","origValue","setPagination","itemId","editAnsibleHost","ansible_host","loadEntities","defaultGetEntities","config","itemIds","isFilterDisabled","hideFilters","updatedFilters","lastDateRequest","now","sortBy","direction","updateEntities","filterSelect","selectedItem","loadEntity","selectEntity","setSort","filterEntities","filterString","entitiesLoading","isLoading","clearFilters","loadTags","defaultGetAllTags","lastDateRequestTags","fetchGroups","fetchGroupDetail","fetchOperatingSystems","configChanged","toggleDrawer","isOpened"],"sourceRoot":""}