{"version":3,"file":"js/9980.553e07a289327b296aea.js","mappings":"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","sources":["webpack:///./src/Utilities/DeleteModal.js","webpack:///./src/Utilities/TagWithDialog.js","webpack:///./src/Utilities/Wrapper.js","webpack:///./src/Utilities/constants.js","webpack:///./src/Utilities/TagsModal.js","webpack:///./src/Utilities/sharedFunctions.js","webpack:///./src/api/api.js","webpack:///./src/api/systemIssues.js","webpack:///./src/components/InventoryGroups/utils/api.js","webpack:///./src/constants.js","webpack:///./src/store/action-types.js","webpack:///./src/components/InventoryTable/utils/api.js","webpack:///./src/store/system-issues-actions.js","webpack:///./src/store/actions.js","webpack:///./src/store/inventory-actions.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  ClipboardCopy,\n  Level,\n  LevelItem,\n  Modal,\n  Split,\n  SplitItem,\n  Stack,\n  StackItem,\n} from '@patternfly/react-core';\n\nimport ExclamationTriangleIcon from '@patternfly/react-icons/dist/js/icons/exclamation-triangle-icon';\n\nconst DeleteModal = ({\n  handleModalToggle,\n  isModalOpen,\n  currentSytems,\n  onConfirm,\n}) => {\n  let systemToRemove;\n  let systemLabel = 'system';\n  if (Array.isArray(currentSytems)) {\n    systemToRemove =\n      currentSytems.length === 1\n        ? currentSytems[0].display_name\n        : `${currentSytems.length} systems`;\n    systemLabel = currentSytems.length === 1 ? systemLabel : 'systems';\n  } else {\n    systemToRemove = currentSytems.display_name;\n  }\n\n  return (\n    <Modal\n      variant=\"small\"\n      title=\"Remove from inventory\"\n      className=\"ins-c-inventory__table--remove sentry-mask data-hj-suppress\"\n      ouiaId=\"inventory-delete-modal\"\n      isOpen={isModalOpen}\n      onClose={() => handleModalToggle(false)}\n      appendTo={\n        document.getElementsByClassName('inventory')[0] || document.body\n      }\n    >\n      <Split hasGutter>\n        <SplitItem>\n          <ExclamationTriangleIcon size=\"xl\" className=\"ins-m-alert\" />\n        </SplitItem>\n        <SplitItem isFilled>\n          <Stack hasGutter>\n            <StackItem>\n              {systemToRemove} will be removed from all {location.host}{' '}\n              applications and services. You need to re-register the{' '}\n              {systemLabel} to add it back to your inventory.\n            </StackItem>\n            <StackItem>\n              To disable the daily upload for this {systemLabel}, use the\n              following command:\n            </StackItem>\n            <StackItem>\n              <ClipboardCopy>insights-client --unregister</ClipboardCopy>\n            </StackItem>\n          </Stack>\n        </SplitItem>\n      </Split>\n      <Level hasGutter>\n        <LevelItem>\n          <Button\n            variant=\"danger\"\n            ouiaId=\"confirm-inventory-delete\"\n            onClick={onConfirm}\n          >\n            Remove\n          </Button>\n          <Button\n            variant=\"link\"\n            ouiaId=\"cancel-inventory-delete\"\n            onClick={() => handleModalToggle(false)}\n          >\n            Cancel\n          </Button>\n        </LevelItem>\n      </Level>\n    </Modal>\n  );\n};\n\nconst ActiveSystemProp = PropTypes.shape({\n  id: PropTypes.string,\n  displayName: PropTypes.string,\n});\n\nDeleteModal.propTypes = {\n  isModalOpen: PropTypes.bool,\n  currentSytems: PropTypes.oneOfType([\n    ActiveSystemProp,\n    PropTypes.arrayOf(ActiveSystemProp),\n  ]),\n  handleModalToggle: PropTypes.func,\n  onConfirm: PropTypes.func,\n};\n\nDeleteModal.defaultProps = {\n  isModalOpen: false,\n  currentSytems: {},\n  handleModalToggle: () => undefined,\n  onConfirm: () => undefined,\n};\n\nexport default DeleteModal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { TagCount } from '@redhat-cloud-services/frontend-components/TagCount';\nimport { loadTags, toggleTagModal } from '../store/actions';\n\nconst TagWithDialog = ({ count, loadTags, systemId }) => (\n  <span\n    onClick={(e) => e.stopPropagation()}\n    className=\"ins-c-inventory__list-tags\"\n    data-ouia-component-id={`${systemId}-tag-button`}\n  >\n    <TagCount count={count} onTagClick={() => loadTags(systemId, count)} />\n  </span>\n);\n\nTagWithDialog.propTypes = {\n  count: PropTypes.number,\n  loadTags: PropTypes.func,\n  systemId: PropTypes.string,\n};\n\nconst dispatchToProps = (dispatch) => ({\n  loadTags: (systemId, count) => {\n    if (systemId) {\n      dispatch(toggleTagModal(true));\n      dispatch(loadTags(systemId, undefined, undefined, count));\n    }\n  },\n});\n\nexport default connect(() => ({}), dispatchToProps)(TagWithDialog);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { usePermissionsWithContext } from '@redhat-cloud-services/frontend-components-utilities/RBACHook';\n\nconst RenderWrapper = ({\n  cmp: Component,\n  isRbacEnabled,\n  inventoryRef,\n  store,\n  ...props\n}) => {\n  const { hasAccess } = usePermissionsWithContext([\n    'inventory:*:read',\n    'inventory:hosts:read',\n  ]);\n\n  return (\n    <Component\n      {...props}\n      {...(inventoryRef && {\n        ref: inventoryRef,\n      })}\n      isRbacEnabled={isRbacEnabled}\n      hasAccess={isRbacEnabled ? hasAccess : true}\n      store={store}\n    />\n  );\n};\n\nRenderWrapper.propTypes = {\n  cmp: PropTypes.any,\n  inventoryRef: PropTypes.any,\n  store: PropTypes.object,\n  customRender: PropTypes.bool,\n  isRbacEnabled: PropTypes.bool,\n};\n\nexport default RenderWrapper;\n","import { createContext } from 'react';\nimport { usePermissionsWithContext } from '@redhat-cloud-services/frontend-components-utilities/RBACHook';\nimport { INVENTORY_WRITE_PERMISSIONS } from '../constants';\n\nexport const TEXT_FILTER = 'hostname_or_id';\nexport const TEXTUAL_CHIP = 'textual';\nexport const TAG_CHIP = 'tags';\nexport const STALE_CHIP = 'staleness';\nexport const REGISTERED_CHIP = 'registered_with';\nexport const OS_CHIP = 'operating_system';\nexport const RHCD_FILTER_KEY = 'rhc_client_id';\nexport const UPDATE_METHOD_KEY = 'system_update_method';\nexport const LAST_SEEN_CHIP = 'last_seen';\nexport const HOST_GROUP_CHIP = 'group_name'; // use the same naming as for the back end parameter\n//REPORTERS\nexport const REPORTER_PUPTOO = 'puptoo';\nexport const REPORTER_RHSM_CONDUIT = 'rhsm-conduit';\nexport const REPORTER_RHSM_PROFILE_BRIDGE = 'rhsm-system-profile-bridge';\n//APP NAMES\nexport const APP_NAME_VULNERABILITY = 'vulnerabilities';\nexport const APP_NAME_ADVISOR = 'advisor';\nexport const APP_NAME_PATCH = 'patch';\n\nexport function subtractDate(days) {\n  const date = new Date();\n  date.setDate(date.getDate() - days);\n  return date.toISOString();\n}\n\nexport const staleness = [\n  { label: 'Fresh', value: 'fresh' },\n  { label: 'Stale', value: 'stale' },\n  { label: 'Stale warning', value: 'stale_warning' },\n  { label: 'Unknown', value: 'unknown' },\n];\n\nexport const currentDate = new Date().toISOString();\nexport const lastSeenItems = [\n  {\n    value: {\n      updatedStart: subtractDate(1),\n      updatedEnd: currentDate,\n      mark: 'last24',\n    },\n    label: 'Within the last 24 hours',\n  },\n  {\n    value: { updatedEnd: subtractDate(1), mark: '24more' },\n    label: 'More than 1 day ago',\n  },\n  {\n    value: { updatedEnd: subtractDate(7), mark: '7more' },\n    label: 'More than 7 days ago',\n  },\n  {\n    value: { updatedEnd: subtractDate(15), mark: '15more' },\n    label: 'More than 15 days ago',\n  },\n  {\n    value: { updatedEnd: subtractDate(30), mark: '30more' },\n    label: 'More than 30 days ago',\n  },\n  {\n    value: { mark: 'custom' },\n    label: 'Custom',\n  },\n];\nexport const registered = [\n  {\n    label: 'insights-client',\n    value: 'puptoo',\n    idName: 'Insights id',\n    idValue: 'insights_id',\n  },\n  {\n    label: 'subscription-manager',\n    value: 'rhsm-conduit',\n    idName: 'Subscription manager id',\n    idValue: 'subscription_manager_id',\n  },\n  { label: 'Satellite/Discovery', value: 'yupana' },\n  { label: 'insights-client not connected', value: '!puptoo' },\n];\nexport const InventoryContext = createContext({});\n\nexport const rhcdOptions = [\n  { label: 'Active', value: 'not_nil' },\n  { label: 'Inactive', value: 'nil' },\n];\n\nexport const updateMethodOptions = [\n  { label: 'yum', value: 'yum' },\n  { label: 'dnf', value: 'dnf' },\n  { label: 'rpm-ostree', value: 'rpm-ostree' },\n];\n\nexport function filterToGroup(filter = [], valuesKey = 'values') {\n  return filter.reduce(\n    (accGroup, group) => ({\n      ...accGroup,\n      [group.key]: group[valuesKey].reduce(\n        (acc, curr) => ({\n          ...acc,\n          [curr.key]: {\n            isSelected: true,\n            group: curr.group,\n            item: {\n              meta: {\n                tag: {\n                  key: curr.tagKey,\n                  value: curr.value,\n                },\n              },\n            },\n          },\n        }),\n        {}\n      ),\n    }),\n    {}\n  );\n}\n\nexport const arrayToSelection = (selected) =>\n  selected.reduce(\n    (acc, { cells: [key, value, namespace] }) => ({\n      ...acc,\n      [namespace]: {\n        ...acc[namespace?.title || namespace],\n        [key?.title || key]: {\n          isSelected: true,\n          group: {\n            value: namespace?.title || namespace,\n            label: namespace?.title || namespace,\n          },\n          item: {\n            value: key?.title || key,\n            meta: {\n              tag: { key: key?.title || key, value: value?.title || value },\n            },\n          },\n        },\n      },\n    }),\n    {}\n  );\n\nexport function reduceFilters(filters = []) {\n  return filters.reduce(\n    (acc, oneFilter) => {\n      if (oneFilter.value === TEXT_FILTER) {\n        return { ...acc, textFilter: oneFilter.filter };\n      } else if ('tagFilters' in oneFilter) {\n        return {\n          ...acc,\n          tagFilters: filterToGroup(oneFilter.tagFilters),\n        };\n      }\n\n      const foundKey = [\n        'staleFilter',\n        'registeredWithFilter',\n        'osFilter',\n        'rhcdFilter',\n        'updateMethodFilter',\n        'lastSeenFilter',\n        'hostGroupFilter',\n        '',\n      ].find((item) => Object.keys(oneFilter).includes(item));\n\n      return {\n        ...acc,\n        ...(foundKey && { [foundKey]: oneFilter[foundKey] }),\n      };\n    },\n    {\n      textFilter: '',\n      tagFilters: {},\n    }\n  );\n}\n\nexport const reloadWrapper = (event, callback) => {\n  event.payload.then((data) => {\n    callback();\n    return data;\n  });\n\n  return event;\n};\n\nexport const isEmpty = (check) => !check || check?.length === 0;\n\nexport const generateFilter = (\n  status,\n  source,\n  tagsFilter,\n  filterbyName,\n  operatingSystem,\n  rhcdFilter,\n  updateMethodFilter,\n  hostGroupFilter,\n  lastSeenFilter\n) =>\n  [\n    !isEmpty(status) && {\n      staleFilter: Array.isArray(status) ? status : [status],\n    },\n    !isEmpty(tagsFilter) && {\n      tagFilters: Array.isArray(tagsFilter) ? tagsFilter : [tagsFilter],\n    },\n    !isEmpty(source) && {\n      registeredWithFilter: Array.isArray(source) ? source : [source],\n    },\n    !isEmpty(filterbyName) && {\n      value: 'hostname_or_id',\n      filter: Array.isArray(filterbyName) ? filterbyName[0] : filterbyName,\n    },\n    (!isEmpty(status) || !isEmpty(tagsFilter) || !isEmpty(filterbyName)) &&\n      isEmpty(source) && {\n        registeredWithFilter: [],\n      },\n    (!isEmpty(source) || !isEmpty(tagsFilter) || !isEmpty(filterbyName)) &&\n      isEmpty(status) && {\n        staleFilter: [],\n      },\n    !isEmpty(operatingSystem) && {\n      osFilter: Array.isArray(operatingSystem)\n        ? operatingSystem\n        : [operatingSystem],\n    },\n    !isEmpty(rhcdFilter) && {\n      rhcdFilter: Array.isArray(rhcdFilter) ? rhcdFilter : [rhcdFilter],\n    },\n    !isEmpty(lastSeenFilter) && {\n      lastSeenFilter: Array.isArray(lastSeenFilter)\n        ? lastSeenItems.filter(\n            (item) => item.value.mark === lastSeenFilter[0]\n          )[0].value\n        : [lastSeenFilter],\n    },\n    !isEmpty(updateMethodFilter) && {\n      updateMethodFilter: Array.isArray(updateMethodFilter)\n        ? updateMethodFilter\n        : [updateMethodFilter],\n    },\n    !isEmpty(hostGroupFilter) && {\n      hostGroupFilter: Array.isArray(hostGroupFilter)\n        ? hostGroupFilter\n        : [hostGroupFilter],\n    },\n  ].filter(Boolean);\n\nexport const useWritePermissions = () => {\n  const { hasAccess } = usePermissionsWithContext(INVENTORY_WRITE_PERMISSIONS);\n\n  return hasAccess;\n};\n\nexport const allStaleFilters = ['fresh', 'stale', 'stale_warning', 'unknown'];\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { fetchAllTags, toggleTagModal } from '../store/actions';\nimport { TagModal } from '@redhat-cloud-services/frontend-components/TagModal';\nimport { cellWidth } from '@patternfly/react-table';\nimport debounce from 'lodash/debounce';\nimport flatten from 'lodash/flatten';\n\nconst TagsModal = ({ filterTagsBy, onToggleModal, onApply, getTags }) => {\n  const dispatch = useDispatch();\n  const [filterBy, setFilterBy] = useState('');\n  const [selected, setSelected] = useState([]);\n  const [statePagination, setStatePagination] = useState({\n    perPage: 10,\n    page: 1,\n  });\n\n  const showTagDialog = useSelector(\n    ({ entities, entityDetails }) => (entities || entityDetails)?.showTagDialog\n  );\n\n  const pagination = useSelector(({ entities, entityDetails }) => {\n    if (entities?.activeSystemTag || entityDetails?.entity) {\n      return statePagination;\n    }\n\n    return entities?.allTagsPagination || statePagination;\n  }, shallowEqual);\n\n  const loaded = useSelector(\n    ({ entities, entityDetails }) =>\n      entities?.tagModalLoaded || entityDetails?.tagModalLoaded\n  );\n\n  const activeSystemTag = useSelector(\n    ({ entities, entityDetails }) =>\n      entities?.activeSystemTag || entityDetails?.entity\n  );\n  const tags = useSelector(({ entities, entityDetails }) => {\n    const activeTags =\n      entities?.activeSystemTag?.tags || entityDetails?.entity?.tags;\n\n    if (activeTags) {\n      return activeTags\n        ?.filter((tag) =>\n          Object.values(tag).some((val) =>\n            val?.toLowerCase().includes(filterBy.toLowerCase())\n          )\n        )\n        .slice(\n          statePagination?.perPage * (statePagination?.page - 1),\n          statePagination?.perPage * statePagination?.page\n        );\n    }\n\n    return entities?.allTags?.reduce(\n      (acc, { tags }) => [...acc, ...flatten(tags.map(({ tag }) => tag))],\n      []\n    );\n  });\n\n  const tagsCount = useSelector(({ entities, entityDetails }) => {\n    const activeTags = (\n      entities?.activeSystemTag?.tags || entityDetails?.entity?.tags\n    )?.filter((tag) =>\n      Object.values(tag).some((val) => val?.includes(filterBy))\n    );\n    return activeTags ? activeTags.length : entities?.allTagsTotal;\n  });\n\n  useEffect(() => {\n    setFilterBy(filterTagsBy);\n  }, [filterTagsBy]);\n\n  const fetchTags = (pagination, filterBy) => {\n    if (!activeSystemTag) {\n      dispatch(fetchAllTags(filterBy, pagination, getTags));\n    } else {\n      setStatePagination(() => pagination);\n    }\n  };\n\n  const debouncedFetch = useCallback(debounce(fetchTags, 800), [\n    activeSystemTag,\n  ]);\n\n  return (\n    <TagModal\n      className=\"ins-c-inventory__tags-modal\"\n      tableProps={{\n        canSelectAll: false,\n      }}\n      {...(loaded && {\n        loaded,\n        pagination: {\n          ...pagination,\n          count: tagsCount,\n        },\n        rows:\n          tags?.map(({ key, value, namespace }) => ({\n            id: `${namespace}/${key}=${value}`,\n            selected: selected.find(\n              ({ id }) => id === `${namespace}/${key}=${value}`\n            ),\n            cells: [key, value, namespace],\n          })) || [],\n      })}\n      loaded={loaded}\n      width=\"auto\"\n      isOpen={showTagDialog}\n      toggleModal={() => {\n        setSelected([]);\n        setFilterBy('');\n        onToggleModal();\n        dispatch(toggleTagModal(false));\n      }}\n      filters={[\n        {\n          label: 'Tags filter',\n          placeholder: 'Filter tags',\n          value: 'tags-filter',\n          filterValues: {\n            value: filterBy,\n            onChange: (_e, value) => {\n              debouncedFetch(pagination, value);\n              setFilterBy(value);\n            },\n          },\n        },\n      ]}\n      onUpdateData={(pagination) => fetchTags(pagination, filterBy)}\n      columns={[\n        { title: 'Name' },\n        { title: 'Value', transforms: [cellWidth(30)] },\n        { title: 'Tag source', transforms: [cellWidth(30)] },\n      ]}\n      {...(!activeSystemTag && {\n        onSelect: (selected) => setSelected(selected),\n        selected,\n        onApply: () => onApply && onApply(selected),\n      })}\n      bulkSelect={{ id: 'bulk-select-tags' }}\n      title={\n        activeSystemTag\n          ? `${activeSystemTag.display_name} (${tagsCount})`\n          : `All tags in inventory (${tagsCount})`\n      }\n    />\n  );\n};\n\nTagsModal.propTypes = {\n  onApply: PropTypes.func,\n  onToggleModal: PropTypes.func,\n  filterTagsBy: PropTypes.string,\n  customFilters: PropTypes.shape({\n    tags: PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.arrayOf(PropTypes.string),\n    ]),\n  }),\n  getTags: PropTypes.func,\n};\n\nTagsModal.defaultProps = {\n  filterTagsBy: '',\n  onToggleModal: () => undefined,\n};\n\nexport default TagsModal;\n","import { loadEntities } from '../store/inventory-actions';\n\nexport const subtractWeeks = (numOfWeeks, date = new Date()) => {\n  date.setDate(date.getDate() - numOfWeeks * 7);\n\n  return date;\n};\n\nexport const verifyCollectorStaleness = (reporterStaleness) => {\n  const stalenessDate = new Date(reporterStaleness.stale_timestamp);\n  const currentDateTime = new Date();\n\n  const twoWeeksPeriod = subtractWeeks(2);\n  const oneWeeksPeriod = subtractWeeks(1);\n\n  if (stalenessDate > currentDateTime) {\n    return 'Fresh';\n  } else if (\n    oneWeeksPeriod < stalenessDate &&\n    stalenessDate < currentDateTime\n  ) {\n    return 'Stale';\n  } else if (twoWeeksPeriod < stalenessDate && stalenessDate < oneWeeksPeriod) {\n    return 'Stale warning';\n  } else {\n    return 'Culled';\n  }\n};\n\nexport const verifyCulledReporter = (perReporterStaleness, reporter) => {\n  //TODO: get rid of !perReporterStaleness condition when dependant apps have per_reporter_staleness info\n  if (!perReporterStaleness) {\n    return false;\n  } else if (perReporterStaleness[reporter]) {\n    return (\n      verifyCollectorStaleness(perReporterStaleness[reporter]) === 'Culled'\n    );\n  } else {\n    return true;\n  }\n};\n\nexport const loadSystems = (options, showTags, getEntities) => {\n  const limitedItems =\n    options?.items?.length > options.per_page\n      ? options?.items?.slice(\n          (options?.page - 1) * options.per_page,\n          options?.page * options.per_page\n        )\n      : options?.items;\n\n  const config = {\n    ...(options.hasItems && {\n      sortBy: options?.sortBy?.key,\n      orderDirection: options?.sortBy?.direction?.toUpperCase(),\n    }),\n    ...options,\n    filters: options?.filters || options?.activeFilters,\n    orderBy: options?.orderBy || options?.sortBy?.key,\n    orderDirection:\n      options?.orderDirection?.toUpperCase() ||\n      options?.sortBy?.direction?.toUpperCase(),\n    ...(limitedItems?.length > 0 && {\n      itemsPage: options?.page,\n      page: 1,\n    }),\n  };\n\n  return loadEntities(limitedItems, config, { showTags }, getEntities);\n};\n","import 'abortcontroller-polyfill/dist/polyfill-patch-fetch';\nexport const INVENTORY_API_BASE = '/api/inventory/v1';\nimport flatMap from 'lodash/flatMap';\n\nimport instance from '@redhat-cloud-services/frontend-components-utilities/interceptors';\nimport {\n  generateFilter,\n  mergeArraysByKey,\n} from '@redhat-cloud-services/frontend-components-utilities/helpers';\nimport {\n  GroupsApi,\n  HostsApi,\n  SystemProfileApi,\n  TagsApi,\n} from '@redhat-cloud-services/host-inventory-client';\nimport {\n  RHCD_FILTER_KEY,\n  UPDATE_METHOD_KEY,\n  allStaleFilters,\n} from '../Utilities/constants';\n\nexport { instance };\nexport const hosts = new HostsApi(undefined, INVENTORY_API_BASE, instance);\nexport const tags = new TagsApi(undefined, INVENTORY_API_BASE, instance);\nexport const systemProfile = new SystemProfileApi(\n  undefined,\n  INVENTORY_API_BASE,\n  instance\n);\nexport const groupsApi = new GroupsApi(undefined, INVENTORY_API_BASE, instance);\nexport const getEntitySystemProfile = (item) =>\n  hosts.apiHostGetHostSystemProfileById([item]);\n\n/* eslint camelcase: off */\nexport const mapData = ({ facts = {}, ...oneResult }) => ({\n  ...oneResult,\n  rawFacts: facts,\n  facts: {\n    ...facts.reduce?.(\n      (acc, curr) => ({ ...acc, [curr.namespace]: curr.facts }),\n      {}\n    ),\n    ...flatMap(facts, (oneFact) => Object.values(oneFact))\n      .map((item) =>\n        typeof item !== 'string'\n          ? {\n              ...item,\n              // eslint-disable-next-line camelcase\n              os_release: item.os_release || item.release,\n              // eslint-disable-next-line camelcase\n              display_name: item.display_name || item.fqdn || item.id,\n            }\n          : item\n      )\n      .reduce(\n        (acc, curr) => ({ ...acc, ...(typeof curr !== 'string' ? curr : {}) }),\n        {}\n      ),\n  },\n});\n\nexport const mapTags = (\n  data = { results: [] },\n  { orderBy, orderDirection } = {}\n) => {\n  if (data.results.length > 0) {\n    return hosts\n      .apiHostGetHostTags(\n        data.results.map(({ id }) => id),\n        data.per_page,\n        1,\n        orderBy,\n        orderDirection\n      )\n      .then(({ results: tags }) => ({\n        ...data,\n        results: data.results.map((row) => ({\n          ...row,\n          tags: tags[row.id] || [],\n        })),\n      }))\n      .catch(() => ({\n        ...data,\n        results: data.results.map((row) => ({\n          ...row,\n          tags: [],\n        })),\n      }));\n  }\n\n  return data;\n};\n\nexport const constructTags = (tagFilters) => {\n  return (\n    flatMap(tagFilters, ({ values, category: namespace }) =>\n      values.map(\n        ({ value: tagValue, tagKey }) =>\n          `${namespace ? `${namespace}/` : ''}${tagKey}${\n            tagValue ? `=${tagValue}` : ''\n          }`\n      )\n    ) || ''\n  );\n};\n\nexport const calculateSystemProfile = ({\n  osFilter,\n  rhcdFilter,\n  updateMethodFilter,\n}) => {\n  let systemProfile = {};\n  const osFilterValues = Array.isArray(osFilter)\n    ? osFilter\n    : Object.values(osFilter || {}).flatMap((majorOsVersion) =>\n        Object.keys(majorOsVersion)\n      );\n\n  if (osFilterValues?.length > 0) {\n    systemProfile.operating_system = {\n      RHEL: {\n        version: {\n          eq: osFilterValues,\n        },\n      },\n    };\n  }\n\n  if (rhcdFilter) {\n    systemProfile[RHCD_FILTER_KEY] = rhcdFilter;\n  }\n\n  if (updateMethodFilter) {\n    systemProfile[UPDATE_METHOD_KEY] = {\n      eq: updateMethodFilter,\n    };\n  }\n\n  return generateFilter({ system_profile: systemProfile });\n};\n\nexport const filtersReducer = (acc, filter = {}) => ({\n  ...acc,\n  ...(filter.value === 'hostname_or_id' && { hostnameOrId: filter.filter }),\n  ...('tagFilters' in filter && { tagFilters: filter.tagFilters }),\n  ...('staleFilter' in filter && { staleFilter: filter.staleFilter }),\n  ...('registeredWithFilter' in filter && {\n    registeredWithFilter: filter.registeredWithFilter,\n  }),\n  ...('osFilter' in filter && { osFilter: filter.osFilter }),\n  ...('rhcdFilter' in filter && { rhcdFilter: filter.rhcdFilter }),\n  ...('lastSeenFilter' in filter && { lastSeenFilter: filter.lastSeenFilter }),\n  ...('updateMethodFilter' in filter && {\n    updateMethodFilter: filter.updateMethodFilter,\n  }),\n  ...('hostGroupFilter' in filter && {\n    hostGroupFilter: filter.hostGroupFilter,\n  }),\n});\n\nexport async function getEntities(\n  items,\n  {\n    controller,\n    hasItems,\n    filters,\n    per_page: perPage,\n    page,\n    orderBy,\n    orderDirection,\n    fields = {\n      system_profile: [\n        'operating_system',\n        /* needed by inventory groups */ 'system_update_method',\n      ],\n    },\n    ...options\n  },\n  showTags\n) {\n  if (hasItems && items?.length > 0) {\n    let data = await hosts.apiHostGetHostById(\n      items,\n      undefined,\n      perPage,\n      page,\n      orderBy,\n      orderDirection,\n      undefined,\n      undefined,\n      { cancelToken: controller && controller.token }\n    );\n    if (fields && Object.keys(fields).length) {\n      try {\n        const result = await hosts.apiHostGetHostSystemProfileById(\n          items,\n          perPage,\n          undefined,\n          undefined,\n          undefined,\n          undefined,\n          undefined,\n          {\n            cancelToken: controller && controller.token,\n            query: generateFilter(fields, 'fields'),\n          }\n        );\n\n        data = {\n          ...data,\n          results: mergeArraysByKey(\n            [data?.results, result?.results || []],\n            'id'\n          ),\n        };\n      } catch (e) {\n                console.error(e); // eslint-disable-line\n      }\n    }\n\n    data = showTags ? await mapTags(data) : data;\n\n    data = {\n      ...data,\n      filters,\n      results: data.results.map((result) =>\n        mapData({\n          ...result,\n          display_name: result.display_name || result.fqdn || result.id,\n        })\n      ),\n    };\n\n    return data;\n  } else if (!hasItems) {\n    return hosts\n      .apiHostGetHostList(\n        undefined,\n        undefined,\n        filters.hostnameOrId,\n        undefined,\n        undefined,\n        undefined,\n        undefined,\n        undefined,\n        filters.hostGroupFilter,\n        undefined,\n        perPage,\n        page,\n        orderBy,\n        orderDirection,\n        filters.staleFilter,\n        [\n          ...constructTags(filters?.tagFilters),\n          ...(options?.globalFilter?.tags || []),\n        ],\n        filters?.registeredWithFilter,\n        undefined,\n        undefined,\n        {\n          cancelToken: controller && controller.token,\n          query: {\n            ...(options?.globalFilter?.filter &&\n              generateFilter(options.globalFilter.filter)),\n            ...(options.filter &&\n              Object.keys(options.filter).length &&\n              generateFilter(options.filter)),\n            ...calculateSystemProfile(filters),\n            ...(fields &&\n              Object.keys(fields).length &&\n              generateFilter(fields, 'fields')),\n            ...(filters?.lastSeenFilter?.updatedStart && {\n              updated_start: filters.lastSeenFilter.updatedStart,\n            }),\n            ...(filters?.lastSeenFilter?.updatedEnd && {\n              updated_end: filters.lastSeenFilter.updatedEnd,\n            }),\n          },\n        }\n      )\n      .then((data) =>\n        showTags ? mapTags(data, { orderBy, orderDirection }) : data\n      )\n      .then(({ results = [], ...data } = {}) => ({\n        ...data,\n        filters,\n        results: results.map((result) =>\n          mapData({\n            ...result,\n            display_name: result.display_name || result.fqdn || result.id,\n          })\n        ),\n      }));\n  }\n\n  return {\n    page,\n    per_page: perPage,\n    results: [],\n  };\n}\n\nexport function getTags(systemId, search, { pagination } = { pagination: {} }) {\n  return hosts.apiHostGetHostTags(\n    systemId,\n    pagination.perPage || 10,\n    pagination.page || 1,\n    undefined,\n    undefined,\n    search\n  );\n}\n\nexport function getAllTags(search, pagination = {}) {\n  return tags.apiTagGetTags(\n    [],\n    'tag',\n    'ASC',\n    pagination.perPage || 10,\n    pagination.page || 1,\n    //TODO: ask the backend to return all tags by default.\n    allStaleFilters,\n    search,\n    undefined,\n    undefined,\n    undefined,\n    undefined,\n    undefined,\n    undefined,\n    undefined,\n    undefined,\n    undefined\n  );\n}\n\nexport function getOperatingSystems(params = []) {\n  return systemProfile.apiSystemProfileGetOperatingSystem(...params);\n}\n","import instance from '@redhat-cloud-services/frontend-components-utilities/interceptors';\nexport const systemIssuesInstance = instance;\n\nexport const cves = async (systemId) => {\n  try {\n    const [low, moderate, important, critical] = await Promise.all(\n      [2, 4, 5, 7].map((impact) =>\n        instance.get(\n          `/api/vulnerability//v1/systems/${systemId}/cves?page=1&page_size=1&impact=${impact}`\n        )\n      )\n    );\n    return { low, moderate, important, critical };\n  } catch (_e) {\n    return {};\n  }\n};\n\nexport const patch = async (systemId) => {\n  try {\n    return await instance.get(`/api/patch/v1/systems/${systemId}`);\n  } catch (_e) {\n    return {};\n  }\n};\n\nexport const advisor = async (systemId) => {\n  try {\n    return await instance.get(`/api/insights/v1/system/${systemId}/reports/`);\n  } catch (_e) {\n    return {};\n  }\n};\n\nexport const compliance = async (systemId) => {\n  const query = `query System($systemId: String!) {\n        system(id: $systemId) {\n            id\n            name\n            profiles {\n                id\n                name\n                refId\n                compliant\n                rulesFailed\n                rulesPassed\n                lastScanned\n                score\n                __typename\n            }\n            __typename\n        }\n    }`;\n  try {\n    return await instance.post('/api/compliance/graphql', {\n      operationName: 'System',\n      query,\n      variables: {\n        systemId,\n      },\n    });\n  } catch (_e) {\n    return {};\n  }\n};\n","/* eslint-disable camelcase */\nimport { instance } from '@redhat-cloud-services/frontend-components-utilities/interceptors/interceptors';\nimport { INVENTORY_API_BASE } from '../../../api';\nimport { TABLE_DEFAULT_PAGINATION } from '../../../constants';\nimport PropTypes from 'prop-types';\n\nexport const getGroups = (\n  search = {},\n  pagination = { page: 1, per_page: TABLE_DEFAULT_PAGINATION }\n) => {\n  const parameters = new URLSearchParams({\n    ...search,\n    ...pagination,\n  }).toString();\n\n  return instance.get(\n    `${INVENTORY_API_BASE}/groups?${parameters}` /* , { headers: { Prefer: 'code=404' } } */\n  );\n};\n\nexport const getGroupsByIds = (groupIds, search = {}) => {\n  const parameters = new URLSearchParams(search).toString();\n  const path = `${INVENTORY_API_BASE}/groups/${groupIds.join(',')}${\n    parameters !== '' ? '?' + parameters : ''\n  }`;\n\n  return instance.get(path);\n};\n\nexport const createGroup = (payload) => {\n  return instance.post(`${INVENTORY_API_BASE}/groups`, {\n    name: payload.name,\n  });\n};\n\nexport const validateGroupName = (name) => {\n  return instance\n    .get(`${INVENTORY_API_BASE}/groups`)\n    .then((resp) => resp?.results.some((group) => group.name === name));\n};\n\nexport const getGroupDetail = (groupId) => {\n  return instance.get(`${INVENTORY_API_BASE}/groups/${groupId}`);\n};\n\nexport const updateGroupById = (id, payload) => {\n  return instance.patch(`${INVENTORY_API_BASE}/groups/${id}`, payload);\n};\n\nexport const deleteGroupsById = (ids = []) => {\n  return instance.delete(`${INVENTORY_API_BASE}/groups/${ids.join(',')}`);\n};\n\nexport const addHostsToGroupById = (id, hostIds) => {\n  return instance.post(`${INVENTORY_API_BASE}/groups/${id}/hosts`, hostIds);\n};\n\nexport const removeHostsFromGroup = (groupId, hostIds) => {\n  return instance.delete(\n    `${INVENTORY_API_BASE}/groups/${groupId}/hosts/${hostIds.join(',')}`\n  );\n};\n\ngetGroups.propTypes = {\n  search: PropTypes.shape({\n    name: PropTypes.string,\n  }),\n  pagination: PropTypes.shape({\n    per_page: PropTypes.number,\n    page: PropTypes.number,\n  }),\n};\n\ngetGroupDetail.propTypes = {\n  groupId: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport {\n  HOST_GROUP_CHIP,\n  RHCD_FILTER_KEY,\n  UPDATE_METHOD_KEY,\n} from './Utilities/constants';\n\nexport const tagsMapper = (acc, curr) => {\n  let [namespace, keyValue] = curr.split('/');\n  if (!keyValue) {\n    keyValue = namespace;\n    namespace = null;\n  }\n\n  const [key, value = null] = keyValue.split('=');\n  const currTagKey = acc.findIndex(({ category }) => category === namespace);\n  const currTag = acc[currTagKey] || {\n    category: namespace,\n    key: namespace,\n    type: 'tags',\n    values: [],\n  };\n  currTag.values.push({\n    name: `${key}${value ? `=${value}` : ''}`,\n    key: `${key}${value ? `=${value}` : ''}`,\n    tagKey: key,\n    value,\n    group: {\n      label: namespace,\n      value: namespace,\n      type: 'checkbox',\n    },\n  });\n  if (!acc[currTagKey]) {\n    acc.push(currTag);\n  }\n\n  return acc;\n};\n\nexport const prepareRows = (rows = [], pagination = {}) =>\n  rows.slice(\n    (pagination.page - 1) * pagination.perPage,\n    pagination.page * pagination.perPage\n  );\n\nexport const isDate = (date) => {\n  return !(isNaN(date) && isNaN(Date.parse(date)));\n};\n\nexport const filterRows = (rows = [], activeFilters = {}) =>\n  rows.filter(\n    (row) =>\n      Object.values(activeFilters).length === 0 ||\n      Object.values(activeFilters).every((filter) => {\n        const rowValue =\n          row[filter.key] && (row[filter.key].sortValue || row[filter.key]);\n        return (\n          rowValue &&\n          (Array.isArray(filter.value)\n            ? filter.value.includes(rowValue)\n            : rowValue\n                .toLocaleLowerCase()\n                .indexOf(filter.value.toLocaleLowerCase()) !== -1)\n        );\n      })\n  );\n\nexport const generateFilters = (\n  cells = [],\n  filters = [],\n  activeFilters = {},\n  onChange = () => undefined\n) =>\n  filters.map((filter, key) => {\n    const activeKey = filter.index || key;\n    const activeLabel =\n      cells[activeKey] && (cells[activeKey].title || cells[activeKey]);\n    return {\n      value: String(activeKey),\n      label: activeLabel,\n      type: filter.type || 'text',\n      filterValues: {\n        id: filter.id || `${activeLabel}-${activeKey}`,\n        onChange: (_e, newFilter) =>\n          onChange(activeKey, newFilter, activeLabel),\n        value: activeFilters[activeKey] && activeFilters[activeKey].value,\n        ...(filter.options && { items: filter.options }),\n      },\n    };\n  });\n\nexport const onDeleteFilter = (\n  deleted = {},\n  deleteAll = false,\n  activeFilters = {}\n) => {\n  if (deleteAll) {\n    return {};\n  } else {\n    const { [deleted.key]: workingItem, ...filtersRest } = activeFilters;\n    const newValue =\n      workingItem &&\n      Array.isArray(workingItem.value) &&\n      workingItem.value.filter(\n        (item) => !deleted.chips.find(({ name }) => name === item)\n      );\n    const newFilter =\n      workingItem &&\n      Array.isArray(workingItem.value) &&\n      newValue &&\n      newValue.length > 0\n        ? {\n            [deleted.key]: {\n              ...workingItem,\n              value: newValue,\n            },\n          }\n        : {};\n    return {\n      ...filtersRest,\n      ...newFilter,\n    };\n  }\n};\n\nexport const extraShape = PropTypes.shape({\n  title: PropTypes.node,\n  value: PropTypes.node,\n  singular: PropTypes.node,\n  plural: PropTypes.node,\n  onClick: PropTypes.func,\n});\n\nexport const INVENTORY_WRITE_PERMISSIONS = [\n  'inventory:*:*',\n  'inventory:hosts:write',\n  'inventory:*:write',\n];\n\nexport const getSearchParams = () => {\n  const searchParams = new URLSearchParams(location.search);\n  const status = searchParams.getAll('status');\n  const source = searchParams.getAll('source');\n  const filterbyName = searchParams.getAll('hostname_or_id');\n  const tagsFilter = searchParams\n    .getAll('tags')?.[0]\n    ?.split?.(',')\n    .reduce?.(tagsMapper, []);\n  const operatingSystem = searchParams.getAll('operating_system');\n  const rhcdFilter = searchParams.getAll(RHCD_FILTER_KEY);\n  const updateMethodFilter = searchParams.getAll(UPDATE_METHOD_KEY);\n  const hostGroupFilter = searchParams.getAll(HOST_GROUP_CHIP);\n  const page = searchParams.getAll('page');\n  const perPage = searchParams.getAll('per_page');\n  const lastSeenFilter = searchParams.getAll('last_seen');\n  return {\n    status,\n    source,\n    tagsFilter,\n    filterbyName,\n    operatingSystem,\n    rhcdFilter,\n    updateMethodFilter,\n    lastSeenFilter,\n    page,\n    perPage,\n    hostGroupFilter,\n  };\n};\n\nexport const TABLE_DEFAULT_PAGINATION = 50; // from UX table audit\n\nexport const NO_MODIFY_GROUPS_TOOLTIP_MESSAGE =\n  'You do not have the necessary permissions to modify groups. Contact your organization administrator.';\n\nexport const REQUIRED_PERMISSIONS_TO_READ_GROUP = (groupId) => [\n  {\n    permission: 'inventory:groups:read',\n    resourceDefinitions: [\n      {\n        attributeFilter: {\n          key: 'groupd.id',\n          operation: 'equal',\n          value: groupId,\n        },\n      },\n    ],\n  },\n];\n\nexport const REQUIRED_PERMISSIONS_TO_MODIFY_GROUP = (groupId) => [\n  {\n    permission: 'inventory:groups:write',\n    resourceDefinitions: [\n      {\n        attributeFilter: {\n          key: 'groupd.id',\n          operation: 'equal',\n          value: groupId,\n        },\n      },\n    ],\n  },\n];\n\nexport const NO_MODIFY_GROUP_TOOLTIP_MESSAGE =\n  'You do not have the necessary permissions to modify this group. Contact your organization administrator.';\n\nexport const GENERAL_GROUPS_WRITE_PERMISSION = 'inventory:groups:write';\nexport const GENERAL_GROUPS_READ_PERMISSION = 'inventory:groups:read';\nexport const GROUPS_ADMINISTRATOR_PERMISSIONS = [\n  GENERAL_GROUPS_READ_PERMISSION,\n  GENERAL_GROUPS_WRITE_PERMISSION,\n];\nexport const GENERAL_HOSTS_READ_PERMISSIONS = 'inventory:hosts:read';\n","import keyBy from 'lodash/keyBy';\n\nconst makeActions = (actions) => {\n  return actions?.reduce?.(\n    (acc, curr) => ({\n      ...acc,\n      [curr]: curr,\n      [`${curr}_PENDING`]: `${curr}_PENDING`,\n      [`${curr}_FULFILLED`]: `${curr}_FULFILLED`,\n      [`${curr}_REJECTED`]: `${curr}_REJECTED`,\n    }),\n    {}\n  );\n};\n\nconst actions = ['ALERT_ADD', 'ALERT_DISMISS', 'REMOVE_ENTITY'];\n\nexport const asyncActions = [\n  'GET_ENTITIES',\n  'GET_ENTITY',\n  'UPDATE_DISPLAY_NAME',\n  'LOAD_WRITE_PERMISSIONS',\n  'LOAD_SYSTEM_PROFILE',\n  'SET_ANSIBLE_HOST',\n];\n\nexport const asyncInventory = [\n  'LOAD_ENTITIES',\n  'LOAD_ENTITY',\n  'REMOVE_ENTITY',\n  'LOAD_SYSTEM_PROFILE',\n  'SET_DISPLAY_NAME',\n  'SET_ANSIBLE_HOST',\n  'LOAD_TAGS',\n  'ALL_TAGS',\n  'OPERATING_SYSTEMS',\n  'GROUPS',\n  'GROUP_DETAIL',\n  'GROUPS_FOR_ENTITIES',\n];\n\nexport const systemIssues = [\n  'LOAD_ADVISOR_RECOMMENDATIONS',\n  'LOAD_APPLICABLE_CVES',\n  'LOAD_APPLICABLE_ADVISORIES',\n  'LOAD_COMPLIANCE_POLICIES',\n];\n\nexport const ACTION_TYPES = {\n  ...keyBy(actions, (k) => k),\n  ...makeActions(asyncActions),\n  ...makeActions(asyncInventory),\n};\nexport const INVENTORY_ACTION_TYPES = makeActions(asyncInventory);\nexport const SYSTEM_ISSUE_TYPES = makeActions(systemIssues);\n\nexport const CLEAR_NOTIFICATIONS =\n  '@@INSIGHTS-CORE/NOTIFICATIONS/CLEAR_NOTIFICATIONS';\nexport const SELECT_ENTITY = 'SELECT_ENTITY';\nexport const SET_INVENTORY_FILTER = 'SET_INVENTORY_FILTER';\nexport const SET_PAGINATION = 'SET_PAGINATION';\nexport const SET_DISPLAY_NAME = 'SET_DISPLAY_NAME';\nexport const SET_ANSIBLE_HOST = 'SET_ANSIBLE_HOST';\n\nexport const UPDATE_ENTITIES = 'UPDATE_ENTITIES';\nexport const CHANGE_SORT = 'CHANGE_SORT';\nexport const FILTER_ENTITIES = 'FILTER_ENTITIES';\nexport const SHOW_ENTITIES = 'SHOW_ENTITIES';\nexport const FILTER_SELECT = 'FILTER_SELECT';\nexport const ENTITIES_LOADING = 'ENTITIES_LOADING';\nexport const CLEAR_FILTERS = 'CLEAR_FILTERS';\nexport const TOGGLE_TAG_MODAL = 'TOGGLE_TAG_MODAL';\nexport const CONFIG_CHANGED = 'CONFIG_CHANGED';\nexport const TOGGLE_DRAWER = 'TOGGLE_INVENTORY_DRAWER';\nexport const CLEAR_ENTITIES = 'CLEAR_ENTITIES';\n","import { hosts } from '../../../api';\nimport pAll from 'p-all';\n\nconst resolve = async (fns, limit = 2) => {\n  const results = await pAll(fns, {\n    concurrency: limit,\n  });\n  return results;\n};\n\nexport const deleteSystemsById = (items, batchSize = 50) => {\n  let arr = [];\n  for (let i = 0; i < items.length; i += batchSize) {\n    let chunk;\n    chunk = items.slice(i, i + batchSize);\n    arr.push(chunk);\n  }\n\n  const results = resolve(\n    arr.map((itemArray) => () => {\n      return hosts.apiHostDeleteHostById(itemArray);\n    })\n  );\n  return results;\n};\n","import { SYSTEM_ISSUE_TYPES } from './action-types';\nimport { advisor, compliance, cves, patch } from '../api';\n\nexport const getAdvisorData = (systemId) => ({\n  type: SYSTEM_ISSUE_TYPES.LOAD_ADVISOR_RECOMMENDATIONS,\n  payload: advisor(systemId),\n});\n\nexport const getVulnData = (systemId) => ({\n  type: SYSTEM_ISSUE_TYPES.LOAD_APPLICABLE_CVES,\n  payload: cves(systemId),\n});\n\nexport const getPatchData = (systemId) => ({\n  type: SYSTEM_ISSUE_TYPES.LOAD_APPLICABLE_ADVISORIES,\n  payload: patch(systemId),\n});\n\nexport const getComplianceData = (systemId) => ({\n  type: SYSTEM_ISSUE_TYPES.LOAD_COMPLIANCE_POLICIES,\n  payload: compliance(systemId),\n});\n","import {\n  ACTION_TYPES,\n  CLEAR_ENTITIES,\n  CLEAR_NOTIFICATIONS,\n  SET_INVENTORY_FILTER,\n  SET_PAGINATION,\n} from './action-types';\nimport { getEntitySystemProfile, hosts } from '../api';\nimport { deleteSystemsById } from '../components/InventoryTable/utils/api';\nexport * from './system-issues-actions';\nexport * from './inventory-actions';\n\nexport const deleteEntity = (systems, displayName) => ({\n  type: ACTION_TYPES.REMOVE_ENTITY,\n  payload: deleteSystemsById(systems),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Delete operation finished',\n        description: `${displayName} has been successfully removed.`,\n        dismissable: true,\n      },\n    },\n    systems,\n  },\n});\n\nexport const setFilter = (filtersList) => ({\n  type: SET_INVENTORY_FILTER,\n  payload: {\n    filtersList,\n  },\n});\n\nexport const clearNotifications = () => {\n  return {\n    type: CLEAR_NOTIFICATIONS,\n  };\n};\n\nexport const editDisplayName = (id, value, origValue) => ({\n  type: ACTION_TYPES.UPDATE_DISPLAY_NAME,\n  payload: hosts.apiHostPatchHostById([id], { display_name: value }), // eslint-disable-line camelcase\n  meta: {\n    id,\n    value,\n    origValue,\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: `Display name for entity with ID ${id} has been changed to ${value}`,\n        dismissable: true,\n      },\n    },\n  },\n});\n\nexport const setPagination = (page, perPage) => ({\n  type: SET_PAGINATION,\n  payload: {\n    page,\n    perPage,\n  },\n});\n\nexport const systemProfile = (itemId) => ({\n  type: ACTION_TYPES.LOAD_SYSTEM_PROFILE,\n  payload: getEntitySystemProfile(itemId, {}),\n});\n\nexport const editAnsibleHost = (id, value, origValue) => ({\n  type: ACTION_TYPES.SET_ANSIBLE_HOST,\n  payload: hosts.apiHostPatchHostById([id], { ansible_host: value }), // eslint-disable-line camelcase\n  meta: {\n    id,\n    value,\n    origValue,\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Ansible hostname has been updated',\n        dismissable: true,\n      },\n    },\n  },\n});\n\nexport const clearEntitiesAction = () => ({\n  type: CLEAR_ENTITIES,\n  payload: [],\n});\n","import {\n  ACTION_TYPES,\n  CHANGE_SORT,\n  CLEAR_FILTERS,\n  CONFIG_CHANGED,\n  ENTITIES_LOADING,\n  FILTER_ENTITIES,\n  FILTER_SELECT,\n  SELECT_ENTITY,\n  TOGGLE_DRAWER,\n  TOGGLE_TAG_MODAL,\n  UPDATE_ENTITIES,\n} from './action-types';\nimport {\n  getAllTags as defaultGetAllTags,\n  getEntities as defaultGetEntities,\n  filtersReducer,\n  getEntitySystemProfile,\n  getOperatingSystems,\n  getTags,\n  groupsApi,\n  hosts,\n} from '../api';\nimport {\n  getGroupDetail,\n  getGroups,\n} from '../components/InventoryGroups/utils/api';\n\nexport const loadEntities = (\n  items = [],\n  { filters, ...config },\n  { showTags } = {},\n  getEntities = defaultGetEntities\n) => {\n  const itemIds = items\n    .reduce(\n      (acc, curr) => [\n        ...acc,\n        curr && typeof curr === 'string' ? curr : curr.id,\n      ],\n      []\n    )\n    .filter(Boolean);\n\n  const isFilterDisabled = (name) =>\n    config.hideFilters?.[name] ||\n    (config.hideFilters?.all && config.hideFilters?.[name] !== false);\n\n  const updatedFilters = filters\n    ? filters.reduce(filtersReducer, {\n        ...(filters.length === 0 && { registeredWithFilter: [] }),\n        ...(isFilterDisabled('stale') && { staleFilter: undefined }),\n        ...(isFilterDisabled('registeredWith') && {\n          registeredWithFilter: undefined,\n        }),\n        ...(isFilterDisabled('operating_system') && { osFilter: undefined }),\n        ...(isFilterDisabled('host_group') && { hostGroupFilter: undefined }),\n      })\n    : {\n        ...(isFilterDisabled('stale') && { staleFilter: undefined }),\n        ...(isFilterDisabled('last_seen') && { lastSeenFilter: undefined }),\n        ...(isFilterDisabled('registeredWith') && {\n          registeredWithFilter: undefined,\n        }),\n        ...(isFilterDisabled('operating_system') && { osFilter: undefined }),\n        ...(isFilterDisabled('host_group') && { hostGroupFilter: undefined }),\n      };\n\n  const orderBy = config.orderBy || 'updated';\n  const orderDirection = config.orderDirection || 'DESC';\n\n  const lastDateRequest = Date.now();\n\n  return {\n    type: ACTION_TYPES.LOAD_ENTITIES,\n    payload: getEntities(\n      itemIds,\n      {\n        filters: updatedFilters,\n        ...config,\n        orderBy,\n        orderDirection,\n      },\n      showTags,\n      defaultGetEntities\n    ).then(({ results, ...data }) => ({\n      ...data,\n      filters,\n      sortBy: { key: orderBy, direction: orderDirection },\n      results:\n        items.length > 0\n          ? items.map((item) => ({\n              ...(item.id ? item : { id: item }),\n              ...(results.find(({ id }) => id === item || id === item.id) ||\n                {}),\n            }))\n          : results,\n      page: config.page || data?.page,\n      // eslint-disable-next-line camelcase\n      per_page: config.per_page || data?.per_page,\n      hideFilters: config.hideFilters,\n    })),\n    meta: {\n      showTags,\n      lastDateRequest,\n    },\n  };\n};\n\nexport const updateEntities = (items = []) => ({\n  type: UPDATE_ENTITIES,\n  payload: {\n    results: items,\n  },\n});\n\nexport const filterSelect = (selectedItem) => ({\n  type: FILTER_SELECT,\n  payload: selectedItem,\n});\n\nexport const loadEntity = (id, config, { showTags }) => ({\n  type: ACTION_TYPES.LOAD_ENTITY,\n  payload: defaultGetEntities(id, config, showTags),\n  meta: {\n    showTags,\n  },\n});\n\nexport const selectEntity = (id, selected) => ({\n  type: SELECT_ENTITY,\n  payload: { id, selected },\n});\n\nexport const setSort = (data) => ({\n  type: CHANGE_SORT,\n  payload: data,\n});\n\nexport const filterEntities = (key, filterString) => ({\n  type: FILTER_ENTITIES,\n  payload: { key, filterString },\n});\n\nexport const entitiesLoading = (isLoading = true) => ({\n  type: ENTITIES_LOADING,\n  payload: { isLoading },\n});\n\nexport const clearFilters = () => ({\n  type: CLEAR_FILTERS,\n});\n\nexport const systemProfile = (itemId) => ({\n  type: ACTION_TYPES.LOAD_SYSTEM_PROFILE,\n  payload: getEntitySystemProfile(itemId, {}),\n});\n\nexport const editDisplayName = (id, value) => ({\n  type: ACTION_TYPES.SET_DISPLAY_NAME,\n  payload: hosts.apiHostPatchHostById(id, { display_name: value }), // eslint-disable-line camelcase\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Display name has been updated',\n        dismissable: true,\n      },\n    },\n  },\n});\n\nexport const editAnsibleHost = (id, value) => ({\n  type: ACTION_TYPES.SET_ANSIBLE_HOST,\n  payload: hosts.apiHostPatchHostById(id, { ansible_host: value }), // eslint-disable-line camelcase\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Ansible hostname has been updated',\n        dismissable: true,\n      },\n    },\n  },\n});\n\nexport const loadTags = (systemId, search, options, count) => ({\n  type: ACTION_TYPES.LOAD_TAGS,\n  payload: getTags(systemId, search, options),\n  meta: {\n    tagsCount: count,\n    systemId,\n  },\n});\n\nexport const toggleTagModal = (isOpen) => ({\n  type: TOGGLE_TAG_MODAL,\n  payload: { isOpen },\n});\n\nexport const fetchAllTags = (\n  search,\n  pagination,\n  getTags = defaultGetAllTags\n) => ({\n  type: ACTION_TYPES.ALL_TAGS,\n  payload: getTags(search, pagination),\n  meta: { lastDateRequestTags: Date.now() },\n});\n\nexport const fetchGroups = (search, pagination) => ({\n  type: ACTION_TYPES.GROUPS,\n  payload: getGroups(search, pagination),\n});\n\nexport const fetchGroupDetail = (groupId) => ({\n  type: ACTION_TYPES.GROUP_DETAIL,\n  payload: getGroupDetail(groupId),\n});\n\nexport const fetchOperatingSystems = (params = []) => ({\n  type: ACTION_TYPES.OPERATING_SYSTEMS,\n  payload: getOperatingSystems(params),\n});\n\nexport const deleteEntity = (systems, displayName) => ({\n  type: ACTION_TYPES.REMOVE_ENTITY,\n  payload: hosts.apiHostDeleteHostById(systems),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Delete operation finished',\n        description: `${displayName} has been successfully removed.`,\n        dismissable: true,\n      },\n    },\n    systems,\n  },\n});\n\nexport const configChanged = (config) => ({\n  type: CONFIG_CHANGED,\n  payload: config,\n});\n\nexport const toggleDrawer = (isOpened) => ({\n  type: TOGGLE_DRAWER,\n  payload: { isOpened },\n});\n\nexport const fetchGroupsForEntities = (params) => ({\n  type: ACTION_TYPES.GROUPS_FOR_ENTITIES,\n  payload: groupsApi.apiGroupGetGroupList(params),\n});\n"],"names":["DeleteModal","systemToRemove","handleModalToggle","isModalOpen","currentSytems","onConfirm","systemLabel","Array","isArray","length","display_name","variant","title","className","ouiaId","isOpen","onClose","appendTo","document","getElementsByClassName","body","hasGutter","size","isFilled","location","host","onClick","ActiveSystemProp","PropTypes","id","displayName","propTypes","defaultProps","TagWithDialog","count","loadTags","systemId","e","stopPropagation","onTagClick","connect","dispatch","toggleTagModal","undefined","RenderWrapper","Component","cmp","isRbacEnabled","inventoryRef","store","props","hasAccess","usePermissionsWithContext","ref","customRender","TEXT_FILTER","TEXTUAL_CHIP","TAG_CHIP","STALE_CHIP","REGISTERED_CHIP","OS_CHIP","RHCD_FILTER_KEY","UPDATE_METHOD_KEY","LAST_SEEN_CHIP","HOST_GROUP_CHIP","REPORTER_PUPTOO","REPORTER_RHSM_CONDUIT","REPORTER_RHSM_PROFILE_BRIDGE","APP_NAME_VULNERABILITY","APP_NAME_ADVISOR","APP_NAME_PATCH","subtractDate","days","date","Date","setDate","getDate","toISOString","staleness","label","value","currentDate","lastSeenItems","updatedStart","updatedEnd","mark","registered","idName","idValue","InventoryContext","createContext","rhcdOptions","updateMethodOptions","filterToGroup","valuesKey","reduce","accGroup","group","key","acc","curr","isSelected","item","meta","tag","tagKey","arrayToSelection","selected","cells","namespace","reduceFilters","oneFilter","textFilter","filter","tagFilters","foundKey","find","Object","keys","includes","reloadWrapper","event","callback","payload","then","data","isEmpty","check","generateFilter","status","source","tagsFilter","filterbyName","operatingSystem","rhcdFilter","updateMethodFilter","hostGroupFilter","lastSeenFilter","staleFilter","registeredWithFilter","osFilter","Boolean","useWritePermissions","INVENTORY_WRITE_PERMISSIONS","allStaleFilters","TagsModal","filterTagsBy","onToggleModal","onApply","getTags","useDispatch","useState","filterBy","setFilterBy","setSelected","perPage","page","statePagination","setStatePagination","showTagDialog","useSelector","entities","entityDetails","pagination","activeSystemTag","entity","allTagsPagination","shallowEqual","loaded","tagModalLoaded","tags","activeTags","values","some","val","toLowerCase","slice","allTags","flatten","map","tagsCount","allTagsTotal","useEffect","fetchTags","fetchAllTags","debouncedFetch","useCallback","debounce","TagModal","tableProps","canSelectAll","rows","width","toggleModal","filters","placeholder","filterValues","onChange","_e","onUpdateData","columns","transforms","cellWidth","onSelect","bulkSelect","customFilters","subtractWeeks","numOfWeeks","verifyCollectorStaleness","reporterStaleness","stalenessDate","stale_timestamp","currentDateTime","twoWeeksPeriod","oneWeeksPeriod","verifyCulledReporter","perReporterStaleness","reporter","loadSystems","options","showTags","getEntities","limitedItems","items","per_page","config","hasItems","sortBy","orderDirection","direction","toUpperCase","activeFilters","orderBy","itemsPage","loadEntities","INVENTORY_API_BASE","hosts","HostsApi","instance","TagsApi","systemProfile","SystemProfileApi","groupsApi","GroupsApi","getEntitySystemProfile","apiHostGetHostSystemProfileById","mapData","facts","rawFacts","flatMap","oneFact","os_release","release","fqdn","mapTags","results","apiHostGetHostTags","row","catch","constructTags","category","tagValue","calculateSystemProfile","osFilterValues","majorOsVersion","operating_system","RHEL","version","eq","system_profile","filtersReducer","hostnameOrId","controller","fields","apiHostGetHostById","cancelToken","token","query","result","mergeArraysByKey","console","error","apiHostGetHostList","globalFilter","updated_start","updated_end","search","getAllTags","apiTagGetTags","getOperatingSystems","params","apiSystemProfileGetOperatingSystem","systemIssuesInstance","cves","Promise","all","impact","get","low","moderate","important","critical","patch","advisor","compliance","post","operationName","variables","getGroups","TABLE_DEFAULT_PAGINATION","parameters","URLSearchParams","toString","getGroupsByIds","groupIds","path","join","createGroup","name","validateGroupName","resp","getGroupDetail","groupId","updateGroupById","deleteGroupsById","ids","delete","addHostsToGroupById","hostIds","removeHostsFromGroup","isRequired","tagsMapper","split","keyValue","currTagKey","findIndex","currTag","type","push","prepareRows","isDate","isNaN","parse","filterRows","every","rowValue","sortValue","toLocaleLowerCase","indexOf","generateFilters","activeKey","index","activeLabel","String","newFilter","onDeleteFilter","deleted","workingItem","filtersRest","newValue","chips","extraShape","singular","plural","getSearchParams","searchParams","getAll","NO_MODIFY_GROUPS_TOOLTIP_MESSAGE","REQUIRED_PERMISSIONS_TO_READ_GROUP","permission","resourceDefinitions","attributeFilter","operation","REQUIRED_PERMISSIONS_TO_MODIFY_GROUP","NO_MODIFY_GROUP_TOOLTIP_MESSAGE","GENERAL_GROUPS_WRITE_PERMISSION","GENERAL_GROUPS_READ_PERMISSION","GROUPS_ADMINISTRATOR_PERMISSIONS","GENERAL_HOSTS_READ_PERMISSIONS","makeActions","actions","asyncActions","asyncInventory","systemIssues","ACTION_TYPES","keyBy","k","INVENTORY_ACTION_TYPES","SYSTEM_ISSUE_TYPES","CLEAR_NOTIFICATIONS","SELECT_ENTITY","SET_INVENTORY_FILTER","SET_PAGINATION","SET_DISPLAY_NAME","SET_ANSIBLE_HOST","UPDATE_ENTITIES","CHANGE_SORT","FILTER_ENTITIES","SHOW_ENTITIES","FILTER_SELECT","ENTITIES_LOADING","CLEAR_FILTERS","TOGGLE_TAG_MODAL","CONFIG_CHANGED","TOGGLE_DRAWER","CLEAR_ENTITIES","i","resolve","fns","limit","pAll","concurrency","deleteSystemsById","batchSize","arr","chunk","itemArray","apiHostDeleteHostById","getAdvisorData","LOAD_ADVISOR_RECOMMENDATIONS","getVulnData","LOAD_APPLICABLE_CVES","getPatchData","LOAD_APPLICABLE_ADVISORIES","getComplianceData","LOAD_COMPLIANCE_POLICIES","deleteEntity","systems","REMOVE_ENTITY","notifications","fulfilled","description","dismissable","setFilter","filtersList","clearNotifications","editDisplayName","origValue","UPDATE_DISPLAY_NAME","apiHostPatchHostById","setPagination","itemId","LOAD_SYSTEM_PROFILE","editAnsibleHost","ansible_host","clearEntitiesAction","defaultGetEntities","itemIds","isFilterDisabled","hideFilters","updatedFilters","lastDateRequest","now","LOAD_ENTITIES","updateEntities","filterSelect","selectedItem","loadEntity","LOAD_ENTITY","selectEntity","setSort","filterEntities","filterString","entitiesLoading","isLoading","clearFilters","LOAD_TAGS","defaultGetAllTags","ALL_TAGS","lastDateRequestTags","fetchGroups","GROUPS","fetchGroupDetail","GROUP_DETAIL","fetchOperatingSystems","OPERATING_SYSTEMS","configChanged","toggleDrawer","isOpened","fetchGroupsForEntities","GROUPS_FOR_ENTITIES","apiGroupGetGroupList"],"sourceRoot":""}