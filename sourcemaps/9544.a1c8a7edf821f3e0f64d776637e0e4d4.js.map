{"version":3,"file":"js/9544.1651855126419.0ecffde02b8cc7cec3bd.js","mappings":"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","sources":["webpack:///./src/Utilities/DeleteModal.js","webpack:///./src/Utilities/InsightsDisconnected.js","webpack:///./src/Utilities/OperatingSystemFormatter.js","webpack:///./src/Utilities/TagWithDialog.js","webpack:///./src/Utilities/Wrapper.js","webpack:///./src/Utilities/TagsModal.js","webpack:///./src/components/InventoryTable/TitleColumn.js","webpack:///./src/store/entities.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    ClipboardCopy,\n    Modal,\n    Split,\n    SplitItem,\n    Stack,\n    StackItem,\n    Level,\n    LevelItem,\n    Button\n} from '@patternfly/react-core';\n\nimport ExclamationTriangleIcon from  '@patternfly/react-icons/dist/js/icons/exclamation-triangle-icon';\n\nconst DeleteModal = ({ handleModalToggle, isModalOpen, currentSytems, onConfirm }) => {\n    let systemToRemove;\n    let systemLabel = 'system';\n    if (Array.isArray(currentSytems)) {\n        systemToRemove = currentSytems.length === 1 ? currentSytems[0].display_name : `${currentSytems.length} systems`;\n        systemLabel = currentSytems.length === 1 ? systemLabel : 'systems';\n    } else {\n        systemToRemove = currentSytems.display_name;\n    }\n\n    return <Modal\n        variant=\"small\"\n        title=\"Remove from inventory\"\n        className=\"ins-c-inventory__table--remove\"\n        ouiaId=\"inventory-delete-modal\"\n        isOpen={isModalOpen}\n        onClose={() => handleModalToggle(false)}\n        appendTo={document.getElementsByClassName('inventory')[0] || document.body}\n    >\n        <Split hasGutter>\n            <SplitItem><ExclamationTriangleIcon size=\"xl\" className=\"ins-m-alert\" /></SplitItem>\n            <SplitItem isFilled>\n                <Stack hasGutter>\n                    <StackItem>\n                        {systemToRemove} will be removed from\n                                    all {location.host} applications and services. You need to re-register\n                        the {systemLabel} to add it back to your inventory.\n                    </StackItem>\n                    <StackItem>\n                        To disable the daily upload for this {systemLabel}, use the following command:\n                    </StackItem>\n                    <StackItem>\n                        <ClipboardCopy>insights-client --unregister</ClipboardCopy>\n                    </StackItem>\n                </Stack>\n            </SplitItem>\n        </Split>\n        <Level hasGutter>\n            <LevelItem>\n                <Button\n                    variant=\"danger\"\n                    ouiaId=\"confirm-inventory-delete\"\n                    onClick={onConfirm}\n                >\n                    Remove\n                </Button>\n                <Button\n                    variant=\"link\"\n                    ouiaId=\"cancel-inventory-delete\"\n                    onClick={() => handleModalToggle(false)}\n                >\n                    Cancel\n                </Button>\n            </LevelItem>\n        </Level>\n    </Modal>;\n};\n\nconst ActiveSystemProp = PropTypes.shape({\n    id: PropTypes.string,\n    displayName: PropTypes.string\n});\n\nDeleteModal.propTypes = {\n    isModalOpen: PropTypes.bool,\n    currentSytems: PropTypes.oneOfType([ActiveSystemProp, PropTypes.arrayOf(ActiveSystemProp)]),\n    handleModalToggle: PropTypes.func,\n    onConfirm: PropTypes.func\n};\n\nDeleteModal.defaultProps = {\n    isModalOpen: false,\n    currentSytems: {},\n    handleModalToggle: () => undefined,\n    onConfirm: () => undefined\n};\n\nexport default DeleteModal;\n","import React from 'react';\n\nimport { Tooltip, Grid, GridItem } from '@patternfly/react-core';\nimport { DisconnectedIcon } from '@patternfly/react-icons';\n\nimport './InsightsDisconnected.scss';\n\nconst InsightsDisconnected = () => (\n    <Tooltip\n        maxWidth='14rem'\n        content={(\n            <Grid hasGutter>\n                <GridItem>\n                    Insights client not reporting\n                </GridItem>\n                <GridItem>\n                    From the main navigation, open\n                    &quot;Registration Assitant&quot; to learn\n                    how to set up Insights.\n                </GridItem>\n            </Grid>\n        )}>\n        <span className=\"pf-u-ml-sm ins-c-inventor__disconnected-icon\">\n            <DisconnectedIcon />\n        </span>\n    </Tooltip>\n);\n\nexport default InsightsDisconnected;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst OperatingSystemFormatter = ({ operatingSystem }) => {\n    if (operatingSystem?.name === 'RHEL') {\n        const version = (operatingSystem.major && operatingSystem.minor !== null)\n        && `${operatingSystem.major}.${operatingSystem?.minor}` || null;\n\n        return <span>\n            RHEL {version}\n        </span>;\n    }\n\n    return <span>\n        {operatingSystem?.name || 'Not available'}\n    </span>;\n};\n\nOperatingSystemFormatter.propTypes = {\n    operatingSystem: PropTypes.shape({\n        name: PropTypes.string,\n        major: PropTypes.number,\n        minor: PropTypes.number\n    })\n};\n\nexport default OperatingSystemFormatter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { TagCount } from '@redhat-cloud-services/frontend-components/TagCount';\nimport { loadTags, toggleTagModal } from '../store/actions';\n\nconst TagWithDialog = ({ count, loadTags, systemId }) => (\n    <span\n        onClick={(e) => e.stopPropagation()}\n        className=\"ins-c-inventory__list-tags\"\n        data-ouia-component-id={`${systemId}-tag-button`}\n    >\n        <TagCount count={count} onTagClick={ () => loadTags(systemId, count) } />\n    </span>\n);\n\nTagWithDialog.propTypes = {\n    count: PropTypes.number,\n    loadTags: PropTypes.func,\n    systemId: PropTypes.string\n};\n\nconst dispatchToProps = (dispatch) => ({\n    loadTags: (systemId, count) => {\n        if (systemId) {\n            dispatch(toggleTagModal(true));\n            dispatch(loadTags(systemId, undefined, undefined, count));\n        }\n    }\n});\n\nexport default connect(() => ({}), dispatchToProps)(TagWithDialog);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { usePermissions } from '@redhat-cloud-services/frontend-components-utilities/RBACHook';\nimport { Spinner } from '@patternfly/react-core';\n\nconst RenderWrapper = ({ cmp: Component, hideLoader, isRbacEnabled, inventoryRef, store, ...props }) => {\n    const { hasAccess, isLoading } = usePermissions('inventory', [\n        'inventory:*:*',\n        'inventory:*:read',\n        'inventory:hosts:read'\n    ], true);\n    return (\n        (isLoading && !hideLoader) ?\n            <Spinner /> :\n            <Component\n                {...props}\n                { ...inventoryRef && {\n                    ref: inventoryRef\n                }}\n                hasAccess={isRbacEnabled ? hasAccess : true}\n                store={ store }\n            />\n    );\n};\n\nRenderWrapper.propTypes = {\n    cmp: PropTypes.any,\n    inventoryRef: PropTypes.any,\n    store: PropTypes.object,\n    customRender: PropTypes.bool,\n    isRbacEnabled: PropTypes.bool,\n    hideLoader: PropTypes.bool\n};\n\nexport default RenderWrapper;\n","import React, { useState, useCallback, useEffect } from 'react';\nimport { useSelector, useDispatch, shallowEqual } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { toggleTagModal, fetchAllTags } from '../store/actions';\nimport { TagModal } from '@redhat-cloud-services/frontend-components/TagModal';\nimport { cellWidth } from '@patternfly/react-table';\nimport debounce from 'lodash/debounce';\nimport flatten from 'lodash/flatten';\n\nconst TagsModal = ({\n    customFilters,\n    filterTagsBy,\n    onToggleModal,\n    onApply,\n    getTags\n}) => {\n    const dispatch = useDispatch();\n    const [filterBy, setFilterBy] = useState('');\n    const [selected, setSelected] = useState([]);\n    const [statePagination, setStatePagination] = useState({\n        perPage: 10,\n        page: 1\n    });\n\n    const showTagDialog = useSelector(({ entities, entityDetails }) => (entities || entityDetails)?.showTagDialog);\n\n    const pagination = useSelector(({ entities, entityDetails }) => {\n        if (entities?.activeSystemTag || entityDetails?.entity) {\n            return statePagination;\n        }\n\n        return entities?.allTagsPagination || statePagination;\n    }, shallowEqual);\n\n    const loaded = useSelector(({ entities, entityDetails }) => entities?.tagModalLoaded || entityDetails?.tagModalLoaded);\n\n    const activeSystemTag = useSelector(({ entities, entityDetails }) => entities?.activeSystemTag || entityDetails?.entity);\n    const tags = useSelector(({ entities, entityDetails }) => {\n        const activeTags = entities?.activeSystemTag?.tags || entityDetails?.entity?.tags;\n        if (activeTags) {\n            return activeTags?.filter(\n                (tag) => Object.values(tag).some((val) => val?.includes(filterBy))\n            ).slice(statePagination?.perPage * (statePagination?.page - 1), statePagination?.perPage * statePagination?.page);\n        }\n\n        return entities?.allTags?.reduce((acc, { tags }) => ([\n            ...acc,\n            ...flatten(tags.map(({ tag }) => tag))\n        ]), []);\n    });\n    const filters = useSelector(({ entities, entityDetails }) => (entities || entityDetails)?.activeFilters);\n    const tagsCount = useSelector(({ entities, entityDetails }) => {\n        const activeTags = (entities?.activeSystemTag?.tags || entityDetails?.entity?.tags)?.filter(\n            (tag) => Object.values(tag).some((val) => val?.includes(filterBy))\n        );\n        return activeTags ? activeTags.length : entities?.allTagsTotal;\n    });\n\n    useEffect(() => {\n        setFilterBy(filterTagsBy);\n    }, [filterTagsBy]);\n\n    const fetchTags = (pagination, filterBy) => {\n        if (!activeSystemTag) {\n            dispatch(fetchAllTags(filterBy, { ...customFilters, pagination, filters }, getTags));\n        } else {\n            setStatePagination(() => pagination);\n        }\n    };\n\n    const debouncedFetch = useCallback(debounce(fetchTags, 800), [activeSystemTag]);\n\n    return (\n        <TagModal\n            className=\"ins-c-inventory__tags-modal\"\n            tableProps={{\n                canSelectAll: false\n            }}\n            {...loaded && {\n                loaded,\n                pagination: {\n                    ...pagination,\n                    count: tagsCount\n                },\n                rows: tags?.map(({ key, value, namespace }) => ({\n                    id: `${namespace}/${key}=${value}`,\n                    selected: selected.find(({ id }) => id === `${namespace}/${key}=${value}`),\n                    cells: [key, value, namespace]\n                })) || []\n            }}\n            loaded={ loaded }\n            width=\"auto\"\n            isOpen={ showTagDialog }\n            toggleModal={() => {\n                setSelected([]);\n                setFilterBy('');\n                onToggleModal();\n                dispatch(toggleTagModal(false));\n            }}\n            filters={[\n                {\n                    label: 'Tags filter',\n                    placeholder: 'Filter tags',\n                    value: 'tags-filter',\n                    filterValues: {\n                        value: filterBy,\n                        onChange: (_e, value) => {\n                            debouncedFetch(pagination, value);\n                            setFilterBy(value);\n                        }\n                    }\n                }\n            ]}\n            onUpdateData={ (pagination) => fetchTags(pagination, filterBy) }\n            columns={ [\n                { title: 'Name' },\n                { title: 'Value', transforms: [cellWidth(30)] },\n                { title: 'Tag source', transforms: [cellWidth(30)] }\n            ] }\n            {...!activeSystemTag && {\n                onSelect: (selected) => setSelected(selected),\n                selected,\n                onApply: () => onApply && onApply(selected)\n            }}\n            bulkSelect={{ id: 'bulk-select-tags' }}\n            title={ activeSystemTag ?\n                `${activeSystemTag.display_name} (${tagsCount})` :\n                `All tags in inventory (${tagsCount})`\n            }\n        />\n    );\n};\n\nTagsModal.propTypes = {\n    onApply: PropTypes.func,\n    onToggleModal: PropTypes.func,\n    filterTagsBy: PropTypes.string,\n    customFilters: PropTypes.shape({\n        tags: PropTypes.oneOfType([\n            PropTypes.object,\n            PropTypes.arrayOf(PropTypes.string)\n        ])\n    }),\n    getTags: PropTypes.func\n};\n\nTagsModal.defaultProps = {\n    filterTagsBy: '',\n    onToggleModal: () => undefined\n};\n\nexport default TagsModal;\n","/* eslint-disable camelcase */\n/* eslint-disable react/prop-types */\nimport React from 'react';\n\n/**\n * Helper function to proprly calculate what to do when user clicks on first cell.\n * Either full redirect if used with ctrl button or `onRowClick` from props is used.\n * @param {*} event html event, to find out if meta key was clicked.\n * @param {*} key inventory UUID.\n * @param {*} props additional props from `EntityTable` - loaded, onRowClick and noDetail.\n */\nconst onRowClick = (event, key, { loaded, onRowClick: rowClick, noDetail }) => {\n    if (loaded && !noDetail) {\n        const isMetaKey = (event.ctrlKey || event.metaKey || event.which === 2);\n        if (isMetaKey) {\n            return;\n        } else if (rowClick) {\n            rowClick(event, key, isMetaKey);\n        }\n    }\n\n    event.preventDefault();\n    event.stopPropagation();\n};\n\n/**\n * Helper function to generate first cell in plain inventory either with clickable detail or just data from attribut.\n * This is later on used in redux in `renderFunc`.\n * @param {React.node} data React node with information that will be shown to user as column title.\n * @param {string} id inventory UUID, used to navigate to correct URL.\n * @param {*} item row data, holds every information from redux store for currecnt row.\n * @param {*} props additional props passed from `EntityTable` - holds any props passed to inventory table.\n */\nconst TitleColumn = (data, id, item, props) => (\n    <div className=\"ins-composed-col\">\n        <div key=\"os_release\">{item?.os_release}</div>\n        <div key=\"data\" className={props?.noDetail ? 'ins-m-nodetail' : ''}>\n            { props?.noDetail ?\n                data :\n                <a\n                    widget=\"col\"\n                    href={ `${location.pathname}${location.pathname.substr(-1) === '/' ? '' : '/'}${id}` }\n                    onClick={ event => {\n                        onRowClick(event, id, props);\n                    }}\n                >\n                    { data }\n                </a> }\n        </div>\n    </div>\n);\n\nexport default TitleColumn;\n","import React from 'react';\nimport {\n    ACTION_TYPES,\n    SELECT_ENTITY,\n    CHANGE_SORT,\n    SHOW_ENTITIES,\n    FILTER_SELECT,\n    UPDATE_ENTITIES,\n    ENTITIES_LOADING,\n    CLEAR_FILTERS,\n    TOGGLE_TAG_MODAL,\n    CONFIG_CHANGED\n} from './action-types';\nimport { mergeArraysByKey } from '@redhat-cloud-services/frontend-components-utilities/helpers';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport { CullingInformation } from '@redhat-cloud-services/frontend-components/CullingInfo';\nimport { TagWithDialog } from '../Utilities/index';\nimport groupBy from 'lodash/groupBy';\nimport TitleColumn from '../components/InventoryTable/TitleColumn';\nimport InsightsDisconnected from '../Utilities/InsightsDisconnected';\nimport OperatingSystemFormatter from '../Utilities/OperatingSystemFormatter';\nimport { Tooltip } from '@patternfly/react-core';\nimport { defaultFilters } from '../Utilities/constants';\n\nexport const defaultState = {\n    loaded: false,\n    tagsLoaded: false,\n    allTagsLoaded: false,\n    invConfig: {},\n    sortBy: {\n        key: 'updated',\n        direction: 'desc'\n    }\n};\n\nexport const defaultColumns = [\n    {\n        key: 'display_name',\n        title: 'Name',\n        renderFunc: TitleColumn\n    },\n    {\n        key: 'tags',\n        title: 'Tags',\n        props: { width: 10, isStatic: true },\n        // eslint-disable-next-line react/display-name\n        renderFunc: (value, systemId) => <TagWithDialog count={value.length} systemId={systemId} />\n    },\n    {\n        key: 'system_profile',\n        title: <Tooltip content={<span>Operating system</span>}><span>OS</span></Tooltip>,\n        // eslint-disable-next-line react/display-name\n        renderFunc: (systemProfile) => <OperatingSystemFormatter operatingSystem={systemProfile?.operating_system} />,\n        props: { width: 10, isStatic: true }\n    },\n    {\n        key: 'updated',\n        title: 'Last seen',\n        // eslint-disable-next-line react/display-name\n        renderFunc: (\n            value,\n            _id,\n            {\n                culled_timestamp: culled, stale_warning_timestamp: staleWarn, stale_timestamp: stale, insights_id: insightsId\n            }) => {\n            return CullingInformation ? <CullingInformation\n                culled={culled}\n                staleWarning={staleWarn}\n                stale={stale}\n                render={({ msg }) => <React.Fragment>\n                    <DateFormat date={ value } extraTitle={ (\n                        <React.Fragment>\n                            <div>{ msg }</div>\n                        Last seen:{` `}\n                        </React.Fragment>\n                    ) }/>\n                    {!insightsId && <InsightsDisconnected />}\n                </React.Fragment>\n                }\n            > <DateFormat date={ value } /> </CullingInformation> : new Date(value).toLocaleString();\n        },\n        props: { width: 10 }\n    }\n];\n\nfunction entitiesPending(state, { meta }) {\n    return {\n        ...state,\n        columns: mergeArraysByKey([\n            defaultColumns.filter(({ key }) => key !== 'tags' || meta?.showTags),\n            state.columns\n        ], 'key'),\n        rows: [],\n        loaded: false,\n        lastDateRequest: meta.lastDateRequest\n    };\n}\n\nfunction clearFilters(state) {\n    return {\n        ...state,\n        activeFilters: [defaultFilters]\n    };\n}\n\n// eslint-disable-next-line camelcase\nfunction entitiesLoaded(state, { payload: { results, per_page: perPage, page, count, total, loaded, filters }, meta }) {\n    // Older requests should not rewrite the state\n    if (meta.lastDateRequest < state.lastDateRequest) {\n        return state;\n    }\n\n    // Data are loaded and APi returned malicious data\n    if (loaded === undefined && (page === undefined || perPage === undefined)) {\n        return state;\n    }\n\n    return {\n        ...state,\n        activeFilters: filters || [],\n        loaded: loaded === undefined || loaded,\n        // filter data only if we are loaded\n        rows: mergeArraysByKey([state.rows, results]).filter(item => !loaded ? true : item.created),\n        perPage: perPage !== undefined ? perPage : state.perPage,\n        page: page !== undefined ? page : state.page,\n        count: count !== undefined ? count : state.count,\n        total: total !== undefined ? total : state.total\n    };\n}\n\nfunction loadingRejected(state, { payload }) {\n    return {\n        ...state,\n        error: payload\n    };\n}\n\nfunction selectEntity(state, { payload }) {\n    const rows = [...state.rows];\n    const toSelect = [].concat(payload);\n    toSelect.forEach(({ id, selected }) => {\n        const entity = rows.find(entity => entity.id === id);\n        if (entity) {\n            entity.selected = selected;\n        } else {\n            rows.forEach(item => item.selected = selected);\n        }\n    });\n    return {\n        ...state,\n        rows\n    };\n}\n\nfunction changeSort(state, { payload: { key, direction } }) {\n    return {\n        ...state,\n        sortBy: {\n            key,\n            direction\n        }\n    };\n}\n\nfunction selectFilter(state, { payload: { item: { items, ...item }, selected } }) {\n    let { activeFilters = [] } = state;\n    if (selected) {\n        activeFilters = [\n            ...activeFilters,\n            item,\n            ...items ? items : []\n        ];\n        const values = activeFilters.map(active => active.value);\n        activeFilters = activeFilters.filter((filter, key) => values.lastIndexOf(filter.value) === key);\n    } else {\n        activeFilters.splice(activeFilters.map(active => active.value).indexOf(item.value), 1);\n        if (items) {\n            items.forEach(subItem => {\n                activeFilters.splice(activeFilters.map(active => active.value).indexOf(subItem.value), 1);\n            });\n        }\n    }\n\n    return {\n        ...state,\n        activeFilters\n    };\n}\n\nexport function showTags(state, { payload, meta }) {\n    const { tags, ...activeSystemTag } = state.rows ? state.rows.find(({ id }) => meta.systemId === id) : state.entity || {};\n    return {\n        ...state,\n        tagModalLoaded: true,\n        activeSystemTag: {\n            ...activeSystemTag,\n            tags: Object.values(payload.results)[0],\n            tagsCount: meta.tagsCount,\n            page: payload.page,\n            perPage: payload.per_page,\n            tagsLoaded: true\n        }\n    };\n}\n\nexport function showTagsPending(state, { meta }) {\n    const { tags, ...activeSystemTag } = state.rows ? state.rows.find(({ id }) => meta.systemId === id) : state.entity || {};\n    return {\n        ...state,\n        tagModalLoaded: false,\n        activeSystemTag: {\n            ...activeSystemTag,\n            tagsCount: meta.tagsCount,\n            tagsLoaded: false\n        }\n    };\n}\n\nexport function toggleTagModalReducer(state, { payload: { isOpen } }) {\n    return {\n        ...state,\n        showTagDialog: isOpen,\n        activeSystemTag: undefined\n    };\n}\n\nexport function allTags(state, { payload: { results, total, page, per_page: perPage }, meta: { lastDateRequestTags } }) {\n    // only the latest request can change state\n    if (lastDateRequestTags < state.lastDateRequestTags) {\n        return state;\n    }\n\n    return {\n        ...state,\n        allTags: Object.entries(groupBy(results, ({ tag: { namespace } }) => namespace)).map(([key, value]) => ({\n            name: key,\n            tags: value\n        })),\n        allTagsPagination: {\n            perPage,\n            page\n        },\n        additionalTagsCount: total > perPage ? total - perPage : 0,\n        allTagsTotal: total,\n        allTagsLoaded: true,\n        tagModalLoaded: true\n    };\n}\n\nexport default {\n    [ACTION_TYPES.ALL_TAGS_FULFILLED]: allTags,\n    [ACTION_TYPES.ALL_TAGS_PENDING]: (state, { meta }) => (\n        { ...state, allTagsLoaded: false, tagModalLoaded: false, lastDateRequestTags: meta.lastDateRequestTags }\n    ),\n    [ACTION_TYPES.LOAD_ENTITIES_PENDING]: entitiesPending,\n    [ACTION_TYPES.LOAD_ENTITIES_FULFILLED]: entitiesLoaded,\n    [ACTION_TYPES.LOAD_ENTITIES_REJECTED]: loadingRejected,\n    [ACTION_TYPES.LOAD_TAGS_PENDING]: showTagsPending,\n    [ACTION_TYPES.LOAD_TAGS_FULFILLED]: showTags,\n    [ACTION_TYPES.ALL_TAGS_REJECTED]: loadingRejected,\n    [UPDATE_ENTITIES]: entitiesLoaded,\n    [SHOW_ENTITIES]: (state, action) => entitiesLoaded(state, {\n        payload: {\n            ...action.payload,\n            loaded: false\n        }\n    }),\n    [FILTER_SELECT]: selectFilter,\n    [SELECT_ENTITY]: selectEntity,\n    [CHANGE_SORT]: changeSort,\n    [CLEAR_FILTERS]: clearFilters,\n    [ENTITIES_LOADING]: (state, { payload: { isLoading } }) => ({ ...state, loaded: !isLoading }),\n    [TOGGLE_TAG_MODAL]: toggleTagModalReducer,\n    [CONFIG_CHANGED]: (state, { payload }) => ({ ...state, invConfig: payload })\n};\n"],"names":["DeleteModal","systemToRemove","handleModalToggle","isModalOpen","currentSytems","onConfirm","systemLabel","Array","isArray","length","display_name","variant","title","className","ouiaId","isOpen","onClose","appendTo","document","getElementsByClassName","body","hasGutter","size","isFilled","location","host","onClick","ActiveSystemProp","PropTypes","id","displayName","propTypes","defaultProps","maxWidth","content","OperatingSystemFormatter","operatingSystem","name","version","major","minor","TagWithDialog","count","loadTags","systemId","e","stopPropagation","onTagClick","connect","dispatch","toggleTagModal","undefined","RenderWrapper","Component","cmp","hideLoader","isRbacEnabled","inventoryRef","store","props","usePermissions","hasAccess","isLoading","ref","customRender","TagsModal","customFilters","filterTagsBy","onToggleModal","onApply","getTags","useDispatch","useState","filterBy","setFilterBy","selected","setSelected","perPage","page","statePagination","setStatePagination","showTagDialog","useSelector","entities","entityDetails","pagination","activeSystemTag","entity","allTagsPagination","shallowEqual","loaded","tagModalLoaded","tags","activeTags","filter","tag","Object","values","some","val","includes","slice","allTags","reduce","acc","flatten","map","filters","activeFilters","tagsCount","allTagsTotal","useEffect","fetchTags","fetchAllTags","debouncedFetch","useCallback","debounce","TagModal","tableProps","canSelectAll","rows","key","value","namespace","find","cells","width","toggleModal","label","placeholder","filterValues","onChange","_e","onUpdateData","columns","transforms","cellWidth","onSelect","bulkSelect","data","item","os_release","noDetail","widget","href","pathname","substr","event","rowClick","onRowClick","isMetaKey","ctrlKey","metaKey","which","preventDefault","defaultState","tagsLoaded","allTagsLoaded","invConfig","sortBy","direction","defaultColumns","renderFunc","TitleColumn","isStatic","systemProfile","operating_system","_id","culled","culled_timestamp","staleWarn","stale_warning_timestamp","stale","stale_timestamp","insightsId","insights_id","CullingInformation","staleWarning","render","msg","date","extraTitle","Date","toLocaleString","entitiesLoaded","state","payload","results","per_page","total","meta","lastDateRequest","mergeArraysByKey","created","loadingRejected","error","showTags","toggleTagModalReducer","ACTION_TYPES","lastDateRequestTags","entries","groupBy","additionalTagsCount","UPDATE_ENTITIES","SHOW_ENTITIES","action","FILTER_SELECT","items","active","lastIndexOf","splice","indexOf","forEach","subItem","SELECT_ENTITY","concat","CHANGE_SORT","CLEAR_FILTERS","defaultFilters","ENTITIES_LOADING","TOGGLE_TAG_MODAL","CONFIG_CHANGED"],"sourceRoot":""}