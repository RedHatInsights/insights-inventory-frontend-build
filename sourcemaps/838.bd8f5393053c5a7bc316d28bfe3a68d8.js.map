{"version":3,"file":"js/838.f11977d5e9d2da33d925.js","mappings":"83BAQA,IAAMA,EAAqB,SAAC,GAAD,UACvBC,EADuB,EACvBA,eACAC,EAFuB,EAEvBA,YACAC,EAHuB,EAGvBA,aACAC,EAJuB,EAIvBA,QACAC,EALuB,EAKvBA,UACAC,EANuB,EAMvBA,QACAC,EAPuB,EAOvBA,QACAC,EARuB,EAQvBA,cACAC,EATuB,EASvBA,MATuB,OAUpB,kBAAC,IAAD,CACHC,MAAM,iBACNC,WAAaR,EACbS,MAAK,kBACER,EAAU,CAAC,CAAEM,MAAO,OAAQG,MAAOZ,EAAea,OAAU,KAD9D,OAEET,EAAY,CAAC,CAAEK,MAAO,SAAUG,MAAOZ,EAAec,SAAY,KAFpE,OAGET,EAAU,CAAC,CACVI,MAAO,iBACPG,MAAK,UAAEZ,EAAee,YAAjB,aAAE,EAAqBC,OAC5BC,OAAQ,YACRC,SAAU,UACVC,OAAQ,OACRC,QAAS,WACLnB,EACI,QACAoB,EAAAA,EAAAA,eAAcrB,EAAee,KAAM,kBAG1C,KAfJ,OAgBET,EAAU,CAAC,CACVG,MAAO,iBACPG,MAAK,UAAEZ,EAAesB,YAAjB,aAAE,EAAqBN,OAC5BC,OAAQ,YACRC,SAAU,UACVE,QAAS,WACLnB,EACI,QACAoB,EAAAA,EAAAA,eAAcrB,EAAesB,KAAM,kBAG1C,KA3BJ,OA4BEf,EAAgB,CAAC,CAChBE,MAAO,kBACPG,MAAK,UAAEZ,EAAeuB,YAAjB,aAAE,EAAqBP,OAC5BE,SAAU,MACVC,OAAQ,aACRC,QAAS,WACLnB,EACI,mBACAuB,EAAAA,EAAAA,iBAAgBxB,EAAeuB,MAC/B,aAGP,KAxCJ,OAyCEf,EAAMiB,KAAI,gBAAGL,EAAH,EAAGA,QAAH,4BAENA,GAAW,CAAEA,QAAS,SAACM,GAAD,OAAON,EAAQM,EAAGzB,cAKvDF,EAAmB4B,UAAY,CAC3BzB,aAAc0B,IAAAA,KACd3B,YAAa2B,IAAAA,KACb5B,eAAgB4B,IAAAA,MAAgB,CAC5Bf,KAAMe,IAAAA,OACNd,OAAQc,IAAAA,OACRb,KAAMa,IAAAA,MACNN,KAAMM,IAAAA,MACNL,KAAMK,IAAAA,QAEVzB,QAASyB,IAAAA,KACTxB,UAAWwB,IAAAA,KACXvB,QAASuB,IAAAA,KACTtB,QAASsB,IAAAA,KACTrB,cAAeqB,IAAAA,KACfpB,MAAOoB,IAAAA,QAAkBC,EAAAA,KAE7B9B,EAAmB+B,aAAe,CAC9B5B,cAAc,EACdD,YAAa,aACbE,SAAS,EACTC,WAAW,EACXC,SAAS,EACTC,SAAS,EACTC,eAAe,EACfC,MAAO,IAGX,SAAeuB,EAAAA,EAAAA,UAAQ,gBAEfC,EAFe,EACnBC,cACID,OAGAE,EALe,EAInBC,mBACID,cALe,MAOhB,CACHhC,aAAcgC,GAAiBA,EAAcE,OAC7CpC,gBAAgBqC,EAAAA,EAAAA,IAAuBH,EAAeF,MAT1D,CAUIjC","sources":["webpack:///./src/components/GeneralInfo/InfrastructureCard/InfrastructureCard.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport LoadingCard from '../LoadingCard';\nimport { generalMapper, interfaceMapper } from '../dataMapper';\nimport { infrastructureSelector } from '../selectors';\nimport { extraShape } from '../../../constants';\n\nconst InfrastructureCard = ({\n    infrastructure,\n    handleClick,\n    detailLoaded,\n    hasType,\n    hasVendor,\n    hasIPv4,\n    hasIPv6,\n    hasInterfaces,\n    extra\n}) => (<LoadingCard\n    title=\"Infrastructure\"\n    isLoading={ !detailLoaded }\n    items={ [\n        ...hasType ? [{ title: 'Type', value: infrastructure.type }] : [],\n        ...hasVendor ? [{ title: 'Vendor', value: infrastructure.vendor }] : [],\n        ...hasIPv4 ? [{\n            title: 'IPv4 addresses',\n            value: infrastructure.ipv4?.length,\n            plural: 'addresses',\n            singular: 'address',\n            target: 'ipv4',\n            onClick: () => {\n                handleClick(\n                    'IPv4',\n                    generalMapper(infrastructure.ipv4, 'IP address')\n                );\n            }\n        }] : [],\n        ...hasIPv6 ? [{\n            title: 'IPv6 addresses',\n            value: infrastructure.ipv6?.length,\n            plural: 'addresses',\n            singular: 'address',\n            onClick: () => {\n                handleClick(\n                    'IPv6',\n                    generalMapper(infrastructure.ipv6, 'IP address')\n                );\n            }\n        }] : [],\n        ...hasInterfaces ? [{\n            title: 'Interfaces/NICs',\n            value: infrastructure.nics?.length,\n            singular: 'NIC',\n            target: 'interfaces',\n            onClick: () => {\n                handleClick(\n                    'Interfaces/NICs',\n                    interfaceMapper(infrastructure.nics),\n                    'medium'\n                );\n            }\n        }] : [],\n        ...extra.map(({ onClick, ...item }) => ({\n            ...item,\n            ...onClick && { onClick: (e) => onClick(e, handleClick) }\n        }))\n    ] }\n/>);\n\nInfrastructureCard.propTypes = {\n    detailLoaded: PropTypes.bool,\n    handleClick: PropTypes.func,\n    infrastructure: PropTypes.shape({\n        type: PropTypes.string,\n        vendor: PropTypes.string,\n        ipv4: PropTypes.array,\n        ipv6: PropTypes.array,\n        nics: PropTypes.array\n    }),\n    hasType: PropTypes.bool,\n    hasVendor: PropTypes.bool,\n    hasIPv4: PropTypes.bool,\n    hasIPv6: PropTypes.bool,\n    hasInterfaces: PropTypes.bool,\n    extra: PropTypes.arrayOf(extraShape)\n};\nInfrastructureCard.defaultProps = {\n    detailLoaded: false,\n    handleClick: () => undefined,\n    hasType: true,\n    hasVendor: true,\n    hasIPv4: true,\n    hasIPv6: true,\n    hasInterfaces: true,\n    extra: []\n};\n\nexport default connect(({\n    entityDetails: {\n        entity\n    },\n    systemProfileStore: {\n        systemProfile\n    }\n}) => ({\n    detailLoaded: systemProfile && systemProfile.loaded,\n    infrastructure: infrastructureSelector(systemProfile, entity)\n}))(InfrastructureCard);\n"],"names":["InfrastructureCard","infrastructure","handleClick","detailLoaded","hasType","hasVendor","hasIPv4","hasIPv6","hasInterfaces","extra","title","isLoading","items","value","type","vendor","ipv4","length","plural","singular","target","onClick","generalMapper","ipv6","nics","interfaceMapper","map","e","propTypes","PropTypes","extraShape","defaultProps","connect","entity","entityDetails","systemProfile","systemProfileStore","loaded","infrastructureSelector"],"sourceRoot":""}