{"version":3,"sources":["webpack:///./src/App.js","webpack:///./src/Routes.js","webpack:///./src/components/PermissionsLoader.js","webpack:///./src/components/inventory/Advisor.js","webpack:///./src/components/inventory/Compliance.js","webpack:///./src/components/inventory/Vulnerability.js","webpack:///./src/config.js","webpack:///./src/hooks/useInventoryWritePermissions.js","webpack:///./src/store/index.js","webpack:///./src/store/permissions/reducer.js","webpack:///./src/store/reducers.js","webpack:///./src/store/systemProfileStore.js","webpack:///./src/App.scss","webpack:///./src/App.scss?75e2"],"names":["history","useHistory","useEffect","insights","chrome","init","identifyApp","INVENTORY_ROOT","on","event","push","navId","location","search","hash","className","InventoryTable","lazy","InventoryDetail","routes","table","detail","Routes","getRegistry","useContext","RegistryContext","register","reducers","technology","app","pathName","window","pathname","split","searchParams","URLSearchParams","shift","Object","values","some","route","matchPath","href","path","document","baseURI","Suspense","fallback","Switch","Route","exact","render","status","getAll","source","filterbyName","tagsFilter","reduce","tagsMapper","page","perPage","rootClass","component","useInventoryWritePermissions","isLoading","hasAccess","dispatch","useDispatch","type","ACTION_TYPES","payload","writePermissions","appName","module","store","useStore","customItnl","intlProps","locale","navigator","language","Compliance","params","useRouteMatch","inventoryId","customItnlProvider","entity","id","usePermissions","middlewareListener","createContext","MiddlewareListener","middleware","ReducerRegistry","getMiddleware","promise","notificationsMiddleware","errorDescriptionKey","applyReducerHash","state","loadingFailed","loading","undefined","defaultState","loaded","selected","Map","isEntitled","service","sessionStorage","getItem","is_entitled","entitiesLoaded","rows","mergeArraysByKey","results","entities","entityLoaded","entitlements","activeApps","title","name","GeneralInformationTab","AdvisorTab","VulnerabilityTab","ComplianceTab","PatchMan","filter","Boolean","entitySelected","forEach","row","set","selectedRow","find","delete","clear","entityDeleted","meta","systems","onEntitiesLoaded","map","result","has","onSetFilter","activeFilters","filtersList","onSetPagination","parseInt","isNaN","notifications","notificationsReducer","systemProfileStore","permissionsReducer","SystemPackageListStore","SystemAdvisoryListStore","entitiesReducer","LOAD_ENTITIES_FULFILLED","SELECT_ENTITY","SET_INVENTORY_FILTER","SET_PAGINATION","entitesDetailReducer","sizes","formatBytes","bytes","Number","index","Math","floor","log","parseFloat","pow","toFixed","interfaces","repos","systemProfile","system_profile","ramSize","system_memory_bytes","repositories","yum_repos","acc","curr","enabled","disabled","network","network_interfaces","ipv4","ipv4_addresses","ipv6","ipv6_addresses","___CSS_LOADER_EXPORT___","i","update","hot","invalidate","oldLocals","accept","a","b","isNamedExport","p","isEqualLocals","dispose"],"mappings":"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","file":"js/187.46b5b7cc54869feef0e7.js","sourcesContent":["import React, { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Routes } from './Routes';\nimport './App.scss';\nimport { INVENTORY_ROOT } from './config';\nimport { NotificationsPortal } from '@redhat-cloud-services/frontend-components-notifications/';\nimport PermissionLoader from './components/PermissionsLoader';\n\nconst App = () => {\n    const history = useHistory();\n    useEffect(() => {\n        insights.chrome.init();\n        insights.chrome.identifyApp(INVENTORY_ROOT);\n        return insights.chrome.on(\n            'APP_NAVIGATION',\n            event => history.push(`/${event.navId}${location.search}${location.hash}`)\n        );\n    }, []);\n\n    return (\n        <div className=\"inventory\">\n            <NotificationsPortal />\n            <PermissionLoader />\n            <Routes />\n        </div>\n    );\n};\n\nexport default App;\n","import { Route, Switch, matchPath, useHistory } from 'react-router-dom';\nimport React, { lazy, Suspense, useContext, useEffect } from 'react';\nimport { tagsMapper } from './constants';\nimport { reducers, RegistryContext } from './store';\n\nconst InventoryTable = lazy(() => import('./routes/InventoryTable'));\nconst InventoryDetail = lazy(() => import('./routes/InventoryDetail'));\n\nexport const routes = {\n    table: '/',\n    detail: '/:inventoryId'\n};\n\nfunction checkPaths(technology, app) {\n    return Object\n    .values(routes)\n    .some(\n        route => {\n            return matchPath(location.href, { path: `${document.baseURI}${technology}/${app}${route}` });\n        }\n    );\n}\n\nexport const Routes = () => {\n    const { getRegistry } = useContext(RegistryContext);\n    useEffect(() => {\n        getRegistry().register(reducers);\n    }, [getRegistry]);\n    const history = useHistory();\n    const pathName = window.location.pathname.split('/');\n    const searchParams = new URLSearchParams(location.search);\n    pathName.shift();\n\n    if (pathName[0] === 'beta') {\n        pathName.shift();\n    }\n\n    if (!checkPaths(pathName[0], pathName[1])) {\n        history.push(`${routes.table}${location.search}${location.hash}`);\n    }\n\n    return (\n        <Suspense fallback=\"\">\n            <Switch>\n                <Route\n                    exact\n                    path={routes.table}\n                    render={() => <InventoryTable\n                        status={searchParams.getAll('status')}\n                        source={searchParams.getAll('source')}\n                        filterbyName={searchParams.getAll('hostname_or_id')}\n                        tagsFilter={searchParams.getAll('tags')?.[0]?.split?.(',').reduce?.(tagsMapper, [])}\n                        page={searchParams.getAll('page')}\n                        perPage={searchParams.getAll('per_page')}\n                    />}\n                    rootClass='inventory'\n                />\n                <Route path={routes.detail} component={InventoryDetail} rootClass='inventory' />\n            </Switch>\n        </Suspense>\n    );\n};\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport useInventoryWritePermissions from '../hooks/useInventoryWritePermissions';\nimport { ACTION_TYPES } from '../constants';\n\nconst PermissionLoader = () => {\n    const { isLoading, hasAccess } = useInventoryWritePermissions();\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch({ type: `${ACTION_TYPES.LOAD_WRITE_PERMISSIONS}_PENDING` });\n    }, []);\n\n    useEffect(() => {\n        if (!isLoading) {\n            dispatch({ type: `${ACTION_TYPES.LOAD_WRITE_PERMISSIONS}_FULFILLED`, payload: { writePermissions: hasAccess } });\n        }\n    }, [isLoading]);\n\n    return null;\n};\n\nexport default PermissionLoader;\n","import React from 'react';\nimport { useStore } from 'react-redux';\nimport AsyncComponent from '@redhat-cloud-services/frontend-components/AsyncComponent';\nimport fallback from '../SpinnerFallback';\n\nconst AdvisorTab = () => {\n    return <AsyncComponent\n        appName=\"advisor\"\n        module=\"./SystemDetail\"\n        fallback={fallback}\n        store={useStore()}\n        customItnl\n        intlProps={{\n            locale: navigator.language\n        }}\n    />;\n};\n\nexport default AdvisorTab;\n","import React, { lazy, Suspense } from 'react';\nimport { useRouteMatch } from 'react-router-dom';\n\nconst Compliance = lazy(() => import('@redhat-cloud-services/frontend-components-inventory-compliance/Compliance'));\n\nconst ComplianceTab = () => {\n    const { params } = useRouteMatch('/:inventoryId');\n\n    return (\n        <Suspense fallback=\"\">\n            <Compliance customItnl intlProps={{\n                locale: navigator.language\n            }} inventoryId={ params.inventoryId } />\n        </Suspense>\n    );\n};\n\nexport default ComplianceTab;\n","import React, { useContext } from 'react';\nimport { useRouteMatch } from 'react-router-dom';\nimport { RegistryContext } from '../../store';\nimport AsyncComponent from '@redhat-cloud-services/frontend-components/AsyncComponent';\nimport fallback from '../SpinnerFallback';\n\nconst VulnerabilityTab = () => {\n    const { params } = useRouteMatch('/:inventoryId');\n    const { getRegistry } = useContext(RegistryContext);\n\n    return <AsyncComponent\n        appName=\"vulnerability\"\n        module=\"./SystemDetail\"\n        getRegistry={getRegistry}\n        fallback={fallback}\n        customItnlProvider\n        entity={ { id: params.inventoryId } }\n    />;\n};\n\nexport default VulnerabilityTab;\n","\nexport const INVENTORY_API_BASE = '/api/inventory/v1';\nexport const INVENTORY_ROOT = 'inventory';\n","import { usePermissions } from '@redhat-cloud-services/frontend-components-utilities/RBACHook';\n\nconst useInventoryWritePermissions = () => {\n    const { hasAccess, ...rest } = usePermissions('inventory', [\n        'inventory:*:*',\n        'inventory:hosts:write',\n        'inventory:*:write'\n    ]);\n\n    return { ...rest, hasAccess };\n};\n\nexport default useInventoryWritePermissions;\n","\nimport { createContext } from 'react';\nimport MiddlewareListener from '@redhat-cloud-services/frontend-components-utilities/MiddlewareListener';\nimport { ReducerRegistry } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport notificationsMiddleware from '@redhat-cloud-services/frontend-components-notifications/notificationsMiddleware';\nimport promise  from 'redux-promise-middleware';\nexport { default as reducers, entitiesReducer, entitesDetailReducer } from './reducers';\n\nexport const RegistryContext = createContext({\n    getRegistry: () => {}\n});\n\nlet middlewareListener;\n\nexport function init (...middleware) {\n    middlewareListener = new MiddlewareListener();\n    return new ReducerRegistry(\n        {},\n        [\n            middlewareListener.getMiddleware(),\n            promise,\n            notificationsMiddleware({\n                errorDescriptionKey: ['detail', 'stack']\n            }),\n            ...middleware\n        ]\n    );\n}\n\nexport function addNewListener ({ actionType, callback }) {\n    return middlewareListener.addNew({\n        on: actionType,\n        callback\n    });\n}\n","import { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport { ACTION_TYPES } from '../../constants';\n\nconst loadWritePermissionsPending = (state) => ({\n    ...state,\n    loadingFailed: false,\n    loading: true,\n    writePermissions: undefined\n});\n\nconst loadWritePermissionsFulfilled = (state, { payload }) => ({\n    ...state,\n    loading: false,\n    loadingFailed: false,\n    writePermissions: payload.writePermissions\n});\n\nconst loadWritePermissionsFailed = (state) => ({\n    ...state,\n    loading: false,\n    loadingFailed: true\n});\n\nconst defaultPermissionState = {\n    loading: true,\n    writePermissions: false,\n    loadingFailed: false\n};\n\nconst permissionsReducer = applyReducerHash(\n    {\n        [`${ACTION_TYPES.LOAD_WRITE_PERMISSIONS}_PENDING`]: loadWritePermissionsPending,\n        [`${ACTION_TYPES.LOAD_WRITE_PERMISSIONS}_FULFILLED`]: loadWritePermissionsFulfilled,\n        [`${ACTION_TYPES.LOAD_WRITE_PERMISSIONS}_FAILED`]: loadWritePermissionsFailed\n    },\n    defaultPermissionState\n);\n\nexport default permissionsReducer;\n","import { ACTION_TYPES, SELECT_ENTITY, SET_INVENTORY_FILTER, SET_PAGINATION } from '../constants';\nimport systemProfileStore from './systemProfileStore';\nimport {\n    ComplianceTab,\n    VulnerabilityTab,\n    AdvisorTab,\n    GeneralInformationTab\n} from '../components/inventory';\nimport PatchMan, {\n    SystemPackageListStore,\n    SystemAdvisoryListStore\n} from '@redhat-cloud-services/frontend-components-inventory-patchman/dist/esm';\nimport { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport { mergeArraysByKey } from '@redhat-cloud-services/frontend-components-utilities/helpers';\nimport { notificationsReducer } from '@redhat-cloud-services/frontend-components-notifications/redux';\n\nimport permissionsReducer from './permissions/reducer';\n\nconst defaultState = { loaded: false, selected: new Map() };\n\nconst isEntitled = (service) => {\n    if (window.sessionStorage.getItem('disableEntitlements') === 'true') {\n        return true;\n    }\n\n    return service && service.is_entitled;\n};\n\nfunction entitiesLoaded(state, { payload }) {\n    return {\n        ...state,\n        rows: mergeArraysByKey([state.rows, payload.results]),\n        entities: mergeArraysByKey([state.entities, payload.results])\n    };\n}\n\nfunction entityLoaded(state, { payload: { entitlements } } = { payload: {} }) {\n    return {\n        ...state,\n        loaded: true,\n        activeApps: [\n            { title: 'General information', name: 'general_information', component: GeneralInformationTab },\n            isEntitled(entitlements && entitlements.insights) && { title: 'Advisor', name: 'advisor', component: AdvisorTab },\n            isEntitled(entitlements && entitlements.insights) && {\n                title: 'Vulnerability',\n                name: 'vulnerabilities',\n                component: VulnerabilityTab\n            },\n            isEntitled(entitlements && entitlements.insights) && {\n                title: 'Compliance',\n                name: 'compliance',\n                component: ComplianceTab\n            },\n            isEntitled(entitlements && entitlements.insights) && {\n                title: 'Patch',\n                name: 'patch',\n                component: PatchMan\n            }\n        ].filter(Boolean)\n    };\n}\n\nfunction entitySelected(state, { payload }) {\n    const selected = state.selected || (new Map());\n    if (payload.selected) {\n        if (payload.id === 0) {\n            state.rows.forEach(row => selected.set(row.id, row));\n        } else {\n            const selectedRow = state.rows && state.rows.find(({ id }) => id === payload.id);\n            selected.set(payload.id, { ...selectedRow || {}, id: payload.id });\n        }\n    } else {\n        if (payload.id === 0) {\n            state.rows.forEach(row => selected.delete(row.id));\n        } else if (payload.id === -1) {\n            selected.clear();\n        } else {\n            selected.delete(payload.id);\n        }\n    }\n\n    return {\n        ...state,\n        selected: new Map(selected)\n    };\n}\n\nfunction entityDeleted(state, { meta }) {\n    const selected = state.selected || (new Map());\n    meta.systems.forEach(id => selected.delete(id));\n\n    return {\n        ...state,\n        selected: new Map(selected)\n    };\n}\n\nfunction onEntitiesLoaded(state, { payload }) {\n    return {\n        ...state,\n        rows: mergeArraysByKey([state.rows, payload.results.map(result => {\n            return {\n                ...result,\n                selected: state.selected && state.selected.has(result.id)\n            };\n        })])\n    };\n}\n\nfunction onSetFilter(state, { payload }) {\n    return {\n        ...state,\n        activeFilters: payload.filtersList\n    };\n}\n\nfunction onSetPagination(state, { payload }) {\n    const perPage = parseInt(payload.perPage, 10);\n    const page = parseInt(payload.page, 10);\n    return {\n        ...state,\n        perPage: isNaN(perPage) ? 50 : perPage,\n        page: isNaN(page) ? 1 : page\n    };\n}\n\nlet reducers = {\n    notifications: notificationsReducer,\n    systemProfileStore,\n    permissionsReducer,\n    SystemPackageListStore,\n    SystemAdvisoryListStore\n};\n\nexport const entitiesReducer = ({ LOAD_ENTITIES_FULFILLED }) => applyReducerHash(\n    {\n        [ACTION_TYPES.GET_ENTITIES_FULFILLED]: entitiesLoaded,\n        [LOAD_ENTITIES_FULFILLED]: onEntitiesLoaded,\n        [`${ACTION_TYPES.REMOVE_ENTITY}_FULFILLED`]: entityDeleted,\n        [SELECT_ENTITY]: entitySelected,\n        FILTER_SELECT: (state) => ({ ...state, selected: {} }),\n        [SET_INVENTORY_FILTER]: onSetFilter,\n        [SET_PAGINATION]: onSetPagination\n    },\n    defaultState\n);\n\nexport const entitesDetailReducer = () => applyReducerHash(\n    {\n        [ACTION_TYPES.GET_ENTITY_FULFILLED]: entityLoaded\n    },\n    defaultState\n);\n\nexport default reducers;\n","import { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport { ACTION_TYPES } from '../constants';\n\nexport const defaultState = { loaded: false };\n\nexport const sizes = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n\n// Kudos to https://stackoverflow.com/a/18650828/2560321\nexport const formatBytes = (bytes) => {\n    if (bytes === 0 || isNaN(Number(bytes))) {\n        return '0 B';\n    }\n\n    const index = Math.floor(Math.log(bytes) / Math.log(1024));\n    return `${parseFloat((bytes / Math.pow(1024, index)).toFixed(2))} ${sizes[index]}`;\n};\n\nexport function systemProfilePending(state) {\n    return {\n        ...state,\n        systemProfile: {\n            loaded: false\n        }\n    };\n}\n\nexport function calculateRepos(repos) {\n    return repos && repos.reduce((acc, curr) => ({\n        ...acc,\n        ...curr.enabled ? {\n            enabled: [...acc.enabled, curr]\n        } : {\n            disabled: [...acc.disabled, curr]\n        }\n    }), { enabled: [], disabled: [] });\n}\n\nexport function calculateInterfaces(interfaces) {\n    return interfaces && interfaces.reduce((acc, curr) => ({\n        interfaces: [...acc.interfaces, curr],\n        ipv4: [...acc.ipv4, ...curr.ipv4_addresses || []].filter(Boolean),\n        ipv6: [...acc.ipv6, ...curr.ipv6_addresses || []].filter(Boolean)\n    }), { interfaces: [], ipv4: [], ipv6: [] });\n}\n\nexport function onSystemProfile(state, { payload: { results } }) {\n    const systemProfile = (results && results[0] && results[0].system_profile) || {};\n    return {\n        ...state,\n        systemProfile: {\n            loaded: true,\n            ...systemProfile,\n            ramSize: systemProfile.system_memory_bytes && formatBytes(systemProfile.system_memory_bytes),\n            repositories: calculateRepos(systemProfile.yum_repos),\n            network: calculateInterfaces(systemProfile.network_interfaces)\n        }\n    };\n}\n\nexport default applyReducerHash(\n    {\n        [ACTION_TYPES.LOAD_SYSTEM_PROFILE_FULFILLED]: onSystemProfile,\n        [ACTION_TYPES.LOAD_SYSTEM_PROFILE_PENDING]: systemProfilePending\n    },\n    {\n        systemProfile: defaultState\n    }\n);\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_AT_RULE_IMPORT_0___ from \"-!../node_modules/css-loader/dist/cjs.js!../node_modules/@redhat-cloud-services/frontend-components/index.css\";\nimport ___CSS_LOADER_AT_RULE_IMPORT_1___ from \"-!../node_modules/css-loader/dist/cjs.js!../node_modules/@redhat-cloud-services/frontend-components-notifications/index.css\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_0___);\n___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_1___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".inventory{}.inventory button:focus{outline:none}.inventory table.ins-entity-table th{padding:1rem;padding-left:2rem}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/App.scss\"],\"names\":[],\"mappings\":\"AAAA,WAAU,CAAV,wBACiK,YAAY,CAD7K,qCACwM,YAAY,CAAC,iBAAiB\",\"sourcesContent\":[\".inventory{\\n@import url(~@redhat-cloud-services/frontend-components/index.css);@import url(~@redhat-cloud-services/frontend-components-notifications/index.css);button:focus{outline:none}table.ins-entity-table th{padding:1rem;padding-left:2rem}\\n\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import api from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../node_modules/css-loader/dist/cjs.js!../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../node_modules/sass-loader/dist/cjs.js!./App.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../node_modules/css-loader/dist/cjs.js!../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../node_modules/sass-loader/dist/cjs.js!./App.scss\",\n      function () {\n        if (!isEqualLocals(oldLocals, content.locals, undefined)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nexport default content.locals || {};"],"sourceRoot":""}