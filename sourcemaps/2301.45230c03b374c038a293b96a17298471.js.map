{"version":3,"file":"js/2301.415b5e19dcbad41ba6c5.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-core/dist/esm/components/EmptyState/EmptyStateSecondaryActions.js","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/plus-circle-icon.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_palette_black_600.js","webpack:///./node_modules/@patternfly/react-tokens/dist/esm/global_warning_color_100.js","webpack:///./src/components/InventoryGroups/Modals/DeleteGroupModal.js","webpack:///./src/components/InventoryGroups/Modals/RenameGroupModal.js","webpack:///./src/components/InventoryGroups/NoGroupsEmptyState.js","webpack:///./node_modules/lodash/difference.js"],"sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/EmptyState/empty-state';\nexport const EmptyStateSecondaryActions = (_a) => {\n    var { children = null, className = '' } = _a, props = __rest(_a, [\"children\", \"className\"]);\n    return (React.createElement(\"div\", Object.assign({ className: css(styles.emptyStateSecondary, className) }, props), children));\n};\nEmptyStateSecondaryActions.displayName = 'EmptyStateSecondaryActions';\n//# sourceMappingURL=EmptyStateSecondaryActions.js.map","import { createIcon } from '../createIcon';\n\nexport const PlusCircleIconConfig = {\n  name: 'PlusCircleIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm144 276c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92h-92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const PlusCircleIcon = createIcon(PlusCircleIconConfig);\n\nexport default PlusCircleIcon;","\"use strict\";\nexports.__esModule = true;\nexports.global_palette_black_600 = {\n  \"name\": \"--pf-global--palette--black-600\",\n  \"value\": \"#6a6e73\",\n  \"var\": \"var(--pf-global--palette--black-600)\"\n};\nexports[\"default\"] = exports.global_palette_black_600;","export const global_warning_color_100 = {\n  \"name\": \"--pf-global--warning-color--100\",\n  \"value\": \"#f0ab00\",\n  \"var\": \"var(--pf-global--warning-color--100)\"\n};\nexport default global_warning_color_100;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport Modal from './Modal';\nimport { deleteGroupsById } from '../utils/api';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons/dist/esm/icons/exclamation-triangle-icon';\nimport warningColor from '@patternfly/react-tokens/dist/esm/global_warning_color_100';\nimport { Text } from '@patternfly/react-core';\nimport apiWithToast from '../utils/apiWithToast';\nimport { useDispatch } from 'react-redux';\n\nconst description = (name = '', groupsCount) => {\n    const isMultiple = name === '' && groupsCount;\n\n    return isMultiple ? (\n        <Text>\n            <strong>{groupsCount}</strong> groups and all their data will be\n            permanently deleted. Associated systems will be removed from the\n            groups but will not be deleted.\n        </Text>\n    ) : (\n        <Text>\n            <strong>{name}</strong> and all its data will be\n            permanently deleted. Associated systems will be removed from the\n            group but will not be deleted.\n        </Text>\n    );\n};\n\nconst schema = (name, groupsCount) => ({\n    fields: [\n        {\n            component: componentTypes.PLAIN_TEXT,\n            name: 'warning-message',\n            label: description(name, groupsCount)\n        },\n        {\n            component: componentTypes.CHECKBOX,\n            name: 'confirmation',\n            label: 'I understand that this action cannot be undone.',\n            validate: [{ type: validatorTypes.REQUIRED }]\n        }\n    ]\n});\n\nconst defaultValueToBeRemoved = () => console.log('data reloaded');\n\nconst DeleteGroupModal = ({\n    isModalOpen,\n    setIsModalOpen,\n    reloadData = defaultValueToBeRemoved,\n    modalState\n}) => {\n    const { id, name, ids } = modalState;\n    const isMultiple = (ids || []).length > 0;\n    const dispatch = useDispatch();\n\n    const handleDeleteGroup = () => {\n        const statusMessages = {\n            onSuccess: {\n                title: 'Success',\n                description: `${name} has been removed successfully`\n            },\n            onError: { title: 'Error', description: 'Failed to delete group' }\n        };\n        apiWithToast(dispatch, () => deleteGroupsById(isMultiple ? ids : [id]), statusMessages);\n    };\n\n    return (\n        <Modal\n            isModalOpen={isModalOpen}\n            closeModal={() => setIsModalOpen(false)}\n            title={isMultiple ? 'Delete groups?' : 'Delete group?'}\n            titleIconVariant={() => (\n                <ExclamationTriangleIcon color={warningColor.value} />\n            )}\n            variant=\"danger\"\n            submitLabel=\"Delete\"\n            schema={schema(name, (ids || []).length)}\n            onSubmit={handleDeleteGroup}\n            reloadData={reloadData}\n        />\n    );\n};\n\nDeleteGroupModal.propTypes = {\n    modalState: PropTypes.shape({\n        id: PropTypes.string,\n        name: PropTypes.string,\n        ids: PropTypes.array\n    }),\n    isModalOpen: PropTypes.bool,\n    setIsModalOpen: PropTypes.func,\n    reloadData: PropTypes.func\n};\nexport default DeleteGroupModal;\n","import React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport Modal from './Modal';\nimport awesomeDebouncePromise from 'awesome-debounce-promise';\nimport { validateGroupName, updateGroupById } from '../utils/api';\nimport { nameValidator } from '../helpers/validate';\nimport apiWithToast from '../utils/apiWithToast';\nimport { useDispatch } from 'react-redux';\n\nconst renameGroupSchema = (namePresenceValidator) => ({\n    fields: [\n        {\n            component: componentTypes.TEXT_FIELD,\n            name: 'name',\n            label: 'Name',\n            helperText:\n          'Can only contain letters, numbers, spaces, hyphens ( - ), and underscores( _ ).',\n            isRequired: true,\n            validate: [\n                namePresenceValidator,\n                { type: validatorTypes.REQUIRED },\n                { type: validatorTypes.MAX_LENGTH, threshold: 50 },\n                nameValidator\n            ]\n        }\n    ]\n});\n\nconst RenameGroupModal = ({\n    isModalOpen,\n    setIsModalOpen,\n    modalState,\n    reloadData\n}) => {\n    const { id, name } = modalState;\n    const dispatch = useDispatch();\n\n    const handleRenameModal = (values) => {\n        const statusMessages = {\n            onSuccess: {\n                title: 'Success',\n                description: `${name} has been renamed to ${values.name} successfully`\n            },\n            onError: { title: 'Error', description: 'Failed to rename group' }\n        };\n        apiWithToast(dispatch, () => updateGroupById(id, values), statusMessages);\n    };\n\n    const schema = useMemo(() => {\n        const check = async (value) => {\n            const results = await validateGroupName(value);\n            if (results === true) {\n                throw 'Group name already exists';\n            }\n\n            return undefined;\n        };\n\n        // eslint-disable-next-line new-cap\n        const d = awesomeDebouncePromise(check, 500, { onlyResolvesLast: false });\n        return renameGroupSchema(d);\n    }, []);\n\n    return (\n        <Modal\n            isModalOpen={isModalOpen}\n            closeModal={() => setIsModalOpen(false)}\n            title=\"Rename group\"\n            submitLabel=\"Save\"\n            schema={schema}\n            initialValues={modalState}\n            onSubmit={handleRenameModal}\n            reloadData={reloadData}\n        />\n    );\n};\n\nRenameGroupModal.propTypes = {\n    modalState: PropTypes.shape({\n        id: PropTypes.string,\n        name: PropTypes.string\n    }),\n    isModalOpen: PropTypes.bool,\n    setIsModalOpen: PropTypes.func,\n    reloadData: PropTypes.func\n};\n\nexport default RenameGroupModal;\n","import React, { useState } from 'react';\nimport {\n    Button,\n    EmptyState,\n    EmptyStateBody,\n    EmptyStateIcon,\n    EmptyStateSecondaryActions,\n    Title\n} from '@patternfly/react-core';\nimport { ExternalLinkAltIcon, PlusCircleIcon } from '@patternfly/react-icons';\n\nimport { global_palette_black_600 as globalPaletteBlack600 } from '@patternfly/react-tokens/dist/js/global_palette_black_600';\nimport CreateGroupModal from './Modals/CreateGroupModal';\n\nconst NoGroupsEmptyState = () => {\n    const [createGroupModalOpen, setCreateGroupModalOpen] = useState(false);\n\n    return (\n        <EmptyState\n            data-ouia-component-id=\"empty-state\"\n            data-ouia-component-type=\"PF4/EmptyState\"\n            data-ouia-safe={true}\n        >\n            <CreateGroupModal\n                isModalOpen={createGroupModalOpen}\n                setIsModalOpen={setCreateGroupModalOpen}\n            //Todo: reloadData={reloadData}  add refetch data so the list of groups will update\n            />\n            <EmptyStateIcon icon={PlusCircleIcon} color={globalPaletteBlack600.value} />\n            <Title headingLevel=\"h4\" size=\"lg\">\n      Create a system group\n            </Title>\n            <EmptyStateBody>\n      Manage device operations efficiently by creating system groups.\n            </EmptyStateBody>\n            <Button variant=\"primary\" onClick={() => setCreateGroupModalOpen(true)}>Create group</Button>\n            <EmptyStateSecondaryActions>\n                <Button\n                    variant=\"link\"\n                    icon={<ExternalLinkAltIcon />}\n                    iconPosition=\"right\"\n                // TODO: component={(props) => <a href='' {...props} />}\n                >\n        Learn more about system groups\n                </Button>\n            </EmptyStateSecondaryActions>\n        </EmptyState>\n    );};\n\nexport default NoGroupsEmptyState;\n","var baseDifference = require('./_baseDifference'),\n    baseFlatten = require('./_baseFlatten'),\n    baseRest = require('./_baseRest'),\n    isArrayLikeObject = require('./isArrayLikeObject');\n\n/**\n * Creates an array of `array` values not included in the other given arrays\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons. The order and references of result values are\n * determined by the first array.\n *\n * **Note:** Unlike `_.pullAll`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {...Array} [values] The values to exclude.\n * @returns {Array} Returns the new array of filtered values.\n * @see _.without, _.xor\n * @example\n *\n * _.difference([2, 1], [2, 3]);\n * // => [1]\n */\nvar difference = baseRest(function(array, values) {\n  return isArrayLikeObject(array)\n    ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n    : [];\n});\n\nmodule.exports = difference;\n"],"names":["EmptyStateSecondaryActions","_a","children","className","props","__rest","Object","assign","displayName","PlusCircleIconConfig","name","height","width","svgPath","yOffset","xOffset","PlusCircleIcon","exports","description","groupsCount","isMultiple","Text","schema","fields","component","componentTypes","label","validate","type","validatorTypes","defaultValueToBeRemoved","console","log","DeleteGroupModal","isModalOpen","setIsModalOpen","reloadData","modalState","id","ids","length","dispatch","useDispatch","Modal","closeModal","title","titleIconVariant","color","warningColor","variant","submitLabel","onSubmit","statusMessages","onSuccess","onError","apiWithToast","deleteGroupsById","propTypes","PropTypes","i","RenameGroupModal","useMemo","namePresenceValidator","check","value","validateGroupName","undefined","awesomeDebouncePromise","onlyResolvesLast","helperText","isRequired","threshold","nameValidator","initialValues","values","updateGroupById","useState","createGroupModalOpen","setCreateGroupModalOpen","icon","globalPaletteBlack600","headingLevel","size","onClick","iconPosition","baseDifference","baseFlatten","baseRest","isArrayLikeObject","difference","array","module"],"sourceRoot":""}