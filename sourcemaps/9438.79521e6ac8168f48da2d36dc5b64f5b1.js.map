{"version":3,"file":"js/9438.409702d91675996b3911.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/outlined-arrow-alt-circle-down-icon.js","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/outlined-arrow-alt-circle-up-icon.js","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/outlined-question-circle-icon.js","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/pencil-alt-icon.js","webpack:///./src/components/GeneralInfo/EditButton/EditButton.js","webpack:///./src/components/GeneralInfo/SystemCard/SystemCard.js","webpack:///./src/components/GeneralInfo/TextInputModal/TextInputModal.js","webpack:///./src/components/GeneralInfo/dataMapper/dataMapper.js"],"sourcesContent":["import { createIcon } from '../createIcon';\n\nexport const OutlinedArrowAltCircleDownIconConfig = {\n  name: 'OutlinedArrowAltCircleDownIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm0 448c-110.5 0-200-89.5-200-200S145.5 56 256 56s200 89.5 200 200-89.5 200-200 200zm-32-316v116h-67c-10.7 0-16 12.9-8.5 20.5l99 99c4.7 4.7 12.3 4.7 17 0l99-99c7.6-7.6 2.2-20.5-8.5-20.5h-67V140c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const OutlinedArrowAltCircleDownIcon = createIcon(OutlinedArrowAltCircleDownIconConfig);\n\nexport default OutlinedArrowAltCircleDownIcon;","import { createIcon } from '../createIcon';\n\nexport const OutlinedArrowAltCircleUpIconConfig = {\n  name: 'OutlinedArrowAltCircleUpIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M256 504c137 0 248-111 248-248S393 8 256 8 8 119 8 256s111 248 248 248zm0-448c110.5 0 200 89.5 200 200s-89.5 200-200 200S56 366.5 56 256 145.5 56 256 56zm20 328h-40c-6.6 0-12-5.4-12-12V256h-67c-10.7 0-16-12.9-8.5-20.5l99-99c4.7-4.7 12.3-4.7 17 0l99 99c7.6 7.6 2.2 20.5-8.5 20.5h-67v116c0 6.6-5.4 12-12 12z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const OutlinedArrowAltCircleUpIcon = createIcon(OutlinedArrowAltCircleUpIconConfig);\n\nexport default OutlinedArrowAltCircleUpIcon;","import { createIcon } from '../createIcon';\n\nexport const OutlinedQuestionCircleIconConfig = {\n  name: 'OutlinedQuestionCircleIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M256 8C119.043 8 8 119.083 8 256c0 136.997 111.043 248 248 248s248-111.003 248-248C504 119.083 392.957 8 256 8zm0 448c-110.532 0-200-89.431-200-200 0-110.495 89.472-200 200-200 110.491 0 200 89.471 200 200 0 110.53-89.431 200-200 200zm107.244-255.2c0 67.052-72.421 68.084-72.421 92.863V300c0 6.627-5.373 12-12 12h-45.647c-6.627 0-12-5.373-12-12v-8.659c0-35.745 27.1-50.034 47.579-61.516 17.561-9.845 28.324-16.541 28.324-29.579 0-17.246-21.999-28.693-39.784-28.693-23.189 0-33.894 10.977-48.942 29.969-4.057 5.12-11.46 6.071-16.666 2.124l-27.824-21.098c-5.107-3.872-6.251-11.066-2.644-16.363C184.846 131.491 214.94 112 261.794 112c49.071 0 101.45 38.304 101.45 88.8zM298 368c0 23.159-18.841 42-42 42s-42-18.841-42-42 18.841-42 42-42 42 18.841 42 42z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const OutlinedQuestionCircleIcon = createIcon(OutlinedQuestionCircleIconConfig);\n\nexport default OutlinedQuestionCircleIcon;","import { createIcon } from '../createIcon';\n\nexport const PencilAltIconConfig = {\n  name: 'PencilAltIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M497.9 142.1l-46.1 46.1c-4.7 4.7-12.3 4.7-17 0l-111-111c-4.7-4.7-4.7-12.3 0-17l46.1-46.1c18.7-18.7 49.1-18.7 67.9 0l60.1 60.1c18.8 18.7 18.8 49.1 0 67.9zM284.2 99.8L21.6 362.4.4 483.9c-2.9 16.4 11.4 30.6 27.8 27.8l121.5-21.3 262.6-262.6c4.7-4.7 4.7-12.3 0-17l-111-111c-4.8-4.7-12.4-4.7-17.1 0zM124.1 339.9c-5.5-5.5-5.5-14.3 0-19.8l154-154c5.5-5.5 14.3-5.5 19.8 0s5.5 14.3 0 19.8l-154 154c-5.5 5.5-14.3 5.5-19.8 0zM88 424h48v36.3l-64.5 11.3-31.1-31.1L51.7 376H88v48z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const PencilAltIcon = createIcon(PencilAltIconConfig);\n\nexport default PencilAltIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { usePermissionsWithContext } from '@redhat-cloud-services/frontend-components-utilities/RBACHook';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\n\nimport { PencilAltIcon } from '@patternfly/react-icons';\n\nconst InnerButton = ({ link, onClick }) => (\n    <a\n        className=\"ins-c-inventory__detail--action\"\n        href={ `${window.location.href}/${link}` }\n        onClick={ onClick }\n    >\n        <PencilAltIcon />\n    </a>\n);\n\nInnerButton.propTypes = {\n    link: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired\n};\n\nlet permissionsCache = undefined;\n\nconst EditButtonUnknownPermissions = (props) => {\n    const { hasAccess } = usePermissionsWithContext([\n        'inventory:*:*',\n        'inventory:hosts:write',\n        'inventory:*:write'\n    ]);\n\n    if (hasAccess) {\n        permissionsCache = hasAccess;\n    }\n\n    if (!hasAccess) {\n        return null;\n    }\n\n    return <InnerButton {...props}/>;\n};\n\nEditButtonUnknownPermissions.propTypes = {\n    link: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired\n};\n\nconst EditButtonWrapper = ({ writePermissions, ...props }) => {\n    const { isProd } = useChrome();\n\n    if (isProd?.() || writePermissions || permissionsCache) {\n        return <InnerButton {...props} />;\n    }\n\n    if (typeof writePermissions !== 'boolean') {\n        return <EditButtonUnknownPermissions {...props} />;\n    }\n\n    return null;\n};\n\nEditButtonWrapper.propTypes = {\n    writePermissions: PropTypes.bool\n};\n\nexport default EditButtonWrapper;\n","import React, { Fragment, Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport LoadingCard from '../LoadingCard';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport { propertiesSelector } from '../selectors';\nimport { editDisplayName, editAnsibleHost } from '../../../store/actions';\nimport TextInputModal from '../TextInputModal';\nimport { Popover, Button } from '@patternfly/react-core';\nimport EditButton from '../EditButton';\nimport { generalMapper } from '../dataMapper';\nimport { extraShape } from '../../../constants';\n\nconst TitleWithPopover = ({ title, content }) => (\n    <React.Fragment>\n        <span>{ title }</span>\n        <Popover\n            headerContent={<div>{ title }</div>}\n            bodyContent={<div>{ content }</div>}>\n            <Button\n                variant=\"plain\"\n                aria-label={`Action for ${title}`}\n                className='ins-active-general_information__popover-icon'>\n                <OutlinedQuestionCircleIcon />\n            </Button>\n        </Popover>\n    </React.Fragment>\n);\n\nclass SystemCardCore extends Component {\n    state = {\n        isDisplayNameModalOpen: false,\n        isAnsibleHostModalOpen: false\n    };\n\n    onCancel = () => {\n        this.setState({\n            isDisplayNameModalOpen: false,\n            isAnsibleHostModalOpen: false\n        });\n    };\n\n    onSubmit = (fn, origValue) => (value) => {\n        const { entity } = this.props;\n        fn(entity.id, value, origValue);\n        this.onCancel();\n    }\n\n    onShowDisplayModal = (event) => {\n        event.preventDefault();\n        this.setState({\n            isDisplayNameModalOpen: true\n        });\n    };\n\n    onShowAnsibleModal = (event) => {\n        event.preventDefault();\n        this.setState({\n            isAnsibleHostModalOpen: true\n        });\n    };\n\n    getAnsibleHost = () => {\n        const { entity } = this.props;\n        return entity.ansible_host || entity.fqdn || entity.id;\n    };\n\n    render() {\n        const {\n            detailLoaded,\n            entity,\n            properties,\n            setDisplayName,\n            setAnsibleHost,\n            writePermissions,\n            handleClick,\n            hasHostName,\n            hasDisplayName,\n            hasAnsibleHostname,\n            hasSAP,\n            hasSystemPurpose,\n            hasCPUs,\n            hasSockets,\n            hasCores,\n            hasCPUFlags,\n            hasRAM,\n            extra\n        } = this.props;\n        const { isDisplayNameModalOpen, isAnsibleHostModalOpen } = this.state;\n        return (\n            <Fragment>\n                <LoadingCard\n                    title=\"System properties\"\n                    isLoading={ !detailLoaded }\n                    items={ [\n                        ...hasHostName ? [{\n                            title: <TitleWithPopover\n                                title='Host name'\n                                content='Name imported from the system.'/>,\n                            value: entity.fqdn, size: 'md'\n                        }] : [],\n                        ...hasDisplayName ? [{\n                            title: <TitleWithPopover\n                                title='Display name'\n                                content='System name displayed in an inventory list.'/>,\n                            value: (\n                                <Fragment>\n                                    { entity.display_name }\n                                    <EditButton\n                                        writePermissions={writePermissions}\n                                        link=\"display_name\"\n                                        onClick={this.onShowDisplayModal}\n                                    />\n                                </Fragment>\n                            ), size: 'md'\n                        }] : [],\n                        ...hasAnsibleHostname ? [{\n                            title: <TitleWithPopover\n                                title='Ansible hostname'\n                                content='Hostname that is used in playbooks by Remediations.'/>,\n                            value: (\n                                <Fragment>\n                                    { this.getAnsibleHost() }\n                                    <EditButton\n                                        writePermissions={writePermissions}\n                                        link=\"ansible_name\"\n                                        onClick={this.onShowAnsibleModal}\n                                    />\n                                </Fragment>\n                            ), size: 'md'\n                        }] : [],\n                        ...hasSAP ? [{\n                            title: 'SAP',\n                            value: properties.sapIds?.length,\n                            singular: 'identifier',\n                            target: 'sap_sids',\n                            onClick: () => {\n                                handleClick(\n                                    'SAP IDs (SID)',\n                                    generalMapper(properties.sapIds, 'SID')\n                                );\n                            }\n                        }] : [],\n                        ...hasSystemPurpose ? [{ title: 'System purpose', value: properties.systemPurpose }] : [],\n                        ...hasCPUs ? [{ title: 'Number of CPUs', value: properties.cpuNumber }] : [],\n                        ...hasSockets ? [{ title: 'Sockets', value: properties.sockets }] : [],\n                        ...hasCores ? [{ title: 'Cores per socket', value: properties.coresPerSocket }] : [],\n                        ...hasCPUFlags ? [{\n                            title: 'CPU flags',\n                            value: properties?.cpuFlags?.length,\n                            singular: 'flag',\n                            target: 'flag',\n                            onClick: () => handleClick('CPU flags', generalMapper(properties.cpuFlags, 'flag name'))\n                        }] : [],\n                        ...hasRAM ? [{ title: 'RAM', value: properties.ramSize }] : [],\n                        ...extra.map(({ onClick, ...item }) => ({\n                            ...item,\n                            ...onClick && { onClick: (e) => onClick(e, handleClick) }\n                        }))\n                    ] }\n                />\n                <TextInputModal\n                    isOpen={ isDisplayNameModalOpen }\n                    title='Edit display name'\n                    value={ entity && entity.display_name }\n                    ariaLabel='Host inventory display name'\n                    modalOuiaId=\"edit-display-name-modal\"\n                    cancelOuiaId=\"cancel-edit-display-name\"\n                    confirmOuiaId=\"confirm-edit-display-name\"\n                    inputOuiaId=\"input-edit-display-name\"\n                    onCancel={ this.onCancel }\n                    onSubmit={ this.onSubmit(setDisplayName, entity && entity.display_name) }\n                    className ='sentry-mask data-hj-suppress'\n                />\n                <TextInputModal\n                    isOpen={ isAnsibleHostModalOpen }\n                    title='Edit Ansible host'\n                    value={ entity && this.getAnsibleHost() }\n                    ariaLabel='Ansible host'\n                    modalOuiaId=\"edit-ansible-name-modal\"\n                    cancelOuiaId=\"cancel-edit-ansible-name\"\n                    confirmOuiaId=\"confirm-edit-ansible-name\"\n                    inputOuiaId=\"input-edit-ansible-name\"\n                    onCancel={ this.onCancel }\n                    onSubmit={ this.onSubmit(setAnsibleHost, entity && this.getAnsibleHost()) }\n                    className ='sentry-mask data-hj-suppress'\n                />\n            </Fragment>\n        );\n    }\n}\n\nSystemCardCore.propTypes = {\n    detailLoaded: PropTypes.bool,\n    entity: PropTypes.shape({\n        // eslint-disable-next-line camelcase\n        display_name: PropTypes.string,\n        // eslint-disable-next-line camelcase\n        ansible_host: PropTypes.string,\n        fqdn: PropTypes.string,\n        id: PropTypes.string\n    }),\n    properties: PropTypes.shape({\n        cpuNumber: PropTypes.number,\n        sockets: PropTypes.number,\n        coresPerSocket: PropTypes.number,\n        ramSize: PropTypes.string,\n        storage: PropTypes.arrayOf(PropTypes.shape({\n            device: PropTypes.string,\n            // eslint-disable-next-line camelcase\n            mount_point: PropTypes.string,\n            options: PropTypes.shape({}),\n            type: PropTypes.string\n        })),\n        sapIds: PropTypes.arrayOf(PropTypes.string),\n        systemPurpose: PropTypes.string,\n        cpuFlags: PropTypes.array\n    }),\n    setDisplayName: PropTypes.func,\n    setAnsibleHost: PropTypes.func,\n    writePermissions: PropTypes.bool,\n    handleClick: PropTypes.func,\n    hasHostName: PropTypes.bool,\n    hasDisplayName: PropTypes.bool,\n    hasAnsibleHostname: PropTypes.bool,\n    hasSAP: PropTypes.bool,\n    hasSystemPurpose: PropTypes.bool,\n    hasCPUs: PropTypes.bool,\n    hasSockets: PropTypes.bool,\n    hasCores: PropTypes.bool,\n    hasCPUFlags: PropTypes.bool,\n    hasRAM: PropTypes.bool,\n    extra: PropTypes.arrayOf(extraShape)\n};\nSystemCardCore.defaultProps = {\n    detailLoaded: false,\n    entity: {},\n    properties: {},\n    hasHostName: true,\n    hasDisplayName: true,\n    hasAnsibleHostname: true,\n    hasSAP: true,\n    hasSystemPurpose: true,\n    hasCPUs: true,\n    hasSockets: true,\n    hasCores: true,\n    hasCPUFlags: true,\n    hasRAM: true,\n    extra: []\n};\n\nTitleWithPopover.propTypes = {\n    title: PropTypes.string.isRequired,\n    content: PropTypes.string.isRequired\n};\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        setDisplayName: (id, value, origValue) => {\n            dispatch(editDisplayName(id, value, origValue));\n        },\n\n        setAnsibleHost: (id, value, origValue) => {\n            dispatch(editAnsibleHost(id, value, origValue));\n        }\n    };\n}\n\nexport const SystemCard = connect(({\n    entityDetails: {\n        entity\n    },\n    systemProfileStore: {\n        systemProfile\n    }\n}) => ({\n    entity,\n    detailLoaded: systemProfile && systemProfile.loaded,\n    properties: propertiesSelector(systemProfile, entity)\n}), mapDispatchToProps)(SystemCardCore);\n\nSystemCard.propTypes = SystemCardCore.propTypes;\nSystemCard.defaultProps = SystemCardCore.defaultProps;\n\nexport default SystemCard;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n    Button,\n    Modal,\n    TextInput\n} from '@patternfly/react-core';\n\nexport default class TextInputModal extends Component {\n    constructor (props) {\n        super(props);\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps (props, state) {\n        if (!props.isOpen) {\n            return { value: undefined };\n        }\n\n        if (state.value !== undefined) {\n            return null;\n        }\n\n        return {\n            value: props.value || ''\n        };\n    };\n\n    render () {\n        const {\n            title, isOpen, onCancel, onSubmit, ariaLabel, modalOuiaId, cancelOuiaId, confirmOuiaId, inputOuiaId\n        } = this.props;\n        const { value } = this.state;\n\n        return (\n            <Modal\n                variant=\"small\"\n                title={ title }\n                className=\"ins-c-inventory__detail--edit\"\n                aria-label={ ariaLabel ? `${ariaLabel} - modal` : 'input modal' }\n                ouiaId={ modalOuiaId }\n                isOpen={ isOpen }\n                onClose={ event => onCancel(event) }\n                actions={ [\n                    <Button key=\"cancel\" data-action=\"cancel\" variant=\"secondary\" onClick={ onCancel } ouiaId={ cancelOuiaId }>\n                        Cancel\n                    </Button>,\n                    <Button\n                        key=\"confirm\"\n                        data-action=\"confirm\"\n                        variant=\"primary\"\n                        onClick={ () => onSubmit(this.state.value) }\n                        ouiaId={ confirmOuiaId }\n                    >\n                        Save\n                    </Button>\n                ] }\n            >\n                <TextInput\n                    value={ value }\n                    type=\"text\"\n                    ouiaId={ inputOuiaId }\n                    onChange={ value => this.setState({ value }) }\n                    aria-label={ ariaLabel  }\n                />\n            </Modal>\n        );\n    }\n}\n\nTextInputModal.propTypes = {\n    title: PropTypes.string,\n    isOpen: PropTypes.bool,\n    onCancel: PropTypes.func,\n    onSubmit: PropTypes.func,\n    ariaLabel: PropTypes.string,\n    modalOuiaId: PropTypes.string,\n    cancelOuiaId: PropTypes.string,\n    confirmOuiaId: PropTypes.string,\n    inputOuiaId: PropTypes.string,\n    value: PropTypes.string\n};\n\nTextInputModal.defaultProps = {\n    onCancel: () => undefined,\n    onSubmit: () => undefined,\n    isOpen: false,\n    title: '',\n    ariaLabel: 'input text'\n};\n","/* eslint-disable camelcase */\n\nimport React from 'react';\nimport {\n    CheckCircleIcon,\n    TimesIcon,\n    OutlinedQuestionCircleIcon,\n    OutlinedArrowAltCircleUpIcon,\n    OutlinedArrowAltCircleDownIcon\n} from '@patternfly/react-icons';\nimport { sortable } from '@patternfly/react-table';\nimport { Tooltip } from '@patternfly/react-core';\n\nexport const statusHelper = {\n    UP: <Tooltip content=\"Service is running\">\n        <OutlinedArrowAltCircleUpIcon className=\"ins-c-inventory__detail--up\" />\n    </Tooltip>,\n    DOWN: <Tooltip content=\"Service has stopped\">\n        <OutlinedArrowAltCircleDownIcon className=\"ins-c-inventory__detail--down\" />\n    </Tooltip>\n};\n\nexport const enabledHelper = {\n    true: <Tooltip content=\"Source enabled\">\n        <CheckCircleIcon className=\"ins-c-inventory__detail--enabled\" />\n    </Tooltip>,\n    false: <Tooltip content=\"Source disabled\">\n        <TimesIcon className=\"ins-c-inventory__detail--disabled\" />\n    </Tooltip>\n};\n\nexport const diskMapper = (devices = []) => ({\n    cells: [\n        {\n            title: 'Device',\n            transforms: [sortable]\n        },\n        {\n            title: 'Label',\n            transforms: [sortable]\n        },\n        {\n            title: 'Mount point',\n            transforms: [sortable]\n        },\n        {\n            title: 'Type',\n            transforms: [sortable]\n        }\n    ],\n    rows: devices.map(({\n        device,\n        label,\n        mountpoint,\n        options,\n        mounttype\n    }) => {\n        const calculatedOptions = (options && options.options) || options;\n        return ({\n            isOpen: false,\n            child: <div>\n                {\n                    calculatedOptions &&\n                    Object.entries(calculatedOptions.value || calculatedOptions)\n                    .map(([oneKey, option]) => `${oneKey}=${option.value || option}`).join(',  ')\n                }\n            </div>,\n            cells: [\n                (device && device.value) || device,\n                label,\n                (mountpoint && mountpoint.value) || mountpoint,\n                (mounttype && mounttype.value) || mounttype\n            ]\n        });\n    }),\n    expandable: true\n});\n\nexport const productsMapper = (products = []) => ({\n    cells: [\n        {\n            title: 'Name',\n            transforms: [sortable]\n        },\n        'Status'\n    ],\n    rows: products.map(product => ([\n        product.name,\n        {\n            title: statusHelper[product.status] ||\n            <Tooltip content=\"Unknown service status\">\n                <OutlinedQuestionCircleIcon className=\"ins-c-inventory__detail--unknown\" />\n            </Tooltip>\n        }\n    ]))\n});\n\nexport const interfaceMapper = (data = []) => ({\n    cells: [\n        {\n            title: 'MAC address',\n            transforms: [sortable]\n        },\n        {\n            title: 'MTU',\n            transforms: [sortable]\n        },\n        {\n            title: 'Name',\n            transforms: [sortable]\n        },\n        'State',\n        {\n            title: 'Type',\n            transforms: [sortable]\n        }\n    ],\n    rows: data.map(item => ([\n        item.mac_address,\n        item.mtu,\n        item.name,\n        {\n            title: statusHelper[item.state] ||\n            <Tooltip content=\"Unknown service status\">\n                <OutlinedQuestionCircleIcon className=\"ins-c-inventory__detail--unknown\" />\n            </Tooltip>\n        },\n        item.type\n    ]))\n});\n\nexport const repositoriesMapper = ({ enabled, disabled } = { enabled: [], disabled: [] }) => ({\n    cells: [\n        {\n            title: 'Name',\n            transforms: [sortable]\n        },\n        {\n            title: 'Enabled',\n            transforms: [sortable]\n        },\n        {\n            title: 'GPG check',\n            transforms: [sortable]\n        }\n    ],\n    rows: [...enabled, ...disabled].map(repository => ([\n        {\n            title: repository.name,\n            sortValue: repository.name\n        },\n        {\n            title: enabledHelper[Boolean(repository.enabled)],\n            sortValue: `${repository.enabled}`\n        },\n        {\n            title: enabledHelper[Boolean(repository.gpgcheck)],\n            sortValue: `${repository.gpgcheck}`\n        }\n    ])),\n    filters: [\n        { type: 'textual' },\n        {\n            type: 'checkbox',\n            options: [\n                { label: 'Is enabled', value: 'true' },\n                { label: 'Not enabled', value: 'false' }\n            ]\n        },\n        {\n            type: 'checkbox',\n            options: [\n                { label: 'Is enabled', value: 'true' },\n                { label: 'Not enabled', value: 'false' }\n            ]\n        }\n    ]\n});\n\nexport const generalMapper = (data = [], title = '') => ({\n    cells: [{\n        title,\n        transforms: [sortable]\n    }],\n    rows: data.map(item => ([item])),\n    filters: [{ type: 'textual' }]\n});\n"],"names":["OutlinedArrowAltCircleDownIconConfig","name","height","width","svgPath","yOffset","xOffset","OutlinedArrowAltCircleDownIcon","OutlinedArrowAltCircleUpIconConfig","OutlinedArrowAltCircleUpIcon","OutlinedQuestionCircleIconConfig","OutlinedQuestionCircleIcon","PencilAltIconConfig","PencilAltIcon","InnerButton","link","onClick","className","href","window","location","propTypes","PropTypes","permissionsCache","undefined","EditButtonUnknownPermissions","props","hasAccess","usePermissionsWithContext","EditButtonWrapper","writePermissions","isProd","useChrome","TitleWithPopover","title","content","Popover","headerContent","bodyContent","Button","variant","SystemCardCore","isDisplayNameModalOpen","isAnsibleHostModalOpen","setState","fn","origValue","value","entity","id","onCancel","event","preventDefault","ansible_host","fqdn","this","detailLoaded","properties","setDisplayName","setAnsibleHost","handleClick","hasHostName","hasDisplayName","hasAnsibleHostname","hasSAP","hasSystemPurpose","hasCPUs","hasSockets","hasCores","hasCPUFlags","hasRAM","extra","state","Fragment","LoadingCard","isLoading","items","size","display_name","EditButton","onShowDisplayModal","getAnsibleHost","onShowAnsibleModal","sapIds","length","singular","target","generalMapper","systemPurpose","cpuNumber","sockets","coresPerSocket","cpuFlags","ramSize","map","e","TextInputModal","isOpen","ariaLabel","modalOuiaId","cancelOuiaId","confirmOuiaId","inputOuiaId","onSubmit","Component","storage","device","mount_point","options","type","extraShape","defaultProps","SystemCard","connect","entityDetails","systemProfile","systemProfileStore","loaded","propertiesSelector","dispatch","editDisplayName","editAnsibleHost","Modal","ouiaId","onClose","actions","key","TextInput","onChange","statusHelper","UP","Tooltip","DOWN","enabledHelper","true","false","diskMapper","devices","cells","transforms","sortable","rows","label","mountpoint","mounttype","calculatedOptions","child","Object","entries","oneKey","option","join","expandable","productsMapper","products","product","status","interfaceMapper","data","item","mac_address","mtu","repositoriesMapper","enabled","disabled","repository","sortValue","Boolean","gpgcheck","filters"],"sourceRoot":""}