{"version":3,"file":"js/154.af90ea84cf73042af184.js","mappings":"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","sources":["webpack:///./src/components/InventoryDetailDrawer/BasicInfo.js","webpack:///./src/components/InventoryDetailDrawer/SystemIssues.js","webpack:///./src/components/InventoryDetail/DetailWrapper.js","webpack:///./src/modules/AsyncInventory.js","webpack:///./src/store/reducers.js","webpack:///./src/store/systemProfileStore.js"],"sourcesContent":["/* eslint-disable react/display-name */\n/* eslint-disable camelcase */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Chip,\n  ChipGroup,\n  Split,\n  SplitItem,\n  Stack,\n  StackItem,\n  Title,\n} from '@patternfly/react-core';\nimport { useSelector } from 'react-redux';\n\nconst BasicInfo = ({ hideInvLink, showTags }) => {\n  const displayName = useSelector(\n    ({ entityDetails: { entity } }) => entity?.display_name\n  );\n  const systemId = useSelector(({ entityDetails: { entity } }) => entity?.id);\n  const tags = useSelector(({ entityDetails: { entity } }) => entity?.tags);\n  return (\n    <Stack hasGutter>\n      <StackItem>\n        <Split>\n          <SplitItem isFilled>\n            <Title headingLevel=\"h3\" size=\"xl\">\n              {displayName}\n            </Title>\n          </SplitItem>\n          {!hideInvLink && (\n            <SplitItem>\n              <a\n                className=\"ins-c-entity-detail__inv-link\"\n                href={`./insights/inventory/${systemId}`}\n              >\n                Open in Inventory\n              </a>\n            </SplitItem>\n          )}\n        </Split>\n      </StackItem>\n      {showTags && (\n        <StackItem>\n          <Split hasGutter>\n            <SplitItem>Tags:</SplitItem>\n            <SplitItem>\n              <ChipGroup>\n                {tags?.length !== 0\n                  ? tags?.map((item, key) => (\n                      <Chip key={key} isReadOnly>\n                        {item?.namespace && `${item?.namespace}/`}\n                        {item?.key}\n                        {item?.value && `=${item?.value}`}\n                      </Chip>\n                    ))\n                  : 'No tags'}\n              </ChipGroup>\n            </SplitItem>\n          </Split>\n        </StackItem>\n      )}\n    </Stack>\n  );\n};\n\nBasicInfo.propTypes = {\n  hideInvLink: PropTypes.bool,\n  showTags: PropTypes.bool,\n};\n\nBasicInfo.defaultProps = {\n  hideInvLink: false,\n  showTags: false,\n};\n\nexport default BasicInfo;\n","/* eslint-disable react/prop-types */\n/* eslint-disable react/display-name */\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  getAdvisorData,\n  getComplianceData,\n  getPatchData,\n  getVulnData,\n} from '../../store/actions';\nimport {\n  Level,\n  LevelItem,\n  Stack,\n  StackItem,\n  Title,\n} from '@patternfly/react-core';\nimport {\n  Skeleton,\n  SkeletonSize,\n} from '@redhat-cloud-services/frontend-components/Skeleton';\nimport BugIcon from '@patternfly/react-icons/dist/js/icons/bug-icon';\nimport EnhancementIcon from '@patternfly/react-icons/dist/js/icons/enhancement-icon';\nimport SecurityIcon from '@patternfly/react-icons/dist/js/icons/security-icon';\n\nconst SystemIssues = ({ isOpened }) => {\n  const dispatch = useDispatch();\n  const systemId = useSelector(({ entityDetails: { entity } }) => entity?.id);\n  const advisor = useSelector(\n    ({ entityDetails: { systemIssues } }) => systemIssues?.advisor\n  );\n  const compliance = useSelector(\n    ({ entityDetails: { systemIssues } }) => systemIssues?.compliance\n  );\n  const cve = useSelector(\n    ({ entityDetails: { systemIssues } }) => systemIssues?.cve\n  );\n  const patch = useSelector(\n    ({ entityDetails: { systemIssues } }) => systemIssues?.patch\n  );\n  useEffect(() => {\n    if (systemId && isOpened) {\n      dispatch(getAdvisorData(systemId));\n      dispatch(getComplianceData(systemId));\n      dispatch(getPatchData(systemId));\n      dispatch(getVulnData(systemId));\n    }\n  }, [systemId, isOpened]);\n\n  return (\n    <Stack hasGutter className=\"ins-c-inventory__drawer-system-issues\">\n      <StackItem>\n        <Title headingLevel=\"h4\" size=\"lg\">\n          Top system issues\n        </Title>\n      </StackItem>\n      <StackItem>\n        <Level>\n          <LevelItem>\n            <Stack hasGutter>\n              <StackItem className=\"ins-c-inventory__drawer--title\">\n                Applicable CVEs\n              </StackItem>\n              <StackItem>\n                {cve?.isLoaded ? (\n                  <Level hasGutter className=\"ins-c-inventory__drawer-cve\">\n                    <LevelItem className=\"ins-m-critical\">\n                      <a\n                        href={`/insights/vulnerability/systems/${systemId}?impact=7`}\n                      >\n                        {cve?.critical?.count || 0} critical\n                      </a>\n                    </LevelItem>\n                    <LevelItem className=\"ins-m-important\">\n                      <a\n                        href={`/insights/vulnerability/systems/${systemId}?impact=5`}\n                      >\n                        {cve?.important?.count || 0} important\n                      </a>\n                    </LevelItem>\n                    <LevelItem className=\"ins-m-moderate\">\n                      <a\n                        href={`/insights/vulnerability/systems/${systemId}?impact=4`}\n                      >\n                        {cve?.moderate?.count || 0} moderate\n                      </a>\n                    </LevelItem>\n                    <LevelItem className=\"ins-m-low\">\n                      <a\n                        href={`/insights/vulnerability/systems/${systemId}?impact=2`}\n                      >\n                        {cve?.low?.count || 0} low\n                      </a>\n                    </LevelItem>\n                  </Level>\n                ) : (\n                  <Skeleton size={SkeletonSize.md} />\n                )}\n              </StackItem>\n            </Stack>\n          </LevelItem>\n          <LevelItem>\n            <Stack hasGutter>\n              <StackItem className=\"ins-c-inventory__drawer--title\">\n                Applicable advisories\n              </StackItem>\n              <StackItem>\n                {patch?.isLoaded ? (\n                  <Level hasGutter className=\"ins-c-inventory__drawer-patch\">\n                    <LevelItem>\n                      <a\n                        href={`/insights/patch/systems/${systemId}/?advisory_type=2`}\n                      >\n                        <BugIcon /> {patch?.bug?.count}\n                      </a>\n                    </LevelItem>\n                    <LevelItem className=\"ins-m-moderate\">\n                      <a\n                        href={`/insights/patch/systems/${systemId}/?advisory_type=3`}\n                      >\n                        <SecurityIcon /> {patch?.security?.count}\n                      </a>\n                    </LevelItem>\n                    <LevelItem>\n                      <a\n                        href={`/insights/patch/systems/${systemId}/?advisory_type=1`}\n                      >\n                        <EnhancementIcon /> {patch?.enhancement?.count}\n                      </a>\n                    </LevelItem>\n                  </Level>\n                ) : (\n                  <Skeleton size={SkeletonSize.md} />\n                )}\n              </StackItem>\n            </Stack>\n          </LevelItem>\n        </Level>\n      </StackItem>\n      <StackItem>\n        {advisor?.isLoaded ? (\n          <span>\n            <span className=\"ins-m-critical\">\n              {advisor?.criticalCount?.length || 0} critical\n            </span>{' '}\n            recommendations in{' '}\n            <a href={`./insights/advisor/systems/${systemId}`}>Advisor</a>\n          </span>\n        ) : (\n          <Skeleton size={SkeletonSize.md} />\n        )}\n      </StackItem>\n      {compliance?.isLoaded ? (\n        compliance?.profiles && (\n          <span>\n            System above compliance threshold for{' '}\n            <a href={'./insights/compliance/reports/'}>\n              {compliance?.profiles?.length}{' '}\n              {compliance?.profiles?.length > 1 ? 'policies' : 'policy'}\n            </a>\n          </span>\n        )\n      ) : (\n        <Skeleton size={SkeletonSize.md} />\n      )}\n    </Stack>\n  );\n};\n\nSystemIssues.propTypes = {\n  isOpened: PropTypes.bool,\n};\n\nexport default SystemIssues;\n","import React, { useEffect } from 'react';\nimport {\n  Drawer,\n  DrawerActions,\n  DrawerCloseButton,\n  DrawerContent,\n  DrawerContentBody,\n  DrawerHead,\n  DrawerPanelBody,\n  DrawerPanelContent,\n  Stack,\n  StackItem,\n} from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector, useStore } from 'react-redux';\nimport { loadEntity, toggleDrawer } from '../../store/actions';\nimport { BasicInfo, SystemIssues } from '../InventoryDetailDrawer';\nimport FactsInfo from './FactsInfo';\n\nconst DetailWrapper = ({\n  children,\n  hideInvLink,\n  showTags,\n  Wrapper,\n  className,\n  hasAccess,\n  appName,\n  inventoryId,\n  ...props\n}) => {\n  const dispatch = useDispatch();\n  const store = useStore();\n  const entity = useSelector(({ entityDetails }) => entityDetails?.entity);\n  const isExpanded = useSelector(\n    ({ entityDetails }) => entityDetails?.isToggleOpened\n  );\n  const loaded = useSelector(({ entityDetails }) => entityDetails?.loaded);\n\n  useEffect(() => {\n    if ((inventoryId && !entity) || !(entity?.id === inventoryId)) {\n      dispatch(loadEntity(inventoryId, { hasItems: true }, { showTags }));\n    }\n  }, [entity, inventoryId]);\n\n  return (\n    <Drawer\n      className={`ins-c-inventory__drawer ${className || ''}`}\n      isExpanded={isExpanded}\n      onExpand={() => dispatch(toggleDrawer(true))}\n      {...props}\n    >\n      <DrawerContent\n        panelContent={\n          <DrawerPanelContent>\n            <DrawerHead>\n              <BasicInfo hideInvLink={hideInvLink} showTags={showTags} />\n              <DrawerActions>\n                <DrawerCloseButton\n                  onClick={() => dispatch(toggleDrawer(false))}\n                />\n              </DrawerActions>\n            </DrawerHead>\n            <DrawerPanelBody>\n              <Stack className=\"ins-c-inventory__drawer--content\">\n                <StackItem>\n                  <SystemIssues isOpened={isExpanded} />\n                </StackItem>\n                <StackItem isFilled className=\"ins-c-inventory__drawer--facts\">\n                  <FactsInfo entity={entity} loaded={loaded} />\n                  {isExpanded && loaded && Wrapper && (\n                    <Wrapper store={store} appName={appName} />\n                  )}\n                </StackItem>\n              </Stack>\n            </DrawerPanelBody>\n          </DrawerPanelContent>\n        }\n      >\n        <DrawerContentBody>{children}</DrawerContentBody>\n      </DrawerContent>\n    </Drawer>\n  );\n};\n\nDetailWrapper.propTypes = {\n  children: PropTypes.any,\n  hideInvLink: PropTypes.bool,\n  showTags: PropTypes.bool,\n  appName: PropTypes.oneOf([\n    'general_information',\n    'advisor',\n    'insights',\n    'compliance',\n    'vulnerabilities',\n    'patch',\n  ]),\n  className: PropTypes.string,\n  Wrapper: PropTypes.elementType,\n  hasAccess: PropTypes.bool,\n  inventoryId: PropTypes.string.isRequired,\n};\n\nDetailWrapper.defaultProps = {\n  appName: 'general_information',\n};\n\nexport default DetailWrapper;\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Provider } from 'react-redux';\nimport { RBACProvider } from '@redhat-cloud-services/frontend-components/RBACProvider';\n\nimport * as storeMod from '../store/redux';\nimport * as utils from '../Utilities/index';\nimport * as apiMod from '../api/index';\nimport RenderWrapper from '../Utilities/Wrapper';\nconst { mergeWithDetail, ...rest } = storeMod;\n\nconst AsyncInventory = ({ component, onLoad, store, innerRef, ...props }) => {\n  useEffect(() => {\n    onLoad?.({\n      ...rest,\n      ...utils,\n      api: apiMod,\n      mergeWithDetail,\n    });\n  }, []);\n\n  return (\n    <RBACProvider appName=\"inventory\" checkResourceDefinitions>\n      <Provider store={store}>\n        <RenderWrapper\n          {...props}\n          isRbacEnabled\n          inventoryRef={innerRef}\n          store={store}\n          cmp={component}\n        />\n      </Provider>\n    </RBACProvider>\n  );\n};\n\nAsyncInventory.propTypes = {\n  store: PropTypes.object,\n  onLoad: PropTypes.func,\n  component: PropTypes.elementType.isRequired,\n  history: PropTypes.object,\n  innerRef: PropTypes.shape({\n    current: PropTypes.any,\n  }),\n};\n\nAsyncInventory.defaultProps = {\n  onLoad: () => undefined,\n};\n\nexport default AsyncInventory;\n","import {\n  ACTION_TYPES,\n  INVENTORY_ACTION_TYPES,\n  SELECT_ENTITY,\n  SET_INVENTORY_FILTER,\n  SET_PAGINATION,\n} from './action-types';\nimport systemProfileStore from './systemProfileStore';\nimport { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport { mergeArraysByKey } from '@redhat-cloud-services/frontend-components-utilities/helpers';\nimport { notificationsReducer } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport entitiesReducer, { defaultState as entitiesDefault } from './entities';\nimport entityDetailsReducer, {\n  entityDefaultState as entityDefault,\n  updateEntity,\n} from './entityDetails';\nimport groups from './groups';\nimport groupDetail from './groupDetail';\n\nexport { entitiesReducer, entityDetailsReducer };\n\nconst defaultState = { loaded: false, selected: new Map() };\n\nfunction entitiesLoaded(state, { payload }) {\n  return {\n    ...state,\n    rows: mergeArraysByKey([state.rows, payload.results]),\n    entities: mergeArraysByKey([state.entities, payload.results]),\n  };\n}\n\nfunction entityLoaded(state) {\n  return {\n    ...state,\n    loaded: true,\n  };\n}\n\nfunction entitySelected(state, { payload }) {\n  const selected = state.selected || new Map();\n  if (payload.selected) {\n    if (Array.isArray(payload.id)) {\n      payload.id.forEach((item) => {\n        selected.set(item.id, item);\n      });\n    } else if (payload.id === 0) {\n      state.rows.forEach((row) => selected.set(row.id, row));\n    } else {\n      const selectedRow =\n        state.rows && state.rows.find(({ id }) => id === payload.id);\n      selected.set(payload.id, { ...(selectedRow || {}), id: payload.id });\n    }\n  } else {\n    if (payload.id === 0) {\n      state.rows.forEach((row) => selected.delete(row.id));\n    } else if (payload.id === -1) {\n      selected.clear();\n    } else {\n      selected.delete(payload.id);\n    }\n  }\n\n  return {\n    ...state,\n    selected: new Map(selected),\n  };\n}\n\nfunction entityDeleted(state, { meta }) {\n  const selected = state.selected || new Map();\n  meta.systems.forEach((id) => selected.delete(id));\n\n  return {\n    ...state,\n    selected: new Map(selected),\n  };\n}\n\nfunction onEntitiesLoaded(state, { payload, meta }) {\n  if (meta?.lastDateRequest < state?.lastDateRequest) {\n    return state;\n  }\n\n  if (meta?.controller?.signal?.aborted === true) {\n    return defaultState;\n  }\n\n  return {\n    ...state,\n    rows: mergeArraysByKey([\n      state.rows,\n      payload.results.map((result) => {\n        return {\n          ...result,\n          selected: state.selected && state.selected.has(result.id),\n        };\n      }),\n    ]),\n  };\n}\n\nfunction onSetFilter(state, { payload }) {\n  return {\n    ...state,\n    activeFilters: payload.filtersList,\n  };\n}\n\nfunction onSetPagination(state, { payload }) {\n  const perPage = parseInt(payload.perPage, 10);\n  const page = parseInt(payload.page, 10);\n  return {\n    ...state,\n    perPage: isNaN(perPage) ? 50 : perPage,\n    page: isNaN(page) ? 1 : page,\n  };\n}\n\nlet reducers = {\n  notifications: notificationsReducer,\n  systemProfileStore,\n  groups,\n  groupDetail,\n};\n\nexport const tableReducer = applyReducerHash(\n  {\n    [ACTION_TYPES.GET_ENTITIES_FULFILLED]: entitiesLoaded,\n    [INVENTORY_ACTION_TYPES.LOAD_ENTITIES_FULFILLED]: onEntitiesLoaded,\n    [`${ACTION_TYPES.REMOVE_ENTITY}_FULFILLED`]: entityDeleted,\n    [SELECT_ENTITY]: entitySelected,\n    FILTER_SELECT: (state) => ({ ...state, selected: {} }),\n    [SET_INVENTORY_FILTER]: onSetFilter,\n    [SET_PAGINATION]: onSetPagination,\n    [ACTION_TYPES.UPDATE_DISPLAY_NAME_FULFILLED]: updateEntity,\n  },\n  defaultState\n);\n\nexport const entitesDetailReducer = () =>\n  applyReducerHash(\n    {\n      [INVENTORY_ACTION_TYPES.LOAD_ENTITY_FULFILLED]: entityLoaded,\n    },\n    defaultState\n  );\n\nexport function mergeWithEntities(\n  additionalReducers = (state) => state,\n  defaultState = {}\n) {\n  return {\n    entities: (state, payload) => ({\n      ...additionalReducers(\n        {\n          ...applyReducerHash(\n            {\n              ...entitiesReducer,\n            },\n            { ...entitiesDefault, ...defaultState }\n          )(state, payload),\n        },\n        payload\n      ),\n    }),\n  };\n}\n\nexport function mergeWithDetail(\n  additionalReducers = (state) => state,\n  defaultState = {}\n) {\n  return {\n    entityDetails: (state, payload) => ({\n      ...additionalReducers(\n        {\n          ...applyReducerHash(\n            {\n              ...entityDetailsReducer,\n            },\n            { ...entityDefault, ...defaultState }\n          )(state, payload),\n        },\n        payload\n      ),\n    }),\n  };\n}\n\nexport default reducers;\n","import { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport { ACTION_TYPES } from './action-types';\n\nexport const defaultState = { loaded: false };\n\nexport const sizes = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n\n// Kudos to https://stackoverflow.com/a/18650828/2560321\nexport const formatBytes = (bytes) => {\n  if (bytes === 0 || isNaN(Number(bytes))) {\n    return '0 B';\n  }\n\n  const index = Math.floor(Math.log(bytes) / Math.log(1024));\n  return `${parseFloat((bytes / Math.pow(1024, index)).toFixed(2))} ${\n    sizes[index]\n  }`;\n};\n\nexport function systemProfilePending(state) {\n  return {\n    ...state,\n    systemProfile: {\n      loaded: false,\n    },\n  };\n}\n\nexport function calculateRepos(repos) {\n  return (\n    repos &&\n    repos.reduce(\n      (acc, curr) => ({\n        ...acc,\n        ...(!('enabled' in curr) || curr.enabled\n          ? {\n              enabled: [...acc.enabled, curr],\n            }\n          : {\n              disabled: [...acc.disabled, curr],\n            }),\n      }),\n      { enabled: [], disabled: [] }\n    )\n  );\n}\n\nexport function calculateInterfaces(interfaces) {\n  return (\n    interfaces &&\n    interfaces.reduce(\n      (acc, curr) => ({\n        interfaces: [...acc.interfaces, curr],\n        ipv4: [...acc.ipv4, ...(curr.ipv4_addresses || [])].filter(Boolean),\n        ipv6: [...acc.ipv6, ...(curr.ipv6_addresses || [])].filter(Boolean),\n      }),\n      { interfaces: [], ipv4: [], ipv6: [] }\n    )\n  );\n}\n\nexport function onSystemProfile(state, { payload: { results } }) {\n  const systemProfile =\n    (results && results[0] && results[0].system_profile) || {};\n  const cloudProviderObj =\n    results &&\n    results[0] &&\n    typeof results[0].system_profile.cloud_provider !== 'undefined' &&\n    results[0].system_profile.cloud_provider;\n  return {\n    ...state,\n    disabledApps: [\n      ...(cloudProviderObj === 'aws' || cloudProviderObj === 'azure'\n        ? []\n        : ['ros']),\n    ],\n    systemProfile: {\n      loaded: true,\n      ...systemProfile,\n      ramSize:\n        systemProfile.system_memory_bytes &&\n        formatBytes(systemProfile.system_memory_bytes),\n      repositories: calculateRepos(systemProfile.yum_repos),\n      network: calculateInterfaces(systemProfile.network_interfaces),\n    },\n  };\n}\n\nexport default applyReducerHash(\n  {\n    [ACTION_TYPES.LOAD_SYSTEM_PROFILE_FULFILLED]: onSystemProfile,\n    [ACTION_TYPES.LOAD_SYSTEM_PROFILE_PENDING]: systemProfilePending,\n  },\n  {\n    systemProfile: defaultState,\n  }\n);\n"],"names":["BasicInfo","hideInvLink","showTags","displayName","useSelector","entity","entityDetails","display_name","systemId","id","tags","Stack","hasGutter","StackItem","Split","SplitItem","isFilled","Title","headingLevel","size","className","href","ChipGroup","length","map","item","key","Chip","isReadOnly","namespace","value","propTypes","PropTypes","defaultProps","SystemIssues","isOpened","dispatch","useDispatch","advisor","systemIssues","compliance","cve","patch","useEffect","getAdvisorData","getComplianceData","getPatchData","getVulnData","Level","LevelItem","isLoaded","critical","count","important","moderate","low","Skeleton","SkeletonSize","md","bug","security","enhancement","criticalCount","profiles","DetailWrapper","children","Wrapper","appName","hasAccess","inventoryId","props","store","useStore","isExpanded","isToggleOpened","loaded","loadEntity","hasItems","Drawer","onExpand","toggleDrawer","DrawerContent","panelContent","DrawerPanelContent","DrawerHead","DrawerActions","DrawerCloseButton","onClick","DrawerPanelBody","FactsInfo","DrawerContentBody","isRequired","mergeWithDetail","storeMod","rest","AsyncInventory","component","onLoad","innerRef","utils","api","apiMod","RBACProvider","checkResourceDefinitions","Provider","isRbacEnabled","inventoryRef","cmp","history","current","defaultState","selected","Map","entityLoaded","state","reducers","notifications","notificationsReducer","systemProfileStore","groups","groupDetail","tableReducer","applyReducerHash","ACTION_TYPES","GET_ENTITIES_FULFILLED","payload","rows","mergeArraysByKey","results","entities","INVENTORY_ACTION_TYPES","LOAD_ENTITIES_FULFILLED","meta","lastDateRequest","controller","signal","aborted","result","has","REMOVE_ENTITY","systems","forEach","delete","SELECT_ENTITY","Array","isArray","set","row","selectedRow","find","clear","SET_INVENTORY_FILTER","activeFilters","filtersList","SET_PAGINATION","perPage","parseInt","page","isNaN","UPDATE_DISPLAY_NAME_FULFILLED","updateEntity","entitesDetailReducer","LOAD_ENTITY_FULFILLED","mergeWithEntities","additionalReducers","entitiesReducer","entitiesDefault","entityDetailsReducer","entityDefault","sizes","formatBytes","bytes","Number","index","Math","floor","log","parseFloat","pow","toFixed","systemProfilePending","systemProfile","calculateRepos","repos","reduce","acc","curr","enabled","disabled","calculateInterfaces","interfaces","ipv4","ipv4_addresses","filter","Boolean","ipv6","ipv6_addresses","onSystemProfile","system_profile","cloudProviderObj","cloud_provider","disabledApps","ramSize","system_memory_bytes","repositories","yum_repos","network","network_interfaces","LOAD_SYSTEM_PROFILE_FULFILLED","LOAD_SYSTEM_PROFILE_PENDING"],"sourceRoot":""}