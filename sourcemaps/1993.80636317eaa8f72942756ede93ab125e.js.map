{"version":3,"file":"js/1993.36c31898bd6a8fbd47f2.js","mappings":"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","sources":["webpack:///./src/Utilities/AccessDenied.js","webpack:///./src/Utilities/OperatingSystemFilterHelpers.js","webpack:///./src/components/InventoryTable/EntityTableToolbar.js","webpack:///./src/components/InventoryTable/EntityTable.js","webpack:///./src/components/InventoryTable/hooks/useColumns.js","webpack:///./src/components/InventoryTable/InventoryList.js","webpack:///./src/components/InventoryTable/Pagination.js","webpack:///./src/components/InventoryTable/InventoryTable.js","webpack:///./src/components/InventoryTable/NoEntitiesFound.js","webpack:///./src/components/InventoryTable/helpers.js","webpack:///./src/components/filters/useTextFilter.js","webpack:///./src/components/filters/useStalenessFilter.js","webpack:///./src/components/filters/useRegisteredWithFilter.js","webpack:///./src/components/filters/useTagsFilter.js","webpack:///./src/components/filters/useRhcdFilter.js","webpack:///./src/components/filters/useUpdateMethodFilter.js","webpack:///./src/components/filters/useLastSeenFilter.js","webpack:///./src/components/filters/index.js","webpack:///./src/components/filters/useGroupFilter.js","webpack:///./src/components/filters/useOperatingSystemFilter.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NotAuthorized } from '@redhat-cloud-services/frontend-components/NotAuthorized';\nimport { Tooltip } from '@patternfly/react-core';\n\nconst AccessDenied = ({ title, description, ...props }) => (\n    <NotAuthorized\n        {...props}\n        className=\"ins-c-inventory__no--access\"\n        title={title}\n        description={<Tooltip content=\"inventory:*:read\">\n            {description}\n        </Tooltip>}\n    />\n);\n\nAccessDenied.propTypes = {\n    title: PropTypes.string,\n    description: PropTypes.node\n};\n\nAccessDenied.defaultProps = {\n    title: 'You do not have access to Inventory',\n    description: <div>\n        To view your systems, you must be granted inventory access from your Organization Administrator.\n    </div>\n};\n\nexport default AccessDenied;\n","import set  from 'lodash/set';\nimport omit  from 'lodash/omit';\nimport mapValues  from 'lodash/mapValues';\nimport { coerce, compare, rcompare } from 'semver';\nimport { OS_CHIP } from './constants';\n\nexport const updateGroupSelectionIdentifier = (selection, major) =>\n    // if every minor version is selected, then mark the group as selected\n    set(selection, [major, major], Object.values({ ...selection[major] }).filter(v => v !== major).every(Boolean));\n\n/** Takes an array of string versions `value` and returns an object in the format\n * required by ConditionalFilter component (group filter); */\nexport const toGroupSelection = (value = [], availableVersions) =>\n    (availableVersions === undefined ? value : availableVersions).reduce(\n        (acc, version) => {\n            const [major] = version.split('.');\n            set(acc, [major, version], value.includes(version));\n            updateGroupSelectionIdentifier(acc, major);\n            return acc;\n        },\n        {}\n    );\n\nexport const compareVersions = (a, b, asc = true) =>\n    asc ? compare(coerce(a), coerce(b)) : rcompare(coerce(a), coerce(b));\n\n/** Extracts enabled OS filter values from ConditionalFilter-like object */\nexport const getSelectedOsFilterVersions = (selected = {}) =>\n    Object.values(selected).reduce((acc, versions) => {\n        Object.entries(versions).forEach(\n            ([version, enabled]) =>\n                enabled && version.match(/[0-9]+.[0-9]+/) && acc.push(version)\n        );\n        return acc;\n    }, []);\n\nexport const groupOSFilterVersions = (versions = []) => {\n    const groups = Object.entries(\n        versions.reduce((prev, { label, value }) => {\n            const major = value.split('.')[0];\n\n            if (prev[major] === undefined) {\n                prev[major] = {\n                    groupSelectable: true, // without this flag, the group won't be rendered - behavior of ConditionalFilter\n                    label: 'RHEL ' + major,\n                    value: major,\n                    type: 'checkbox',\n                    items: []\n                };\n            }\n\n            prev[major].items.push({\n                label,\n                value,\n                type: 'checkbox'\n            });\n\n            return prev;\n        }, {})\n    );\n\n    // sort by major versions in descending order\n    groups.sort((a, b) => compareVersions(a[0], b[0], false));\n\n    const sorted = groups.map((group) => {\n        // sort minor versions under each group\n        group[1].items.sort((a, b) => compareVersions(a.value, b.value, false));\n        return group[1];\n    });\n\n    return sorted;\n};\n\nexport const buildOSFilterChip = (operatingSystemValue = {}, operatingSystems = []) => {\n    const minors = getSelectedOsFilterVersions(operatingSystemValue);\n    const chips = operatingSystems\n    .filter(({ value }) => minors.includes(value))\n    .map(({ label, ...props }) => ({ name: label, ...props }));\n\n    return minors?.length > 0\n        ? [\n            {\n                category: 'Operating System',\n                type: OS_CHIP,\n                chips\n            }\n        ]\n        : [];\n};\n\nexport const onOSFilterChange = (event, selection, clickedGroup, clickedItem) => {\n    const newSelection = Object.assign({}, selection);\n    const value = newSelection[clickedGroup.value][clickedItem.value];\n    const major = clickedGroup.value;\n\n    if (clickedItem.value === major) {\n        // group checkbox clicked => update all minor version selections\n        newSelection[major] = mapValues(newSelection[major], () => value);\n    } else {\n        newSelection[major][major] = Object.values(omit(newSelection[major], major)).every(Boolean);\n    }\n\n    return newSelection;\n};\n","/* eslint-disable camelcase */\nimport React, { Fragment, useEffect, useCallback, useReducer } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport xor from 'lodash/xor';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components/Skeleton';\nimport { tagsFilterState, tagsFilterReducer, mapGroups } from '@redhat-cloud-services/frontend-components/FilterHooks';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport { fetchAllTags, clearFilters, toggleTagModal, setFilter } from '../../store/actions';\nimport debounce from 'lodash/debounce';\nimport {\n    TagsModal,\n    TEXT_FILTER,\n    reduceFilters,\n    TEXTUAL_CHIP,\n    STALE_CHIP,\n    REGISTERED_CHIP,\n    OS_CHIP,\n    TAG_CHIP,\n    arrayToSelection,\n    RHCD_FILTER_KEY,\n    UPDATE_METHOD_KEY,\n    LAST_SEEN_CHIP,\n    HOST_GROUP_CHIP\n} from '../../Utilities/index';\nimport { onDeleteFilter, onDeleteTag } from './helpers';\nimport {\n    useStalenessFilter,\n    useTextFilter,\n    useRegisteredWithFilter,\n    useTagsFilter,\n    useRhcdFilter,\n    useLastSeenFilter,\n    useUpdateMethodFilter,\n    textFilterState,\n    textFilterReducer,\n    filtersReducer,\n    stalenessFilterReducer,\n    stalenessFilterState,\n    operatingSystemFilterReducer,\n    registeredWithFilterReducer,\n    registeredWithFilterState,\n    rhcdFilterReducer,\n    rhcdFilterState,\n    updateMethodFilterReducer,\n    updateMethodFilterState,\n    lastSeenFilterReducer,\n    lastSeenFilterState,\n    groupFilterReducer,\n    groupFilterState\n} from '../filters';\nimport useOperatingSystemFilter from '../filters/useOperatingSystemFilter';\nimport useFeatureFlag from '../../Utilities/useFeatureFlag';\nimport useGroupFilter from '../filters/useGroupFilter';\nimport { DatePicker, Split, SplitItem } from '@patternfly/react-core';\n\n/**\n * Table toolbar used at top of inventory table.\n * It uses couple of filters and acces redux data along side all passed props.\n * @param {*} props used in this component.\n */\nconst EntityTableToolbar = ({\n    total,\n    page,\n    perPage,\n    filterConfig,\n    hasItems,\n    children,\n    actionsConfig,\n    activeFiltersConfig,\n    showTags,\n    getTags,\n    items,\n    sortBy,\n    customFilters,\n    hasAccess,\n    bulkSelect,\n    hideFilters,\n    paginationProps,\n    onRefreshData,\n    loaded,\n    showTagModal,\n    ...props\n}) => {\n    const dispatch = useDispatch();\n    const reducer = useReducer(filtersReducer([\n        textFilterReducer,\n        stalenessFilterReducer,\n        registeredWithFilterReducer,\n        tagsFilterReducer,\n        operatingSystemFilterReducer,\n        rhcdFilterReducer,\n        lastSeenFilterReducer,\n        updateMethodFilterReducer,\n        groupFilterReducer\n    ]), {\n        ...textFilterState,\n        ...stalenessFilterState,\n        ...registeredWithFilterState,\n        ...tagsFilterState,\n        ...rhcdFilterState,\n        ...updateMethodFilterState,\n        ...lastSeenFilterState,\n        ...groupFilterState\n    });\n    const filters = useSelector(({ entities: { activeFilters } }) => activeFilters);\n    const allTagsLoaded = useSelector(({ entities: { allTagsLoaded } }) => allTagsLoaded);\n    const allTags = useSelector(({ entities: { allTags } }) => allTags);\n    const additionalTagsCount = useSelector(({ entities: { additionalTagsCount } }) => additionalTagsCount);\n    const [nameFilter, nameChip, textFilter, setTextFilter] = useTextFilter(reducer);\n    const [stalenessFilter, stalenessChip, staleFilter, setStaleFilter] = useStalenessFilter(reducer);\n    const [registeredFilter, registeredChip, registeredWithFilter, setRegisteredWithFilter] = useRegisteredWithFilter(reducer);\n    const [rhcdFilterConfig, rhcdFilterChips, rhcdFilterValue, setRhcdFilterValue] = useRhcdFilter(reducer);\n    const [lastSeenFilter, lastSeenChip, lastSeenFilterValue, setLastSeenFilterValue,\n        toValidator, onFromChange, onToChange, endDate, startDate, fromValidator,\n        setStartDate, setEndDate] = useLastSeenFilter(reducer);\n    const [osFilterConfig, osFilterChips, osFilterValue, setOsFilterValue] = useOperatingSystemFilter();\n    const [updateMethodConfig, updateMethodChips, updateMethodValue, setUpdateMethodValue] = useUpdateMethodFilter(reducer);\n    const [hostGroupConfig, hostGroupChips, hostGroupValue, setHostGroupValue] = useGroupFilter();\n\n    const isUpdateMethodEnabled = useFeatureFlag('hbi.ui.system-update-method');\n    const groupsEnabled = useFeatureFlag('hbi.ui.inventory-groups');\n    const {\n        tagsFilter,\n        tagsChip,\n        selectedTags,\n        setSelectedTags,\n        filterTagsBy,\n        seFilterTagsBy\n    } = useTagsFilter(allTags, allTagsLoaded, additionalTagsCount, () => dispatch(toggleTagModal(true)), reducer);\n\n    /**\n     * Debounced function for fetching all tags.\n     */\n    const debounceGetAllTags = useCallback(debounce((config, options) => {\n        if (showTags && !hasItems && hasAccess) {\n            dispatch(fetchAllTags(config, {\n                ...options?.paginationhideFilters\n            },  getTags));\n        }\n    }, 800), [customFilters?.tags]);\n\n    const enabledFilters = {\n        name: !(hideFilters.all && hideFilters.name !== false) && !hideFilters.name,\n        stale: !(hideFilters.all && hideFilters.stale !== false) && !hideFilters.stale,\n        registeredWith: !(hideFilters.all && hideFilters.registeredWith !== false) && !hideFilters.registeredWith,\n        operatingSystem: !(hideFilters.all && hideFilters.operatingSystem !== false) && !hideFilters.operatingSystem,\n        tags: !(hideFilters.all && hideFilters.tags !== false) && !hideFilters.tags,\n        rhcdFilter: !(hideFilters.all && hideFilters.rhcdFilter !== false) && !hideFilters.rhcdFilter,\n        lastSeenFilter: !(hideFilters.all && hideFilters.lastSeen !== false) && !hideFilters.lastSeen,\n        //hides the filter untill API is ready. JIRA: RHIF-169\n        updateMethodFilter: isUpdateMethodEnabled &&\n            !(hideFilters.all && hideFilters.updateMethodFilter !== false)\n                && !hideFilters.updateMethodFilter,\n        hostGroupFilter: groupsEnabled && !(hideFilters.all && hideFilters.hostGroupFilter !== false)\n                && !hideFilters.hostGroupFilter\n    };\n\n    /**\n     * Function to dispatch load systems and fetch all tags.\n     */\n    const onRefreshDataInner = useCallback((options) => {\n        if (hasAccess) {\n            onRefreshData(options);\n            if (showTags && !hasItems) {\n                dispatch(fetchAllTags(filterTagsBy, {}, getTags));\n            }\n        }\n    }, [customFilters?.tags]);\n\n    /**\n     * Function used to update data, it either calls `onRefresh` from props or dispatches `onRefreshData`.\n     * `onRefresh` function takes two parameters\n     *   * entire config with new changes.\n     *   * callback to update data.\n     * @param {*} config new config to fetch data.\n     */\n    const updateData = (config) => {\n        if (hasAccess) {\n            onRefreshDataInner(config);\n        }\n    };\n\n    /**\n     * Debounced `updateData` function.\n     */\n    const debouncedRefresh = useCallback(debounce((config) => updateData(config), 800), [sortBy?.key, sortBy?.direction]);\n\n    /**\n     * Component did mount effect to calculate actual filters from redux.\n     */\n    useEffect(() => {\n        const {\n            textFilter,\n            tagFilters,\n            staleFilter,\n            registeredWithFilter,\n            osFilter,\n            rhcdFilter,\n            lastSeenFilter,\n            updateMethodFilter,\n            groupFilter\n        } = reduceFilters([...filters || [], ...customFilters?.filters || []]);\n\n        debouncedRefresh();\n        enabledFilters.name && setTextFilter(textFilter);\n        enabledFilters.stale && setStaleFilter(staleFilter);\n        enabledFilters.registeredWith && setRegisteredWithFilter(registeredWithFilter);\n        enabledFilters.tags && setSelectedTags(tagFilters);\n        enabledFilters.operatingSystem && setOsFilterValue(osFilter);\n        enabledFilters.rhcdFilter && setRhcdFilterValue(rhcdFilter);\n        enabledFilters.updateMethodFilter && setUpdateMethodValue(updateMethodFilter);\n        enabledFilters.lastSeenFilter && setLastSeenFilterValue(lastSeenFilter);\n        enabledFilters.hostGroupFilter && setHostGroupValue(groupFilter);\n    }, []);\n\n    /**\n     * Function used to change text filter.\n     * @param {*} value new value used for filtering.\n     * @param {*} debounced if debounce function should be used.\n     */\n    const onSetTextFilter = (value, debounced = true) => {\n        const trimmedValue = value.trim();\n\n        const textualFilter = filters?.find(oneFilter => oneFilter.value === TEXT_FILTER);\n        if (textualFilter) {\n            textualFilter.filter = trimmedValue;\n        } else {\n            filters?.push({ value: TEXT_FILTER, filter: trimmedValue });\n        }\n\n        const refresh = debounced ? debouncedRefresh : updateData;\n        refresh({ page: 1, perPage, filters });\n    };\n\n    /**\n     * General function to apply filter (excluding tag and text).\n     * @param {*} value new value to be set of specified filter.\n     * @param {*} filterKey which filter should be changed.\n     * @param {*} refresh refresh callback function.\n     */\n    const onSetFilter = (value, filterKey, refresh) => {\n        const newFilters = [\n            ...filters?.filter(oneFilter => !Object.prototype.hasOwnProperty.call(oneFilter, filterKey)),\n            { [filterKey]: value }\n        ];\n        refresh({ page: 1, perPage, filters: newFilters });\n    };\n\n    const shouldReload = page && perPage && filters && (!hasItems || items);\n\n    useEffect(() => {\n        if (shouldReload && showTags && enabledFilters.tags) {\n            debounceGetAllTags(filterTagsBy);\n        }\n    }, [filterTagsBy, customFilters?.tags]);\n\n    useEffect(() => {\n        if (shouldReload && enabledFilters.name) {\n            onSetTextFilter(textFilter, true);\n        }\n    }, [textFilter]);\n\n    useEffect(() => {\n        if (shouldReload && enabledFilters.stale) {\n            onSetFilter(staleFilter, 'staleFilter', debouncedRefresh);\n        }\n    }, [staleFilter]);\n\n    useEffect(() => {\n        if (shouldReload && enabledFilters.registeredWith) {\n            onSetFilter(registeredWithFilter, 'registeredWithFilter', debouncedRefresh);\n        }\n    }, [registeredWithFilter]);\n\n    useEffect(() => {\n        if (shouldReload && showTags && enabledFilters.tags) {\n            onSetFilter(mapGroups(selectedTags), 'tagFilters', debouncedRefresh);\n        }\n    }, [selectedTags]);\n\n    useEffect(() => {\n        if (shouldReload && enabledFilters.operatingSystem) {\n            onSetFilter(osFilterValue, 'osFilter', debouncedRefresh);\n        }\n    }, [osFilterValue]);\n\n    useEffect(() => {\n        if (shouldReload && enabledFilters.rhcdFilter) {\n            onSetFilter(rhcdFilterValue, 'rhcdFilter', debouncedRefresh);\n        }\n    }, [rhcdFilterValue]);\n\n    useEffect(() => {\n        if (shouldReload && enabledFilters.lastSeenFilter) {\n            onSetFilter(lastSeenFilterValue, 'lastSeenFilter', debouncedRefresh);\n        }\n    }, [lastSeenFilterValue]);\n\n    useEffect(() => {\n        if (shouldReload && enabledFilters.updateMethodFilter) {\n            onSetFilter(updateMethodValue, 'updateMethodFilter', debouncedRefresh);\n        }\n    }, [updateMethodValue]);\n\n    useEffect(() => {\n        if (shouldReload && enabledFilters.hostGroupFilter) {\n            onSetFilter(hostGroupValue, 'hostGroupFilter', debouncedRefresh);\n        }\n    }, [hostGroupValue]);\n\n    /**\n     * Mapper to simplify removing of any filter.\n     */\n    const deleteMapper = {\n        [TEXTUAL_CHIP]: () => setTextFilter(''),\n        [TAG_CHIP]: (deleted) => setSelectedTags(\n            onDeleteTag(\n                deleted,\n                selectedTags,\n                (selectedTags) => onSetFilter(mapGroups(selectedTags), 'tagFilters', updateData)\n            )\n        ),\n        [STALE_CHIP]: (deleted) => setStaleFilter(onDeleteFilter(deleted, staleFilter)),\n        [REGISTERED_CHIP]: (deleted) => setRegisteredWithFilter(\n            onDeleteFilter(deleted, registeredWithFilter)\n        ),\n        [OS_CHIP]: (deleted) => setOsFilterValue(xor(osFilterValue, deleted.chips.map(({ value }) => value))),\n        [RHCD_FILTER_KEY]: (deleted) => setRhcdFilterValue(onDeleteFilter(deleted, rhcdFilterValue)),\n        [LAST_SEEN_CHIP]: (deleted) =>\n        {\n            setLastSeenFilterValue(onDeleteFilter(deleted, [lastSeenFilterValue.mark])),\n            setStartDate(),\n            setEndDate();\n        },\n        [UPDATE_METHOD_KEY]: (deleted) => setUpdateMethodValue(onDeleteFilter(deleted, updateMethodValue)),\n        [HOST_GROUP_CHIP]: (deleted) => setHostGroupValue(onDeleteFilter(deleted, hostGroupValue))\n    };\n    /**\n     * Function to reset all filters with 'Reset Filter' is clicked\n     */\n    const resetFilters = () => {\n        enabledFilters.name && setTextFilter('');\n        enabledFilters.stale && setStaleFilter([]);\n        enabledFilters.registeredWith && setRegisteredWithFilter([]);\n        enabledFilters.tags && setSelectedTags({});\n        enabledFilters.operatingSystem && setOsFilterValue([]);\n        enabledFilters.rhcdFilter && setRhcdFilterValue([]);\n        enabledFilters.lastSeenFilter && setLastSeenFilterValue([]);\n        enabledFilters.updateMethodFilter && setUpdateMethodValue([]);\n        enabledFilters.hostGroupFilter && setHostGroupValue([]);\n        setStartDate();\n        setEndDate();\n        dispatch(setFilter([]));\n        updateData({ page: 1, filters: [] });\n    };\n\n    /**\n     * Function to create active filters chips.\n     */\n    const constructFilters = () => {\n        return {\n            ...activeFiltersConfig || {},\n            filters: [\n                ...(showTags && !hasItems && enabledFilters.tags) ? tagsChip : [],\n                ...!hasItems && enabledFilters.name ? nameChip : [],\n                ...!hasItems && enabledFilters.stale ? stalenessChip : [],\n                ...!hasItems && enabledFilters.registeredWith ? registeredChip : [],\n                ...!hasItems && enabledFilters.operatingSystem ? osFilterChips : [],\n                ...!hasItems && enabledFilters.rhcdFilter ? rhcdFilterChips : [],\n                ...!hasItems && enabledFilters.updateMethodFilter ? updateMethodChips : [],\n                ...!hasItems && enabledFilters.lastSeenFilter ? lastSeenChip : [],\n                ...!hasItems && enabledFilters.hostGroupFilter ? hostGroupChips : [],\n                ...activeFiltersConfig?.filters || []\n            ],\n            onDelete: (e, [deleted, ...restDeleted], isAll) => {\n                if (isAll) {\n                    dispatch(clearFilters());\n                    resetFilters();\n                } else {\n                    deleteMapper[deleted.type]?.(deleted);\n                }\n\n                activeFiltersConfig &&\n                activeFiltersConfig.onDelete &&\n                activeFiltersConfig.onDelete(e, [deleted, ...restDeleted], isAll);\n            }\n        };\n    };\n\n    const inventoryFilters = [\n        ...!hasItems ? [\n            ...enabledFilters.name ? [nameFilter] : [],\n            ...enabledFilters.stale ? [stalenessFilter] : [],\n            ...enabledFilters.operatingSystem ? [osFilterConfig] : [],\n            ...enabledFilters.registeredWith ? [registeredFilter] : [],\n            ...enabledFilters.rhcdFilter ? [rhcdFilterConfig] : [],\n            ...enabledFilters.updateMethodFilter ? [updateMethodConfig] : [],\n            ...enabledFilters.lastSeenFilter ? [lastSeenFilter] : [],\n            ...enabledFilters.hostGroupFilter ? [hostGroupConfig] : [],\n            ...showTags && enabledFilters.tags ? [tagsFilter] : []\n        ] : [],\n        ...filterConfig?.items || []\n    ];\n    return <Fragment>\n        <PrimaryToolbar\n            {...props}\n            {...bulkSelect && {\n                bulkSelect: {\n                    ...bulkSelect,\n                    isDisabled: bulkSelect?.isDisabled || !hasAccess\n                }\n            }}\n            className={`ins-c-inventory__table--toolbar ${\n                hasItems || !inventoryFilters.length ? 'ins-c-inventory__table--toolbar-has-items' : ''\n            }`}\n            {...inventoryFilters?.length > 0 && {\n                filterConfig: {\n                    ...filterConfig || {},\n                    isDisabled: !hasAccess,\n                    items: inventoryFilters?.map(filter => ({\n                        ...filter,\n                        filterValues: {\n                            placeholder: filter?.filterValues?.placeholder || `Filter by ${filter?.label?.toLowerCase()}`,\n                            ...filter?.filterValues,\n                            isDisabled: !hasAccess\n                        }\n                    }))\n                }\n            }}\n            { ...hasAccess && { activeFiltersConfig: constructFilters() } }\n            actionsConfig={ loaded ? actionsConfig : null }\n            pagination={loaded ? {\n                page,\n                itemCount: !hasAccess ? 0 : total,\n                isDisabled: !hasAccess,\n                perPage,\n                onSetPage: (_e, newPage) => onRefreshData({ page: newPage }),\n                onPerPageSelect: (_e, newPerPage) => onRefreshData({ page: 1, per_page: newPerPage }),\n                ...paginationProps\n            } : <Skeleton size={SkeletonSize.lg} />}\n        >\n            {lastSeenFilterValue?.mark === 'custom' &&\n            <Split>\n                <SplitItem>\n                    <DatePicker\n                        onChange={onFromChange}\n                        aria-label=\"Start date\"\n                        validators={[fromValidator]}\n                        placeholder='Start'\n                    />\n                </SplitItem>\n                <SplitItem style={{ padding: '6px 12px 0 12px' }}>\n            to\n                </SplitItem>\n                <SplitItem>\n                    <DatePicker\n                        value={endDate}\n                        onChange={onToChange}\n                        rangeStart={startDate}\n                        validators={[toValidator]}\n                        aria-label=\"End date\"\n                        placeholder='End'\n                    />\n                </SplitItem>\n            </Split>}\n            { children }\n\n        </PrimaryToolbar>\n        {\n            (showTags || enabledFilters.tags || showTagModal) && <TagsModal\n                filterTagsBy={filterTagsBy}\n                onApply={(selected) => setSelectedTags(arrayToSelection(selected))}\n                onToggleModal={() => seFilterTagsBy('')}\n                getTags={getTags}\n            />\n        }\n    </Fragment>;\n};\n\nEntityTableToolbar.propTypes = {\n    showTags: PropTypes.bool,\n    getTags: PropTypes.func,\n    hasAccess: PropTypes.bool,\n    filterConfig: PropTypes.object,\n    total: PropTypes.number,\n    hasItems: PropTypes.bool,\n    page: PropTypes.number,\n    onClearFilters: PropTypes.func,\n    toggleTagModal: PropTypes.func,\n    perPage: PropTypes.number,\n    children: PropTypes.node,\n    pagination: PropTypes.shape({\n        page: PropTypes.number,\n        perPage: PropTypes.number\n    }),\n    actionsConfig: PropTypes.object,\n    activeFiltersConfig: PropTypes.object,\n    onRefreshData: PropTypes.func,\n    customFilters: PropTypes.shape({\n        tags: PropTypes.oneOfType([\n            PropTypes.object,\n            PropTypes.arrayOf(PropTypes.string)\n        ]),\n        filters: PropTypes.array\n    }),\n    hideFilters: PropTypes.shape({\n        tags: PropTypes.bool,\n        name: PropTypes.bool,\n        registeredWith: PropTypes.bool,\n        stale: PropTypes.bool,\n        operatingSystem: PropTypes.bool,\n        rhcdFilter: PropTypes.bool,\n        lastSeen: PropTypes.bool,\n        updateMethodFilter: PropTypes.bool,\n        hostGroupFilter: PropTypes.bool,\n        all: PropTypes.bool\n    }),\n    paginationProps: PropTypes.object,\n    loaded: PropTypes.bool,\n    onRefresh: PropTypes.func,\n    hasCheckbox: PropTypes.bool,\n    isLoaded: PropTypes.bool,\n    items: PropTypes.array,\n    sortBy: PropTypes.object,\n    bulkSelect: PropTypes.object,\n    showTagModal: PropTypes.bool,\n    disableDefaultColumns: PropTypes.any\n};\n\nEntityTableToolbar.defaultProps = {\n    showTags: false,\n    hasAccess: true,\n    activeFiltersConfig: {},\n    hideFilters: {}\n};\n\nexport default EntityTableToolbar;\n","import React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { selectEntity, setSort } from '../../store/actions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport {\n    Table as PfTable,\n    TableBody,\n    TableHeader,\n    TableGridBreakpoint,\n    TableVariant\n} from '@patternfly/react-table';\nimport { SkeletonTable } from '@redhat-cloud-services/frontend-components/SkeletonTable';\nimport NoEntitiesFound from './NoEntitiesFound';\nimport { createRows, createColumns } from './helpers';\nimport useColumns from './hooks/useColumns';\n\n/**\n * The actual (PF)table component. It calculates each cell and every table property.\n * It uses rows, columns and loaded from redux to show correct data.\n * When row is selected `selectEntity` is dispatched.\n * @param {*} props all props used in this component.\n */\nconst EntityTable = ({\n    hasItems,\n    expandable,\n    onExpandClick,\n    hasCheckbox,\n    actions,\n    variant,\n    sortBy,\n    tableProps,\n    onSort,\n    expandable: isExpandable,\n    onRowClick,\n    noDetail,\n    noSystemsTable = <NoEntitiesFound />,\n    showTags,\n    columns: columnsProp,\n    disableDefaultColumns,\n    loaded,\n    columnsCounter\n}) => {\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const location = useLocation();\n    const columns = useColumns(columnsProp, disableDefaultColumns, showTags, columnsCounter);\n    const rows = useSelector(({ entities: { rows } }) => rows);\n\n    const onItemSelect = (_event, checked, rowId) => {\n        const row = isExpandable ? rows[rowId / 2] : rows[rowId];\n        dispatch(selectEntity(rowId === -1 ? 0 : row.id, checked));\n    };\n\n    const onSortChange = (_event, key, direction, index) => {\n        if (key !== 'action' && key !== 'health') {\n            dispatch(setSort({ index, key, direction }));\n        }\n\n        onSort?.({ index, key, direction });\n    };\n\n    const cells = useMemo(() =>\n        loaded && createColumns(columns, hasItems, rows, isExpandable)\n    , [loaded, columns, hasItems, rows, isExpandable]);\n\n    const defaultRowClick = (_event, key) => {\n        history.push(`${location.pathname}${location.pathname.slice(-1) === '/' ? '' : '/'}${key}`);\n    };\n\n    delete tableProps.RowWrapper;\n    if (rows?.length === 0) {\n        delete tableProps.actionResolver;\n    }\n\n    return (\n        <React.Fragment>\n            { loaded && cells ?\n                PfTable && <PfTable\n                    variant={ variant }\n                    aria-label=\"Host inventory\"\n                    cells={ cells }\n                    rows={ createRows(\n                        rows,\n                        columns,\n                        {\n                            actions,\n                            expandable,\n                            loaded,\n                            onRowClick: onRowClick || defaultRowClick,\n                            noDetail,\n                            sortBy,\n                            noSystemsTable\n                        })\n                    }\n                    gridBreakPoint={\n                        columns?.length > 5 ?\n                            TableGridBreakpoint.gridLg :\n                            TableGridBreakpoint.gridMd\n                    }\n                    className=\"ins-c-entity-table\"\n                    onSort={ (event, index, direction) => {\n                        onSortChange(\n                            event,\n                            cells?.[index - Boolean(hasCheckbox) - Boolean(expandable)]?.sortKey ||\n                            cells?.[index - Boolean(hasCheckbox) - Boolean(expandable)]?.key,\n                            direction,\n                            index\n                        );\n                    } }\n                    sortBy={ {\n                        //Inventory API has different sortBy key than system_profile\n                        index:\n                            cells?.findIndex(\n                                item => (sortBy?.key === item.key)\n                                || (sortBy?.key === 'operating_system' && item.key === 'system_profile')\n                            ) + Boolean(hasCheckbox) + Boolean(expandable),\n                        direction: sortBy?.direction\n                    } }\n                    { ...{\n                        ...hasCheckbox && rows?.length !== 0 ? { onSelect: onItemSelect } : {},\n                        ...expandable ? { onCollapse: onExpandClick } : {},\n                        ...actions && rows?.length > 0 && { actions }\n                    } }\n                    isStickyHeader\n                    { ...tableProps }\n                >\n                    <TableHeader />\n                    <TableBody />\n                </PfTable> :\n                <SkeletonTable\n                    colSize={ columns?.length || 3 }\n                    rowSize={ 15 }\n                    variant={variant ?? tableProps.variant}\n                />\n            }\n        </React.Fragment>\n    );\n};\n\nEntityTable.propTypes = {\n    variant: PropTypes.oneOf(['compact']),\n    expandable: PropTypes.bool,\n    onExpandClick: PropTypes.func,\n    onSort: PropTypes.func,\n    hasCheckbox: PropTypes.bool,\n    showActions: PropTypes.bool,\n    hasItems: PropTypes.bool,\n    showHealth: PropTypes.bool,\n    sortBy: PropTypes.shape({\n        key: PropTypes.string,\n        direction: PropTypes.oneOf(['asc', 'desc'])\n    }),\n    tableProps: PropTypes.shape({\n        [PropTypes.string]: PropTypes.any,\n        RowWrapper: PropTypes.elementType,\n        variant: PropTypes.string,\n        actionResolver: PropTypes.func\n    }),\n    onRowClick: PropTypes.func,\n    showTags: PropTypes.bool,\n    noSystemsTable: PropTypes.node,\n    disableDefaultColumns: PropTypes.oneOfType([PropTypes.bool, PropTypes.arrayOf(PropTypes.string)]),\n    loaded: PropTypes.bool,\n    columnsCounter: PropTypes.number,\n    columns: PropTypes.oneOfType([PropTypes.array, PropTypes.func]),\n    isLoaded: PropTypes.bool,\n    actions: PropTypes.array,\n    noDetail: PropTypes.any\n};\n\nEntityTable.defaultProps = {\n    loaded: false,\n    showHealth: false,\n    expandable: false,\n    hasCheckbox: true,\n    showActions: false,\n    rows: [],\n    variant: TableVariant.compact,\n    onExpandClick: () => undefined,\n    tableProps: {}\n};\n\nexport default EntityTable;\n","import { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { mergeArraysByKey } from '@redhat-cloud-services/frontend-components-utilities/helpers/helpers';\nimport { defaultColumns } from '../../../store/entities';\nimport  useFeatureFlag from '../../../Utilities/useFeatureFlag';\n\nconst isColumnEnabled = (key, disableColumns, showTags) =>\n    (key === 'tags' && showTags) ||\n    (key !== 'tags' && (Array.isArray(disableColumns) && !(disableColumns).includes(key)));\n\nconst useColumns = (columnsProp, disableDefaultColumns, showTags, columnsCounter) => {\n    const groupsEnabled = useFeatureFlag('hbi.ui.inventory-groups');\n    const columnsRedux = useSelector(\n        ({ entities: { columns } }) => columns,\n        (next, prev) => next.every(\n            ({ key }, index) => prev.findIndex(({ key: prevKey }) => prevKey === key) === index\n        )\n    );\n    const disabledColumns = Array.isArray(disableDefaultColumns) ? disableDefaultColumns : [];\n    //condition for the newDefaultColumns should be removed after inventory groups is released\n    const defaultColumnsFiltered = useMemo(() => (disableDefaultColumns === true) ?\n        [] : defaultColumns(groupsEnabled).filter(({ key }) =>\n            isColumnEnabled(key, disabledColumns, showTags)\n        ), [disabledColumns, disableDefaultColumns, showTags, groupsEnabled]);\n\n    return useMemo(() => {\n        if (typeof columnsProp === 'function') {\n            return columnsProp(defaultColumns(groupsEnabled));\n        } else if (columnsProp) {\n            return mergeArraysByKey([\n                defaultColumnsFiltered,\n                columnsProp\n            ], 'key');\n        } else if (!columnsProp && columnsRedux) {\n            return columnsRedux;\n        }  else {\n            return defaultColumnsFiltered;\n        }\n    }, [\n        showTags,\n        Array.isArray(disableDefaultColumns) ? disableDefaultColumns.join() : disableDefaultColumns,\n        Array.isArray(columnsProp) ?\n            columnsProp.map(({ key }) => key).join() :\n            typeof columnsProp === 'function' ? 'function' : columnsProp,\n        Array.isArray(columnsRedux) ? columnsRedux.map(({ key }) => key).join() : columnsRedux,\n        columnsCounter,\n        groupsEnabled\n    ]);\n};\n\nexport default useColumns;\n","/* eslint-disable react/display-name */\nimport React, { useEffect, useRef } from 'react';\nimport { useSelector } from 'react-redux';\nimport InventoryEntityTable from './EntityTable';\nimport { Grid, GridItem } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport './InventoryList.scss';\nimport isEqual from 'lodash/isEqual';\nimport AccessDenied from '../../Utilities/AccessDenied';\n\nconst convertItem = ({ children, isOpen, ...item }) => item;\n\n/**\n * Component that works as a side channel for consumers to notify inventory of new data changes.\n */\nconst ContextInventoryList = ({ showHealth, onRefreshData, ignoreRefresh, ...props }) => {\n    const prevItems = useRef(props.items);\n    const prevSortBy = useRef(props.sortBy);\n\n    useEffect(() => {\n        if (props.hasItems) {\n            onRefreshData({}, ignoreRefresh);\n        }\n    }, []);\n\n    /**\n     * Function to calculate for new changes, this function limits re-renders by checking if previous items are\n     * same as new items.\n     * If items are not passed, it only checks for props sortBy.\n     * @param {*} prevProps previous props - items, hasItems, sortBy.\n     */\n    useEffect(() => {\n        if (props.hasItems && !isEqual(prevItems.current.map(convertItem), props.items.map(convertItem))) {\n            prevItems.current = props.items;\n            onRefreshData({}, ignoreRefresh);\n        }\n\n        if (!props.hasItems && !isEqual(prevSortBy.current, props.sortBy)) {\n            prevSortBy.current = props.sortBy;\n            onRefreshData({}, ignoreRefresh);\n        }\n    });\n\n    return (<Grid gutter=\"sm\" className=\"ins-inventory-list\">\n        <GridItem span={ 12 }>\n            <InventoryEntityTable { ...props } onRefreshData={onRefreshData} />\n        </GridItem>\n    </Grid>);\n};\n\n/**\n * Component that consumes active filters and passes them down to component.\n */\nconst InventoryList = React.forwardRef(({ hasAccess, onRefreshData, ...props }, ref) => {\n    const activeFilters = useSelector(({ entities: { activeFilters } }) => activeFilters);\n\n    if (ref) {\n        ref.current = {\n            onRefreshData: (params, disableRefresh = true) => onRefreshData(params, disableRefresh)\n        };\n    }\n\n    return !hasAccess ?\n        <div className=\"ins-c-inventory__no-access\">\n            <AccessDenied showReturnButton={false} />\n        </div>\n        : (\n            <ContextInventoryList\n                { ...props }\n                activeFilters={ activeFilters }\n                onRefreshData={ onRefreshData }\n            />\n        );\n});\n\nContextInventoryList.propTypes = {\n    ...InventoryList.propTypes,\n    setRefresh: PropTypes.func,\n    onRefreshData: PropTypes.func,\n    ignoreRefresh: PropTypes.bool\n};\nContextInventoryList.defaultProps = {\n    perPage: 50,\n    page: 1,\n    ignoreRefresh: true\n};\nInventoryList.propTypes = {\n    showTags: PropTypes.bool,\n    filterEntities: PropTypes.func,\n    loadEntities: PropTypes.func,\n    showHealth: PropTypes.bool,\n    page: PropTypes.number,\n    perPage: PropTypes.number,\n    sortBy: PropTypes.shape({\n        key: PropTypes.string,\n        direction: PropTypes.string\n    }),\n    items: PropTypes.arrayOf(PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.shape({\n            id: PropTypes.string.isRequired\n        }),\n        PropTypes.shape({\n            account: PropTypes.any,\n            isOpen: PropTypes.bool,\n            title: PropTypes.node\n        })\n    ])),\n    entities: PropTypes.arrayOf(PropTypes.any),\n    customFilters: PropTypes.shape({\n        tags: PropTypes.oneOfType([\n            PropTypes.object,\n            PropTypes.arrayOf(PropTypes.string)\n        ])\n    }),\n    getEntities: PropTypes.func,\n    hideFilters: PropTypes.shape({\n        tags: PropTypes.bool,\n        name: PropTypes.bool,\n        registeredWith: PropTypes.bool,\n        stale: PropTypes.bool,\n        operatingSystem: PropTypes.bool\n    }),\n    onRefreshData: PropTypes.func\n};\n\nInventoryList.defaultProps = {\n    hasAccess: true\n};\n\nexport default InventoryList;\n","/* eslint-disable camelcase */\nimport React from 'react';\nimport { Pagination, PaginationVariant } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\n\n/**\n * Bottom pagination used in table. It can remember what page user is on if user entered the page number in input.\n */\nconst FooterPagination = ({\n    total,\n    page,\n    perPage,\n    direction,\n    isFull,\n    hasAccess,\n    paginationProps,\n    onRefreshData,\n    loaded\n}) => {\n    /**\n     * Thi method sets new page and combines previous props to apply sort, filters etc.\n     * @param {*} event html event to figure if target was input.\n     * @param {*} page current page to change to.\n     */\n    const onSetPage = (_event, pageArg) => onRefreshData({ page: pageArg });\n\n    /**\n     * This method changes per page, it automatically sets page to first one.\n     * It also applies previous sort, filters, etc.\n     * @param {*} _event event is now not used.\n     * @param {*} perPage new perPage set by user.\n     */\n    const onPerPageSelect = (_event, perPageArg) => onRefreshData({ page: 1, per_page: perPageArg });\n\n    return (loaded || !hasAccess) ? (\n        <Pagination\n            { ...isFull && {\n                variant: PaginationVariant.bottom\n            } }\n            isDisabled={!hasAccess}\n            itemCount={ total }\n            page={ page }\n            perPage={ perPage }\n            dropDirection={ direction }\n            onSetPage={ onSetPage }\n            onPerPageSelect={ onPerPageSelect }\n            {...paginationProps}\n        />\n    ) : null;\n};\n\nFooterPagination.propTypes = {\n    perPage: PropTypes.number,\n    total: PropTypes.number,\n    page: PropTypes.number,\n    isFull: PropTypes.bool,\n    hasAccess: PropTypes.bool,\n    direction: PropTypes.string,\n    paginationProps: PropTypes.object,\n    loaded: PropTypes.bool,\n    onRefreshData: PropTypes.func.isRequired\n};\n\nFooterPagination.defaultProps = {\n    total: 0,\n    isFull: false,\n    direction: 'up',\n    hasAccess: true\n};\n\nexport default FooterPagination;\n","/* eslint-disable camelcase */\nimport React, { Fragment, forwardRef, useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector, shallowEqual, useStore, useDispatch } from 'react-redux';\nimport EntityTableToolbar from './EntityTableToolbar';\nimport { TableToolbar } from '@redhat-cloud-services/frontend-components/TableToolbar';\nimport { ErrorState } from '@redhat-cloud-services/frontend-components/ErrorState';\nimport InventoryList from './InventoryList';\nimport Pagination from './Pagination';\nimport AccessDenied from '../../Utilities/AccessDenied';\nimport { loadSystems } from '../../Utilities/sharedFunctions';\nimport isEqual from 'lodash/isEqual';\nimport { entitiesLoading } from '../../store/actions';\n\n/**\n * A helper function to store props and to always return the latest state.\n * For example, EntityTableToolbar wraps OnRefreshData in a callback, so we need this\n * to get the latest props and not the props at the time of when the function is\n * being wrapped in callback.\n */\nconst propsCache = () => {\n    let cache = {};\n\n    const updateProps = (props) => { cache = props; };\n\n    const getProps = () => cache;\n\n    return { updateProps, getProps };\n};\n\n/**\n * This component is used to combine all essential components together:\n *   * EntityTableToolbar - to control top toolbar.\n *   * InventoryList - to allow consumers to change data from outside and contains actual inventory table.\n *   * Pagination - bottom pagination.\n * It also calculates pagination and sortBy from props or from store if consumer passed items or not.\n */\n\nconst InventoryTable = forwardRef(({ // eslint-disable-line react/display-name\n    onRefresh,\n    children,\n    inventoryRef,\n    items,\n    total: propsTotal,\n    page: propsPage,\n    perPage: propsPerPage,\n    showTags,\n    sortBy: propsSortBy,\n    customFilters,\n    hasAccess = true,\n    isFullView = false,\n    getEntities,\n    getTags,\n    hideFilters,\n    paginationProps,\n    errorState = <ErrorState />,\n    autoRefresh,\n    isLoaded,\n    initialLoading,\n    ignoreRefresh,\n    showTagModal,\n    tableProps,\n    isRbacEnabled,\n    hasCheckbox,\n    onRowClick,\n    ...props\n}, ref) => {\n    const hasItems = Boolean(items);\n    const error = useSelector(({ entities }) => (\n        entities?.error\n    ));\n    const page = useSelector(({ entities: { page: invPage } }) => (\n        hasItems ? propsPage : (invPage || 1)\n    )\n    , shallowEqual);\n    const perPage = useSelector(({ entities: { perPage: invPerPage } }) => (\n        hasItems ? propsPerPage : (invPerPage || 50)\n    )\n    , shallowEqual);\n    const total = useSelector(({ entities: { total: invTotal } }) => {\n        if (hasItems) {\n            return propsTotal !== undefined ? propsTotal : items?.length;\n        }\n\n        return invTotal;\n    }, shallowEqual);\n    const pagination = {\n        page,\n        perPage,\n        total\n    };\n    const sortBy = useSelector(({ entities: { sortBy: invSortBy } }) => (\n        hasItems ? propsSortBy : invSortBy\n    ), shallowEqual);\n\n    const reduxLoaded = useSelector(({ entities }) => (\n        hasItems && isLoaded !== undefined ? (isLoaded && entities?.loaded) : entities?.loaded\n    ));\n\n    /**\n     * If initialLoading is set to true, then the component should be in loading state until\n     * entities.loaded is false (and then we can use the redux loading state and forget this one)\n     */\n    const [initialLoadingActive, disableInitialLoading] = useState(initialLoading);\n    useEffect(() => {\n        if (!reduxLoaded) {\n            disableInitialLoading();\n        }\n    }, [reduxLoaded]);\n    const loaded = reduxLoaded && !initialLoadingActive;\n\n    const dispatch = useDispatch();\n    const store = useStore();\n\n    const cache = useRef(propsCache());\n    cache.current.updateProps({\n        page,\n        perPage,\n        items,\n        sortBy,\n        hideFilters,\n        showTags,\n        getEntities,\n        customFilters,\n        hasItems\n    });\n\n    /**\n     * If consumer wants to change data they can call this function via component ref.\n     * @param {*} options new options to be applied, like pagination, filters, etc.\n     */\n    const onRefreshData = (options = {}, disableOnRefresh) => {\n        const { activeFilters } = store.getState().entities;\n        const cachedProps = cache.current?.getProps() || {};\n        const currPerPage = options?.per_page || options?.perPage || cachedProps.perPage;\n\n        const params = {\n            page: cachedProps.page,\n            per_page: currPerPage,\n            items: cachedProps.items,\n            sortBy: cachedProps.sortBy,\n            hideFilters: cachedProps.hideFilters,\n            filters: activeFilters,\n            hasItems: cachedProps.hasItems,\n            ...cachedProps.customFilters,\n            ...options\n        };\n\n        if (onRefresh && !disableOnRefresh) {\n            dispatch(entitiesLoading());\n            onRefresh(params, (options) => {\n                dispatch(\n                    loadSystems(\n                        { ...params, ...options },\n                        cachedProps.showTags,\n                        cachedProps.getEntities\n                    )\n                );\n            });\n        } else {\n            dispatch(\n                loadSystems(\n                    params,\n                    cachedProps.showTags,\n                    cachedProps.getEntities\n                )\n            );\n        }\n    };\n\n    const prevFilters = useRef(customFilters);\n    useEffect(() => {\n        if (autoRefresh && !isEqual(prevFilters.current, customFilters)) {\n            onRefreshData({ page: 1 });\n            prevFilters.current = customFilters;\n        }\n    });\n\n    return (\n        (hasAccess === false && isFullView) ?\n            <AccessDenied\n                title=\"This application requires Inventory permissions\"\n                description={<div>\n                    To view the content of this page, you must be granted\n                    a minimum of inventory permissions from your Organization Administrator.\n                </div>}\n            /> :\n            !error ? <Fragment>\n                <EntityTableToolbar\n                    { ...props }\n                    customFilters={customFilters}\n                    hasAccess={hasAccess}\n                    items={ items }\n                    hasItems={ hasItems }\n                    total={ pagination.total }\n                    page={ pagination.page }\n                    perPage={ pagination.perPage }\n                    showTags={ showTags }\n                    getTags={ getTags }\n                    onRefreshData={onRefreshData}\n                    sortBy={ sortBy }\n                    hideFilters={hideFilters}\n                    paginationProps={paginationProps}\n                    loaded={loaded}\n                    showTagModal={showTagModal}\n                    activeFiltersConfig={{ deleteTitle: 'Reset filters', ...props.activeFiltersConfig }}\n                >\n                    { children }\n                </EntityTableToolbar>\n                <InventoryList\n                    { ...props }\n                    hasCheckbox={hasCheckbox}\n                    onRowClick={onRowClick}\n                    tableProps={tableProps}\n                    customFilters={customFilters}\n                    hasAccess={hasAccess}\n                    ref={ref}\n                    hasItems={ hasItems }\n                    items={ items }\n                    page={ pagination.page }\n                    sortBy={ sortBy }\n                    perPage={ pagination.perPage }\n                    showTags={ showTags }\n                    onRefreshData={onRefreshData}\n                    loaded={loaded}\n                    ignoreRefresh={ignoreRefresh}\n                />\n                <TableToolbar isFooter className=\"ins-c-inventory__table--toolbar\">\n                    <Pagination\n                        hasAccess={hasAccess}\n                        isFull\n                        total={ pagination.total }\n                        page={ pagination.page }\n                        perPage={ pagination.perPage }\n                        hasItems={ hasItems }\n                        onRefreshData={onRefreshData}\n                        paginationProps={paginationProps}\n                        loaded={loaded}\n                    />\n                </TableToolbar>\n            </Fragment> : errorState\n    );\n});\n\nInventoryTable.propTypes = {\n    autoRefresh: PropTypes.bool,\n    onRefresh: PropTypes.func,\n    children: PropTypes.node,\n    inventoryRef: PropTypes.object,\n    items: PropTypes.array,\n    total: PropTypes.number,\n    page: PropTypes.number,\n    perPage: PropTypes.number,\n    showTags: PropTypes.bool,\n    getTags: PropTypes.func,\n    sortBy: PropTypes.object,\n    customFilters: PropTypes.any,\n    hasAccess: PropTypes.bool,\n    isFullView: PropTypes.bool,\n    getEntities: PropTypes.func,\n    hideFilters: PropTypes.object,\n    paginationProps: PropTypes.object,\n    errorState: PropTypes.node,\n    isLoaded: PropTypes.bool,\n    initialLoading: PropTypes.bool,\n    ignoreRefresh: PropTypes.bool,\n    showTagModal: PropTypes.bool,\n    activeFiltersConfig: PropTypes.object,\n    tableProps: PropTypes.object,\n    isRbacEnabled: PropTypes.bool,\n    hasCheckbox: PropTypes.bool,\n    onRowClick: PropTypes.func\n};\n\nexport default InventoryTable;\n","import React from 'react';\nimport {\n    EmptyStateBody,\n    EmptyState,\n    EmptyStateVariant,\n    Title,\n    EmptyStateIcon,\n    Button,\n    EmptyStatePrimary\n} from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport SearchIcon from '@patternfly/react-icons/dist/esm/icons/search-icon';\n\n/**\n * Empty state stable when no systems (or other entities) are found.\n */\nconst NoEntitiesFound = ({ entities, onClearAll, showIcon }) => (\n    <EmptyState\n        variant={EmptyStateVariant.full}\n        data-ouia-component-id=\"empty-state\"\n        data-ouia-component-type=\"PF4/EmptyState\"\n        data-ouia-safe={true}\n    >\n        {showIcon && <EmptyStateIcon icon={SearchIcon} />}\n        <Title headingLevel=\"h5\" size=\"lg\">\n            {`No matching ${entities} found`}\n        </Title>\n        <EmptyStateBody>\n            To continue, edit your filter settings and try again\n        </EmptyStateBody>\n        {onClearAll !== undefined && (\n            <EmptyStatePrimary>\n                <Button variant=\"link\" onClick={onClearAll}>\n                    Clear all filters\n                </Button>\n            </EmptyStatePrimary>\n        )}\n    </EmptyState>\n);\n\nNoEntitiesFound.propTypes = {\n    entities: PropTypes.string,\n    onClearAll: PropTypes.func,\n    showIcon: PropTypes.bool\n};\n\nNoEntitiesFound.defaultProps = {\n    entities: 'systems',\n    showIcon: true\n};\n\nexport default NoEntitiesFound;\n","import React from 'react';\nimport { cellWidth, sortable, expandable } from '@patternfly/react-table';\nimport get from 'lodash/get';\nimport flatten from 'lodash/flatten';\nimport TitleColumn from './TitleColumn';\nimport { Fragment } from 'react';\nimport { Skeleton } from '@patternfly/react-core';\n\nexport const buildCells = (item, columns, extra) => {\n    return columns.map(({ key, composed, renderFunc }) => {\n        // eslint-disable-next-line new-cap\n        const data = composed ? <Fragment>{TitleColumn(\n            composed.map(key => get(item, key, ' ')),\n            item.id,\n            item,\n            extra\n        )}</Fragment> : get(item, key, ' ');\n        return renderFunc ? <Fragment>{ renderFunc(data, item.id, item, extra) }</Fragment> : data;\n    });\n};\n\nexport const createRows = (rows = [], columns = [], { actions, expandable, noSystemsTable, ...extra } = {}) => {\n    if (rows.length === 0) {\n        return [{\n            cells: [{\n                title: noSystemsTable,\n                props: {\n                    colSpan: columns.length + Boolean(actions),\n                    dataLabel: null\n                }\n            }]\n        }];\n    }\n\n    return flatten(rows.map((oneItem, key) => ([{\n        ...oneItem,\n        ...oneItem.children && expandable && { isOpen: !!oneItem.isOpen },\n        cells: buildCells(oneItem, columns, extra),\n        actionProps: {\n            'data-ouia-component-id': `${oneItem.id}-actions-kebab`\n        }\n    }, oneItem.children && expandable && {\n        cells: [\n            {\n                title: typeof oneItem.children === 'function' ? oneItem.children() : oneItem.children\n            }\n        ],\n        parent: key * 2,\n        fullWidth: true\n    }]))).filter(Boolean);\n};\n\nexport const onDeleteFilter = (deleted, currFilter = []) => {\n    const { value: deletedItem } = deleted?.chips?.[0] || {};\n    return  currFilter.filter((item) => item !== deletedItem);\n};\n\nexport const onDeleteTag = (deleted, selectedTags, onApplyTags) => {\n    const deletedItem = deleted?.chips?.[0];\n    if (selectedTags?.[deleted?.key]?.[deletedItem?.key] !== undefined) {\n        selectedTags[deleted?.key][deletedItem?.key] = false;\n    }\n\n    onApplyTags && onApplyTags(selectedTags, false);\n    return selectedTags;\n};\n\nconst includesSortable = (transforms) => transforms?.reduce((acc, fn) => acc || fn.toString().includes('onSort:'), false);\n\nexport const createColumns = (columns, hasItems, rows, isExpandable) => (\n    columns?.map(({ props, transforms, cellFormatters, ...oneCell }) => ({\n        ...oneCell,\n        transforms: [\n            ...transforms || [],\n            ...props?.width ? [cellWidth(props.width)] : [],\n            ...hasItems ||\n            rows.length <= 0 ||\n            (props && props.isStatic) ||\n            transforms?.includes(sortable) ||\n            includesSortable(transforms) ? [] : [sortable]\n        ],\n        cellFormatters: [\n            ...cellFormatters || [],\n            ...isExpandable ? [expandable] : []\n        ]\n    }))\n);\n\nexport const generateLoadingRows = (colsNumber, rowsNumber) =>\n    Array(rowsNumber).fill({\n        fullWidth: true,\n        cells: Array(colsNumber).fill({ title: <Skeleton /> })\n    });\n","import { useState } from 'react';\nimport { TEXTUAL_CHIP } from '../../Utilities/index';\n\nexport const textFilterState = { textFilter: '' };\nexport const TEXT_FILTER = 'TEXT_FILTER';\nexport const textFilterReducer = (_state, { type, payload }) => ({\n    ...type === TEXT_FILTER && {\n        textFilter: payload\n    }\n});\n\nexport const useTextFilter = ([state, dispatch] = [textFilterState]) => {\n    const [stateValue, setStateValue] = useState('');\n    const value = dispatch ? state.textFilter : stateValue;\n    const setValue = dispatch ? (newValue) => dispatch({ type: TEXT_FILTER, payload: newValue }) : setStateValue;\n\n    const filter = {\n        label: 'Name',\n        value: 'name-filter',\n        filterValues: {\n            placeholder: 'Filter by name',\n            value,\n            onChange: (_e, value) => setValue(value)\n        }\n    };\n    const chip = value.length > 0 ? [{\n        category: 'Display name',\n        type: TEXTUAL_CHIP,\n        chips: [\n            { name: value }\n        ]\n    }] : [];\n    return [filter, chip, value, setValue];\n};\n","import { useState } from 'react';\nimport { STALE_CHIP, staleness } from '../../Utilities/constants';\n\nexport const stalenessFilterState = { stalenessFilter: [] };\nexport const STALENESS_FILTER = 'STALENESS_FILTER';\nexport const stalenessFilterReducer = (_state, { type, payload }) => ({\n    ...type === STALENESS_FILTER && {\n        stalenessFilter: payload\n    }\n});\n\nexport const useStalenessFilter = ([state, dispatch] = [stalenessFilterState]) => {\n    let [stalenessStateValue, setStateValue] = useState([]);\n    const stalenessValue = dispatch ? state.stalenessFilter : stalenessStateValue;\n    const setValue = dispatch ? (newValue) => dispatch({ type: STALENESS_FILTER, payload: newValue }) : setStateValue;\n\n    const filter = {\n        label: 'Status',\n        value: 'stale-status',\n        type: 'checkbox',\n        filterValues: {\n            value: stalenessValue,\n            onChange: (_e, value) => setValue(value),\n            items: staleness\n        }\n    };\n    const chip = stalenessValue?.length > 0 ? [{\n        category: 'Status',\n        type: STALE_CHIP,\n        chips: staleness.filter(({ value }) => stalenessValue.includes(value))\n        .map(({ label, ...props }) => ({ name: label, ...props }))\n    }] : [];\n    return [filter, chip, stalenessValue, setValue];\n};\n","import { useState } from 'react';\nimport { REGISTERED_CHIP, registered } from '../../Utilities/constants';\n\nexport const registeredWithFilterState = { registeredWithFilter: [] };\nexport const REGISTERED_WITH_FILTER = 'REGISTERED_WITH_FILTER';\nexport const registeredWithFilterReducer = (_state, { type, payload }) => ({\n    ...type === REGISTERED_WITH_FILTER && {\n        registeredWithFilter: payload\n    }\n});\n\nexport const useRegisteredWithFilter = ([state, dispatch] = [registeredWithFilterState]) => {\n    let [registeredWithStateValue, setStateValue] = useState([]);\n    const registeredWithValue = dispatch ? state.registeredWithFilter : registeredWithStateValue;\n    const setValue = dispatch ? (newValue) => dispatch({ type: REGISTERED_WITH_FILTER, payload: newValue }) : setStateValue;\n\n    const filter = {\n        label: 'Data Collector',\n        value: 'data-collector-registered-with',\n        type: 'checkbox',\n        filterValues: {\n            value: registeredWithValue,\n            onChange: (_e, value) => setValue(value),\n            items: registered\n        }\n    };\n    const chip = registeredWithValue?.length > 0 ? [{\n        category: 'Data Collector',\n        type: REGISTERED_CHIP,\n        chips: registered.filter(({ value }) => registeredWithValue.includes(value))\n        .map(({ label, ...props }) => ({ name: label, ...props }))\n    }] : [];\n    return [filter, chip, registeredWithValue, setValue];\n};\n","import { useTagsFilter as tagsFilter } from '@redhat-cloud-services/frontend-components/FilterHooks';\n\nexport const useTagsFilter = (\n    allTags = [],\n    loaded = false,\n    additionalTagsCount = 0,\n    onShowMoreClick,\n    stateMapper\n) => {\n    const {\n        filter,\n        chips,\n        selectedTags,\n        setValue,\n        filterTagsBy,\n        seFilterTagsBy\n    } = tagsFilter(\n        allTags,\n        loaded,\n        additionalTagsCount,\n        onShowMoreClick,\n        stateMapper,\n        'system'\n    );\n\n    return {\n        tagsFilter: {\n            label: 'Tags',\n            value: 'tags',\n            type: 'group',\n            placeholder: 'Filter system by tag',\n            filterValues: {\n                ...filter\n            }\n        },\n        tagsChip: chips,\n        selectedTags,\n        setSelectedTags: setValue,\n        filterTagsBy,\n        seFilterTagsBy\n    };\n};\n","import { useState } from 'react';\nimport { RHCD_FILTER_KEY, rhcdOptions } from '../../Utilities/index';\n\nexport const rhcdFilterState = { rhcdFilter: null };\nexport const RHCD_FILTER = 'RHCD_FILTER';\nexport const rhcdFilterReducer = (_state, { type, payload }) => ({\n    ...type === RHCD_FILTER && {\n        rhcdFilter: payload\n    }\n});\n\nexport const useRhcdFilter = ([state, dispatch] = [rhcdFilterState]) => {\n    let [rhcdStateValue, setStateValue] = useState([]);\n    const rhcdValue = dispatch ? state.rhcdFilter : rhcdStateValue;\n    const setValue = dispatch ? (newValue) => dispatch({ type: RHCD_FILTER, payload: newValue }) : setStateValue;\n\n    const filter = {\n        label: 'RHC status',\n        value: 'rhc-status',\n        type: 'checkbox',\n        filterValues: {\n            value: rhcdValue,\n            onChange: (_e, value) => setValue(value),\n            items: rhcdOptions\n        }\n    };\n    const chip = rhcdValue?.length > 0 ? [{\n        category: 'RHC status',\n        type: RHCD_FILTER_KEY,\n        chips: rhcdOptions.filter(({ value }) => rhcdValue.includes(value))\n        .map(({ label, ...props }) => ({ name: label, ...props }))\n    }] : [];\n    return [filter, chip, rhcdValue, setValue];\n};\n","import { useState } from 'react';\nimport { UPDATE_METHOD_KEY, updateMethodOptions } from '../../Utilities/index';\n\nexport const updateMethodFilterState = { updateMethodFilter: null };\nexport const UPDATE_METHOD_FILTER = 'UPDATE_METHOD_FILTER';\nexport const updateMethodFilterReducer = (_state, { type, payload }) => ({\n    ...type === UPDATE_METHOD_FILTER && {\n        updateMethodFilter: payload\n    }\n});\n\nexport const useUpdateMethodFilter = ([state, dispatch] = [updateMethodFilterState]) => {\n    let [filterStateValue, setStateValue] = useState([]);\n    const updateMethodValue = dispatch ? state.updateMethodFilter : filterStateValue;\n    const setValue = dispatch ? (newValue) => dispatch({ type: UPDATE_METHOD_FILTER, payload: newValue }) : setStateValue;\n\n    const filter = {\n        label: 'System Update Method',\n        value: 'update-method',\n        type: 'checkbox',\n        filterValues: {\n            value: updateMethodValue,\n            onChange: (_e, value) => setValue(value),\n            items: updateMethodOptions\n        }\n    };\n    const chip = updateMethodValue?.length > 0 ? [{\n        category: 'System Update Method',\n        type: UPDATE_METHOD_KEY,\n        chips: updateMethodOptions.filter(({ value }) => updateMethodValue.includes(value))\n        .map(({ label, ...props }) => ({ name: label, ...props }))\n    }] : [];\n    return [filter, chip, updateMethodValue, setValue];\n};\n","import { useState } from 'react';\nimport { LAST_SEEN_CHIP, lastSeenItems } from '../../Utilities/constants';\n\nexport const lastSeenFilterState = { lastSeenFilter: [] };\nexport const LAST_SEEN_FILTER = 'LAST_SEEN_FILTER';\nexport const lastSeenFilterReducer = (_state, { type, payload }) => ({\n    ...(type === LAST_SEEN_FILTER && {\n        lastSeenFilter: payload\n    })\n});\n\nexport const useLastSeenFilter = (\n    [state, dispatch] = [lastSeenFilterState]\n) => {\n    let [lastSeenStateValue, setLastSeenValue] = useState({});\n    const lastSeenValue = dispatch ? state.lastSeenFilter : [lastSeenStateValue];\n    const setValue = dispatch\n        ? (newValue) => dispatch({ type: LAST_SEEN_FILTER, payload: newValue })\n        : setLastSeenValue;\n\n    const filter = {\n        label: 'Last seen',\n        value: 'last_seen',\n        type: 'radio',\n        filterValues: {\n            value: lastSeenValue,\n            onChange: (_e, value) => setValue(value),\n            items: lastSeenItems\n        }\n    };\n\n    const chip =\n    !Array.isArray(lastSeenValue) && lastSeenValue !== undefined\n        ? [\n            {\n                category: 'Last seen',\n                type: LAST_SEEN_CHIP,\n                chips: lastSeenItems\n                .filter(({ value }) => value?.mark === lastSeenValue?.mark)\n                .map(({ label, ...props }) => ({ name: label, ...props }))\n            }\n        ]\n        : [];\n\n    const [startDate, setStartDate] = useState();\n    const [endDate, setEndDate] = useState();\n    const todaysDate = new Date();\n\n    const manageStartDate = (apiStartDate, apiEndDate)=> {\n        if (isNaN(apiEndDate) &&  isNaN(apiStartDate)) {\n            setValue({ ...lastSeenValue, updatedStart: null, updatedEnd: null });\n        } else if (apiStartDate > apiEndDate || isNaN(apiStartDate) || apiStartDate > todaysDate) {\n            setValue({ ...lastSeenValue, updatedStart: null, updatedEnd: apiEndDate.toISOString() });\n        } else {\n            setValue({ ...lastSeenValue, updatedStart: apiStartDate.toISOString() });\n        }\n    };\n\n    const manageEndDate = (apiStartDate, apiEndDate)=> {\n        if (isNaN(apiEndDate) &&  isNaN(apiStartDate)) {\n            setValue({ ...lastSeenValue, updatedStart: null, updatedEnd: null });\n        } else if (apiStartDate > apiEndDate || isNaN(apiEndDate)) {\n            setValue({ ...lastSeenValue, updatedStart: apiStartDate.toISOString(), updatedEnd: null });\n        } else {\n            setValue({ ...lastSeenValue, updatedEnd: apiEndDate.toISOString() });\n        }\n    };\n\n    const toValidator = (date) => {\n        const newDate = new Date(date);\n        const minDate = new Date(startDate);\n\n        if (minDate >= newDate) {\n            return 'Start date must be earlier than End date.';\n        } else if (newDate > todaysDate) {\n            return `Date must be ${todaysDate.toISOString().split('T')[0]} or earlier`;\n        } else {\n            return '';\n        }\n    };\n\n    const fromValidator = (date) => {\n        const minDate = new Date(1950, 1, 1);\n        const maxDate = new Date(endDate);\n\n        if (date < minDate) {\n            return 'Date is before the allowable range.';\n        } else if (date > maxDate) {\n            return `End date must be later than Start date.`;\n        } else if (date > todaysDate) {\n            return ' Start date must be earlier than End date.';\n        } else {\n            return '';\n        }\n    };\n\n    const onFromChange = (date) => {\n        const newToDate = new Date(endDate);\n        if (date > newToDate) {\n            setStartDate();\n            return 'End date must be later than Start date.';\n        }\n\n        setStartDate(date);\n        const apiStartDate = new Date(date);\n        apiStartDate.setUTCHours(0);\n        manageStartDate(apiStartDate, newToDate);\n    };\n\n    const onToChange = (date) => {\n        if (startDate > new Date(date)) {\n            return 'Start date must be earlier than End date.';\n        } else if (new Date(date) > todaysDate) {\n            return 'End date must be later than Start date.';\n        } else {\n            setEndDate(date);\n            const apiEndDate = new Date(date);\n            apiEndDate.setUTCHours(23, 59);\n            manageEndDate(new Date(startDate), apiEndDate);\n        }\n    };\n\n    return [\n        filter,\n        chip,\n        lastSeenValue,\n        setValue,\n        toValidator,\n        onFromChange,\n        onToChange,\n        endDate,\n        startDate,\n        fromValidator,\n        setStartDate,\n        setEndDate\n    ];\n};\n","export * from './useTextFilter';\nexport * from './useStalenessFilter';\nexport * from './useRegisteredWithFilter';\nexport * from './useTagsFilter';\nexport * from './useOperatingSystemFilter';\nexport * from './useRhcdFilter';\nexport * from './useUpdateMethodFilter';\nexport * from './useLastSeenFilter';\nexport * from './useGroupFilter';\nexport const filtersReducer = (reducersList) => (state, action) => reducersList.reduce((acc, curr) => ({\n    ...acc,\n    ...curr?.(state, action)\n}), state);\n","/* eslint-disable camelcase */\nimport union from 'lodash/union';\nimport { useEffect, useMemo, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchGroups } from '../../store/inventory-actions';\nimport { HOST_GROUP_CHIP } from '../../Utilities/index';\n\n//for attaching this filter to the redux\nexport const groupFilterState = { groupHostFilter: null };\nexport const GROUP_FILTER = 'GROUP_FILTER';\nexport const groupFilterReducer = (_state, { type, payload }) => ({\n    ...type === GROUP_FILTER && {\n        groupHostFilter: payload\n    }\n});\n\n//receive the array of selected groups and return chips based on the name of selected groups\nexport const buildHostGroupChips = (selectedGroups = []) => {\n    //we use new Set to make sure that chips are unique\n    const chips = [...selectedGroups]?.map((group) => ({ name: group, value: group }));\n    return chips?.length > 0\n        ? [\n            {\n                category: 'Group',\n                type: HOST_GROUP_CHIP,\n                chips\n            }\n        ]\n        : [];\n};\n\nconst useGroupFilter = (apiParams = []) => {\n    const dispatch = useDispatch();\n    useEffect(() => {\n        dispatch(fetchGroups(apiParams));\n    }, []);\n    //fetched values\n    const fetchedValues = useSelector(({ groups })  => groups?.data?.results);\n    //selected are the groups we selected\n    const [selected, setSelected] = useState([]);\n    //buildHostGroupsValues build an array of objects to populate dropdown\n    const [buildHostGroupsValues, setBuildHostGroupsValues] = useState([]);\n    //hostGroupValue is used for config items\n    useEffect(() => {\n        setBuildHostGroupsValues((fetchedValues || []).reduce((acc, group) => {\n            acc.push({ label: group.name, value: group.name });\n            return acc;\n        }, []));\n    }, [fetchedValues, selected]);\n    //this is used in the filter config as a way to select values onChange\n    const onHostGroupsChange = (event, selection, item) => {\n        setSelected(union(selection, item));\n    };\n\n    const chips = useMemo(() => buildHostGroupChips(selected), [selected]);\n    //chips that is built for the filter config\n\n    //hostGroupConfig is a config that we use in EntityTableToolbar.js\n    const hostGroupConfig = useMemo(() => ({\n        label: 'Group',\n        value: 'group-host-filter',\n        type: 'checkbox',\n        filterValues: {\n            onChange: (event, value, item) => {\n                onHostGroupsChange(event, value, item);\n            },\n            value: selected,\n            items: buildHostGroupsValues\n        }\n    }), [selected, buildHostGroupsValues]);\n\n    //setSelectedValues is used for selecting and deleting values\n    const setSelectedValues = (currentValue = []) => {\n        setSelected(currentValue);\n    };\n\n    return [hostGroupConfig, chips, selected, setSelectedValues];\n};\n\nexport default useGroupFilter;\n","import { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchOperatingSystems } from '../../store/inventory-actions';\nimport {\n    buildOSFilterChip,\n    getSelectedOsFilterVersions,\n    groupOSFilterVersions,\n    onOSFilterChange,\n    toGroupSelection\n} from '../../Utilities/OperatingSystemFilterHelpers';\n\nexport const OPERATING_SYSTEM_FILTER = 'OPERATING_SYSTEM_FILTER';\nexport const operatingSystemFilterReducer = (_state, { type, payload }) => ({\n    ...type === OPERATING_SYSTEM_FILTER && {\n        operatingSystemFilter: payload\n    }\n});\n\n/**\n* OS version filter hook.\n* @param {Array} apiParams - an array containing parameters for GET /system_profile/operating_system call\n* @return {Array} An array containing config object, chips array and value setter function.\n*/\nconst useOperatingSystemFilter = (apiParams = []) => {\n    const dispatch = useDispatch();\n    const operatingSystems = useSelector(({ entities }) => entities?.operatingSystems);\n    const operatingSystemsLoaded = useSelector(({ entities }) => entities?.operatingSystemsLoaded) || false;\n\n    // selected versions has the boolean set to true\n    const [selected, setSelected] = useState({});\n    const [groups, setGroups] = useState([]);\n\n    useEffect(() => {\n        dispatch(fetchOperatingSystems(apiParams));\n    }, []);\n\n    useEffect(() => {\n        const newGroups = groupOSFilterVersions(operatingSystems);\n        setGroups((operatingSystems || []).length === 0\n            ? [{ items: [{ label: 'No versions available' }] }]\n            : newGroups);\n        setSelected(\n            toGroupSelection(\n                getSelectedOsFilterVersions(selected),\n                (operatingSystems || []).map(({ value }) => value)\n            )\n        );\n    }, [operatingSystems]);\n\n    // PrimaryToolbar filter configuration\n    const config = useMemo(() => ({\n        label: 'Operating System',\n        value: 'operating-system-filter',\n        type: 'group',\n        filterValues: {\n            selected,\n            groups,\n            onChange: (event, newSelection, clickedGroup, clickedItem) => {\n                setSelected(onOSFilterChange(event, newSelection, clickedGroup, clickedItem));\n            }\n        }\n    }), [selected, groups]);\n\n    const chips = useMemo(() => buildOSFilterChip(selected, operatingSystems), [selected, operatingSystems]);\n\n    // receives an array of OS version values, e.g., ['7.3', '9.0']\n    const setValue = useCallback((versions = []) => {\n        setSelected(\n            toGroupSelection(\n                versions,\n                operatingSystemsLoaded\n                    ? (operatingSystems || []).map(({ value }) => value)\n                    : undefined\n            )\n        );\n    }, [operatingSystemsLoaded, operatingSystems]);\n\n    const value = useMemo(() => getSelectedOsFilterVersions(selected), [selected]);\n\n    return [config, chips, value, setValue];\n};\n\nexport default useOperatingSystemFilter;\n"],"names":["AccessDenied","title","description","props","className","content","propTypes","PropTypes","defaultProps","updateGroupSelectionIdentifier","selection","major","set","Object","values","filter","v","every","Boolean","toGroupSelection","value","availableVersions","undefined","reduce","acc","version","split","includes","compareVersions","a","b","asc","compare","coerce","rcompare","getSelectedOsFilterVersions","selected","versions","entries","forEach","match","push","groupOSFilterVersions","groups","prev","label","groupSelectable","type","items","sort","sorted","map","group","buildOSFilterChip","operatingSystemValue","operatingSystems","minors","chips","name","length","category","OS_CHIP","onOSFilterChange","event","clickedGroup","clickedItem","newSelection","assign","mapValues","omit","EntityTableToolbar","total","page","perPage","filterConfig","hasItems","children","actionsConfig","activeFiltersConfig","showTags","getTags","sortBy","customFilters","hasAccess","bulkSelect","hideFilters","paginationProps","onRefreshData","loaded","showTagModal","dispatch","useDispatch","reducer","useReducer","filtersReducer","textFilterReducer","stalenessFilterReducer","registeredWithFilterReducer","tagsFilterReducer","operatingSystemFilterReducer","rhcdFilterReducer","lastSeenFilterReducer","updateMethodFilterReducer","groupFilterReducer","textFilterState","stalenessFilterState","registeredWithFilterState","tagsFilterState","rhcdFilterState","updateMethodFilterState","lastSeenFilterState","groupFilterState","filters","useSelector","entities","activeFilters","allTagsLoaded","allTags","additionalTagsCount","useTextFilter","nameFilter","nameChip","textFilter","setTextFilter","useStalenessFilter","stalenessFilter","stalenessChip","staleFilter","setStaleFilter","useRegisteredWithFilter","registeredFilter","registeredChip","registeredWithFilter","setRegisteredWithFilter","useRhcdFilter","rhcdFilterConfig","rhcdFilterChips","rhcdFilterValue","setRhcdFilterValue","useLastSeenFilter","lastSeenFilter","lastSeenChip","lastSeenFilterValue","setLastSeenFilterValue","toValidator","onFromChange","onToChange","endDate","startDate","fromValidator","setStartDate","setEndDate","useOperatingSystemFilter","osFilterConfig","osFilterChips","osFilterValue","setOsFilterValue","useUpdateMethodFilter","updateMethodConfig","updateMethodChips","updateMethodValue","setUpdateMethodValue","useGroupFilter","hostGroupConfig","hostGroupChips","hostGroupValue","setHostGroupValue","isUpdateMethodEnabled","useFeatureFlag","groupsEnabled","useTagsFilter","toggleTagModal","tagsFilter","tagsChip","selectedTags","setSelectedTags","filterTagsBy","seFilterTagsBy","debounceGetAllTags","useCallback","debounce","config","options","fetchAllTags","paginationhideFilters","tags","enabledFilters","all","stale","registeredWith","operatingSystem","rhcdFilter","lastSeen","updateMethodFilter","hostGroupFilter","onRefreshDataInner","updateData","debouncedRefresh","key","direction","useEffect","reduceFilters","tagFilters","osFilter","groupFilter","onSetFilter","filterKey","refresh","newFilters","oneFilter","prototype","hasOwnProperty","call","shouldReload","debounced","trimmedValue","trim","textualFilter","find","TEXT_FILTER","onSetTextFilter","mapGroups","deleteMapper","TEXTUAL_CHIP","TAG_CHIP","deleted","onDeleteTag","STALE_CHIP","onDeleteFilter","REGISTERED_CHIP","xor","RHCD_FILTER_KEY","LAST_SEEN_CHIP","mark","UPDATE_METHOD_KEY","HOST_GROUP_CHIP","inventoryFilters","Fragment","PrimaryToolbar","isDisabled","filterValues","placeholder","toLowerCase","onDelete","e","isAll","restDeleted","clearFilters","setFilter","pagination","itemCount","onSetPage","_e","newPage","onPerPageSelect","newPerPage","per_page","Skeleton","size","SkeletonSize","Split","SplitItem","DatePicker","onChange","validators","style","padding","rangeStart","TagsModal","onApply","arrayToSelection","onToggleModal","onClearFilters","onRefresh","hasCheckbox","isLoaded","disableDefaultColumns","EntityTable","expandable","onExpandClick","actions","variant","tableProps","onSort","isExpandable","onRowClick","noDetail","noSystemsTable","NoEntitiesFound","columnsProp","columns","columnsCounter","history","useHistory","location","useLocation","columnsRedux","next","index","findIndex","disabledColumns","Array","isArray","defaultColumnsFiltered","useMemo","defaultColumns","disableColumns","isColumnEnabled","mergeArraysByKey","join","useColumns","rows","cells","createColumns","RowWrapper","actionResolver","PfTable","createRows","_event","pathname","slice","gridBreakPoint","TableGridBreakpoint","setSort","onSortChange","sortKey","item","onSelect","checked","rowId","row","selectEntity","id","onCollapse","isStickyHeader","TableHeader","TableBody","SkeletonTable","colSize","rowSize","showActions","showHealth","TableVariant","convertItem","isOpen","ContextInventoryList","ignoreRefresh","prevItems","useRef","prevSortBy","isEqual","current","Grid","gutter","GridItem","span","InventoryList","React","ref","params","disableRefresh","showReturnButton","setRefresh","filterEntities","loadEntities","account","getEntities","FooterPagination","isFull","Pagination","PaginationVariant","dropDirection","pageArg","perPageArg","InventoryTable","forwardRef","inventoryRef","propsTotal","propsPage","propsPerPage","propsSortBy","isFullView","errorState","ErrorState","autoRefresh","initialLoading","isRbacEnabled","error","invPage","shallowEqual","invPerPage","invTotal","invSortBy","reduxLoaded","useState","initialLoadingActive","disableInitialLoading","store","useStore","cache","updateProps","getProps","propsCache","disableOnRefresh","getState","cachedProps","currPerPage","entitiesLoading","loadSystems","prevFilters","deleteTitle","TableToolbar","isFooter","onClearAll","showIcon","EmptyStateVariant","icon","SearchIcon","headingLevel","onClick","buildCells","extra","composed","renderFunc","data","TitleColumn","get","colSpan","dataLabel","flatten","oneItem","actionProps","parent","fullWidth","currFilter","deletedItem","onApplyTags","includesSortable","transforms","fn","toString","cellFormatters","width","cellWidth","isStatic","sortable","generateLoadingRows","colsNumber","rowsNumber","fill","_state","payload","state","stateValue","setStateValue","setValue","newValue","chip","STALENESS_FILTER","stalenessStateValue","stalenessValue","staleness","REGISTERED_WITH_FILTER","registeredWithStateValue","registeredWithValue","registered","onShowMoreClick","stateMapper","RHCD_FILTER","rhcdStateValue","rhcdValue","rhcdOptions","UPDATE_METHOD_FILTER","filterStateValue","updateMethodOptions","LAST_SEEN_FILTER","lastSeenStateValue","setLastSeenValue","lastSeenValue","lastSeenItems","todaysDate","Date","manageStartDate","apiStartDate","apiEndDate","isNaN","updatedStart","updatedEnd","toISOString","manageEndDate","date","newDate","minDate","maxDate","newToDate","setUTCHours","reducersList","action","curr","groupHostFilter","buildHostGroupChips","selectedGroups","apiParams","fetchGroups","fetchedValues","results","setSelected","buildHostGroupsValues","setBuildHostGroupsValues","onHostGroupsChange","union","setSelectedValues","currentValue","operatingSystemFilter","operatingSystemsLoaded","setGroups","fetchOperatingSystems","newGroups"],"sourceRoot":""}