{"version":3,"file":"js/2712.08ff70492e674a62fc09.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Card/Card.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Card/CardBody.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Text/TextList.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Text/TextListItem.js","webpack:///./node_modules/@patternfly/react-styles/css/components/Card/card.mjs","webpack:///./src/components/GeneralInfo/LoadingCard/LoadingCard.js","webpack:///./src/components/GeneralInfo/selectors/selectors.js"],"sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Card/card';\nimport { css } from '@patternfly/react-styles';\nimport { useOUIAProps } from '../../helpers';\nexport const CardContext = React.createContext({\n    cardId: '',\n    registerTitleId: () => { },\n    isExpanded: false\n});\nexport const Card = (_a) => {\n    var { children = null, id = '', className = '', component = 'article', isHoverable = false, isCompact = false, isSelectable = false, isSelectableRaised = false, isSelected = false, isDisabledRaised = false, isFlat = false, isExpanded = false, isRounded = false, isLarge = false, isFullHeight = false, isPlain = false, ouiaId, ouiaSafe = true, hasSelectableInput = false, selectableInputAriaLabel, onSelectableInputChange = () => { } } = _a, props = __rest(_a, [\"children\", \"id\", \"className\", \"component\", \"isHoverable\", \"isCompact\", \"isSelectable\", \"isSelectableRaised\", \"isSelected\", \"isDisabledRaised\", \"isFlat\", \"isExpanded\", \"isRounded\", \"isLarge\", \"isFullHeight\", \"isPlain\", \"ouiaId\", \"ouiaSafe\", \"hasSelectableInput\", \"selectableInputAriaLabel\", \"onSelectableInputChange\"]);\n    const Component = component;\n    const ouiaProps = useOUIAProps(Card.displayName, ouiaId, ouiaSafe);\n    const [titleId, setTitleId] = React.useState('');\n    const [ariaProps, setAriaProps] = React.useState();\n    if (isCompact && isLarge) {\n        // eslint-disable-next-line no-console\n        console.warn('Card: Cannot use isCompact with isLarge. Defaulting to isCompact');\n        isLarge = false;\n    }\n    const getSelectableModifiers = () => {\n        if (isDisabledRaised) {\n            return css(styles.modifiers.nonSelectableRaised);\n        }\n        if (isSelectableRaised) {\n            return css(styles.modifiers.selectableRaised, isSelected && styles.modifiers.selectedRaised);\n        }\n        if (isSelectable || isHoverable) {\n            return css(styles.modifiers.selectable, isSelected && styles.modifiers.selected);\n        }\n        return '';\n    };\n    const containsCardTitleChildRef = React.useRef(false);\n    const registerTitleId = (id) => {\n        setTitleId(id);\n        containsCardTitleChildRef.current = !!id;\n    };\n    React.useEffect(() => {\n        if (selectableInputAriaLabel) {\n            setAriaProps({ 'aria-label': selectableInputAriaLabel });\n        }\n        else if (titleId) {\n            setAriaProps({ 'aria-labelledby': titleId });\n        }\n        else if (hasSelectableInput && !containsCardTitleChildRef.current) {\n            setAriaProps({});\n            // eslint-disable-next-line no-console\n            console.warn('If no CardTitle component is passed as a child of Card the selectableInputAriaLabel prop must be passed');\n        }\n    }, [hasSelectableInput, selectableInputAriaLabel, titleId]);\n    return (React.createElement(CardContext.Provider, { value: {\n            cardId: id,\n            registerTitleId,\n            isExpanded\n        } },\n        hasSelectableInput && (React.createElement(\"input\", Object.assign({ className: \"pf-screen-reader\", id: `${id}-input` }, ariaProps, { type: \"checkbox\", checked: isSelected, onChange: event => onSelectableInputChange(id, event), disabled: isDisabledRaised, tabIndex: -1 }))),\n        React.createElement(Component, Object.assign({ id: id, className: css(styles.card, isCompact && styles.modifiers.compact, isExpanded && styles.modifiers.expanded, isFlat && styles.modifiers.flat, isRounded && styles.modifiers.rounded, isLarge && styles.modifiers.displayLg, isFullHeight && styles.modifiers.fullHeight, isPlain && styles.modifiers.plain, getSelectableModifiers(), className), tabIndex: isSelectable || isSelectableRaised ? '0' : undefined }, props, ouiaProps), children)));\n};\nCard.displayName = 'Card';\n//# sourceMappingURL=Card.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Card/card';\nimport { css } from '@patternfly/react-styles';\nexport const CardBody = (_a) => {\n    var { children = null, className = '', component = 'div', isFilled = true } = _a, props = __rest(_a, [\"children\", \"className\", \"component\", \"isFilled\"]);\n    const Component = component;\n    return (React.createElement(Component, Object.assign({ className: css(styles.cardBody, !isFilled && styles.modifiers.noFill, className) }, props), children));\n};\nCardBody.displayName = 'CardBody';\n//# sourceMappingURL=CardBody.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Content/content';\nimport { css } from '@patternfly/react-styles';\nexport var TextListVariants;\n(function (TextListVariants) {\n    TextListVariants[\"ul\"] = \"ul\";\n    TextListVariants[\"ol\"] = \"ol\";\n    TextListVariants[\"dl\"] = \"dl\";\n})(TextListVariants || (TextListVariants = {}));\nexport const TextList = (_a) => {\n    var { children = null, className = '', component = TextListVariants.ul, isPlain = false } = _a, props = __rest(_a, [\"children\", \"className\", \"component\", \"isPlain\"]);\n    const Component = component;\n    return (React.createElement(Component, Object.assign({}, props, { className: css(isPlain && styles.modifiers.plain, className) }), children));\n};\nTextList.displayName = 'TextList';\n//# sourceMappingURL=TextList.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nexport var TextListItemVariants;\n(function (TextListItemVariants) {\n    TextListItemVariants[\"li\"] = \"li\";\n    TextListItemVariants[\"dt\"] = \"dt\";\n    TextListItemVariants[\"dd\"] = \"dd\";\n})(TextListItemVariants || (TextListItemVariants = {}));\nexport const TextListItem = (_a) => {\n    var { children = null, className = '', component = TextListItemVariants.li } = _a, props = __rest(_a, [\"children\", \"className\", \"component\"]);\n    const Component = component;\n    return (React.createElement(Component, Object.assign({}, props, { className: css(className) }), children));\n};\nTextListItem.displayName = 'TextListItem';\n//# sourceMappingURL=TextListItem.js.map","import './card.css';\nexport default {\n  \"card\": \"pf-c-card\",\n  \"cardActions\": \"pf-c-card__actions\",\n  \"cardBody\": \"pf-c-card__body\",\n  \"cardExpandableContent\": \"pf-c-card__expandable-content\",\n  \"cardFooter\": \"pf-c-card__footer\",\n  \"cardHeader\": \"pf-c-card__header\",\n  \"cardHeaderToggle\": \"pf-c-card__header-toggle\",\n  \"cardHeaderToggleIcon\": \"pf-c-card__header-toggle-icon\",\n  \"cardSrInput\": \"pf-c-card__sr-input\",\n  \"cardTitle\": \"pf-c-card__title\",\n  \"divider\": \"pf-c-divider\",\n  \"modifiers\": {\n    \"hoverable\": \"pf-m-hoverable\",\n    \"selectable\": \"pf-m-selectable\",\n    \"selected\": \"pf-m-selected\",\n    \"hoverableRaised\": \"pf-m-hoverable-raised\",\n    \"selectableRaised\": \"pf-m-selectable-raised\",\n    \"nonSelectableRaised\": \"pf-m-non-selectable-raised\",\n    \"selectedRaised\": \"pf-m-selected-raised\",\n    \"compact\": \"pf-m-compact\",\n    \"displayLg\": \"pf-m-display-lg\",\n    \"flat\": \"pf-m-flat\",\n    \"plain\": \"pf-m-plain\",\n    \"rounded\": \"pf-m-rounded\",\n    \"expanded\": \"pf-m-expanded\",\n    \"fullHeight\": \"pf-m-full-height\",\n    \"toggleRight\": \"pf-m-toggle-right\",\n    \"noOffset\": \"pf-m-no-offset\",\n    \"noFill\": \"pf-m-no-fill\",\n    \"overpassFont\": \"pf-m-overpass-font\"\n  },\n  \"themeDark\": \"pf-theme-dark\"\n};","import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  CardBody,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n  TextList,\n  TextListItem,\n  TextListItemVariants,\n  TextListVariants,\n  TextVariants,\n} from '@patternfly/react-core';\nimport {\n  Skeleton,\n  SkeletonSize,\n} from '@redhat-cloud-services/frontend-components/Skeleton';\nimport { Link, useParams } from 'react-router-dom';\n\nconst valueToText = (value, singular, plural) => {\n  if ((value || value === 0) && singular) {\n    return value === 1\n      ? `1 ${singular}`\n      : `${value} ${plural || `${singular}s`}`;\n  }\n\n  if (value === 0) {\n    return 'None';\n  }\n\n  return value || 'Not available';\n};\n\nexport const Clickable = ({ value, target, plural, singular, onClick }) => {\n  const { modalId } = useParams();\n  useEffect(() => {\n    if (target === modalId) {\n      onClick({ value, target });\n    }\n  }, [modalId, target]);\n\n  return <Link to={`./${target}`}>{valueToText(value, singular, plural)}</Link>;\n};\n\nClickable.propTypes = {\n  value: PropTypes.node,\n  target: PropTypes.string,\n  onClick: PropTypes.func,\n  plural: PropTypes.string,\n  singular: PropTypes.string,\n};\n\nconst LoadingCard = ({ title, isLoading, items, children }) => (\n  <Card ouiaId=\"system-properties-card\">\n    <CardBody>\n      <Stack hasGutter>\n        <StackItem>\n          <TextContent>\n            <Text component={TextVariants.h1}>{title}</Text>\n          </TextContent>\n        </StackItem>\n        <StackItem isFilled>\n          {items.length ? (\n            <TextContent>\n              <TextList component={TextListVariants.dl}>\n                {items.map(\n                  (\n                    {\n                      onClick,\n                      value,\n                      target,\n                      plural,\n                      singular,\n                      size,\n                      title: itemTitle,\n                    },\n                    key\n                  ) => (\n                    <Fragment key={key}>\n                      <TextListItem\n                        component={TextListItemVariants.dt}\n                        data-ouia-component-id={`${\n                          typeof itemTitle === 'string'\n                            ? itemTitle\n                            : itemTitle?.props?.title\n                        } title`}\n                      >\n                        {itemTitle}\n                      </TextListItem>\n                      <TextListItem\n                        component={TextListItemVariants.dd}\n                        data-ouia-component-id={`${\n                          typeof itemTitle === 'string'\n                            ? itemTitle\n                            : itemTitle?.props?.title\n                        } value`}\n                      >\n                        {isLoading && (\n                          <Skeleton size={size || SkeletonSize.sm} />\n                        )}\n                        {!isLoading &&\n                          (onClick && value ? (\n                            <div>\n                              <Clickable\n                                onClick={onClick}\n                                value={value}\n                                target={target}\n                                plural={plural}\n                                singular={singular}\n                              />\n                              {target}\n                            </div>\n                          ) : (\n                            valueToText(value, singular, plural)\n                          ))}\n                      </TextListItem>\n                    </Fragment>\n                  )\n                )}\n              </TextList>\n            </TextContent>\n          ) : null}\n          {children}\n        </StackItem>\n      </Stack>\n    </CardBody>\n  </Card>\n);\n\nLoadingCard.propTypes = {\n  title: PropTypes.node.isRequired,\n  isLoading: PropTypes.bool,\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.node,\n      value: PropTypes.node,\n      onClick: PropTypes.func,\n      size: PropTypes.oneOf(Object.values(SkeletonSize)),\n      plural: PropTypes.string,\n      singular: PropTypes.string,\n    })\n  ),\n  children: PropTypes.node,\n};\n\nLoadingCard.defaultProps = {\n  isLoading: true,\n  items: [],\n};\n\nexport default LoadingCard;\n","/* eslint-disable camelcase */\nimport { registered } from '../../../Utilities/index';\nimport { verifyCollectorStaleness } from '../../../Utilities/sharedFunctions';\nfunction safeParser(toParse, key) {\n  try {\n    return JSON.parse(toParse);\n  } catch {\n    return { [key]: toParse };\n  }\n}\n\nexport const propertiesSelector = (\n  {\n    number_of_cpus,\n    number_of_sockets,\n    cores_per_socket,\n    ramSize,\n    disk_devices,\n    sap_sids,\n    system_purpose,\n    cpu_flags,\n  } = {},\n  { facts } = {}\n) => ({\n  cpuNumber: number_of_cpus || facts?.rhsm?.CPU_CORES,\n  sockets: number_of_sockets || facts?.rhsm?.CPU_SOCKETS,\n  coresPerSocket:\n    cores_per_socket ||\n    (facts?.rhsm?.CPU_CORES &&\n      facts?.rhsm?.CPU_CORES &&\n      Number(facts?.rhsm?.CPU_CORES, 10) /\n        Number(facts?.rhsm?.CPU_SOCKETS, 10)),\n  ramSize: ramSize || (facts?.rhsm?.MEMORY && `${facts?.rhsm?.MEMORY} GB`),\n  storage:\n    disk_devices &&\n    disk_devices.map(({ device, label, mount_point, options, type }) => ({\n      ...(device && safeParser(device, 'device')),\n      label,\n      ...(mount_point && safeParser(mount_point, 'mountpoint')),\n      ...(options && safeParser(options, 'options')),\n      ...(type && safeParser(type, 'mounttype')),\n    })),\n  sapIds: sap_sids,\n  systemPurpose: system_purpose?.usage,\n  cpuFlags: cpu_flags,\n});\n\nexport const operatingSystem = (\n  {\n    arch,\n    operating_system,\n    os_kernel_version,\n    last_boot_time,\n    kernel_modules,\n    system_update_method,\n  } = {},\n  { facts } = {}\n) => ({\n  release: operating_system,\n  kernelRelease: os_kernel_version,\n  architecture: arch || facts?.rhsm?.ARCHITECTURE,\n  bootTime: last_boot_time,\n  kernelModules: kernel_modules,\n  systemUpdateMethod: system_update_method,\n});\n\nexport const biosSelector = ({\n  bios_vendor,\n  bios_version,\n  bios_release_date,\n} = {}) => ({\n  vendor: bios_vendor,\n  version: bios_version,\n  releaseDate: bios_release_date,\n});\n\nexport const infrastructureSelector = (\n  { infrastructure_type, infrastructure_vendor, network = {} } = {},\n  { facts } = {}\n) => ({\n  type:\n    infrastructure_type ||\n    (facts?.rhsm?.IS_VIRTUAL !== undefined &&\n      (facts?.rhsm?.IS_VIRTUAL ? 'virtual' : 'physical')) ||\n    undefined,\n  vendor: infrastructure_vendor,\n  ipv4: network.ipv4,\n  ipv6: network.ipv6,\n  nics: network.interfaces,\n});\n\nexport const configurationSelector = ({\n  installed_packages,\n  enabled_services,\n  running_processes,\n  repositories,\n} = {}) => ({\n  packages: installed_packages,\n  services: enabled_services,\n  processes: running_processes,\n  repositories,\n});\n\nexport const collectionInformationSelector = ({\n  insights_client_version,\n  insights_egg_version,\n} = {}) => ({\n  client: insights_client_version,\n  egg: insights_egg_version,\n});\n\nexport const getCollectorStatus = (collectorStaleness) => {\n  return collectorStaleness\n    ? verifyCollectorStaleness(collectorStaleness) !== 'Fresh'\n      ? 'Stale'\n      : 'Active'\n    : 'N/A';\n};\n\nexport const getDefaultCollectors = (entity) =>\n  registered\n    ?.filter((reporter) => reporter.label !== 'insights-client not connected')\n    .map((reporter) => ({\n      name: reporter.label,\n      status: getCollectorStatus(\n        entity?.per_reporter_staleness[reporter.value]\n      ),\n      updated: entity?.per_reporter_staleness[reporter.value]?.last_check_in,\n      details: {\n        name: reporter.idName,\n        id: entity?.[reporter.idValue],\n      },\n    }));\n\nexport const systemStatus = ({ stale_timestamp } = {}) => ({\n  stale: new Date() > new Date(stale_timestamp),\n});\n"],"names":["CardContext","cardId","registerTitleId","isExpanded","Card","_a","children","id","className","component","isHoverable","isCompact","isSelectable","isSelectableRaised","isSelected","isDisabledRaised","isFlat","isRounded","isLarge","isFullHeight","isPlain","ouiaId","ouiaSafe","hasSelectableInput","selectableInputAriaLabel","onSelectableInputChange","props","__rest","Component","ouiaProps","displayName","titleId","setTitleId","ariaProps","setAriaProps","console","warn","containsCardTitleChildRef","current","Provider","value","Object","assign","type","checked","onChange","event","disabled","tabIndex","card","modifiers","compact","expanded","flat","rounded","displayLg","fullHeight","plain","nonSelectableRaised","selectableRaised","selectedRaised","selectable","selected","undefined","CardBody","isFilled","cardBody","noFill","TextListVariants","TextList","ul","TextListItemVariants","TextListItem","li","valueToText","singular","plural","Clickable","target","onClick","modalId","useParams","useEffect","Link","to","propTypes","PropTypes","LoadingCard","title","isLoading","items","hasGutter","TextVariants","h1","length","dl","map","key","size","itemTitle","Fragment","T","dt","dd","SkeletonSize","sm","isRequired","values","defaultProps","safeParser","toParse","JSON","parse","propertiesSelector","number_of_cpus","number_of_sockets","cores_per_socket","ramSize","disk_devices","sap_sids","system_purpose","cpu_flags","facts","cpuNumber","rhsm","CPU_CORES","sockets","CPU_SOCKETS","coresPerSocket","Number","MEMORY","storage","device","label","mount_point","options","sapIds","systemPurpose","usage","cpuFlags","operatingSystem","arch","operating_system","os_kernel_version","last_boot_time","kernel_modules","system_update_method","release","kernelRelease","architecture","ARCHITECTURE","bootTime","kernelModules","systemUpdateMethod","biosSelector","vendor","bios_vendor","version","bios_version","releaseDate","bios_release_date","infrastructureSelector","infrastructure_type","infrastructure_vendor","network","IS_VIRTUAL","ipv4","ipv6","nics","interfaces","configurationSelector","packages","installed_packages","services","enabled_services","processes","running_processes","repositories","collectionInformationSelector","client","insights_client_version","egg","insights_egg_version","getCollectorStatus","collectorStaleness","verifyCollectorStaleness","getDefaultCollectors","entity","registered","filter","reporter","name","status","per_reporter_staleness","updated","last_check_in","details","idName","idValue","systemStatus","stale_timestamp","stale","Date"],"sourceRoot":""}