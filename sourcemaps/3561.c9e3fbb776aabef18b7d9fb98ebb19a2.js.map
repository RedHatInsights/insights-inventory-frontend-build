{"version":3,"file":"js/3561.409702d91675996b3911.js","mappings":"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","sources":["webpack:///./src/Utilities/InsightsDisconnected.js","webpack:///./src/Utilities/OperatingSystemFormatter.js","webpack:///./src/components/InventoryTable/TitleColumn.js","webpack:///./src/store/entities.js","webpack:///./src/store/systemIssues.js","webpack:///./src/store/entityDetails.js","webpack:///./src/store/groupDetail.js","webpack:///./src/store/groups.js"],"sourcesContent":["import React from 'react';\n\nimport { Tooltip, Grid, GridItem } from '@patternfly/react-core';\nimport { DisconnectedIcon } from '@patternfly/react-icons';\n\nimport './InsightsDisconnected.scss';\n\nconst InsightsDisconnected = () => (\n    <Tooltip\n        maxWidth='14rem'\n        content={(\n            <Grid hasGutter>\n                <GridItem>\n                    Insights client not reporting\n                </GridItem>\n                <GridItem>\n                    From the main navigation, open\n                    &quot;Registration Assistant&quot; to learn\n                    how to set up Insights.\n                </GridItem>\n            </Grid>\n        )}>\n        <span className=\"pf-u-ml-sm ins-c-inventor__disconnected-icon\">\n            <DisconnectedIcon />\n        </span>\n    </Tooltip>\n);\n\nexport default InsightsDisconnected;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst OperatingSystemFormatter = ({ operatingSystem }) => {\n    if (operatingSystem?.name === 'RHEL') {\n        const version = (operatingSystem.major && operatingSystem.minor !== null)\n        && `${operatingSystem.major}.${operatingSystem?.minor}` || null;\n\n        return <span>\n            RHEL {version}\n        </span>;\n    }\n\n    return <span>\n        {operatingSystem?.name || 'Not available'}\n    </span>;\n};\n\nOperatingSystemFormatter.propTypes = {\n    operatingSystem: PropTypes.shape({\n        name: PropTypes.string,\n        major: PropTypes.number,\n        minor: PropTypes.number\n    })\n};\n\nexport default OperatingSystemFormatter;\n","/* eslint-disable camelcase */\n/* eslint-disable react/prop-types */\nimport React from 'react';\n\n/**\n * Helper function to proprly calculate what to do when user clicks on first cell.\n * Either full redirect if used with ctrl button or `onRowClick` from props is used.\n * @param {*} event html event, to find out if meta key was clicked.\n * @param {*} key inventory UUID.\n * @param {*} props additional props from `EntityTable` - loaded, onRowClick and noDetail.\n */\nconst onRowClick = (event, key, { loaded, onRowClick: rowClick, noDetail }) => {\n    if (loaded && !noDetail) {\n        const isMetaKey = (event.ctrlKey || event.metaKey || event.which === 2);\n        if (isMetaKey) {\n            return;\n        } else if (rowClick) {\n            rowClick(event, key, isMetaKey);\n        }\n    }\n\n    event.preventDefault();\n    event.stopPropagation();\n};\n\n/**\n * Helper function to generate first cell in plain inventory either with clickable detail or just data from attribut.\n * This is later on used in redux in `renderFunc`.\n * @param {React.node} data React node with information that will be shown to user as column title.\n * @param {string} id inventory UUID, used to navigate to correct URL.\n * @param {*} item row data, holds every information from redux store for currecnt row.\n * @param {*} props additional props passed from `EntityTable` - holds any props passed to inventory table.\n */\nconst TitleColumn = (data, id, item, props) => (\n    <div className=\"ins-composed-col sentry-mask data-hj-suppress\">\n        <div key=\"os_release\">{item?.os_release}</div>\n        <div key=\"data\" className={props?.noDetail ? 'ins-m-nodetail' : ''}>\n            { props?.noDetail ?\n                data :\n                <a\n                    widget=\"col\"\n                    href={ `${location.pathname}${location.pathname.substr(-1) === '/' ? '' : '/'}${id}` }\n                    onClick={ event => {\n                        onRowClick(event, id, props);\n                    }}\n                >\n                    { data }\n                </a> }\n        </div>\n    </div>\n);\n\nexport default TitleColumn;\n","import React from 'react';\nimport {\n    ACTION_TYPES,\n    SELECT_ENTITY,\n    CHANGE_SORT,\n    SHOW_ENTITIES,\n    FILTER_SELECT,\n    UPDATE_ENTITIES,\n    ENTITIES_LOADING,\n    CLEAR_FILTERS,\n    TOGGLE_TAG_MODAL,\n    CONFIG_CHANGED,\n    CLEAR_ENTITIES\n} from './action-types';\nimport { mergeArraysByKey } from '@redhat-cloud-services/frontend-components-utilities/helpers';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport { CullingInformation } from '@redhat-cloud-services/frontend-components/CullingInfo';\nimport { TagWithDialog } from '../Utilities/index';\nimport groupBy from 'lodash/groupBy';\nimport TitleColumn from '../components/InventoryTable/TitleColumn';\nimport InsightsDisconnected from '../Utilities/InsightsDisconnected';\nimport OperatingSystemFormatter from '../Utilities/OperatingSystemFormatter';\nimport { Tooltip } from '@patternfly/react-core';\nimport { verifyCulledInsightsClient } from '../Utilities/sharedFunctions';\nimport { fitContent } from '@patternfly/react-table';\nimport isEmpty from 'lodash/isEmpty';\n\nexport const defaultState = {\n    loaded: false,\n    tagsLoaded: false,\n    allTagsLoaded: false,\n    operatingSystems: [],\n    operatingSystemsLoaded: false,\n    groups: [],\n    invConfig: {},\n    sortBy: {\n        key: 'updated',\n        direction: 'desc'\n    }\n};\n\nexport const defaultColumns = (groupsEnabled = false) => ([\n    {\n        key: 'display_name',\n        sortKey: 'display_name',\n        title: 'Name',\n        renderFunc: TitleColumn\n    },\n    ...(groupsEnabled ? [{\n        key: 'groups',\n        sortKey: 'groups',\n        title: 'Group',\n        props: { width: 10 },\n        // eslint-disable-next-line camelcase\n        renderFunc: (value, systemId, { group_name }) => isEmpty(group_name) ? 'N/A' : group_name,\n        transforms: [fitContent]\n    }] : []),\n    {\n        key: 'tags',\n        title: 'Tags',\n        props: { width: 10, isStatic: true },\n        // eslint-disable-next-line react/display-name\n        renderFunc: (value, systemId) => <TagWithDialog count={value.length} systemId={systemId} />\n    },\n    {\n        key: 'system_profile',\n        sortKey: 'operating_system',\n        dataLabel: 'OS',\n        title: <Tooltip content={<span>Operating system</span>}><span>OS</span></Tooltip>,\n        // eslint-disable-next-line react/display-name\n        renderFunc: (systemProfile) => <OperatingSystemFormatter operatingSystem={systemProfile?.operating_system} />,\n        props: { width: 10 }\n    },\n    {\n        key: 'updated',\n        sortKey: 'updated',\n        title: 'Last seen',\n        // eslint-disable-next-line react/display-name\n        renderFunc: (\n            value,\n            _id,\n            {\n                culled_timestamp: culled, stale_warning_timestamp: staleWarn, stale_timestamp: stale,\n                per_reporter_staleness: perReporterStaleness\n            }) => {\n            return CullingInformation ? <CullingInformation\n                culled={culled}\n                staleWarning={staleWarn}\n                stale={stale}\n                render={({ msg }) => <React.Fragment>\n                    <DateFormat date={ value } extraTitle={ (\n                        <React.Fragment>\n                            <div>{ msg }</div>\n                        Last seen:{` `}\n                        </React.Fragment>\n                    ) }/>\n                    {verifyCulledInsightsClient(perReporterStaleness) && <InsightsDisconnected />}\n                </React.Fragment>\n                }\n            > <DateFormat date={ value } /> </CullingInformation> : new Date(value).toLocaleString();\n        },\n        props: { width: 10 },\n        transforms: [fitContent]\n    }\n]);\n\nfunction entitiesPending(state, { meta }) {\n    return {\n        ...state,\n        ...state.columns && { columns: mergeArraysByKey([\n            defaultColumns().filter(({ key }) => key !== 'tags' || meta?.showTags),\n            state.columns\n        ], 'key') } || {},\n        rows: [],\n        loaded: false,\n        lastDateRequest: meta.lastDateRequest\n    };\n}\n\nfunction clearFilters(state) {\n    return {\n        ...state,\n        activeFilters: []\n    };\n}\n\nconst clearEntities = () => {\n    return defaultState;\n};\n\n// eslint-disable-next-line camelcase\nfunction entitiesLoaded(state, { payload: { results, per_page: perPage, page, count, total, loaded, filters }, meta }) {\n    // Older requests should not rewrite the state\n    if (meta.lastDateRequest < state.lastDateRequest) {\n        return state;\n    }\n\n    // Data are loaded and APi returned malicious data\n    if (loaded === undefined && (page === undefined || perPage === undefined)) {\n        return state;\n    }\n\n    return {\n        ...state,\n        activeFilters: filters || [],\n        loaded: loaded === undefined || loaded,\n        // filter data only if we are loaded\n        rows: mergeArraysByKey([state.rows, results]).filter(item => !loaded ? true : item.created),\n        perPage: perPage !== undefined ? perPage : state.perPage,\n        page: page !== undefined ? page : state.page,\n        count: count !== undefined ? count : state.count,\n        total: total !== undefined ? total : state.total\n    };\n}\n\nfunction loadingRejected(state, { payload }) {\n    return {\n        ...state,\n        error: payload\n    };\n}\n\nfunction selectEntity(state, { payload }) {\n    const rows = [...state.rows];\n    const toSelect = [].concat(payload);\n    toSelect.forEach(({ id, selected }) => {\n        const entity = rows.find(entity => entity.id === id);\n        if (entity) {\n            entity.selected = selected;\n        } else {\n            rows.forEach(item => item.selected = selected);\n        }\n    });\n    return {\n        ...state,\n        rows\n    };\n}\n\nfunction versionsLoaded(state, { payload: { results } }) {\n    return {\n        ...state,\n        operatingSystems: (results || []).map(entry => {\n            const { name, major, minor } = entry.value;\n            const versionStringified = `${major}.${minor}`;\n            return { label: `${name} ${versionStringified}`, value: versionStringified };\n        }),\n        operatingSystemsLoaded: true\n    };\n}\n\nfunction changeSort(state, { payload: { key, direction } }) {\n    return {\n        ...state,\n        sortBy: {\n            key,\n            direction\n        }\n    };\n}\n\nfunction selectFilter(state, { payload: { item: { items, ...item }, selected } }) {\n    let { activeFilters = [] } = state;\n    if (selected) {\n        activeFilters = [\n            ...activeFilters,\n            item,\n            ...items ? items : []\n        ];\n        const values = activeFilters.map(active => active.value);\n        activeFilters = activeFilters.filter((filter, key) => values.lastIndexOf(filter.value) === key);\n    } else {\n        activeFilters.splice(activeFilters.map(active => active.value).indexOf(item.value), 1);\n        if (items) {\n            items.forEach(subItem => {\n                activeFilters.splice(activeFilters.map(active => active.value).indexOf(subItem.value), 1);\n            });\n        }\n    }\n\n    return {\n        ...state,\n        activeFilters\n    };\n}\n\nexport function showTags(state, { payload, meta }) {\n    const { tags, ...activeSystemTag } = state.rows ? state.rows.find(({ id }) => meta.systemId === id) : state.entity || {};\n    return {\n        ...state,\n        tagModalLoaded: true,\n        activeSystemTag: {\n            ...activeSystemTag,\n            tags: Object.values(payload.results)[0],\n            tagsCount: meta.tagsCount,\n            page: payload.page,\n            perPage: payload.per_page,\n            tagsLoaded: true\n        }\n    };\n}\n\nexport function showTagsPending(state, { meta }) {\n    const { tags, ...activeSystemTag } = state.rows ? state.rows.find(({ id }) => meta.systemId === id) : state.entity || {};\n    return {\n        ...state,\n        tagModalLoaded: false,\n        activeSystemTag: {\n            ...activeSystemTag,\n            tagsCount: meta.tagsCount,\n            tagsLoaded: false\n        }\n    };\n}\n\nexport function toggleTagModalReducer(state, { payload: { isOpen } }) {\n    return {\n        ...state,\n        showTagDialog: isOpen,\n        activeSystemTag: undefined\n    };\n}\n\nexport function allTags(state, { payload: { results, total, page, per_page: perPage }, meta: { lastDateRequestTags } }) {\n    // only the latest request can change state\n    if (lastDateRequestTags < state.lastDateRequestTags) {\n        return state;\n    }\n\n    return {\n        ...state,\n        allTags: Object.entries(groupBy(results, ({ tag: { namespace } }) => namespace)).map(([key, value]) => ({\n            name: key,\n            tags: value\n        })),\n        allTagsPagination: {\n            perPage,\n            page\n        },\n        additionalTagsCount: total > perPage ? total - perPage : 0,\n        allTagsTotal: total,\n        allTagsLoaded: true,\n        tagModalLoaded: true\n    };\n}\n\nexport default {\n    [ACTION_TYPES.ALL_TAGS_FULFILLED]: allTags,\n    [ACTION_TYPES.ALL_TAGS_PENDING]: (state, { meta }) => (\n        { ...state, allTagsLoaded: false, tagModalLoaded: false, lastDateRequestTags: meta.lastDateRequestTags }\n    ),\n    [ACTION_TYPES.LOAD_ENTITIES_PENDING]: entitiesPending,\n    [ACTION_TYPES.LOAD_ENTITIES_FULFILLED]: entitiesLoaded,\n    [ACTION_TYPES.LOAD_ENTITIES_REJECTED]: loadingRejected,\n    [ACTION_TYPES.LOAD_TAGS_PENDING]: showTagsPending,\n    [ACTION_TYPES.LOAD_TAGS_FULFILLED]: showTags,\n    [ACTION_TYPES.ALL_TAGS_REJECTED]: loadingRejected,\n    [ACTION_TYPES.OPERATING_SYSTEMS_PENDING]: (state) => ({ ...state, operatingSystemsLoaded: false }),\n    [ACTION_TYPES.OPERATING_SYSTEMS_FULFILLED]: versionsLoaded,\n    [UPDATE_ENTITIES]: entitiesLoaded,\n    [SHOW_ENTITIES]: (state, action) => entitiesLoaded(state, {\n        payload: {\n            ...action.payload,\n            loaded: false\n        }\n    }),\n    [FILTER_SELECT]: selectFilter,\n    [SELECT_ENTITY]: selectEntity,\n    [CHANGE_SORT]: changeSort,\n    [CLEAR_FILTERS]: clearFilters,\n    [ENTITIES_LOADING]: (state, { payload: { isLoading } }) => ({ ...state, loaded: !isLoading }),\n    [TOGGLE_TAG_MODAL]: toggleTagModalReducer,\n    [CONFIG_CHANGED]: (state, { payload }) => ({ ...state, invConfig: payload }),\n    [CLEAR_ENTITIES]: clearEntities\n};\n","/* eslint-disable camelcase */\nimport { SYSTEM_ISSUE_TYPES } from './action-types';\n\nexport function advisor(state, { payload }) {\n    return {\n        ...state,\n        systemIssues: {\n            ...state?.systemIssues,\n            advisor: {\n                isLoaded: true,\n                criticalCount: payload?.filter(item => item?.total_risk >= 4)\n            }\n        }\n    };\n}\n\nexport function cve(state, { payload }) {\n    return {\n        ...state,\n        systemIssues: {\n            ...state?.systemIssues,\n            cve: {\n                isLoaded: true,\n                critical: {\n                    count: payload?.critical?.meta?.total_items || 0\n                },\n                moderate: {\n                    count: payload?.moderate?.meta?.total_items || 0\n                },\n                important: {\n                    count: payload?.important?.meta?.total_items || 0\n                },\n                low: {\n                    count: payload?.low?.meta?.total_items || 0\n                }\n            }\n        }\n    };\n}\n\nexport function patch(state, { payload }) {\n    return {\n        ...state,\n        systemIssues: {\n            ...state?.systemIssues,\n            patch: {\n                isLoaded: true,\n                bug: {\n                    count: payload?.data?.attributes?.rhba_count || 0\n                },\n                enhancement: {\n                    count: payload?.data?.attributes?.rhea_count || 0\n                },\n                security: {\n                    count: payload?.data?.attributes?.rhsa_count || 0\n                }\n            }\n        }\n    };\n}\n\nexport function compliance(state, { payload }) {\n    return {\n        ...state,\n        systemIssues: {\n            ...state?.systemIssues,\n            compliance: {\n                isLoaded: true,\n                profiles: payload?.data?.system?.profiles\n            }\n        }\n    };\n}\n\nexport function isPending(state, type) {\n    return {\n        ...state,\n        systemIssues: {\n            ...state?.systemIssues,\n            ...type && { [type]: { isLoaded: false } }\n        }\n    };\n}\n\nexport default {\n    [SYSTEM_ISSUE_TYPES.LOAD_ADVISOR_RECOMMENDATIONS_PENDING]: (state) => isPending(state, 'advisor'),\n    [SYSTEM_ISSUE_TYPES.LOAD_APPLICABLE_CVES_PENDING]: (state) => isPending(state, 'cve'),\n    [SYSTEM_ISSUE_TYPES.LOAD_APPLICABLE_ADVISORIES_PENDING]: (state) => isPending(state, 'patch'),\n    [SYSTEM_ISSUE_TYPES.LOAD_COMPLIANCE_POLICIES_PENDING]: (state) => isPending(state, 'compliance'),\n    [SYSTEM_ISSUE_TYPES.LOAD_ADVISOR_RECOMMENDATIONS_FULFILLED]: advisor,\n    [SYSTEM_ISSUE_TYPES.LOAD_APPLICABLE_CVES_FULFILLED]: cve,\n    [SYSTEM_ISSUE_TYPES.LOAD_APPLICABLE_ADVISORIES_FULFILLED]: patch,\n    [SYSTEM_ISSUE_TYPES.LOAD_COMPLIANCE_POLICIES_FULFILLED]: compliance\n};\n","import { ACTION_TYPES, TOGGLE_TAG_MODAL, TOGGLE_DRAWER } from './action-types';\nimport { showTags, toggleTagModalReducer } from './entities';\nimport systemIssuesReducer from './systemIssues';\nexport const entityDefaultState = { loaded: false };\n\nfunction entityDetailPending(state) {\n    return {\n        ...state,\n        loaded: false\n    };\n}\n\nfunction entityDetailLoaded(state, { payload }) {\n    return {\n        ...state,\n        loaded: true,\n        entity: payload.results[0]\n    };\n}\n\nfunction toggleDrawer(state, { payload }) {\n    return  {\n        ...state,\n        isToggleOpened: payload?.isOpened\n    };\n}\n\nfunction showTagsPending(state) {\n    return {\n        ...state,\n        tagModalLoaded: false\n    };\n}\n\nfunction updateAnsibleName(state, { meta }, useOrigValue) {\n    const value = useOrigValue ? meta?.origValue : meta?.value;\n    return {\n        ...state,\n        ...state.rows && {\n            rows: state.rows.map((row) => row.id === meta?.id ? ({\n                ...row,\n                // eslint-disable-next-line camelcase\n                ansible_host: value\n            }) : row)\n        },\n        ...state.entity && {\n            entity: {\n                ...state.entity,\n                // eslint-disable-next-line camelcase\n                ansible_host: value\n            }\n        }\n    };\n}\n\nexport function updateEntity(state, { meta }, useOrigValue) {\n    const value = useOrigValue ? meta?.origValue : meta?.value;\n    return {\n        ...state,\n        ...state.rows && {\n            rows: state.rows.map((row) => row.id === meta?.id ? ({\n                ...row,\n                // eslint-disable-next-line camelcase\n                display_name: value\n            }) : row)\n        },\n        ...state.entity && {\n            entity: {\n                ...state.entity,\n                // eslint-disable-next-line camelcase\n                display_name: value\n            }\n        }\n    };\n}\n\nexport default {\n    [ACTION_TYPES.LOAD_ENTITIES_PENDING]: () => entityDefaultState,\n    [ACTION_TYPES.LOAD_ENTITY_PENDING]: entityDetailPending,\n    [ACTION_TYPES.LOAD_ENTITY_FULFILLED]: entityDetailLoaded,\n    [ACTION_TYPES.LOAD_TAGS]: showTags,\n    [ACTION_TYPES.LOAD_TAGS_PENDING]: showTagsPending,\n    [ACTION_TYPES.LOAD_TAGS_FULFILLED]: showTags,\n    [TOGGLE_TAG_MODAL]: toggleTagModalReducer,\n    [TOGGLE_DRAWER]: toggleDrawer,\n    [ACTION_TYPES.UPDATE_DISPLAY_NAME_PENDING]: updateEntity,\n    [ACTION_TYPES.SET_ANSIBLE_HOST_PENDING]: updateAnsibleName,\n    [ACTION_TYPES.UPDATE_DISPLAY_NAME_ERROR]: (state, payload) => updateEntity(state, payload, true),\n    [ACTION_TYPES.SET_ANSIBLE_HOST_ERROR]: (state, payload) => updateAnsibleName(state, payload, true),\n    ...systemIssuesReducer\n};\n","\nimport { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport { ACTION_TYPES } from './action-types';\n\nexport const initialState = {\n    loading: false,\n    rejected: false,\n    fulfilled: false,\n    uninitialized: true,\n    error: null,\n    data: null\n};\n\nexport default applyReducerHash(\n    {\n        [ACTION_TYPES.GROUP_DETAIL_PENDING]: (state) => {\n            return {\n                ...state,\n                loading: true,\n                uninitialized: false\n            };\n        },\n        [ACTION_TYPES.GROUP_DETAIL_FULFILLED]: (state, { payload }) => {\n            return {\n                ...state,\n                loading: false,\n                rejected: false,\n                uninitialized: false,\n                fulfilled: true,\n                data: payload\n            };\n        },\n        [ACTION_TYPES.GROUP_DETAIL_REJECTED]: (state, { payload }) => {\n            return {\n                ...state,\n                loading: false,\n                rejected: true,\n                uninitialized: false,\n                fulfilled: false,\n                error: payload\n            };\n        }\n    },\n    initialState\n);\n","\nimport { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport { ACTION_TYPES } from './action-types';\n\nexport const initialState = {\n    loading: false,\n    rejected: false,\n    fulfilled: false,\n    uninitialized: true,\n    error: null,\n    data: null\n};\n\nexport default applyReducerHash(\n    {\n        [ACTION_TYPES.GROUPS_PENDING]: (state) => {\n            return {\n                ...state,\n                loading: true,\n                uninitialized: false\n            };\n        },\n        [ACTION_TYPES.GROUPS_FULFILLED]: (state, { payload }) => {\n            return {\n                ...state,\n                loading: false,\n                rejected: false,\n                uninitialized: false,\n                fulfilled: true,\n                data: payload\n            };\n        },\n        [ACTION_TYPES.GROUPS_REJECTED]: (state, { payload }) => {\n            return {\n                ...state,\n                loading: false,\n                rejected: true,\n                uninitialized: false,\n                fulfilled: false,\n                error: payload\n            };\n        }\n    },\n    initialState\n);\n"],"names":["maxWidth","content","hasGutter","className","OperatingSystemFormatter","operatingSystem","name","version","major","minor","propTypes","PropTypes","data","id","item","props","key","os_release","noDetail","widget","href","location","pathname","substr","onClick","event","loaded","rowClick","onRowClick","isMetaKey","ctrlKey","metaKey","which","preventDefault","stopPropagation","defaultState","tagsLoaded","allTagsLoaded","operatingSystems","operatingSystemsLoaded","groups","invConfig","sortBy","direction","defaultColumns","groupsEnabled","sortKey","title","renderFunc","TitleColumn","width","value","systemId","group_name","isEmpty","transforms","fitContent","isStatic","TagWithDialog","count","length","dataLabel","systemProfile","operating_system","_id","culled","culled_timestamp","staleWarn","stale_warning_timestamp","stale","stale_timestamp","perReporterStaleness","per_reporter_staleness","CullingInformation","staleWarning","render","msg","date","extraTitle","verifyCulledInsightsClient","Date","toLocaleString","entitiesLoaded","state","payload","results","perPage","per_page","page","total","filters","meta","lastDateRequest","undefined","activeFilters","rows","mergeArraysByKey","filter","created","loadingRejected","error","showTags","find","entity","activeSystemTag","tags","tagModalLoaded","Object","values","tagsCount","toggleTagModalReducer","isOpen","showTagDialog","ACTION_TYPES","lastDateRequestTags","allTags","entries","groupBy","tag","namespace","map","allTagsPagination","additionalTagsCount","allTagsTotal","columns","entry","versionStringified","label","UPDATE_ENTITIES","SHOW_ENTITIES","action","FILTER_SELECT","items","selected","active","lastIndexOf","splice","indexOf","forEach","subItem","SELECT_ENTITY","concat","CHANGE_SORT","CLEAR_FILTERS","ENTITIES_LOADING","isLoading","TOGGLE_TAG_MODAL","CONFIG_CHANGED","CLEAR_ENTITIES","isPending","type","systemIssues","isLoaded","SYSTEM_ISSUE_TYPES","advisor","criticalCount","total_risk","cve","critical","total_items","moderate","important","low","patch","bug","attributes","rhba_count","enhancement","rhea_count","security","rhsa_count","compliance","profiles","system","entityDefaultState","updateAnsibleName","useOrigValue","origValue","row","ansible_host","updateEntity","display_name","TOGGLE_DRAWER","isToggleOpened","isOpened","systemIssuesReducer","applyReducerHash","loading","uninitialized","rejected","fulfilled"],"sourceRoot":""}