{"version":3,"file":"js/9761.2b04bd9307845276c925.js","mappings":"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","sources":["webpack:///./node_modules/@redhat-cloud-services/frontend-components-notifications/esm/redux/actions/notifications.js","webpack:///./src/App.js","webpack:///./src/AppEntry.js","webpack:///./src/Routes.js","webpack:///./src/Utilities/useFeatureFlag.js","webpack:///./src/components/SpinnerFallback.js","webpack:///./src/store/index.js","webpack:///./src/store/registeryContext.js","webpack:///./src/store/systemProfileStore.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { ADD_NOTIFICATION, CLEAR_NOTIFICATIONS, REMOVE_NOTIFICATION } from './action-types';\nfunction generateID(type) {\n    return 'cloud-services' + type + '-' + new Date().getTime() + Math.random().toString(36).slice(2);\n}\nexport var addNotification = function (notification) { return ({\n    type: ADD_NOTIFICATION,\n    payload: __assign({ id: generateID('notification') }, notification),\n}); };\nexport var removeNotification = function (index) { return ({\n    type: REMOVE_NOTIFICATION,\n    payload: index,\n}); };\nexport var clearNotifications = function () { return ({\n    type: CLEAR_NOTIFICATIONS,\n}); };\nexport default {\n    addNotification: addNotification,\n    removeNotification: removeNotification,\n    clearNotifications: clearNotifications,\n};\n//# sourceMappingURL=notifications.js.map","import React, { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Routes } from './Routes';\nimport './App.scss';\nimport { NotificationsPortal } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { RBACProvider } from '@redhat-cloud-services/frontend-components/RBACProvider';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\n\nconst App = () => {\n    const history = useHistory();\n    const chrome = useChrome();\n    useEffect(() => {\n        chrome.init();\n        return chrome.on(\n            'APP_NAVIGATION',\n            event => {\n                if (event.navId === 'inventory') {\n                    history.push(`/${location.search}${location.hash}`);\n                } else {\n                    history.push(`/${event.navId}${location.search}${location.hash}`);\n                }\n            }\n        );\n    }, []);\n\n    return (\n        <div className=\"inventory\">\n            <NotificationsPortal />\n            <RBACProvider appName=\"inventory\">\n                <Routes />\n            </RBACProvider>\n        </div>\n    );\n};\n\nexport default App;\n","import React, { useMemo } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { getStore, updateReducers } from './store';\nimport RegistryContext from './store/registeryContext';\nimport App from './App';\nimport { getBaseName } from '@redhat-cloud-services/frontend-components-utilities/helpers';\nimport logger from 'redux-logger';\nimport Fallback from './components/SpinnerFallback';\n\nconst InventoryApp = () => {\n    const registry = useMemo(() => {\n        const store = IS_DEV ? getStore(logger) : getStore();\n        return {\n            register: (newReducers) => store.replaceReducer(updateReducers(newReducers)),\n            getStore: () => store\n        };\n    }, []);\n\n    return (registry ? (\n        <RegistryContext.Provider value={{\n            getRegistry: () => registry\n        }}>\n            <Provider store={registry.getStore()}>\n                <Router basename={getBaseName(window.location.pathname)}>\n                    <App />\n                </Router>\n            </Provider>\n        </RegistryContext.Provider>\n    ) : <Fallback />);\n};\n\nexport default InventoryApp;\n","import { Route, Redirect, Switch } from 'react-router-dom';\nimport React, { lazy, Suspense, useMemo } from 'react';\nimport { EmptyState, EmptyStateBody } from '@patternfly/react-core';\nimport { InvalidObject } from '@redhat-cloud-services/frontend-components';\nimport { getSearchParams } from './constants';\nimport RenderWrapper from './Utilities/Wrapper';\nimport useFeatureFlag from './Utilities/useFeatureFlag';\n\nconst InventoryTable = lazy(() => import('./routes/InventoryTable'));\nconst InventoryDetail = lazy(() => import('./routes/InventoryDetail'));\nconst InventoryGroups = lazy(() => import('./routes/InventoryGroups'));\n\nexport const routes = {\n    table: '/',\n    detail: '/:inventoryId',\n    detailWithModal: '/:inventoryId/:modalId',\n    groups: '/groups'\n};\n\nexport const Routes = () => {\n    const searchParams = useMemo(() => getSearchParams(), []);\n    const groupsEnabled = useFeatureFlag('hbi.ui.inventory-groups');\n\n    return (\n        <Suspense fallback=\"\">\n            <Switch>\n                <Route\n                    exact\n                    path={routes.table}\n                    render={() =>\n                        <RenderWrapper\n                            cmp={InventoryTable}\n                            isRbacEnabled\n                            {...searchParams}\n                        />}\n                    rootClass='inventory'\n                />\n                <Route\n                    exact\n                    path={routes.groups}\n                    component={\n                        groupsEnabled\n                            ? InventoryGroups\n                            : () => (\n                                <EmptyState>\n                                    <EmptyStateBody>\n                                        <InvalidObject />\n                                    </EmptyStateBody>\n                                </EmptyState>\n                            )\n                    }\n                    rootClass=\"inventory\"\n                />\n                <Route exact path={routes.detailWithModal} component={InventoryDetail} rootClass='inventory' />\n                <Route exact path={routes.detail} component={InventoryDetail} rootClass='inventory' />\n                <Redirect path=\"*\" to=\"/\" />\n            </Switch>\n        </Suspense>\n    );\n};\n","import { useFlag, useFlagsStatus } from '@unleash/proxy-client-react';\n\nexport default (flag) => {\n    const { flagsReady } = useFlagsStatus();\n    const isFlagEnabled = useFlag(flag);\n    return flagsReady ? isFlagEnabled : false;\n};\n","import React from 'react';\nimport { Bullseye, Spinner } from '@patternfly/react-core';\n\nconst Fallback = () => (\n    <Bullseye>\n        <Spinner size=\"xl\" />\n    </Bullseye>\n);\n\nexport default Fallback;\n","\nimport MiddlewareListener from '@redhat-cloud-services/frontend-components-utilities/MiddlewareListener';\nimport notificationsMiddleware from '@redhat-cloud-services/frontend-components-notifications/notificationsMiddleware';\nimport promise  from 'redux-promise-middleware';\nimport reducers, { entitesDetailReducer, mergeWithDetail, mergeWithEntities, tableReducer } from './reducers';\nexport { default as reducers, tableReducer, entitesDetailReducer } from './reducers';\nimport { applyMiddleware, combineReducers, compose, legacy_createStore as createStore } from 'redux';\nimport { INVENTORY_ACTION_TYPES } from './action-types';\n\nlet middlewareListener;\n\nconst appReducers = {\n    ...reducers,\n    ...mergeWithEntities(tableReducer),\n    ...mergeWithDetail(entitesDetailReducer(INVENTORY_ACTION_TYPES))\n};\n\nexport const getStore = (...middleware) => {\n    middlewareListener = new MiddlewareListener();\n    return createStore(combineReducers(appReducers), {}, compose(applyMiddleware(...[\n        middlewareListener.getMiddleware(),\n        promise,\n        notificationsMiddleware({\n            errorTitleKey: ['message'],\n            errorDescriptionKey: ['response.data.detail']\n        }),\n        ...middleware\n    ])));\n};\n\nexport const updateReducers = (newReducers = {}) =>\n    combineReducers({\n        ...appReducers,\n        ...newReducers\n    });\n\nexport function addNewListener ({ actionType, callback }) {\n    return middlewareListener.addNew({\n        on: actionType,\n        callback\n    });\n}\n","import { createContext } from 'react';\n\nconst RegistryContext = createContext({\n    getRegistry: () => { }\n});\n\nexport default RegistryContext;\n","import { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport { ACTION_TYPES } from './action-types';\n\nexport const defaultState = { loaded: false };\n\nexport const sizes = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n\n// Kudos to https://stackoverflow.com/a/18650828/2560321\nexport const formatBytes = (bytes) => {\n    if (bytes === 0 || isNaN(Number(bytes))) {\n        return '0 B';\n    }\n\n    const index = Math.floor(Math.log(bytes) / Math.log(1024));\n    return `${parseFloat((bytes / Math.pow(1024, index)).toFixed(2))} ${sizes[index]}`;\n};\n\nexport function systemProfilePending(state) {\n    return {\n        ...state,\n        systemProfile: {\n            loaded: false\n        }\n    };\n}\n\nexport function calculateRepos(repos) {\n    return repos && repos.reduce((acc, curr) => ({\n        ...acc,\n        ...curr.enabled ? {\n            enabled: [...acc.enabled, curr]\n        } : {\n            disabled: [...acc.disabled, curr]\n        }\n    }), { enabled: [], disabled: [] });\n}\n\nexport function calculateInterfaces(interfaces) {\n    return interfaces && interfaces.reduce((acc, curr) => ({\n        interfaces: [...acc.interfaces, curr],\n        ipv4: [...acc.ipv4, ...curr.ipv4_addresses || []].filter(Boolean),\n        ipv6: [...acc.ipv6, ...curr.ipv6_addresses || []].filter(Boolean)\n    }), { interfaces: [], ipv4: [], ipv6: [] });\n}\n\nexport function onSystemProfile(state, { payload: { results } }) {\n    const systemProfile = (results && results[0] && results[0].system_profile) || {};\n    const cloudProviderObj = (results && results[0] && (typeof results[0].system_profile.cloud_provider !== 'undefined'))\n                        && results[0].system_profile.cloud_provider;\n    return {\n        ...state,\n        disabledApps: [\n            ...(cloudProviderObj === 'aws' || cloudProviderObj === 'azure') ? [] : ['ros']\n        ],\n        systemProfile: {\n            loaded: true,\n            ...systemProfile,\n            ramSize: systemProfile.system_memory_bytes && formatBytes(systemProfile.system_memory_bytes),\n            repositories: calculateRepos(systemProfile.yum_repos),\n            network: calculateInterfaces(systemProfile.network_interfaces)\n        }\n    };\n}\n\nexport default applyReducerHash(\n    {\n        [ACTION_TYPES.LOAD_SYSTEM_PROFILE_FULFILLED]: onSystemProfile,\n        [ACTION_TYPES.LOAD_SYSTEM_PROFILE_PENDING]: systemProfilePending\n    },\n    {\n        systemProfile: defaultState\n    }\n);\n"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","addNotification","notification","type","payload","id","Date","getTime","Math","random","toString","slice","history","useHistory","chrome","useChrome","useEffect","init","on","event","navId","push","location","search","hash","className","NotificationsPortal","appName","registry","useMemo","store","getStore","register","newReducers","replaceReducer","updateReducers","value","getRegistry","Provider","basename","getBaseName","window","pathname","InventoryTable","lazy","InventoryDetail","InventoryGroups","routes","table","detail","detailWithModal","groups","Routes","flagsReady","isFlagEnabled","searchParams","getSearchParams","groupsEnabled","useFlagsStatus","useFlag","Suspense","fallback","Switch","Route","exact","path","render","cmp","isRbacEnabled","rootClass","component","EmptyState","EmptyStateBody","InvalidObject","Redirect","to","size","middlewareListener","appReducers","reducers","mergeWithEntities","tableReducer","mergeWithDetail","entitesDetailReducer","INVENTORY_ACTION_TYPES","MiddlewareListener","middleware","createStore","combineReducers","compose","applyMiddleware","getMiddleware","promise","notificationsMiddleware","errorTitleKey","errorDescriptionKey","createContext","defaultState","loaded","sizes","formatBytes","bytes","isNaN","Number","index","floor","log","parseFloat","pow","toFixed","systemProfilePending","state","systemProfile","calculateRepos","repos","reduce","acc","curr","enabled","disabled","calculateInterfaces","interfaces","ipv4","ipv4_addresses","filter","Boolean","ipv6","ipv6_addresses","onSystemProfile","results","system_profile","cloudProviderObj","cloud_provider","disabledApps","ramSize","system_memory_bytes","repositories","yum_repos","network","network_interfaces","applyReducerHash","ACTION_TYPES"],"sourceRoot":""}