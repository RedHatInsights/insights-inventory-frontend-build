{"version":3,"file":"js/9887.1659017119923.27e4e8aa0b8ee1756c7e.js","mappings":"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","sources":["webpack:///./src/Utilities/InsightsDisconnected.js","webpack:///./src/components/InventoryTable/TitleColumn.js","webpack:///./src/store/entities.js","webpack:///./src/store/index.js","webpack:///./src/components/SystemDetails/Compliance.js","webpack:///./src/components/SystemDetails/Vulnerability.js","webpack:///./src/components/SystemDetails/Advisor.js","webpack:///./src/components/SystemDetails/Patch.js","webpack:///./src/components/SystemDetails/Ros.js","webpack:///./src/store/systemIssues.js","webpack:///./src/store/entityDetails.js","webpack:///./src/store/permissions/reducer.js","webpack:///./src/store/reducers.js","webpack:///./src/store/systemProfileStore.js"],"sourcesContent":["import React from 'react';\n\nimport { Tooltip, Grid, GridItem } from '@patternfly/react-core';\nimport { DisconnectedIcon } from '@patternfly/react-icons';\n\nimport './InsightsDisconnected.scss';\n\nconst InsightsDisconnected = () => (\n    <Tooltip\n        maxWidth='14rem'\n        content={(\n            <Grid hasGutter>\n                <GridItem>\n                    Insights client not reporting\n                </GridItem>\n                <GridItem>\n                    From the main navigation, open\n                    &quot;Registration Assitant&quot; to learn\n                    how to set up Insights.\n                </GridItem>\n            </Grid>\n        )}>\n        <span className=\"pf-u-ml-sm ins-c-inventor__disconnected-icon\">\n            <DisconnectedIcon />\n        </span>\n    </Tooltip>\n);\n\nexport default InsightsDisconnected;\n","/* eslint-disable camelcase */\n/* eslint-disable react/prop-types */\nimport React from 'react';\n\n/**\n * Helper function to proprly calculate what to do when user clicks on first cell.\n * Either full redirect if used with ctrl button or `onRowClick` from props is used.\n * @param {*} event html event, to find out if meta key was clicked.\n * @param {*} key inventory UUID.\n * @param {*} props additional props from `EntityTable` - loaded, onRowClick and noDetail.\n */\nconst onRowClick = (event, key, { loaded, onRowClick: rowClick, noDetail }) => {\n    if (loaded && !noDetail) {\n        const isMetaKey = (event.ctrlKey || event.metaKey || event.which === 2);\n        if (isMetaKey) {\n            return;\n        } else if (rowClick) {\n            rowClick(event, key, isMetaKey);\n        }\n    }\n\n    event.preventDefault();\n    event.stopPropagation();\n};\n\n/**\n * Helper function to generate first cell in plain inventory either with clickable detail or just data from attribut.\n * This is later on used in redux in `renderFunc`.\n * @param {React.node} data React node with information that will be shown to user as column title.\n * @param {string} id inventory UUID, used to navigate to correct URL.\n * @param {*} item row data, holds every information from redux store for currecnt row.\n * @param {*} props additional props passed from `EntityTable` - holds any props passed to inventory table.\n */\nconst TitleColumn = (data, id, item, props) => (\n    <div className=\"ins-composed-col\">\n        <div key=\"os_release\">{item?.os_release}</div>\n        <div key=\"data\" className={props?.noDetail ? 'ins-m-nodetail' : ''}>\n            { props?.noDetail ?\n                data :\n                <a\n                    widget=\"col\"\n                    href={ `${location.pathname}${location.pathname.substr(-1) === '/' ? '' : '/'}${id}` }\n                    onClick={ event => {\n                        onRowClick(event, id, props);\n                    }}\n                >\n                    { data }\n                </a> }\n        </div>\n    </div>\n);\n\nexport default TitleColumn;\n","import React from 'react';\nimport {\n    ACTION_TYPES,\n    SELECT_ENTITY,\n    CHANGE_SORT,\n    SHOW_ENTITIES,\n    FILTER_SELECT,\n    UPDATE_ENTITIES,\n    ENTITIES_LOADING,\n    CLEAR_FILTERS,\n    TOGGLE_TAG_MODAL,\n    CONFIG_CHANGED\n} from './action-types';\nimport { mergeArraysByKey } from '@redhat-cloud-services/frontend-components-utilities/helpers';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport { CullingInformation } from '@redhat-cloud-services/frontend-components/CullingInfo';\nimport { TagWithDialog } from '../Utilities/index';\nimport groupBy from 'lodash/groupBy';\nimport TitleColumn from '../components/InventoryTable/TitleColumn';\nimport InsightsDisconnected from '../Utilities/InsightsDisconnected';\nimport OperatingSystemFormatter from '../Utilities/OperatingSystemFormatter';\nimport { Tooltip } from '@patternfly/react-core';\nimport { defaultFilters } from '../Utilities/constants';\n\nexport const defaultState = {\n    loaded: false,\n    tagsLoaded: false,\n    allTagsLoaded: false,\n    invConfig: {},\n    sortBy: {\n        key: 'updated',\n        direction: 'desc'\n    }\n};\n\nexport const defaultColumns = [\n    {\n        key: 'display_name',\n        sortKey: 'display_name',\n        title: 'Name',\n        renderFunc: TitleColumn\n    },\n    {\n        key: 'tags',\n        title: 'Tags',\n        props: { width: 10, isStatic: true },\n        // eslint-disable-next-line react/display-name\n        renderFunc: (value, systemId) => <TagWithDialog count={value.length} systemId={systemId} />\n    },\n    {\n        key: 'system_profile',\n        sortKey: 'operating_system',\n        dataLabel: 'OS',\n        title: <Tooltip content={<span>Operating system</span>}><span>OS</span></Tooltip>,\n        // eslint-disable-next-line react/display-name\n        renderFunc: (systemProfile) => <OperatingSystemFormatter operatingSystem={systemProfile?.operating_system} />,\n        props: { width: 10 }\n    },\n    {\n        key: 'updated',\n        sortKey: 'updated',\n        title: 'Last seen',\n        // eslint-disable-next-line react/display-name\n        renderFunc: (\n            value,\n            _id,\n            {\n                culled_timestamp: culled, stale_warning_timestamp: staleWarn, stale_timestamp: stale, insights_id: insightsId\n            }) => {\n            return CullingInformation ? <CullingInformation\n                culled={culled}\n                staleWarning={staleWarn}\n                stale={stale}\n                render={({ msg }) => <React.Fragment>\n                    <DateFormat date={ value } extraTitle={ (\n                        <React.Fragment>\n                            <div>{ msg }</div>\n                        Last seen:{` `}\n                        </React.Fragment>\n                    ) }/>\n                    {!insightsId && <InsightsDisconnected />}\n                </React.Fragment>\n                }\n            > <DateFormat date={ value } /> </CullingInformation> : new Date(value).toLocaleString();\n        },\n        props: { width: 10 }\n    }\n];\n\nfunction entitiesPending(state, { meta }) {\n    return {\n        ...state,\n        columns: mergeArraysByKey([\n            defaultColumns.filter(({ key }) => key !== 'tags' || meta?.showTags),\n            state.columns\n        ], 'key'),\n        rows: [],\n        loaded: false,\n        lastDateRequest: meta.lastDateRequest\n    };\n}\n\nfunction clearFilters(state) {\n    return {\n        ...state,\n        activeFilters: [defaultFilters]\n    };\n}\n\n// eslint-disable-next-line camelcase\nfunction entitiesLoaded(state, { payload: { results, per_page: perPage, page, count, total, loaded, filters }, meta }) {\n    // Older requests should not rewrite the state\n    if (meta.lastDateRequest < state.lastDateRequest) {\n        return state;\n    }\n\n    // Data are loaded and APi returned malicious data\n    if (loaded === undefined && (page === undefined || perPage === undefined)) {\n        return state;\n    }\n\n    return {\n        ...state,\n        activeFilters: filters || [],\n        loaded: loaded === undefined || loaded,\n        // filter data only if we are loaded\n        rows: mergeArraysByKey([state.rows, results]).filter(item => !loaded ? true : item.created),\n        perPage: perPage !== undefined ? perPage : state.perPage,\n        page: page !== undefined ? page : state.page,\n        count: count !== undefined ? count : state.count,\n        total: total !== undefined ? total : state.total\n    };\n}\n\nfunction loadingRejected(state, { payload }) {\n    return {\n        ...state,\n        error: payload\n    };\n}\n\nfunction selectEntity(state, { payload }) {\n    const rows = [...state.rows];\n    const toSelect = [].concat(payload);\n    toSelect.forEach(({ id, selected }) => {\n        const entity = rows.find(entity => entity.id === id);\n        if (entity) {\n            entity.selected = selected;\n        } else {\n            rows.forEach(item => item.selected = selected);\n        }\n    });\n    return {\n        ...state,\n        rows\n    };\n}\n\nfunction changeSort(state, { payload: { key, direction } }) {\n    return {\n        ...state,\n        sortBy: {\n            key,\n            direction\n        }\n    };\n}\n\nfunction selectFilter(state, { payload: { item: { items, ...item }, selected } }) {\n    let { activeFilters = [] } = state;\n    if (selected) {\n        activeFilters = [\n            ...activeFilters,\n            item,\n            ...items ? items : []\n        ];\n        const values = activeFilters.map(active => active.value);\n        activeFilters = activeFilters.filter((filter, key) => values.lastIndexOf(filter.value) === key);\n    } else {\n        activeFilters.splice(activeFilters.map(active => active.value).indexOf(item.value), 1);\n        if (items) {\n            items.forEach(subItem => {\n                activeFilters.splice(activeFilters.map(active => active.value).indexOf(subItem.value), 1);\n            });\n        }\n    }\n\n    return {\n        ...state,\n        activeFilters\n    };\n}\n\nexport function showTags(state, { payload, meta }) {\n    const { tags, ...activeSystemTag } = state.rows ? state.rows.find(({ id }) => meta.systemId === id) : state.entity || {};\n    return {\n        ...state,\n        tagModalLoaded: true,\n        activeSystemTag: {\n            ...activeSystemTag,\n            tags: Object.values(payload.results)[0],\n            tagsCount: meta.tagsCount,\n            page: payload.page,\n            perPage: payload.per_page,\n            tagsLoaded: true\n        }\n    };\n}\n\nexport function showTagsPending(state, { meta }) {\n    const { tags, ...activeSystemTag } = state.rows ? state.rows.find(({ id }) => meta.systemId === id) : state.entity || {};\n    return {\n        ...state,\n        tagModalLoaded: false,\n        activeSystemTag: {\n            ...activeSystemTag,\n            tagsCount: meta.tagsCount,\n            tagsLoaded: false\n        }\n    };\n}\n\nexport function toggleTagModalReducer(state, { payload: { isOpen } }) {\n    return {\n        ...state,\n        showTagDialog: isOpen,\n        activeSystemTag: undefined\n    };\n}\n\nexport function allTags(state, { payload: { results, total, page, per_page: perPage }, meta: { lastDateRequestTags } }) {\n    // only the latest request can change state\n    if (lastDateRequestTags < state.lastDateRequestTags) {\n        return state;\n    }\n\n    return {\n        ...state,\n        allTags: Object.entries(groupBy(results, ({ tag: { namespace } }) => namespace)).map(([key, value]) => ({\n            name: key,\n            tags: value\n        })),\n        allTagsPagination: {\n            perPage,\n            page\n        },\n        additionalTagsCount: total > perPage ? total - perPage : 0,\n        allTagsTotal: total,\n        allTagsLoaded: true,\n        tagModalLoaded: true\n    };\n}\n\nexport default {\n    [ACTION_TYPES.ALL_TAGS_FULFILLED]: allTags,\n    [ACTION_TYPES.ALL_TAGS_PENDING]: (state, { meta }) => (\n        { ...state, allTagsLoaded: false, tagModalLoaded: false, lastDateRequestTags: meta.lastDateRequestTags }\n    ),\n    [ACTION_TYPES.LOAD_ENTITIES_PENDING]: entitiesPending,\n    [ACTION_TYPES.LOAD_ENTITIES_FULFILLED]: entitiesLoaded,\n    [ACTION_TYPES.LOAD_ENTITIES_REJECTED]: loadingRejected,\n    [ACTION_TYPES.LOAD_TAGS_PENDING]: showTagsPending,\n    [ACTION_TYPES.LOAD_TAGS_FULFILLED]: showTags,\n    [ACTION_TYPES.ALL_TAGS_REJECTED]: loadingRejected,\n    [UPDATE_ENTITIES]: entitiesLoaded,\n    [SHOW_ENTITIES]: (state, action) => entitiesLoaded(state, {\n        payload: {\n            ...action.payload,\n            loaded: false\n        }\n    }),\n    [FILTER_SELECT]: selectFilter,\n    [SELECT_ENTITY]: selectEntity,\n    [CHANGE_SORT]: changeSort,\n    [CLEAR_FILTERS]: clearFilters,\n    [ENTITIES_LOADING]: (state, { payload: { isLoading } }) => ({ ...state, loaded: !isLoading }),\n    [TOGGLE_TAG_MODAL]: toggleTagModalReducer,\n    [CONFIG_CHANGED]: (state, { payload }) => ({ ...state, invConfig: payload })\n};\n","\nimport { createContext } from 'react';\nimport MiddlewareListener from '@redhat-cloud-services/frontend-components-utilities/MiddlewareListener';\nimport { ReducerRegistry } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport notificationsMiddleware from '@redhat-cloud-services/frontend-components-notifications/notificationsMiddleware';\nimport promise  from 'redux-promise-middleware';\nexport { default as reducers, tableReducer, entitesDetailReducer } from './reducers';\n\nexport const RegistryContext = createContext({\n    getRegistry: () => {}\n});\n\nlet middlewareListener;\n\nexport function init (...middleware) {\n    middlewareListener = new MiddlewareListener();\n    return new ReducerRegistry(\n        {},\n        [\n            middlewareListener.getMiddleware(),\n            promise,\n            notificationsMiddleware({\n                errorDescriptionKey: ['detail', 'stack']\n            }),\n            ...middleware\n        ]\n    );\n}\n\nexport function addNewListener ({ actionType, callback }) {\n    return middlewareListener.addNew({\n        on: actionType,\n        callback\n    });\n}\n","import React from 'react';\nimport { useStore } from 'react-redux';\nimport { useRouteMatch } from 'react-router-dom';\nimport AsyncComponent from '@redhat-cloud-services/frontend-components/AsyncComponent';\n\nconst ComplianceTab = () => {\n    const { params } = useRouteMatch('/:inventoryId');\n    return <AsyncComponent\n        appName=\"compliance\"\n        module=\"./SystemDetail\"\n        store={useStore()}\n        customItnl\n        intlProps={{\n            locale: navigator.language.slice(0, 2)\n        }}\n        inventoryId={ params.inventoryId }\n        remediationsEnabled\n    />;\n};\n\nexport default ComplianceTab;\n","import React, { useContext } from 'react';\nimport { useRouteMatch } from 'react-router-dom';\nimport { RegistryContext } from '../../store';\nimport AsyncComponent from '@redhat-cloud-services/frontend-components/AsyncComponent';\n\nconst VulnerabilityTab = () => {\n    const { params } = useRouteMatch('/:inventoryId');\n    const { getRegistry } = useContext(RegistryContext);\n\n    return <AsyncComponent\n        appName=\"vulnerability\"\n        module=\"./SystemDetail\"\n        getRegistry={getRegistry}\n        customItnlProvider\n        entity={ { id: params.inventoryId } }\n    />;\n};\n\nexport default VulnerabilityTab;\n","import React from 'react';\nimport { useStore } from 'react-redux';\nimport AsyncComponent from '@redhat-cloud-services/frontend-components/AsyncComponent';\n\nconst AdvisorTab = () => {\n    return <AsyncComponent\n        appName=\"advisor\"\n        module=\"./SystemDetail\"\n        store={useStore()}\n        customItnl\n        intlProps={{\n            locale: navigator.language.slice(0, 2)\n        }}\n    />;\n};\n\nexport default AdvisorTab;\n","import React, { useContext } from 'react';\nimport { RegistryContext } from '../../store';\nimport AsyncComponent from '@redhat-cloud-services/frontend-components/AsyncComponent';\n\nconst PatchTab = () => {\n    const { getRegistry } = useContext(RegistryContext);\n\n    return <AsyncComponent\n        appName=\"patch\"\n        module=\"./SystemDetail\"\n        getRegistry={getRegistry}\n    />;\n};\n\nexport default PatchTab;\n","import React, { useContext } from 'react';\nimport { useRouteMatch } from 'react-router-dom';\nimport { RegistryContext } from '../../store';\nimport AsyncComponent from '@redhat-cloud-services/frontend-components/AsyncComponent';\n\nconst RosTab = () => {\n    const { params } = useRouteMatch('/:inventoryId');\n    const { getRegistry } = useContext(RegistryContext);\n\n    return <AsyncComponent\n        appName=\"ros\"\n        module=\"./SystemDetail\"\n        getRegistry={ getRegistry }\n        inventoryId={ params.inventoryId }\n    />;\n};\n\nexport default RosTab;\n","/* eslint-disable camelcase */\nimport { SYSTEM_ISSUE_TYPES } from './action-types';\n\nexport function advisor(state, { payload }) {\n    return {\n        ...state,\n        systemIssues: {\n            ...state?.systemIssues,\n            advisor: {\n                isLoaded: true,\n                criticalCount: payload?.filter(item => item?.total_risk >= 4)\n            }\n        }\n    };\n}\n\nexport function cve(state, { payload }) {\n    return {\n        ...state,\n        systemIssues: {\n            ...state?.systemIssues,\n            cve: {\n                isLoaded: true,\n                critical: {\n                    count: payload?.critical?.meta?.total_items || 0\n                },\n                moderate: {\n                    count: payload?.moderate?.meta?.total_items || 0\n                },\n                important: {\n                    count: payload?.important?.meta?.total_items || 0\n                },\n                low: {\n                    count: payload?.low?.meta?.total_items || 0\n                }\n            }\n        }\n    };\n}\n\nexport function patch(state, { payload }) {\n    return {\n        ...state,\n        systemIssues: {\n            ...state?.systemIssues,\n            patch: {\n                isLoaded: true,\n                bug: {\n                    count: payload?.data?.attributes?.rhba_count || 0\n                },\n                enhancement: {\n                    count: payload?.data?.attributes?.rhea_count || 0\n                },\n                security: {\n                    count: payload?.data?.attributes?.rhsa_count || 0\n                }\n            }\n        }\n    };\n}\n\nexport function compliance(state, { payload }) {\n    return {\n        ...state,\n        systemIssues: {\n            ...state?.systemIssues,\n            compliance: {\n                isLoaded: true,\n                profiles: payload?.data?.system?.profiles\n            }\n        }\n    };\n}\n\nexport function isPending(state, type) {\n    return {\n        ...state,\n        systemIssues: {\n            ...state?.systemIssues,\n            ...type && { [type]: { isLoaded: false } }\n        }\n    };\n}\n\nexport default {\n    [SYSTEM_ISSUE_TYPES.LOAD_ADVISOR_RECOMMENDATIONS_PENDING]: (state) => isPending(state, 'advisor'),\n    [SYSTEM_ISSUE_TYPES.LOAD_APPLICABLE_CVES_PENDING]: (state) => isPending(state, 'cve'),\n    [SYSTEM_ISSUE_TYPES.LOAD_APPLICABLE_ADVISORIES_PENDING]: (state) => isPending(state, 'patch'),\n    [SYSTEM_ISSUE_TYPES.LOAD_COMPLIANCE_POLICIES_PENDING]: (state) => isPending(state, 'compliance'),\n    [SYSTEM_ISSUE_TYPES.LOAD_ADVISOR_RECOMMENDATIONS_FULFILLED]: advisor,\n    [SYSTEM_ISSUE_TYPES.LOAD_APPLICABLE_CVES_FULFILLED]: cve,\n    [SYSTEM_ISSUE_TYPES.LOAD_APPLICABLE_ADVISORIES_FULFILLED]: patch,\n    [SYSTEM_ISSUE_TYPES.LOAD_COMPLIANCE_POLICIES_FULFILLED]: compliance\n};\n","import { ACTION_TYPES, APPLICATION_SELECTED, TOGGLE_TAG_MODAL, TOGGLE_DRAWER } from './action-types';\nimport { showTags, toggleTagModalReducer } from './entities';\nimport systemIssuesReducer from './systemIssues';\nexport const entityDefaultState = { loaded: false };\n\nfunction entityDetailPending(state) {\n    return {\n        ...state,\n        loaded: false\n    };\n}\n\nfunction entityDetailLoaded(state, { payload }) {\n    return {\n        ...state,\n        loaded: true,\n        entity: payload.results[0]\n    };\n}\n\nfunction onApplicationSelected(state, { payload }) {\n    return {\n        ...state,\n        activeApp: payload\n    };\n}\n\nfunction toggleDrawer(state, { payload }) {\n    return  {\n        ...state,\n        isToggleOpened: payload?.isOpened\n    };\n}\n\nfunction showTagsPending(state) {\n    return {\n        ...state,\n        tagModalLoaded: false\n    };\n}\n\nexport default {\n    [ACTION_TYPES.LOAD_ENTITIES_PENDING]: () => entityDefaultState,\n    [ACTION_TYPES.LOAD_ENTITY_PENDING]: entityDetailPending,\n    [ACTION_TYPES.LOAD_ENTITY_FULFILLED]: entityDetailLoaded,\n    [APPLICATION_SELECTED]: onApplicationSelected,\n    [ACTION_TYPES.LOAD_TAGS]: showTags,\n    [ACTION_TYPES.LOAD_TAGS_PENDING]: showTagsPending,\n    [ACTION_TYPES.LOAD_TAGS_FULFILLED]: showTags,\n    [TOGGLE_TAG_MODAL]: toggleTagModalReducer,\n    [TOGGLE_DRAWER]: toggleDrawer,\n    ...systemIssuesReducer\n};\n","import { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport { ACTION_TYPES } from '../action-types';\n\nconst loadWritePermissionsPending = (state) => ({\n    ...state,\n    loadingFailed: false,\n    loading: true,\n    writePermissions: undefined\n});\n\nconst loadWritePermissionsFulfilled = (state, { payload }) => ({\n    ...state,\n    loading: false,\n    loadingFailed: false,\n    writePermissions: payload.writePermissions\n});\n\nconst loadWritePermissionsFailed = (state) => ({\n    ...state,\n    loading: false,\n    loadingFailed: true\n});\n\nconst defaultPermissionState = {\n    loading: true,\n    writePermissions: false,\n    loadingFailed: false\n};\n\nconst permissionsReducer = applyReducerHash(\n    {\n        [`${ACTION_TYPES.LOAD_WRITE_PERMISSIONS}_PENDING`]: loadWritePermissionsPending,\n        [`${ACTION_TYPES.LOAD_WRITE_PERMISSIONS}_FULFILLED`]: loadWritePermissionsFulfilled,\n        [`${ACTION_TYPES.LOAD_WRITE_PERMISSIONS}_FAILED`]: loadWritePermissionsFailed\n    },\n    defaultPermissionState\n);\n\nexport default permissionsReducer;\n","import {\n    INVENTORY_ACTION_TYPES,\n    ACTION_TYPES,\n    SELECT_ENTITY,\n    SET_INVENTORY_FILTER,\n    SET_PAGINATION\n} from './action-types';\nimport systemProfileStore from './systemProfileStore';\nimport {\n    ComplianceTab,\n    VulnerabilityTab,\n    AdvisorTab,\n    GeneralInformationTab,\n    PatchTab,\n    RosTab\n} from '../components/SystemDetails';\nimport { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport { mergeArraysByKey } from '@redhat-cloud-services/frontend-components-utilities/helpers';\nimport { notificationsReducer } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport entitiesReducer, { defaultState as entitiesDefault } from './entities';\nimport entityDetailsReducer, { entityDefaultState as entityDefault } from './entityDetails';\n\nexport { entitiesReducer, entityDetailsReducer };\n\nimport permissionsReducer from './permissions/reducer';\n\nconst defaultState = { loaded: false, selected: new Map() };\n\nfunction entitiesLoaded(state, { payload }) {\n    return {\n        ...state,\n        rows: mergeArraysByKey([state.rows, payload.results]),\n        entities: mergeArraysByKey([state.entities, payload.results])\n    };\n}\n\nfunction updateEntity(state, { meta }) {\n    return {\n        ...state,\n        rows: state.rows.map((row) => row.id === meta?.id ? ({\n            ...row,\n            // eslint-disable-next-line camelcase\n            display_name: meta?.value\n        }) : row)\n    };\n}\n\nfunction entityLoaded(state) {\n    return {\n        ...state,\n        loaded: true,\n        activeApps: [\n            { title: 'General information', name: 'general_information', component: GeneralInformationTab },\n            { title: 'Advisor', name: 'advisor', component: AdvisorTab },\n            {\n                title: 'Vulnerability',\n                name: 'vulnerabilities',\n                component: VulnerabilityTab\n            },\n            {\n                title: 'Compliance',\n                name: 'compliance',\n                component: ComplianceTab\n            },\n            {\n                title: 'Patch',\n                name: 'patch',\n                component: PatchTab\n            },\n            {\n                title: 'Resource Optimization',\n                name: 'ros',\n                isVisible: false,\n                component: RosTab\n            }\n        ].filter(Boolean)\n    };\n}\n\nfunction entitySelected(state, { payload }) {\n    const selected = state.selected || (new Map());\n    if (payload.selected) {\n        if (payload.id === 0) {\n            state.rows.forEach(row => selected.set(row.id, row));\n        } else {\n            const selectedRow = state.rows && state.rows.find(({ id }) => id === payload.id);\n            selected.set(payload.id, { ...selectedRow || {}, id: payload.id });\n        }\n    } else {\n        if (payload.id === 0) {\n            state.rows.forEach(row => selected.delete(row.id));\n        } else if (payload.id === -1) {\n            selected.clear();\n        } else {\n            selected.delete(payload.id);\n        }\n    }\n\n    return {\n        ...state,\n        selected: new Map(selected)\n    };\n}\n\nfunction resourceOptTabVisibility(state, { payload }) {\n    return {\n        ...state,\n        activeApps: state.activeApps?.map((entity) => entity.name === 'ros' ? ({\n            ...entity,\n            isVisible: payload\n        }) : entity\n        )\n    };\n}\n\nfunction entityDeleted(state, { meta }) {\n    const selected = state.selected || (new Map());\n    meta.systems.forEach(id => selected.delete(id));\n\n    return {\n        ...state,\n        selected: new Map(selected)\n    };\n}\n\nfunction onEntitiesLoaded(state, { payload, meta }) {\n    if (meta?.lastDateRequest < state?.lastDateRequest) {\n        return state;\n    }\n\n    return {\n        ...state,\n        rows: mergeArraysByKey([state.rows, payload.results.map(result => {\n            return {\n                ...result,\n                selected: state.selected && state.selected.has(result.id)\n            };\n        })])\n    };\n}\n\nfunction onSetFilter(state, { payload }) {\n    return {\n        ...state,\n        activeFilters: payload.filtersList\n    };\n}\n\nfunction onSetPagination(state, { payload }) {\n    const perPage = parseInt(payload.perPage, 10);\n    const page = parseInt(payload.page, 10);\n    return {\n        ...state,\n        perPage: isNaN(perPage) ? 50 : perPage,\n        page: isNaN(page) ? 1 : page\n    };\n}\n\nlet reducers = {\n    notifications: notificationsReducer,\n    systemProfileStore,\n    permissionsReducer\n};\n\nexport const tableReducer = applyReducerHash(\n    {\n        [ACTION_TYPES.GET_ENTITIES_FULFILLED]: entitiesLoaded,\n        [INVENTORY_ACTION_TYPES.LOAD_ENTITIES_FULFILLED]: onEntitiesLoaded,\n        [`${ACTION_TYPES.REMOVE_ENTITY}_FULFILLED`]: entityDeleted,\n        [SELECT_ENTITY]: entitySelected,\n        FILTER_SELECT: (state) => ({ ...state, selected: {} }),\n        [SET_INVENTORY_FILTER]: onSetFilter,\n        [SET_PAGINATION]: onSetPagination,\n        [ACTION_TYPES.UPDATE_DISPLAY_NAME_FULFILLED]: updateEntity\n    },\n    defaultState\n);\n\nexport const entitesDetailReducer = () => applyReducerHash(\n    {\n        [INVENTORY_ACTION_TYPES.LOAD_ENTITY_FULFILLED]: entityLoaded,\n        [INVENTORY_ACTION_TYPES.LOAD_SYSTEM_PROFILE_FULFILLED]: resourceOptTabVisibility\n    },\n    defaultState\n);\n\nexport function mergeWithEntities(additionalReducers = (state) => state, defaultState = {}) {\n    return ({\n        entities: (state, payload) => ({\n            ...additionalReducers({\n                ...applyReducerHash({\n                    ...entitiesReducer\n                }, { ...entitiesDefault, ...defaultState })(state, payload)\n            }, payload)\n        })\n    });\n}\n\nexport function mergeWithDetail(additionalReducers = (state) => state, defaultState = {}) {\n    return ({\n        entityDetails: (state, payload) => ({\n            ...additionalReducers({\n                ...applyReducerHash({\n                    ...entityDetailsReducer\n                }, { ...entityDefault, ...defaultState })(state, payload)\n            }, payload)\n        })\n    });\n}\n\nexport default reducers;\n","import { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport { ACTION_TYPES } from './action-types';\n\nexport const defaultState = { loaded: false };\n\nexport const sizes = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n\n// Kudos to https://stackoverflow.com/a/18650828/2560321\nexport const formatBytes = (bytes) => {\n    if (bytes === 0 || isNaN(Number(bytes))) {\n        return '0 B';\n    }\n\n    const index = Math.floor(Math.log(bytes) / Math.log(1024));\n    return `${parseFloat((bytes / Math.pow(1024, index)).toFixed(2))} ${sizes[index]}`;\n};\n\nexport function systemProfilePending(state) {\n    return {\n        ...state,\n        systemProfile: {\n            loaded: false\n        }\n    };\n}\n\nexport function calculateRepos(repos) {\n    return repos && repos.reduce((acc, curr) => ({\n        ...acc,\n        ...curr.enabled ? {\n            enabled: [...acc.enabled, curr]\n        } : {\n            disabled: [...acc.disabled, curr]\n        }\n    }), { enabled: [], disabled: [] });\n}\n\nexport function calculateInterfaces(interfaces) {\n    return interfaces && interfaces.reduce((acc, curr) => ({\n        interfaces: [...acc.interfaces, curr],\n        ipv4: [...acc.ipv4, ...curr.ipv4_addresses || []].filter(Boolean),\n        ipv6: [...acc.ipv6, ...curr.ipv6_addresses || []].filter(Boolean)\n    }), { interfaces: [], ipv4: [], ipv6: [] });\n}\n\nexport function onSystemProfile(state, { payload: { results } }) {\n    const systemProfile = (results && results[0] && results[0].system_profile) || {};\n    const cloudProviderObj = (results && results[0] && (typeof results[0].system_profile.cloud_provider !== 'undefined'))\n                        && results[0].system_profile.cloud_provider;\n    return {\n        ...state,\n        disabledApps: [\n            ...(cloudProviderObj === 'aws' || cloudProviderObj === 'azure') ? [] : ['ros']\n        ],\n        systemProfile: {\n            loaded: true,\n            ...systemProfile,\n            ramSize: systemProfile.system_memory_bytes && formatBytes(systemProfile.system_memory_bytes),\n            repositories: calculateRepos(systemProfile.yum_repos),\n            network: calculateInterfaces(systemProfile.network_interfaces)\n        }\n    };\n}\n\nexport default applyReducerHash(\n    {\n        [ACTION_TYPES.LOAD_SYSTEM_PROFILE_FULFILLED]: onSystemProfile,\n        [ACTION_TYPES.LOAD_SYSTEM_PROFILE_PENDING]: systemProfilePending\n    },\n    {\n        systemProfile: defaultState\n    }\n);\n"],"names":["maxWidth","content","hasGutter","className","data","id","item","props","key","os_release","noDetail","widget","href","location","pathname","substr","onClick","event","loaded","rowClick","onRowClick","isMetaKey","ctrlKey","metaKey","which","preventDefault","stopPropagation","defaultState","tagsLoaded","allTagsLoaded","invConfig","sortBy","direction","defaultColumns","sortKey","title","renderFunc","TitleColumn","width","isStatic","value","systemId","TagWithDialog","count","length","dataLabel","systemProfile","operatingSystem","operating_system","_id","culled","culled_timestamp","staleWarn","stale_warning_timestamp","stale","stale_timestamp","insightsId","insights_id","CullingInformation","staleWarning","render","msg","date","extraTitle","Date","toLocaleString","entitiesLoaded","state","payload","results","perPage","per_page","page","total","filters","meta","lastDateRequest","undefined","activeFilters","rows","mergeArraysByKey","filter","created","loadingRejected","error","showTags","find","entity","activeSystemTag","tags","tagModalLoaded","Object","values","tagsCount","toggleTagModalReducer","isOpen","showTagDialog","ACTION_TYPES","lastDateRequestTags","allTags","entries","groupBy","tag","namespace","map","name","allTagsPagination","additionalTagsCount","allTagsTotal","columns","UPDATE_ENTITIES","SHOW_ENTITIES","action","FILTER_SELECT","items","selected","active","lastIndexOf","splice","indexOf","forEach","subItem","SELECT_ENTITY","concat","CHANGE_SORT","CLEAR_FILTERS","defaultFilters","ENTITIES_LOADING","isLoading","TOGGLE_TAG_MODAL","CONFIG_CHANGED","middlewareListener","RegistryContext","createContext","getRegistry","init","MiddlewareListener","middleware","ReducerRegistry","getMiddleware","promise","notificationsMiddleware","errorDescriptionKey","params","useRouteMatch","AsyncComponent","appName","module","store","useStore","customItnl","intlProps","locale","navigator","language","slice","inventoryId","remediationsEnabled","useContext","customItnlProvider","isPending","type","systemIssues","isLoaded","SYSTEM_ISSUE_TYPES","advisor","criticalCount","total_risk","cve","critical","total_items","moderate","important","low","patch","bug","attributes","rhba_count","enhancement","rhea_count","security","rhsa_count","compliance","profiles","system","entityDefaultState","APPLICATION_SELECTED","activeApp","TOGGLE_DRAWER","isToggleOpened","isOpened","systemIssuesReducer","applyReducerHash","loadingFailed","loading","writePermissions","Map","entityLoaded","activeApps","component","GeneralInformationTab","AdvisorTab","VulnerabilityTab","ComplianceTab","PatchTab","isVisible","RosTab","Boolean","resourceOptTabVisibility","reducers","notifications","notificationsReducer","systemProfileStore","permissionsReducer","tableReducer","entities","INVENTORY_ACTION_TYPES","result","has","systems","delete","row","set","selectedRow","clear","SET_INVENTORY_FILTER","filtersList","SET_PAGINATION","parseInt","isNaN","display_name","entitesDetailReducer","mergeWithEntities","additionalReducers","entitiesReducer","entitiesDefault","mergeWithDetail","entityDetails","entityDetailsReducer","entityDefault","sizes","formatBytes","bytes","Number","index","Math","floor","log","parseFloat","pow","toFixed","interfaces","repos","system_profile","cloudProviderObj","cloud_provider","disabledApps","ramSize","system_memory_bytes","repositories","yum_repos","reduce","acc","curr","enabled","disabled","network","network_interfaces","ipv4","ipv4_addresses","ipv6","ipv6_addresses"],"sourceRoot":""}