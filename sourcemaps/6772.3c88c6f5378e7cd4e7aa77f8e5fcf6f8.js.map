{"version":3,"file":"js/6772.bea87e2e418e1a356d80.js","mappings":"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","sources":["webpack:///./src/components/InventoryGroups/Modals/CreateGroupModal.js","webpack:///./src/components/SystemDetails/GeneralInfo.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/Main/Main.js","webpack:///./src/components/InventoryGroups/SmallComponents/CreateGroupButton.js","webpack:///./src/components/InventoryGroups/Modals/AddSelectedHostsToGroupModal.js","webpack:///./src/components/InventoryTabs/ConventionalSystems/Utilities.js","webpack:///./src/components/InventoryTabs/ConventionalSystems/ConventionalSystemsTab.js","webpack:///./src/components/InventoryTabs/ConventionalSystems/useTableActions.js","webpack:///./src/Utilities/path.js","webpack:///./src/Utilities/edge.js","webpack:///./src/components/InventoryTabs/ImmutableDevices/EdgeDevicesTab.js","webpack:///./src/components/InventoryTabs/HybridInventoryTabs.js","webpack:///./src/routes/InventoryTable.js","webpack:///./node_modules/lodash/uniq.js"],"sourcesContent":["import React, { useCallback, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { createGroupSchema } from './ModalSchemas/schemes';\nimport Modal from './Modal';\nimport apiWithToast from '../utils/apiWithToast';\nimport { createGroup, validateGroupName } from '../utils/api';\nimport { useDispatch } from 'react-redux';\nimport awesomeDebouncePromise from 'awesome-debounce-promise';\n\nconst CreateGroupModal = ({\n  isModalOpen,\n  setIsModalOpen,\n  reloadData,\n  modalBefore = false,\n  setterOfModalBefore,\n}) => {\n  const dispatch = useDispatch();\n\n  const handleCreateGroup = useCallback(\n    (values) => {\n      const statusMessages = {\n        onSuccess: {\n          title: 'Success',\n          description: `${values.name} has been created successfully`,\n        },\n        onError: { title: 'Error', description: 'Failed to create group' },\n      };\n      return apiWithToast(dispatch, () => createGroup(values), statusMessages);\n    },\n    [isModalOpen]\n  );\n\n  const schema = useMemo(() => {\n    const check = async (value) => {\n      const results = await validateGroupName(value);\n      if (results === true) {\n        throw 'Group name already exists';\n      }\n\n      return undefined;\n    };\n\n    // eslint-disable-next-line new-cap\n    const d = awesomeDebouncePromise(check, 500, { onlyResolvesLast: false });\n    return createGroupSchema(d);\n  }, []);\n\n  const onClose = () => {\n    if (modalBefore) {\n      setIsModalOpen(false);\n      setterOfModalBefore(true);\n    } else {\n      setIsModalOpen(false);\n    }\n  };\n\n  return (\n    <Modal\n      isModalOpen={isModalOpen}\n      closeModal={onClose}\n      title=\"Create group\"\n      submitLabel=\"Create\"\n      schema={schema}\n      reloadData={reloadData}\n      onSubmit={handleCreateGroup}\n    />\n  );\n};\n\nexport default CreateGroupModal;\n\nCreateGroupModal.propTypes = {\n  isModalOpen: PropTypes.bool,\n  setIsModalOpen: PropTypes.func,\n  reloadData: PropTypes.func,\n  modalBefore: PropTypes.bool,\n  setterOfModalBefore: PropTypes.func,\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport GeneralInformation from '../GeneralInfo/GeneralInformation';\nimport useFeatureFlag from '../../Utilities/useFeatureFlag';\nexport { default as TextInputModal } from '../GeneralInfo/TextInputModal';\n\nconst GeneralInfoTab = (props) => {\n  const systemProfile = useSelector(\n    ({ systemProfileStore }) => systemProfileStore?.systemProfile\n  );\n  const isEdgeHost = systemProfile?.host_type === 'edge';\n  const enableEdgeImageDetails = useFeatureFlag(\n    'edgeParity.inventory-system-detail'\n  );\n  const enableEdgeInventoryListDetails = useFeatureFlag(\n    'edgeParity.inventory-list'\n  );\n\n  return (\n    <GeneralInformation\n      {...props}\n      showImageDetails={\n        enableEdgeImageDetails && enableEdgeInventoryListDetails && isEdgeHost\n      }\n    />\n  );\n};\n\nexport default GeneralInfoTab;\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useEffect } from 'react';\nimport classNames from 'classnames';\nimport '../Main/main.css';\nexport var Main = function (_a) {\n    var children = _a.children, className = _a.className, props = __rest(_a, [\"children\", \"className\"]);\n    useEffect(function () {\n        console.error(\"Using deprecated \\\"Main\\\" component. Do not use it. Either remove it from your JSX or replace it by \\\"section\\\" HTML element.\");\n    }, []);\n    return (_jsx(\"section\", __assign({}, props, { className: \"\".concat(classNames(className, 'pf-l-page__main-section pf-c-page__main-section')) }, { children: children })));\n};\nexport var InternalMain = Main;\nexport default Main;\n//# sourceMappingURL=Main.js.map","import React from 'react';\nimport { Button, Text } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport { usePermissionsWithContext } from '@redhat-cloud-services/frontend-components-utilities/RBACHook';\nimport { GENERAL_GROUPS_WRITE_PERMISSION } from '../../../constants';\n\nexport const CreateGroupButton = ({ closeModal }) => {\n  const { hasAccess: canModifyGroups } = usePermissionsWithContext([\n    GENERAL_GROUPS_WRITE_PERMISSION,\n  ]);\n\n  return canModifyGroups ? (\n    <>\n      <Text>Or</Text>\n      <Button variant=\"secondary\" className=\"pf-u-w-50\" onClick={closeModal}>\n        Create a new group\n      </Button>\n    </>\n  ) : (\n    <></>\n  );\n};\n\nCreateGroupButton.propTypes = {\n  closeModal: PropTypes.func,\n};\n","import './AddSelectedHostsToGroupModal.scss';\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Modal from './Modal';\nimport { addHostsToGroupById } from '../utils/api';\nimport apiWithToast from '../utils/apiWithToast';\nimport { useDispatch } from 'react-redux';\nimport { CreateGroupButton } from '../SmallComponents/CreateGroupButton';\nimport { addHostSchema } from './ModalSchemas/schemes';\nimport CreateGroupModal from './CreateGroupModal';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\n\nconst AddSelectedHostsToGroupModal = ({\n  isModalOpen,\n  setIsModalOpen,\n  modalState: hosts,\n  reloadData,\n}) => {\n  const dispatch = useDispatch();\n  const chrome = useChrome();\n  const [isCreateGroupModalOpen, setIsCreateGroupModalOpen] = useState(false);\n  const handleAddDevices = (values) => {\n    const group = JSON.parse(values.group); // parse is a workaround for https://github.com/data-driven-forms/react-forms/issues/1401\n    const statusMessages = {\n      onSuccess: {\n        title: 'Success',\n        description: `System(s) have been added to ${group.name} successfully`,\n      },\n      onError: {\n        title: 'Error',\n        description: `Failed to add ${\n          hosts.length > 1 ? `${hosts.length} systems` : hosts[0].display_name\n        } to ${group.name}`,\n      },\n    };\n\n    apiWithToast(\n      dispatch,\n      () =>\n        addHostsToGroupById(\n          group.id,\n          hosts.map(({ id }) => id)\n        ),\n      statusMessages\n    );\n  };\n\n  return (\n    <>\n      {!isCreateGroupModalOpen && (\n        <Modal\n          isModalOpen={isModalOpen}\n          closeModal={() => setIsModalOpen(false)}\n          title=\"Add to group\"\n          submitLabel=\"Add\"\n          schema={addHostSchema(hosts, chrome)}\n          additionalMappers={{\n            'create-group-btn': {\n              component: CreateGroupButton,\n              closeModal: () => setIsCreateGroupModalOpen(true),\n            },\n          }}\n          onSubmit={handleAddDevices}\n          reloadData={reloadData}\n          modalClassName=\"add-selected-to-group-modal\"\n        />\n      )}\n      {isCreateGroupModalOpen && (\n        <CreateGroupModal\n          isModalOpen={isCreateGroupModalOpen}\n          setIsModalOpen={setIsCreateGroupModalOpen}\n          //modal before prop tells create group modal that it should\n          //reopen add host modal when user closes create group modal\n          modalBefore={true}\n          setterOfModalBefore={setIsModalOpen}\n        />\n      )}\n    </>\n  );\n};\n\nAddSelectedHostsToGroupModal.propTypes = {\n  modalState: PropTypes.arrayOf(\n    PropTypes.shape({\n      // eslint-disable-next-line camelcase\n      display_name: PropTypes.string,\n      id: PropTypes.string,\n    })\n  ).isRequired,\n  isModalOpen: PropTypes.bool,\n  setIsModalOpen: PropTypes.func,\n  reloadData: PropTypes.func,\n};\n\nexport default AddSelectedHostsToGroupModal;\n","import flatMap from 'lodash/flatMap';\nimport {\n  HOST_GROUP_CHIP,\n  RHCD_FILTER_KEY,\n  UPDATE_METHOD_KEY,\n} from '../../../Utilities/constants';\n\nconst mapTags = ({ category, values }) =>\n  values.map(\n    ({ tagKey, value }) =>\n      `${category ? `${category}/` : ''}${tagKey}${value ? `=${value}` : ''}`\n  );\n\nconst filterMapper = {\n  staleFilter: ({ staleFilter }, searchParams) =>\n    staleFilter.forEach((item) => searchParams.append('status', item)),\n  osFilter: ({ osFilter }, searchParams) =>\n    osFilter?.forEach((item) => searchParams.append('operating_system', item)),\n  registeredWithFilter: ({ registeredWithFilter }, searchParams) =>\n    registeredWithFilter?.forEach((item) =>\n      searchParams.append('source', item)\n    ),\n  value: ({ value, filter }, searchParams) =>\n    value === 'hostname_or_id' &&\n    Boolean(filter) &&\n    searchParams.append('hostname_or_id', filter),\n  tagFilters: ({ tagFilters }, searchParams) =>\n    tagFilters?.length > 0 &&\n    searchParams.append('tags', flatMap(tagFilters, mapTags)),\n  rhcdFilter: ({ rhcdFilter }, searchParams) =>\n    rhcdFilter?.forEach((item) => searchParams.append(RHCD_FILTER_KEY, item)),\n  lastSeenFilter: ({ lastSeenFilter }, searchParams) =>\n    Object.keys(lastSeenFilter || {})?.forEach(\n      (item) =>\n        item === 'mark' &&\n        searchParams.append('last_seen', lastSeenFilter[item])\n    ),\n  updateMethodFilter: ({ updateMethodFilter }, searchParams) =>\n    updateMethodFilter?.forEach((item) =>\n      searchParams.append(UPDATE_METHOD_KEY, item)\n    ),\n  hostGroupFilter: ({ hostGroupFilter }, searchParams) =>\n    hostGroupFilter?.forEach((item) =>\n      searchParams.append(HOST_GROUP_CHIP, item)\n    ),\n};\n\nexport const calculateFilters = (searchParams, filters = []) => {\n  filters.forEach((filter) => {\n    Object.keys(filter).forEach((key) => {\n      filterMapper?.[key]?.(filter, searchParams);\n    });\n  });\n  return searchParams;\n};\n\nexport const calculatePagination = (searchParams, page, perPage) => {\n  const currSearch = new URLSearchParams(location.search);\n  const newPage = page !== undefined ? page : currSearch.get('page');\n  const newPerPage =\n    perPage !== undefined ? perPage : currSearch.get('per_page');\n  !isNaN(parseInt(newPage)) && searchParams.append('page', newPage);\n  !isNaN(parseInt(newPerPage)) && searchParams.append('per_page', newPerPage);\n};\n","import React, { Fragment, useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport * as actions from '../../../store/actions';\nimport { addNotification as addNotificationAction } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport DeleteModal from '../../../Utilities/DeleteModal';\nimport { TextInputModal } from '../../SystemDetails/GeneralInfo';\nimport { generateFilter } from '../../../Utilities/constants';\nimport { InventoryTable as InventoryTableCmp } from '../../InventoryTable';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\nimport AddSelectedHostsToGroupModal from '../../InventoryGroups/Modals/AddSelectedHostsToGroupModal';\nimport useFeatureFlag from '../../../Utilities/useFeatureFlag';\nimport { useBulkSelectConfig } from '../../../Utilities/hooks/useBulkSelectConfig';\nimport RemoveHostsFromGroupModal from '../../InventoryGroups/Modals/RemoveHostsFromGroupModal';\nimport {\n  GENERAL_GROUPS_WRITE_PERMISSION,\n  NO_MODIFY_GROUPS_TOOLTIP_MESSAGE,\n  NO_MODIFY_HOSTS_TOOLTIP_MESSAGE,\n  REQUIRED_PERMISSIONS_TO_MODIFY_GROUP,\n  REQUIRED_PERMISSION_TO_MODIFY_HOST_IN_GROUP,\n} from '../../../constants';\nimport {\n  ActionButton,\n  ActionDropdownItem,\n} from '../../InventoryTable/ActionWithRBAC';\nimport uniq from 'lodash/uniq';\nimport useInsightsNavigate from '@redhat-cloud-services/frontend-components-utilities/useInsightsNavigate/useInsightsNavigate';\nimport useTableActions from './useTableActions';\nimport { calculateFilters, calculatePagination } from './Utilities';\n\nconst BulkDeleteButton = ({ selectedSystems, ...props }) => {\n  const requiredPermissions = selectedSystems.map(({ groups }) =>\n    REQUIRED_PERMISSION_TO_MODIFY_HOST_IN_GROUP(groups?.[0]?.id ?? null)\n  );\n\n  return (\n    <ActionButton\n      requiredPermissions={requiredPermissions}\n      noAccessTooltip={NO_MODIFY_HOSTS_TOOLTIP_MESSAGE}\n      checkAll\n      ouiaId=\"bulk-delete-button\"\n      {...props}\n    >\n      Delete\n    </ActionButton>\n  );\n};\n\nBulkDeleteButton.propTypes = {\n  selectedSystems: PropTypes.array,\n};\n\nconst ConventionalSystemsTab = ({\n  status,\n  source,\n  filterbyName,\n  tagsFilter,\n  operatingSystem,\n  rhcdFilter,\n  updateMethodFilter,\n  lastSeenFilter,\n  page,\n  perPage,\n  initialLoading,\n  hasAccess,\n  hostGroupFilter,\n}) => {\n  const navigate = useInsightsNavigate();\n  const chrome = useChrome();\n  const inventory = useRef(null);\n  const [isModalOpen, handleModalToggle] = useState(false);\n  const [currentSystem, setCurrentSystem] = useState({});\n  const [filters, onSetfilters] = useState(\n    generateFilter(\n      status,\n      source,\n      tagsFilter,\n      filterbyName,\n      operatingSystem,\n      rhcdFilter,\n      updateMethodFilter,\n      hostGroupFilter,\n      lastSeenFilter\n    )\n  );\n  const [ediOpen, onEditOpen] = useState(false);\n  const [addHostGroupModalOpen, setAddHostGroupModalOpen] = useState(false);\n  const [removeHostsFromGroupModalOpen, setRemoveHostsFromGroupModalOpen] =\n    useState(false);\n  const [globalFilter, setGlobalFilter] = useState();\n  const rows = useSelector(({ entities }) => entities?.rows, shallowEqual);\n  const loaded = useSelector(({ entities }) => entities?.loaded);\n  const selected = useSelector(({ entities }) => entities?.selected);\n  const total = useSelector(({ entities }) => entities?.total);\n  const dispatch = useDispatch();\n  const groupsEnabled = useFeatureFlag('hbi.ui.inventory-groups');\n  const bulkSelectConfig = useBulkSelectConfig(\n    selected,\n    globalFilter,\n    total,\n    rows,\n    loaded\n  );\n\n  const onRefresh = (options, callback) => {\n    onSetfilters(options?.filters);\n    const searchParams = new URLSearchParams();\n    calculateFilters(searchParams, options?.filters);\n    // eslint-disable-next-line camelcase\n    calculatePagination(searchParams, options?.page, options?.per_page);\n    const search = searchParams.toString();\n    navigate({\n      search,\n      hash: location.hash,\n    });\n\n    if (callback) {\n      callback(options);\n    }\n  };\n\n  const EdgeParityFilterDeviceEnabled = useFeatureFlag(\n    'edgeParity.inventory-list-filter'\n  );\n\n  useEffect(() => {\n    chrome.updateDocumentTitle('Systems | Red Hat Insights');\n    chrome?.hideGlobalFilter?.(false);\n    chrome.appAction('system-list');\n    chrome.appObjectId();\n    chrome.on('GLOBAL_FILTER_UPDATE', ({ data }) => {\n      const [workloads, SID, tags] = chrome.mapGlobalFilter(data, false, true);\n      setGlobalFilter({\n        tags,\n        filter: {\n          ...globalFilter?.filter,\n          system_profile: {\n            ...globalFilter?.filter?.system_profile,\n            ...(workloads?.SAP?.isSelected && { sap_system: true }),\n            ...(workloads &&\n              workloads['Ansible Automation Platform']?.isSelected && {\n                ansible: 'not_nil',\n              }),\n            ...(workloads?.['Microsoft SQL']?.isSelected && {\n              mssql: 'not_nil',\n            }),\n            ...(EdgeParityFilterDeviceEnabled && { host_type: 'nil' }),\n            ...(SID?.length > 0 && { sap_sids: SID }),\n          },\n        },\n      });\n    });\n    dispatch(actions.clearNotifications());\n\n    if (perPage || page) {\n      dispatch(\n        actions.setPagination(\n          Array.isArray(page) ? page[0] : page,\n          Array.isArray(perPage) ? perPage[0] : perPage\n        )\n      );\n    }\n\n    return () => {\n      dispatch(actions.clearEntitiesAction());\n    };\n  }, []);\n\n  const calculateSelected = () => (selected ? selected.size : 0);\n\n  const isBulkRemoveFromGroupsEnabled = () => {\n    return (\n      calculateSelected() > 0 &&\n      Array.from(selected.values()).some(({ groups }) => groups.length > 0) &&\n      uniq(\n        // can remove from at maximum one group at a time\n        Array.from(selected.values())\n          .filter(({ groups }) => groups.length > 0)\n          .map(({ groups }) => groups[0].name)\n      ).length === 1\n    );\n  };\n\n  const isBulkAddHostsToGroupsEnabled = () => {\n    if (calculateSelected() > 0) {\n      const selectedHosts = Array.from(selected.values());\n\n      return selectedHosts.every(({ groups }) => groups.length === 0);\n    }\n\n    return false;\n  };\n\n  const tableActions = useTableActions(\n    setCurrentSystem,\n    onEditOpen,\n    handleModalToggle,\n    setRemoveHostsFromGroupModalOpen,\n    setAddHostGroupModalOpen\n  );\n\n  return (\n    <Fragment>\n      <InventoryTableCmp\n        hasAccess={hasAccess}\n        isRbacEnabled\n        customFilters={{ filters, globalFilter }}\n        isFullView\n        showTags\n        onRefresh={onRefresh}\n        hasCheckbox\n        autoRefresh\n        ignoreRefresh\n        initialLoading={initialLoading}\n        ref={inventory}\n        tableProps={{\n          actionResolver: tableActions,\n          canSelectAll: false,\n        }}\n        actionsConfig={{\n          actions: [\n            <BulkDeleteButton\n              key=\"bulk-systems-delete\"\n              selectedSystems={Array.from(selected?.values?.() || [])}\n              onClick={() => {\n                setCurrentSystem(Array.from(selected.values()));\n                handleModalToggle(true);\n              }}\n              variant=\"secondary\"\n              isAriaDisabled={calculateSelected() === 0}\n            />,\n            ...(groupsEnabled\n              ? [\n                  {\n                    label: (\n                      <ActionDropdownItem\n                        key=\"bulk-add-to-group\"\n                        requiredPermissions={[GENERAL_GROUPS_WRITE_PERMISSION]}\n                        isAriaDisabled={!isBulkAddHostsToGroupsEnabled()}\n                        noAccessTooltip={NO_MODIFY_GROUPS_TOOLTIP_MESSAGE}\n                        onClick={() => {\n                          setCurrentSystem(Array.from(selected.values()));\n                          setAddHostGroupModalOpen(true);\n                        }}\n                        ignoreResourceDefinitions\n                      >\n                        Add to group\n                      </ActionDropdownItem>\n                    ),\n                    props: {\n                      style: {\n                        padding: 0, // custom component creates extra padding space\n                      },\n                    },\n                  },\n                  {\n                    label: (\n                      <ActionDropdownItem\n                        key=\"bulk-remove-from-group\"\n                        requiredPermissions={\n                          selected !== undefined\n                            ? Array.from(selected.values())\n                                .flatMap(({ groups }) =>\n                                  groups?.[0]?.id !== undefined\n                                    ? REQUIRED_PERMISSIONS_TO_MODIFY_GROUP(\n                                        groups[0].id\n                                      )\n                                    : null\n                                )\n                                .filter(Boolean) // don't check ungroupped hosts\n                            : []\n                        }\n                        isAriaDisabled={!isBulkRemoveFromGroupsEnabled()}\n                        noAccessTooltip={NO_MODIFY_GROUPS_TOOLTIP_MESSAGE}\n                        onClick={() => {\n                          setCurrentSystem(Array.from(selected.values()));\n                          setRemoveHostsFromGroupModalOpen(true);\n                        }}\n                        {...(selected === undefined // when nothing is selected, no access must be checked\n                          ? { override: true }\n                          : {})}\n                        checkAll\n                      >\n                        Remove from group\n                      </ActionDropdownItem>\n                    ),\n                    props: {\n                      style: {\n                        padding: 0,\n                      },\n                    },\n                  },\n                ]\n              : []),\n          ],\n        }}\n        bulkSelect={bulkSelectConfig}\n        onRowClick={(_e, id, app) => navigate(`/${id}${app ? `/${app}` : ''}`)}\n      />\n\n      <DeleteModal\n        className=\"sentry-mask data-hj-suppress\"\n        handleModalToggle={handleModalToggle}\n        isModalOpen={isModalOpen}\n        currentSytems={currentSystem}\n        onConfirm={() => {\n          let displayName;\n          let removeSystems;\n          if (Array.isArray(currentSystem)) {\n            removeSystems = currentSystem.map(({ id }) => id);\n            displayName =\n              currentSystem.length > 1\n                ? `${currentSystem.length} systems`\n                : currentSystem[0].display_name;\n          } else {\n            displayName = currentSystem.display_name;\n            removeSystems = [currentSystem.id];\n          }\n\n          dispatch(\n            addNotificationAction({\n              id: 'remove-initiated',\n              variant: 'warning',\n              title: 'Delete operation initiated',\n              description: `Removal of ${displayName} started.`,\n              dismissable: false,\n            })\n          );\n          dispatch(actions.deleteEntity(removeSystems, displayName));\n          handleModalToggle(false);\n        }}\n      />\n      <TextInputModal\n        title=\"Edit display name\"\n        isOpen={ediOpen}\n        value={currentSystem.display_name}\n        onCancel={() => onEditOpen(false)}\n        onSubmit={(value) => {\n          dispatch(actions.editDisplayName(currentSystem.id, value));\n          onEditOpen(false);\n        }}\n      />\n      {groupsEnabled === true && (\n        <>\n          {addHostGroupModalOpen && (\n            <AddSelectedHostsToGroupModal\n              isModalOpen={addHostGroupModalOpen}\n              setIsModalOpen={setAddHostGroupModalOpen}\n              modalState={currentSystem}\n              reloadData={() => {\n                if (calculateSelected() > 0) {\n                  dispatch(actions.selectEntity(-1, false));\n                }\n\n                setTimeout(\n                  () => inventory.current.onRefreshData(filters, false, true),\n                  500\n                );\n              }}\n            />\n          )}\n          {removeHostsFromGroupModalOpen && (\n            <RemoveHostsFromGroupModal\n              isModalOpen={removeHostsFromGroupModalOpen}\n              setIsModalOpen={setRemoveHostsFromGroupModalOpen}\n              modalState={currentSystem}\n              reloadData={() => {\n                if (calculateSelected() > 0) {\n                  dispatch(actions.selectEntity(-1, false));\n                }\n\n                setTimeout(\n                  () => inventory.current.onRefreshData(filters, false, true),\n                  500\n                );\n              }}\n            />\n          )}\n        </>\n      )}\n    </Fragment>\n  );\n};\n\nConventionalSystemsTab.propTypes = {\n  status: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.string),\n    PropTypes.string,\n  ]),\n  source: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.string),\n    PropTypes.string,\n  ]),\n  operatingSystem: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.string),\n    PropTypes.string,\n  ]),\n  filterbyName: PropTypes.arrayOf(PropTypes.string),\n  tagsFilter: PropTypes.any,\n  page: PropTypes.arrayOf(\n    PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n  ),\n  perPage: PropTypes.arrayOf(\n    PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n  ),\n  initialLoading: PropTypes.bool,\n  rhcdFilter: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.string),\n    PropTypes.string,\n  ]),\n  updateMethodFilter: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.string),\n    PropTypes.string,\n  ]),\n  hasAccess: PropTypes.bool,\n  hostGroupFilter: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.string),\n    PropTypes.string,\n  ]),\n  lastSeenFilter: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.string),\n    PropTypes.string,\n  ]),\n};\n\nConventionalSystemsTab.defaultProps = {\n  initialLoading: true,\n};\n\nexport default ConventionalSystemsTab;\n","import React, { useCallback } from 'react';\nimport {\n  GENERAL_GROUPS_WRITE_PERMISSION,\n  NO_MODIFY_GROUPS_TOOLTIP_MESSAGE,\n  NO_MODIFY_GROUP_TOOLTIP_MESSAGE,\n  NO_MODIFY_HOST_TOOLTIP_MESSAGE,\n  REQUIRED_PERMISSIONS_TO_MODIFY_GROUP,\n  REQUIRED_PERMISSION_TO_MODIFY_HOST_IN_GROUP,\n} from '../../../constants';\nimport { ActionDropdownItem } from '../../InventoryTable/ActionWithRBAC';\nimport useFeatureFlag from '../../../Utilities/useFeatureFlag';\n\n// some actions are hidden under feature flag\nconst useTableActions = (\n  setCurrentSystem,\n  onEditOpen,\n  handleModalToggle,\n  setRemoveHostsFromGroupModalOpen,\n  setAddHostGroupModalOpen\n) => {\n  const groupsEnabled = useFeatureFlag('hbi.ui.inventory-groups');\n\n  const tableActionsCallback = useCallback(\n    (row) => {\n      const hostActions = [\n        {\n          title: (\n            <ActionDropdownItem\n              key={`${row.id}-edit`}\n              onClick={() => {\n                setCurrentSystem(row);\n                onEditOpen(() => true);\n              }}\n              requiredPermissions={[\n                REQUIRED_PERMISSION_TO_MODIFY_HOST_IN_GROUP(\n                  row.groups?.[0]?.id ?? null\n                ),\n              ]}\n              noAccessTooltip={NO_MODIFY_HOST_TOOLTIP_MESSAGE}\n            >\n              Edit\n            </ActionDropdownItem>\n          ),\n          style: {\n            padding: 0, // custom component creates extra padding space\n          },\n        },\n        {\n          title: (\n            <ActionDropdownItem\n              key={`${row.id}-delete`}\n              onClick={() => {\n                setCurrentSystem(row);\n                handleModalToggle(() => true);\n              }}\n              requiredPermissions={[\n                REQUIRED_PERMISSION_TO_MODIFY_HOST_IN_GROUP(\n                  row.groups?.[0]?.id ?? null\n                ),\n              ]}\n              noAccessTooltip={NO_MODIFY_HOST_TOOLTIP_MESSAGE}\n            >\n              Delete\n            </ActionDropdownItem>\n          ),\n          style: {\n            padding: 0,\n          },\n        },\n      ];\n\n      const groupActions = [\n        {\n          title: (\n            <ActionDropdownItem\n              key={`${row.id}-add-to-group`}\n              onClick={() => {\n                setCurrentSystem([row]);\n                setAddHostGroupModalOpen(true);\n              }}\n              requiredPermissions={[GENERAL_GROUPS_WRITE_PERMISSION]}\n              noAccessTooltip={NO_MODIFY_GROUPS_TOOLTIP_MESSAGE}\n              isAriaDisabled={row.groups.length > 0} // additional condition for enabling the button\n              ignoreResourceDefinitions // to check if there is any groups:write permission (disregarding RD)\n            >\n              Add to group\n            </ActionDropdownItem>\n          ),\n          style: {\n            padding: 0,\n          },\n        },\n        {\n          title: (\n            <ActionDropdownItem\n              key={`${row.id}-remove-from-group`}\n              onClick={() => {\n                setCurrentSystem([row]);\n                setRemoveHostsFromGroupModalOpen(true);\n              }}\n              requiredPermissions={\n                row?.groups?.[0]?.id !== undefined\n                  ? REQUIRED_PERMISSIONS_TO_MODIFY_GROUP(row.groups[0].id)\n                  : []\n              }\n              noAccessTooltip={NO_MODIFY_GROUP_TOOLTIP_MESSAGE}\n              isAriaDisabled={row.groups.length === 0}\n              override={row?.groups?.[0]?.id === undefined ? true : undefined} // has access if no group\n            >\n              Remove from group\n            </ActionDropdownItem>\n          ),\n          style: {\n            padding: 0,\n          },\n        },\n      ];\n\n      return [...(groupsEnabled ? groupActions : []), ...hostActions];\n    },\n\n    [groupsEnabled]\n  );\n\n  return tableActionsCallback;\n};\n\nexport default useTableActions;\n","function getBaseName(pathname) {\n  let release = '/';\n  const pathName = pathname.split('/');\n\n  pathName.shift();\n\n  if (pathName[0] === 'preview') {\n    pathName.shift();\n    release = `/preview/`;\n  }\n\n  return `${release}`;\n}\n\nfunction resolveRelPath(path = '') {\n  return `${path.length > 0 ? `/${path}` : ''}`;\n}\n\nexport { getBaseName, resolveRelPath };\n","import { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\n\nconst manageEdgeInventoryUrlName = 'manage-edge-inventory';\n\nconst getNotificationProp = (dispatch) => {\n  return {\n    hasInfo: (hasInfoMessage) => {\n      dispatch({\n        ...addNotification({\n          variant: 'info',\n          ...hasInfoMessage,\n        }),\n      });\n    },\n    hasSuccess: (hasSuccessMessage) => {\n      dispatch({\n        ...addNotification({\n          variant: 'success',\n          ...hasSuccessMessage,\n        }),\n      });\n    },\n    hasWarning: (hasSuccessMessage) => {\n      dispatch({\n        ...addNotification({\n          variant: 'warning',\n          ...hasSuccessMessage,\n        }),\n      });\n    },\n    err: (errMessage, err) => {\n      dispatch({\n        ...addNotification({\n          variant: 'danger',\n          ...errMessage,\n          // Add error message from API, if present\n          description: err?.Title\n            ? `${errMessage.description}: ${err.Title}`\n            : errMessage.description,\n        }),\n      });\n    },\n  };\n};\n\nexport { getNotificationProp, manageEdgeInventoryUrlName };\n","import React from 'react';\nimport AsyncComponent from '@redhat-cloud-services/frontend-components/AsyncComponent';\nimport { resolveRelPath } from '../../../Utilities/path';\nimport {\n  getNotificationProp,\n  manageEdgeInventoryUrlName,\n} from '../../../Utilities/edge';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\n\nconst ImmutableDevicesTab = () => {\n  const dispatch = useDispatch();\n  const notificationProp = getNotificationProp(dispatch);\n  return (\n    <AsyncComponent\n      appName=\"edge\"\n      module=\"./Inventory\"\n      navigateProp={useNavigate}\n      locationProp={useLocation}\n      showHeaderProp={false}\n      pathPrefix={resolveRelPath('')}\n      urlName={manageEdgeInventoryUrlName}\n      notificationProp={notificationProp}\n    />\n  );\n};\n\nImmutableDevicesTab.defaultProps = {\n  initialLoading: true,\n};\nexport default ImmutableDevicesTab;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Tab, TabTitleText, Tabs } from '@patternfly/react-core';\nimport useFeatureFlag from '../../Utilities/useFeatureFlag';\nimport useInsightsNavigate from '@redhat-cloud-services/frontend-components-utilities/useInsightsNavigate/useInsightsNavigate';\nimport { hybridInventoryTabKeys } from '../../Utilities/constants';\n\nconst HybridInventoryTabs = ({\n  ConventionalSystemsTab,\n  ImmutableDevicesTab,\n  isImmutableTabOpen,\n}) => {\n  const navigate = useInsightsNavigate();\n  const activeTab = isImmutableTabOpen\n    ? hybridInventoryTabKeys.immutable.key\n    : hybridInventoryTabKeys.conventional.key;\n\n  const handleTabClick = (_event, tabIndex) => {\n    navigate(hybridInventoryTabKeys[tabIndex].url);\n  };\n\n  const EdgeParityEnabled = useFeatureFlag('edgeParity.inventory-list');\n\n  return EdgeParityEnabled ? (\n    <Tabs\n      className=\"pf-m-light pf-c-table\"\n      activeKey={activeTab}\n      onSelect={handleTabClick}\n      aria-label=\"Hybrid inventory tabs\"\n    >\n      <Tab\n        eventKey={hybridInventoryTabKeys.conventional.key}\n        title={<TabTitleText>Conventional (RPM-DNF)</TabTitleText>}\n      >\n        {ConventionalSystemsTab}\n      </Tab>\n      <Tab\n        eventKey={hybridInventoryTabKeys.immutable.key}\n        title={<TabTitleText>Immutable (OSTree)</TabTitleText>}\n      >\n        {ImmutableDevicesTab}\n      </Tab>\n    </Tabs>\n  ) : (\n    ConventionalSystemsTab\n  );\n};\n\nHybridInventoryTabs.propTypes = {\n  ConventionalSystemsTab: PropTypes.element.isRequired,\n  ImmutableDevicesTab: PropTypes.element.isRequired,\n  isImmutableTabOpen: PropTypes.bool,\n};\nexport default HybridInventoryTabs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './inventory.scss';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport ConventionalSystemsTab from '../components/InventoryTabs/ConventionalSystems/ConventionalSystemsTab';\nimport ImmutableDevicesTab from '../components/InventoryTabs/ImmutableDevices/EdgeDevicesTab';\nimport HybridInventoryTabs from '../components/InventoryTabs/HybridInventoryTabs';\n\nconst Inventory = (props) => {\n  return (\n    <React.Fragment>\n      <PageHeader className=\"pf-m-light\">\n        <PageHeaderTitle title=\"Systems\" />\n      </PageHeader>\n      <Main>\n        <HybridInventoryTabs\n          ConventionalSystemsTab={<ConventionalSystemsTab {...props} />}\n          ImmutableDevicesTab={<ImmutableDevicesTab />}\n          isImmutableTabOpen={props.isImmutableTabOpen}\n        />\n      </Main>\n    </React.Fragment>\n  );\n};\n\nInventory.defaultProps = {\n  initialLoading: true,\n  notificationProp: PropTypes.object,\n};\nInventory.propTypes = {\n  isImmutableTabOpen: PropTypes.bool,\n};\nexport default Inventory;\n","var baseUniq = require('./_baseUniq');\n\n/**\n * Creates a duplicate-free version of an array, using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons, in which only the first occurrence of each element\n * is kept. The order of result values is determined by the order they occur\n * in the array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniq([2, 1, 2]);\n * // => [2, 1]\n */\nfunction uniq(array) {\n  return (array && array.length) ? baseUniq(array) : [];\n}\n\nmodule.exports = uniq;\n"],"names":["i","CreateGroupModal","isModalOpen","setIsModalOpen","reloadData","modalBefore","setterOfModalBefore","dispatch","useDispatch","handleCreateGroup","useCallback","values","statusMessages","onSuccess","title","description","name","onError","apiWithToast","createGroup","schema","useMemo","check","value","validateGroupName","undefined","d","awesomeDebouncePromise","onlyResolvesLast","createGroupSchema","closeModal","submitLabel","onSubmit","propTypes","PropTypes","props","systemProfile","useSelector","systemProfileStore","isEdgeHost","host_type","enableEdgeImageDetails","useFeatureFlag","enableEdgeInventoryListDetails","GeneralInformation","showImageDetails","__assign","Object","assign","t","s","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","_a","children","className","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__rest","useEffect","console","error","concat","CreateGroupButton","usePermissionsWithContext","GENERAL_GROUPS_WRITE_PERMISSION","hasAccess","Text","Button","variant","onClick","AddSelectedHostsToGroupModal","hosts","modalState","chrome","useChrome","useState","isCreateGroupModalOpen","setIsCreateGroupModalOpen","Modal","addHostSchema","additionalMappers","component","group","JSON","parse","display_name","addHostsToGroupById","id","map","modalClassName","isRequired","mapTags","category","tagKey","filterMapper","staleFilter","searchParams","forEach","item","append","osFilter","registeredWithFilter","filter","Boolean","tagFilters","flatMap","rhcdFilter","RHCD_FILTER_KEY","lastSeenFilter","keys","updateMethodFilter","UPDATE_METHOD_KEY","hostGroupFilter","HOST_GROUP_CHIP","BulkDeleteButton","selectedSystems","requiredPermissions","groups","REQUIRED_PERMISSION_TO_MODIFY_HOST_IN_GROUP","noAccessTooltip","NO_MODIFY_HOSTS_TOOLTIP_MESSAGE","checkAll","ouiaId","ConventionalSystemsTab","status","source","filterbyName","tagsFilter","operatingSystem","page","perPage","initialLoading","navigate","useInsightsNavigate","inventory","useRef","handleModalToggle","currentSystem","setCurrentSystem","generateFilter","filters","onSetfilters","ediOpen","onEditOpen","addHostGroupModalOpen","setAddHostGroupModalOpen","removeHostsFromGroupModalOpen","setRemoveHostsFromGroupModalOpen","globalFilter","setGlobalFilter","rows","entities","shallowEqual","loaded","selected","total","groupsEnabled","bulkSelectConfig","useBulkSelectConfig","EdgeParityFilterDeviceEnabled","updateDocumentTitle","hideGlobalFilter","appAction","appObjectId","on","data","mapGlobalFilter","workloads","SID","tags","system_profile","SAP","isSelected","sap_system","ansible","mssql","sap_sids","actions","Array","isArray","calculateSelected","size","tableActions","row","hostActions","key","NO_MODIFY_HOST_TOOLTIP_MESSAGE","style","padding","groupActions","NO_MODIFY_GROUPS_TOOLTIP_MESSAGE","isAriaDisabled","ignoreResourceDefinitions","REQUIRED_PERMISSIONS_TO_MODIFY_GROUP","NO_MODIFY_GROUP_TOOLTIP_MESSAGE","override","useTableActions","Fragment","InventoryTable","isRbacEnabled","customFilters","isFullView","showTags","onRefresh","options","callback","URLSearchParams","calculateFilters","currSearch","location","search","newPage","get","newPerPage","isNaN","parseInt","calculatePagination","per_page","toString","hash","hasCheckbox","autoRefresh","ignoreRefresh","ref","tableProps","actionResolver","canSelectAll","actionsConfig","from","label","every","some","uniq","bulkSelect","onRowClick","_e","app","DeleteModal","currentSytems","onConfirm","displayName","removeSystems","addNotificationAction","dismissable","TextInputModal","isOpen","onCancel","setTimeout","current","onRefreshData","RemoveHostsFromGroupModal","defaultProps","resolveRelPath","path","ImmutableDevicesTab","notificationProp","hasInfo","hasInfoMessage","addNotification","hasSuccess","hasSuccessMessage","hasWarning","err","errMessage","Title","AsyncComponent","appName","module","navigateProp","useNavigate","locationProp","useLocation","showHeaderProp","pathPrefix","urlName","HybridInventoryTabs","isImmutableTabOpen","activeTab","hybridInventoryTabKeys","immutable","conventional","Tabs","activeKey","onSelect","_event","tabIndex","url","Tab","eventKey","TabTitleText","T","Inventory","PageHeader","PageHeaderTitle","baseUniq","exports","array"],"sourceRoot":""}