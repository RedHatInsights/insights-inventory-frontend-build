{"version":3,"file":"js/5855.f96b3c874fb90026a0d4.js","mappings":"2GACA,IAAIA,EAAYC,MAAQA,KAAKD,UAAa,WAStC,OARAA,EAAWE,OAAOC,QAAU,SAASC,GACjC,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,IAE5C,IAAK,IAAII,KADTL,EAAIG,UAAUF,GACOJ,OAAOS,UAAUC,eAAeC,KAAKR,EAAGK,KACzDN,EAAEM,GAAKL,EAAEK,IAEjB,OAAON,CACX,EACOJ,EAASc,MAAMb,KAAMO,UAChC,EACAN,OAAOa,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQE,uBAAoB,EAU5BF,EAAQE,kBATgB,SAAUC,EAAQC,EAAKC,EAAQC,GACnD,IAAIC,GAA+B,iBAAXF,EAAsBA,EAAOG,SAAWH,IAAW,GACvEI,EAAiB,MAAMC,KAAKH,GAC5BI,EAAkBL,EAAe,WAAa,GAC9CM,EAAUR,GAAOD,EAAOU,SACxBL,EAAWC,EAAiB,CAACE,EAAiBR,EAAOW,YAAaF,EAASL,EAAUQ,QAAQ,MAAO,KAAKC,KAAK,KAAOT,EACzH,MAAyB,iBAAXF,EACRrB,EAASA,EAAS,CAAC,EAAGqB,GAAS,CAAEG,SAAUA,IAAcA,CACnE,C,qCCrBA,IAAIS,EAAmBhC,MAAQA,KAAKgC,iBAAoB,SAAUC,GAC9D,OAAQA,GAAOA,EAAIC,WAAcD,EAAM,CAAE,QAAWA,EACxD,EACAhC,OAAOa,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD,IAAImB,EAAqB,EAAQ,OAC7BC,EAAcJ,EAAgB,EAAQ,QACtCK,EAAmB,EAAQ,OAM/BtB,EAAA,QAL0B,SAAUI,EAAKE,GACrC,IAAIiB,GAAW,EAAIH,EAAmBI,eAClCrB,GAAS,EAAIkB,EAAYI,WAC7B,OAAO,SAAUC,EAAIC,GAAW,OAAOJ,GAAS,EAAID,EAAiBpB,mBAAmBC,EAAQC,EAAKsB,EAAIC,GAAWrB,GAAgB,CACxI,C,mWCmBMsB,EAAS,SAAHC,GAeN,IAdJC,EAAMD,EAANC,OACAC,EAAMF,EAANE,OACAC,EAAOH,EAAPG,QACAC,EAAYJ,EAAZI,aACAC,EAAeL,EAAfK,gBACAC,EAAWN,EAAXM,YACAC,EAAiBP,EAAjBO,kBACAC,EAAUR,EAAVQ,WACAC,EAAmBT,EAAnBS,oBACAC,EAAYV,EAAZU,aACAC,EAAWX,EAAXW,YACAC,EAAaZ,EAAbY,cACAC,EAAcb,EAAda,eACAC,EAAQd,EAARc,SAEMC,GAAWC,EAAAA,EAAAA,eACXtB,EAAWuB,MACjBC,GAA4BC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAApCI,EAAMF,EAAA,GAAEG,EAASH,EAAA,GACxBI,GAAsCL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA9CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAC5BG,EAAmB,GAAHC,QAAAC,EAAAA,EAAAA,GACfxB,EAQD,GAPA,CACE,CACEyB,MAAO,2BACPC,UAAW,IACXC,KAAM,wBAAFJ,OAA0B5B,aAAM,EAANA,EAAQiC,QAGxCJ,EAAAA,EAAAA,GACF3B,GAAW,KAGjB,OACEgC,IAAAA,cAACC,EAAAA,EAAK,CAACC,UAAU,mCACfF,IAAAA,cAACG,EAAAA,EAAS,CAACC,UAAQ,GAChBrC,EACCiC,IAAAA,cAACK,EAAAA,EAAI,KACHL,IAAAA,cAACM,EAAAA,EAAQ,KACPN,IAAAA,cAACzB,EAAY,KACXyB,IAAAA,cAACO,EAAAA,EAAK,CACJC,aAAa,KACbC,KAAK,MACLP,UAAU,gCAETpC,GAAUA,EAAO4C,gBAIvB/B,GACCqB,IAAAA,cAACM,EAAAA,EAAQ,KACPN,IAAAA,cAACxB,EAAW,KACVwB,IAAAA,cAACW,EAAAA,cAAa,CACZC,MAAO9C,GAAUA,EAAO+C,MAAQ/C,EAAO+C,KAAKpF,OAC5CqF,SAAUhD,GAAUA,EAAOiC,KAE7BC,IAAAA,cAACe,EAAAA,UAAS,SAMlBf,IAAAA,cAACgB,EAAAA,EAAQ,CAACP,KAAMQ,EAAAA,EAAaC,MAI/BlB,IAAAA,cAACG,EAAAA,EAAS,KACPpC,EACCiC,IAAAA,cAACK,EAAAA,EAAI,KACHL,IAAAA,cAACM,EAAAA,EAAQ,KACPN,IAAAA,cAACvB,EAAa,KACXJ,EACC2B,IAAAA,cAACmB,EAAAA,GAAM,CACLC,QAAS,kBAAM5B,GAAe,EAAK,EACnC6B,QAAQ,aACT,UAIDrB,IAAAA,cAACsB,EAAAA,EAAO,CAACC,QAASC,EAAAA,IAChBxB,IAAAA,cAACmB,EAAAA,GAAM,CAACM,gBAAc,EAACJ,QAAQ,aAAY,cAOlD5B,aAAgB,EAAhBA,EAAkBhE,QAAS,GAC1BuE,IAAAA,cAACM,EAAAA,EAAQ,KACPN,IAAAA,cAACtB,EAAc,KACbsB,IAAAA,cAAC0B,EAAAA,EAAQ,CACPC,SAAU,kBAAMvC,GAAU,EAAM,EAChCwC,OACE5B,IAAAA,cAAC6B,EAAAA,EAAc,CACbC,SAAU,SAAC3C,GAAM,OAAKC,EAAUD,EAAO,GACxC,WAIHA,OAAQA,EACR4C,SAAUC,EAAAA,GAAiBC,MAC3BC,cAAezC,EAAiB0C,KAC9B,SAAAC,EAAuBC,GAAG,IAAvBzC,EAAKwC,EAALxC,MAAU0C,GAAMC,EAAAA,EAAAA,GAAAH,EAAAI,GAAA,OACjBxC,IAAAA,cAACyC,EAAAA,GAAYC,EAAAA,EAAAA,GAAA,CACXL,IAAKA,EACLxC,UAAU,SACVuB,QAAS,SAACuB,GAAK,OACbL,EAAOlB,QAAQuB,EAAOL,EAAQA,EAAOD,KAAOA,EAAI,GAE9CC,GAEH1C,EACY,QAO3BI,IAAAA,cAACM,EAAAA,EAAQ,KACNhC,GACC0B,IAAAA,cAACmB,EAAAA,GAAM,CAACC,QAAS,kBAAMxC,GAASgE,EAAAA,EAAAA,KAAa,GAAM,GAAE,2BAO3D5C,IAAAA,cAACgB,EAAAA,EAAQ,CAACP,KAAMQ,EAAAA,EAAa4B,MAIlCtD,GACCS,IAAAA,cAAC8C,EAAAA,YAAW,CACV5C,UAAU,+BACV6C,kBAAmB,kBAAMvD,GAAgBD,EAAY,EACrDA,YAAaA,EACbyD,cAAelF,EACfmF,UAAW,WACT/E,EAAgB,CACd6B,GAAI,mBACJsB,QAAS,UACTzB,MAAO,6BACPsD,YAAa,cAAFxD,OAAgB5B,EAAO4C,aAAY,aAC9CyC,aAAa,IAEflF,EAAa,CAACH,EAAOiC,IAAKjC,EAAO4C,cAAc,kBAC7C0C,EAAAA,EAAAA,GAAwBtF,EAAOiC,GAAI3B,EAAmBb,EAAS,IAEjEiC,GAAe,EACjB,IAKV,EAEA5B,EAAOyF,UAAY,CACjBvF,OAAQwF,IAAAA,OACRvF,OAAQuF,IAAAA,KACRjF,WAAYiF,IAAAA,KACZnF,YAAamF,IAAAA,KACbhF,oBAAqBgF,IAAAA,KACrB3E,SAAU2E,IAAAA,KACVtF,QAASsF,IAAAA,QACPA,IAAAA,MAAgB,CACdjB,IAAKiB,IAAAA,OACL1D,MAAO0D,IAAAA,KACPlC,QAASkC,IAAAA,QAGbrF,aAAcqF,IAAAA,KACdpF,gBAAiBoF,IAAAA,KACjBlF,kBAAmBkF,IAAAA,KACnB/E,aAAc+E,IAAAA,YACd9E,YAAa8E,IAAAA,YACb7E,cAAe6E,IAAAA,YACf5E,eAAgB4E,IAAAA,aAGlB1F,EAAO2F,aAAe,CACpBvF,QAAS,GACTD,QAAQ,EACRI,aAAa,EACbE,YAAY,EACZC,qBAAqB,EACrBL,aAAc,WAAe,EAC7BC,gBAAiB,WAAe,EAChCE,kBAAmB,WAAe,EAClCG,aAAciF,EAAAA,SACdC,wBAAyBD,EAAAA,SACzB/E,cAAe+E,EAAAA,SACf9E,eAAgB8E,EAAAA,UAGlB,U,gJCtHA,QA1FuB,WACrB,OACExD,IAAAA,cAAC0D,EAAAA,EAAK,CACJrC,QAAQ,OACRsC,UAAQ,EACR/D,MAAM,yCAENI,IAAAA,cAAC4D,EAAAA,EAAI,KACH5D,IAAAA,cAAC6D,EAAAA,EAAQ,KACP7D,IAAAA,cAAC4D,EAAAA,EAAI,CAACE,WAAS,GACb9D,IAAAA,cAAC6D,EAAAA,EAAQ,CAACE,KAAM,GACd/D,IAAAA,cAACgE,EAAAA,EAAW,CACVC,MAAO,CACL,6BAA8B,IAC9B,2BAA4B,WAG9BjE,IAAAA,cAACkE,EAAAA,EAAI,CAACrE,UAAWsE,EAAAA,EAAazI,GAAG,gCAGjCsE,IAAAA,cAACoE,EAAAA,EAAQ,CACPvE,UAAU,KACVoE,MAAO,CACL,kCAAmC,IACnC,iCAAkC,SAGpCjE,IAAAA,cAACqE,EAAAA,EAAY,KAAC,+BACdrE,IAAAA,cAACqE,EAAAA,EAAY,KAAC,uCAGdrE,IAAAA,cAACqE,EAAAA,EAAY,KAAC,yCAMpBrE,IAAAA,cAAC6D,EAAAA,EAAQ,CAACE,KAAM,GACd/D,IAAAA,cAACsE,EAAAA,EAAI,CAACC,WAAS,GACbvE,IAAAA,cAACwE,EAAAA,EAAS,KAAC,gBACXxE,IAAAA,cAACyE,EAAAA,EAAQ,KAAC,6DAGVzE,IAAAA,cAAC0E,EAAAA,EAAU,KACT1E,IAAAA,cAAC2E,EAAAA,GAAa,CAACC,QAAM,EAACC,YAAU,EAACxD,QAAS,aAEtC,kEAMVrB,IAAAA,cAAC6D,EAAAA,EAAQ,CAACE,KAAM,GACd/D,IAAAA,cAACsE,EAAAA,EAAI,CAACC,WAAS,EAACN,MAAO,CAAEa,OAAQ,SAC/B9E,IAAAA,cAACwE,EAAAA,EAAS,KAAC,6BACXxE,IAAAA,cAACyE,EAAAA,EAAQ,KAAC,6GAIVzE,IAAAA,cAAC0E,EAAAA,EAAU,KACT1E,IAAAA,cAACmB,EAAAA,GAAM,CACLtB,UAAU,IACVkF,OAAO,SACP1D,QAAQ,OACRvB,KAAK,8CACL6D,UAAQ,GACT,oDAQX3D,IAAAA,cAAC6D,EAAAA,EAAQ,KACP7D,IAAAA,cAACmB,EAAAA,GAAM,CACLtB,UAAU,IACVkF,OAAO,SACP1D,QAAQ,OACRvB,KAAK,+CACL6D,UAAQ,GACT,wCAOX,E,yLC9FMqB,GAAa,SAAHnH,GAAA,IACdC,EAAMD,EAANC,OACAC,EAAMF,EAANE,OACAkH,EAAWpH,EAAXoH,YACAC,EAAerH,EAAfqH,gBACAC,EAAQtH,EAARsH,SACGC,GAAK7C,EAAAA,EAAAA,GAAA1E,EAAA2E,GAAA,OAERxC,IAAAA,cAACwD,EAAAA,SAAQ,KACPxD,IAAAA,cAACpC,GAAM8E,EAAAA,EAAAA,GAAA,CAAC5E,OAAQA,EAAQC,OAAQA,GAAYqH,IAC5CpF,IAAAA,cAACqF,EAAAA,EAAS,CACRtH,OAAQA,EACRD,OAAQA,EACRmH,YAAaA,EACbC,gBAAiBA,IAElBnH,IACCuH,EAAAA,EAAAA,IAAqBxH,aAAM,EAANA,EAAQyH,uBAAwBC,EAAAA,KACnDxF,IAAAA,cAACyF,EAAc,MAElBN,EACQ,EAGPO,GAAe,SAAHtD,GAKZ,IAJJuD,EAAgBvD,EAAhBuD,iBACAC,EAAiBxD,EAAjBwD,kBACAC,EAAiBzD,EAAjByD,kBACGT,GAAK7C,EAAAA,EAAAA,GAAAH,EAAA0D,GAER,OAAOH,EACL3F,IAAAA,cAAC+F,EAAAA,EAAU,CACT7F,UAAW8F,IACT,kCACAH,IAGDD,EACD5F,IAAAA,cAACgF,GAAeI,IAGlBpF,IAAAA,cAACgF,GAAeI,EAEpB,EAEAJ,GAAW3B,UAAY,CACrBlF,YAAamF,IAAAA,KACb3E,SAAU2E,IAAAA,KACVjF,WAAYiF,IAAAA,KACZhF,oBAAqBgF,IAAAA,KACrBtF,QAASsF,IAAAA,QACPA,IAAAA,MAAgB,CACd1D,MAAO0D,IAAAA,KACPlC,QAASkC,IAAAA,KACTjB,IAAKiB,IAAAA,UAGTlF,kBAAmBkF,IAAAA,KACnB6B,SAAU7B,IAAAA,KACV2B,YAAa3B,IAAAA,YACb4B,gBAAiB5B,IAAAA,YACjB/E,aAAc+E,IAAAA,YACd9E,YAAa8E,IAAAA,YACb7E,cAAe6E,IAAAA,YACf5E,eAAgB4E,IAAAA,YAChB2C,YAAa3C,IAAAA,OACbrF,aAAcqF,IAAAA,KACdxF,OAAQwF,IAAAA,OACRvF,OAAQuF,IAAAA,KACRpF,gBAAiBoF,IAAAA,MAEnBoC,GAAarC,UAAY,CACvBuC,kBAAmBtC,IAAAA,YACnBqC,iBAAkBrC,IAAAA,KAClBuC,kBAAmBvC,IAAAA,QAGrB,W,iSCvEM+B,EAAY,SAAHxH,GAAA,IACbC,EAAMD,EAANC,OACAC,EAAMF,EAANE,OAEAmH,GADWrH,EAAXoH,YACepH,EAAfqH,iBACGE,GAAK7C,EAAAA,EAAAA,GAAA1E,EAAA2E,GAAA,OAERxC,IAAAA,cAAC4D,EAAAA,GAAIlB,EAAAA,EAAAA,GAAA,CAACxC,UAAU,oBAAuBkF,GACrCpF,IAAAA,cAAC6D,EAAAA,EAAQ,CAAC3C,GAAI,GACZlB,IAAAA,cAACK,EAAAA,EAAI,KACHL,IAAAA,cAACM,EAAAA,EAAQ,KAAC,SACVN,IAAAA,cAACM,EAAAA,EAAQ,CAAC4F,KAAM,CAAEzI,QAAS,SACxBM,GACCoI,EAAAA,EAAAA,GAAQ,KAAMrI,IAAW,IAEzBkC,IAAAA,cAACgB,EAAAA,EAAQ,CAACP,KAAMQ,EAAAA,EAAaC,GAAIkF,SAAS,SAIhDpG,IAAAA,cAACK,EAAAA,EAAI,KACHL,IAAAA,cAACM,EAAAA,EAAQ,KAAC,cACVN,IAAAA,cAACM,EAAAA,EAAQ,CAAC4F,KAAM,CAAEzI,QAAS,SACxBM,EACCiC,IAAAA,cAACkF,EAAe,KACbmB,EAAAA,EACCrG,IAAAA,cAACqG,EAAAA,EAAkB,CACjBC,QAAQH,EAAAA,EAAAA,GAAQ,mBAAoBrI,GACpCyI,cAAcJ,EAAAA,EAAAA,GAAQ,0BAA2BrI,GACjD0I,OAAOL,EAAAA,EAAAA,GAAQ,kBAAmBrI,GAClC2I,SAAU,IAAIC,MAEd1G,IAAAA,cAAC2G,EAAAA,EAAU,CAACC,MAAMT,EAAAA,EAAAA,GAAQ,UAAWrI,GAAS+I,KAAK,WAGrD7G,IAAAA,cAAC2G,EAAAA,EAAU,CAACC,MAAMT,EAAAA,EAAAA,GAAQ,UAAWrI,GAAS+I,KAAK,WAIvD7G,IAAAA,cAACgB,EAAAA,EAAQ,CAACP,KAAMQ,EAAAA,EAAaC,GAAIkF,SAAS,OAE3CrI,IACCuH,EAAAA,EAAAA,KACEa,EAAAA,EAAAA,GAAQ,yBAA0BrI,GAClC0H,EAAAA,KACGxF,IAAAA,cAAC8G,EAAAA,EAAoB,SAI7B,EAGTzB,EAAUhC,UAAY,CACpBtF,OAAQuF,IAAAA,KACRxF,OAAQwF,IAAAA,OACR2B,YAAa3B,IAAAA,YACb4B,gBAAiB5B,IAAAA,aAGnB+B,EAAU9B,aAAe,CACvB0B,YAAazB,EAAAA,SACb0B,gBAAiB1B,EAAAA,UAGnB,S,gFC/EaJ,EAA0B,SAACrD,EAAI3B,EAAmBb,GACzDa,EACFA,IAME2I,SAASC,UACTD,SAASC,WAAQ,GAAAtH,OACZqH,SAASE,SAASC,QAAMxH,OAAGqH,SAASE,SAASzK,UAElDe,GAAU,GAEV0J,SAASnH,KAAOmH,SAASzK,SAASO,QAChC,IAAIoK,OAAO,GAADzH,OAAI,CAACK,GAAG,MAAM,KACxB,GAIR,EAEaoG,EAAU,SAACiB,EAAMC,GAAQ,OAAKC,IAAID,EAAUD,OAAMG,EAAU,C","sources":["webpack:///./node_modules/@redhat-cloud-services/frontend-components-utilities/helpers/urlPathHelpers.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components-utilities/useInsightsNavigate/useInsightsNavigate.js","webpack:///./src/components/InventoryDetail/TopBar.js","webpack:///./src/components/InventoryDetail/InsightsPrompt.js","webpack:///./src/components/InventoryDetail/DetailHeader.js","webpack:///./src/components/InventoryDetail/FactsInfo.js","webpack:///./src/components/InventoryDetail/helpers.js"],"sourcesContent":["\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.buildInsightsPath = void 0;\nvar buildInsightsPath = function (chrome, app, toProp, forcePreview) {\n    var inAppPath = (typeof toProp === 'object' ? toProp.pathname : toProp) || '';\n    var isAbsolutePath = /^\\//.test(inAppPath);\n    var environmentPath = forcePreview ? '/preview' : '';\n    var appPath = app || chrome.getApp();\n    var pathname = isAbsolutePath ? [environmentPath, chrome.getBundle(), appPath, inAppPath.replace(/^\\//, '')].join('/') : inAppPath;\n    return typeof toProp === 'object'\n        ? __assign(__assign({}, toProp), { pathname: pathname }) : pathname;\n};\nexports.buildInsightsPath = buildInsightsPath;\n//# sourceMappingURL=urlPathHelpers.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar react_router_dom_1 = require(\"react-router-dom\");\nvar useChrome_1 = __importDefault(require(\"@redhat-cloud-services/frontend-components/useChrome\"));\nvar urlPathHelpers_1 = require(\"../helpers/urlPathHelpers\");\nvar useInsightsNavigate = function (app, forcePreview) {\n    var navigate = (0, react_router_dom_1.useNavigate)();\n    var chrome = (0, useChrome_1.default)();\n    return function (to, preview) { return navigate((0, urlPathHelpers_1.buildInsightsPath)(chrome, app, to, preview || forcePreview)); };\n};\nexports.default = useInsightsNavigate;\n//# sourceMappingURL=useInsightsNavigate.js.map","import React, { Fragment, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { DeleteModal, TagWithDialog, TagsModal } from '../../Utilities/index';\nimport {\n  Skeleton,\n  SkeletonSize,\n} from '@redhat-cloud-services/frontend-components/Skeleton';\nimport {\n  Button,\n  Dropdown,\n  DropdownItem,\n  DropdownPosition,\n  DropdownToggle,\n  Flex,\n  FlexItem,\n  Split,\n  SplitItem,\n  Title,\n  Tooltip,\n} from '@patternfly/react-core';\nimport { redirectToInventoryList } from './helpers';\nimport { useDispatch } from 'react-redux';\nimport { toggleDrawer } from '../../store/actions';\nimport { NO_MODIFY_HOST_TOOLTIP_MESSAGE } from '../../constants';\nimport useInsightsNavigate from '@redhat-cloud-services/frontend-components-utilities/useInsightsNavigate/useInsightsNavigate';\n\n/**\n * Top inventory bar with title, buttons (namely remove from inventory and inventory detail button) and actions.\n * Remove from inventory button requires remove modal, which is included at bottom of this component.\n * @param {*} props namely entity and if entity is loaded.\n */\nconst TopBar = ({\n  entity,\n  loaded,\n  actions,\n  deleteEntity,\n  addNotification,\n  hideInvLink,\n  onBackToListClick,\n  showDelete,\n  showInventoryDrawer,\n  TitleWrapper,\n  TagsWrapper,\n  DeleteWrapper,\n  ActionsWrapper,\n  showTags,\n}) => {\n  const dispatch = useDispatch();\n  const navigate = useInsightsNavigate();\n  const [isOpen, setIsOpen] = useState(false);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const inventoryActions = [\n    ...(!hideInvLink\n      ? [\n          {\n            title: 'View system in Inventory',\n            component: 'a',\n            href: `./insights/inventory/${entity?.id}`,\n          },\n        ]\n      : []),\n    ...(actions || []),\n  ];\n\n  return (\n    <Split className=\"ins-c-inventory__detail--header\">\n      <SplitItem isFilled>\n        {loaded ? (\n          <Flex>\n            <FlexItem>\n              <TitleWrapper>\n                <Title\n                  headingLevel=\"h1\"\n                  size=\"2xl\"\n                  className=\"sentry-mask data-hj-suppress\"\n                >\n                  {entity && entity.display_name}\n                </Title>\n              </TitleWrapper>\n            </FlexItem>\n            {showTags && (\n              <FlexItem>\n                <TagsWrapper>\n                  <TagWithDialog\n                    count={entity && entity.tags && entity.tags.length}\n                    systemId={entity && entity.id}\n                  />\n                  <TagsModal />\n                </TagsWrapper>\n              </FlexItem>\n            )}\n          </Flex>\n        ) : (\n          <Skeleton size={SkeletonSize.md} />\n        )}\n      </SplitItem>\n      {\n        <SplitItem>\n          {loaded ? (\n            <Flex>\n              <FlexItem>\n                <DeleteWrapper>\n                  {showDelete ? (\n                    <Button\n                      onClick={() => setIsModalOpen(true)}\n                      variant=\"secondary\"\n                    >\n                      Delete\n                    </Button>\n                  ) : (\n                    <Tooltip content={NO_MODIFY_HOST_TOOLTIP_MESSAGE}>\n                      <Button isAriaDisabled variant=\"secondary\">\n                        Delete\n                      </Button>\n                    </Tooltip>\n                  )}\n                </DeleteWrapper>\n              </FlexItem>\n              {inventoryActions?.length > 0 && (\n                <FlexItem>\n                  <ActionsWrapper>\n                    <Dropdown\n                      onSelect={() => setIsOpen(false)}\n                      toggle={\n                        <DropdownToggle\n                          onToggle={(isOpen) => setIsOpen(isOpen)}\n                        >\n                          Actions\n                        </DropdownToggle>\n                      }\n                      isOpen={isOpen}\n                      position={DropdownPosition.right}\n                      dropdownItems={inventoryActions.map(\n                        ({ title, ...action }, key) => (\n                          <DropdownItem\n                            key={key}\n                            component=\"button\"\n                            onClick={(event) =>\n                              action.onClick(event, action, action.key || key)\n                            }\n                            {...action}\n                          >\n                            {title}\n                          </DropdownItem>\n                        )\n                      )}\n                    />\n                  </ActionsWrapper>\n                </FlexItem>\n              )}\n              <FlexItem>\n                {showInventoryDrawer && (\n                  <Button onClick={() => dispatch(toggleDrawer(true))}>\n                    Show more information\n                  </Button>\n                )}\n              </FlexItem>\n            </Flex>\n          ) : (\n            <Skeleton size={SkeletonSize.lg} />\n          )}\n        </SplitItem>\n      }\n      {isModalOpen && (\n        <DeleteModal\n          className=\"sentry-mask data-hj-suppress\"\n          handleModalToggle={() => setIsModalOpen(!isModalOpen)}\n          isModalOpen={isModalOpen}\n          currentSytems={entity}\n          onConfirm={() => {\n            addNotification({\n              id: 'remove-initiated',\n              variant: 'warning',\n              title: 'Delete operation initiated',\n              description: `Removal of ${entity.display_name} started.`,\n              dismissable: false,\n            });\n            deleteEntity([entity.id], entity.display_name, () =>\n              redirectToInventoryList(entity.id, onBackToListClick, navigate)\n            );\n            setIsModalOpen(false);\n          }}\n        />\n      )}\n    </Split>\n  );\n};\n\nTopBar.propTypes = {\n  entity: PropTypes.object,\n  loaded: PropTypes.bool,\n  showDelete: PropTypes.bool,\n  hideInvLink: PropTypes.bool,\n  showInventoryDrawer: PropTypes.bool,\n  showTags: PropTypes.bool,\n  actions: PropTypes.arrayOf(\n    PropTypes.shape({\n      key: PropTypes.string,\n      title: PropTypes.node,\n      onClick: PropTypes.func,\n    })\n  ),\n  deleteEntity: PropTypes.func,\n  addNotification: PropTypes.func,\n  onBackToListClick: PropTypes.func,\n  TitleWrapper: PropTypes.elementType,\n  TagsWrapper: PropTypes.elementType,\n  DeleteWrapper: PropTypes.elementType,\n  ActionsWrapper: PropTypes.elementType,\n};\n\nTopBar.defaultProps = {\n  actions: [],\n  loaded: false,\n  hideInvLink: false,\n  showDelete: false,\n  showInventoryDrawer: false,\n  deleteEntity: () => undefined,\n  addNotification: () => undefined,\n  onBackToListClick: () => undefined,\n  TitleWrapper: Fragment,\n  TitleWTagsWrapperrapper: Fragment,\n  DeleteWrapper: Fragment,\n  ActionsWrapper: Fragment,\n};\n\nexport default TopBar;\n","import React from 'react';\nimport {\n  Alert,\n  Button,\n  Card,\n  CardBody,\n  CardFooter,\n  CardTitle,\n  ClipboardCopy,\n  Grid,\n  GridItem,\n  Text,\n  TextContent,\n  TextList,\n  TextListItem,\n  TextVariants,\n} from '@patternfly/react-core';\n\nconst InsightsPrompt = () => {\n  return (\n    <Alert\n      variant=\"info\"\n      isInline\n      title=\"Your insights-client is not reporting\"\n    >\n      <Grid>\n        <GridItem>\n          <Grid hasGutter>\n            <GridItem span={4}>\n              <TextContent\n                style={{\n                  '--pf-c-content--LineHeight': '1',\n                  '--pf-c-content--FontSize': '0.9rem',\n                }}\n              >\n                <Text component={TextVariants.p}>\n                  With Insights you can easly:\n                </Text>\n                <TextList\n                  component=\"ul\"\n                  style={{\n                    '--pf-c-content--ul--PaddingLeft': '0',\n                    '--pf-c-content--ul--MarginLeft': '1rem',\n                  }}\n                >\n                  <TextListItem>Optimize your IT Operations</TextListItem>\n                  <TextListItem>\n                    Manage your security and compliance\n                  </TextListItem>\n                  <TextListItem>\n                    Resolve operational issues quickly\n                  </TextListItem>\n                </TextList>\n              </TextContent>\n            </GridItem>\n            <GridItem span={4}>\n              <Card isCompact>\n                <CardTitle>Client setup</CardTitle>\n                <CardBody>\n                  Make sure the client is properly installed and registered\n                </CardBody>\n                <CardFooter>\n                  <ClipboardCopy isCode isReadOnly variant={'expansion'}>\n                    {\n                      'yum install -y insights-client \\ninsights-client --register'\n                    }\n                  </ClipboardCopy>\n                </CardFooter>\n              </Card>\n            </GridItem>\n            <GridItem span={4}>\n              <Card isCompact style={{ height: '100%' }}>\n                <CardTitle>Configure troubleshooting</CardTitle>\n                <CardBody>\n                  Proceed with verification on the client to ensure\n                  insights-client is properly running and collecting data\n                </CardBody>\n                <CardFooter>\n                  <Button\n                    component=\"a\"\n                    target=\"_blank\"\n                    variant=\"link\"\n                    href=\"https://access.redhat.com/solutions/6758841\"\n                    isInline\n                  >\n                    Host not reporting data to Red Hat Insights\n                  </Button>\n                </CardFooter>\n              </Card>\n            </GridItem>\n          </Grid>\n        </GridItem>\n        <GridItem>\n          <Button\n            component=\"a\"\n            target=\"_blank\"\n            variant=\"link\"\n            href=\"https://console.redhat.com/security/insights\"\n            isInline\n          >\n            How does Red Hat keep data secure?\n          </Button>\n        </GridItem>\n      </Grid>\n    </Alert>\n  );\n};\n\nexport default InsightsPrompt;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport './InventoryDetail.scss';\nimport TopBar from './TopBar';\nimport FactsInfo from './FactsInfo';\nimport './InventoryDetail.scss';\nimport InsightsPrompt from './InsightsPrompt';\nimport { verifyCulledReporter } from '../../Utilities/sharedFunctions';\nimport PageHeader from '@redhat-cloud-services/frontend-components/PageHeader';\nimport classnames from 'classnames';\nimport { REPORTER_PUPTOO } from '../../Utilities/constants';\n\nconst HeaderInfo = ({\n  entity,\n  loaded,\n  UUIDWrapper,\n  LastSeenWrapper,\n  children,\n  ...props\n}) => (\n  <Fragment>\n    <TopBar entity={entity} loaded={loaded} {...props} />\n    <FactsInfo\n      loaded={loaded}\n      entity={entity}\n      UUIDWrapper={UUIDWrapper}\n      LastSeenWrapper={LastSeenWrapper}\n    />\n    {loaded &&\n      verifyCulledReporter(entity?.per_reporter_staleness, REPORTER_PUPTOO) && (\n        <InsightsPrompt />\n      )}\n    {children}\n  </Fragment>\n);\n\nconst DetailHeader = ({\n  shouldWrapAsPage,\n  BreadcrumbWrapper,\n  additionalClasses,\n  ...props\n}) => {\n  return shouldWrapAsPage ? (\n    <PageHeader\n      className={classnames(\n        'pf-m-light ins-inventory-detail',\n        additionalClasses\n      )}\n    >\n      {BreadcrumbWrapper}\n      <HeaderInfo {...props} />\n    </PageHeader>\n  ) : (\n    <HeaderInfo {...props} />\n  );\n};\n\nHeaderInfo.propTypes = {\n  hideInvLink: PropTypes.bool,\n  showTags: PropTypes.bool,\n  showDelete: PropTypes.bool,\n  showInventoryDrawer: PropTypes.bool,\n  actions: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.node,\n      onClick: PropTypes.func,\n      key: PropTypes.string,\n    })\n  ),\n  onBackToListClick: PropTypes.func,\n  children: PropTypes.node,\n  UUIDWrapper: PropTypes.elementType,\n  LastSeenWrapper: PropTypes.elementType,\n  TitleWrapper: PropTypes.elementType,\n  TagsWrapper: PropTypes.elementType,\n  DeleteWrapper: PropTypes.elementType,\n  ActionsWrapper: PropTypes.elementType,\n  inventoryId: PropTypes.string,\n  deleteEntity: PropTypes.func,\n  entity: PropTypes.object,\n  loaded: PropTypes.bool,\n  addNotification: PropTypes.func,\n};\nDetailHeader.propTypes = {\n  BreadcrumbWrapper: PropTypes.elementType,\n  shouldWrapAsPage: PropTypes.bool,\n  additionalClasses: PropTypes.object,\n};\n\nexport default DetailHeader;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Flex, FlexItem, Grid, GridItem } from '@patternfly/react-core';\nimport {\n  Skeleton,\n  SkeletonSize,\n} from '@redhat-cloud-services/frontend-components/Skeleton';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport { CullingInformation } from '@redhat-cloud-services/frontend-components/CullingInfo';\nimport { getFact } from './helpers';\nimport InsightsDisconnected from '../../Utilities/InsightsDisconnected';\nimport { verifyCulledReporter } from '../../Utilities/sharedFunctions';\nimport { REPORTER_PUPTOO } from '../../Utilities/constants';\n/**\n * Basic information about system.\n * UUID and last seen.\n * @param {*} props entity and if entity is loaded.\n */\nconst FactsInfo = ({\n  entity,\n  loaded,\n  UUIDWrapper,\n  LastSeenWrapper,\n  ...props\n}) => (\n  <Grid className=\"ins-entity-facts\" {...props}>\n    <GridItem md={6}>\n      <Flex>\n        <FlexItem>UUID:</FlexItem>\n        <FlexItem grow={{ default: 'grow' }}>\n          {loaded ? (\n            getFact(`id`, entity) || ' '\n          ) : (\n            <Skeleton size={SkeletonSize.md} fontSize=\"sm\" />\n          )}\n        </FlexItem>\n      </Flex>\n      <Flex>\n        <FlexItem>Last seen:</FlexItem>\n        <FlexItem grow={{ default: 'grow' }}>\n          {loaded ? (\n            <LastSeenWrapper>\n              {CullingInformation ? (\n                <CullingInformation\n                  culled={getFact('culled_timestamp', entity)}\n                  staleWarning={getFact('stale_warning_timestamp', entity)}\n                  stale={getFact('stale_timestamp', entity)}\n                  currDate={new Date()}\n                >\n                  <DateFormat date={getFact('updated', entity)} type=\"exact\" />\n                </CullingInformation>\n              ) : (\n                <DateFormat date={getFact('updated', entity)} type=\"exact\" />\n              )}\n            </LastSeenWrapper>\n          ) : (\n            <Skeleton size={SkeletonSize.md} fontSize=\"sm\" />\n          )}\n          {loaded &&\n            verifyCulledReporter(\n              getFact('per_reporter_staleness', entity),\n              REPORTER_PUPTOO\n            ) && <InsightsDisconnected />}\n        </FlexItem>\n      </Flex>\n    </GridItem>\n  </Grid>\n);\n\nFactsInfo.propTypes = {\n  loaded: PropTypes.bool,\n  entity: PropTypes.object,\n  UUIDWrapper: PropTypes.elementType,\n  LastSeenWrapper: PropTypes.elementType,\n};\n\nFactsInfo.defaultProps = {\n  UUIDWrapper: Fragment,\n  LastSeenWrapper: Fragment,\n};\n\nexport default FactsInfo;\n","import get from 'lodash/get';\n\nexport const redirectToInventoryList = (id, onBackToListClick, navigate) => {\n  if (onBackToListClick) {\n    onBackToListClick();\n  } else {\n    /**\n     * Prevent the case that refferer has the same URL as current browser URL is\n     */\n    if (\n      document.referrer &&\n      document.referrer !==\n        `${document.location.origin}${document.location.pathname}`\n    ) {\n      navigate(-1);\n    } else {\n      location.href = location.pathname.replace(\n        new RegExp(`${[id]}.*`, 'g'),\n        ''\n      );\n    }\n  }\n};\n\nexport const getFact = (path, factDict) => get(factDict, path, undefined);\n"],"names":["__assign","this","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","defineProperty","exports","value","buildInsightsPath","chrome","app","toProp","forcePreview","inAppPath","pathname","isAbsolutePath","test","environmentPath","appPath","getApp","getBundle","replace","join","__importDefault","mod","__esModule","react_router_dom_1","useChrome_1","urlPathHelpers_1","navigate","useNavigate","default","to","preview","TopBar","_ref","entity","loaded","actions","deleteEntity","addNotification","hideInvLink","onBackToListClick","showDelete","showInventoryDrawer","TitleWrapper","TagsWrapper","DeleteWrapper","ActionsWrapper","showTags","dispatch","useDispatch","useInsightsNavigate","_useState","useState","_useState2","_slicedToArray","isOpen","setIsOpen","_useState3","_useState4","isModalOpen","setIsModalOpen","inventoryActions","concat","_toConsumableArray","title","component","href","id","React","Split","className","SplitItem","isFilled","Flex","FlexItem","Title","headingLevel","size","display_name","TagWithDialog","count","tags","systemId","TagsModal","Skeleton","SkeletonSize","md","Button","onClick","variant","Tooltip","content","NO_MODIFY_HOST_TOOLTIP_MESSAGE","isAriaDisabled","Dropdown","onSelect","toggle","DropdownToggle","onToggle","position","DropdownPosition","right","dropdownItems","map","_ref2","key","action","_objectWithoutProperties","_excluded","DropdownItem","_extends","event","toggleDrawer","lg","DeleteModal","handleModalToggle","currentSytems","onConfirm","description","dismissable","redirectToInventoryList","propTypes","PropTypes","defaultProps","Fragment","TitleWTagsWrapperrapper","Alert","isInline","Grid","GridItem","hasGutter","span","TextContent","style","Text","TextVariants","TextList","TextListItem","Card","isCompact","CardTitle","CardBody","CardFooter","ClipboardCopy","isCode","isReadOnly","height","target","HeaderInfo","UUIDWrapper","LastSeenWrapper","children","props","FactsInfo","verifyCulledReporter","per_reporter_staleness","REPORTER_PUPTOO","InsightsPrompt","DetailHeader","shouldWrapAsPage","BreadcrumbWrapper","additionalClasses","_excluded2","PageHeader","classnames","inventoryId","grow","getFact","fontSize","CullingInformation","culled","staleWarning","stale","currDate","Date","DateFormat","date","type","InsightsDisconnected","document","referrer","location","origin","RegExp","path","factDict","get","undefined"],"sourceRoot":""}