{"version":3,"file":"js/7636.9ce43c111a72020c5474.js","mappings":"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","sources":["webpack:///./src/components/InventoryGroups/Modals/Modal.js","webpack:///./src/components/InventoryGroups/Modals/ModalSchemas/schemes.js","webpack:///./src/components/InventoryGroups/helpers/validate.js","webpack:///./src/components/InventoryGroups/utils/apiWithToast.js","webpack:///./src/components/InventoryTable/ActionWithRBAC.js"],"sourcesContent":["import React from 'react';\nimport { Modal } from '@patternfly/react-core';\nimport FormRenderer from '@data-driven-forms/react-form-renderer/form-renderer';\nimport FormTemplate from '@data-driven-forms/pf4-component-mapper/form-template';\nimport componentMapper from '@data-driven-forms/pf4-component-mapper/component-mapper';\nimport PropTypes from 'prop-types';\n\nconst RepoModal = ({\n  isModalOpen,\n  title,\n  titleIconVariant,\n  closeModal,\n  submitLabel,\n  schema,\n  initialValues,\n  variant,\n  reloadData,\n  reloadTimeout,\n  size,\n  onSubmit,\n  customFormTemplate,\n  additionalMappers,\n}) => {\n  return (\n    <Modal\n      ouiaId=\"group-modal\"\n      variant={size ?? 'small'}\n      title={title}\n      titleIconVariant={titleIconVariant ?? null}\n      isOpen={isModalOpen}\n      onClose={closeModal}\n    >\n      <FormRenderer\n        schema={schema}\n        FormTemplate={\n          customFormTemplate\n            ? customFormTemplate\n            : (props) => (\n                <FormTemplate\n                  {...props}\n                  submitLabel={submitLabel}\n                  disableSubmit={['invalid']}\n                  buttonsProps={{\n                    submit: { variant },\n                  }}\n                />\n              )\n        }\n        initialValues={initialValues}\n        componentMapper={\n          additionalMappers\n            ? { ...additionalMappers, ...componentMapper }\n            : componentMapper\n        }\n        //reload comes from the table and fetches fresh data\n        onSubmit={async (values) => {\n          await onSubmit(values);\n\n          if (reloadData !== undefined) {\n            if (reloadTimeout) {\n              setTimeout(async () => await reloadData(), reloadTimeout);\n            } else {\n              await reloadData();\n            }\n          }\n\n          closeModal();\n        }}\n        onCancel={() => closeModal()}\n        subscription={{ values: true }}\n      />\n    </Modal>\n  );\n};\n\nRepoModal.propTypes = {\n  isModalOpen: PropTypes.bool,\n  title: PropTypes.string,\n  closeModal: PropTypes.func,\n  reloadData: PropTypes.func,\n  submitLabel: PropTypes.string,\n  schema: PropTypes.object,\n  initialValues: PropTypes.object,\n  variant: PropTypes.string,\n  onSubmit: PropTypes.func,\n  size: PropTypes.string,\n  additionalMappers: PropTypes.object,\n  titleIconVariant: PropTypes.any,\n  customFormTemplate: PropTypes.node,\n  reloadTimeout: PropTypes.number,\n};\n\nRepoModal.defaultProps = {\n  reloadTimeout: 500,\n};\n\nexport default RepoModal;\n","import React from 'react';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport { nameValidator } from '../../helpers/validate';\nimport { Text } from '@patternfly/react-core';\nimport { getGroups } from '../../utils/api';\nimport awesomeDebouncePromise from 'awesome-debounce-promise';\n\nexport const createGroupSchema = (namePresenceValidator) => ({\n  fields: [\n    {\n      component: componentTypes.TEXT_FIELD,\n      name: 'name',\n      label: 'Group name',\n      helperText:\n        'Can only contain letters, numbers, spaces, hyphens ( - ), and underscores( _ ).',\n      isRequired: true,\n      autoFocus: true,\n      validate: [\n        // async validator has to be first in the list\n        namePresenceValidator,\n        { type: validatorTypes.REQUIRED },\n        { type: validatorTypes.MAX_LENGTH, threshold: 50 },\n        nameValidator,\n      ],\n    },\n  ],\n});\n\nexport const confirmSystemsAddSchema = (hostsNumber) => ({\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'warning-message',\n      label: `${hostsNumber} of the systems you selected already belong to a group.\n             Moving them to a different group will impact their configuration.`,\n    },\n    {\n      component: componentTypes.CHECKBOX,\n      name: 'confirmation',\n      label: 'I acknowledge that this action cannot be undone.',\n      validate: [{ type: validatorTypes.REQUIRED }],\n    },\n  ],\n});\n\nconst createDescription = (hosts) => {\n  return (\n    <Text>\n      Select a group to add{' '}\n      <strong>\n        {hosts.length > 1 ? `${hosts.length} systems` : hosts[0].display_name}\n      </strong>{' '}\n      to, or create a new one.\n    </Text>\n  );\n};\n\n//this is a custom schema that is passed via additional mappers to the Modal component\n//it allows to create custom item types in the modal\n\nconst loadOptions = awesomeDebouncePromise(\n  async (searchValue = '') => {\n    // add a slight delay for scenarios when a new group has been just created\n    const data = await awesomeDebouncePromise(\n      () => getGroups({ name: searchValue }, {}),\n      500\n    )();\n    // TODO: make the getGroups requests paginated\n    return (data?.results || []).reduce((acc, { name, id }) => {\n      if (name.toLowerCase().includes(searchValue.trim().toLowerCase())) {\n        return [\n          ...acc,\n          {\n            label: name,\n            value: { name, id },\n          },\n        ];\n      }\n    }, []);\n  },\n  500,\n  { onlyResolvesLast: false }\n);\n\nexport const addHostSchema = (hosts) => ({\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'description',\n      label: createDescription(hosts),\n    },\n    {\n      component: 'select',\n      name: 'group',\n      label: 'Select a group',\n      simpleValue: true,\n      isSearchable: true, // enables typeahead\n      isRequired: true,\n      isClearable: true,\n      placeholder: 'Type or click to select a group',\n      loadOptions,\n      validate: [{ type: validatorTypes.REQUIRED }],\n    },\n    {\n      component: 'create-group-btn',\n      name: 'create-group-btn',\n      isRequired: true,\n    },\n  ],\n});\n","import validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\n\nexport const nameValidator = {\n  type: validatorTypes.PATTERN,\n  pattern: /^[A-Za-z0-9]+[A-Za-z0-9_\\-\\s]*$/,\n  message:\n    'Name must start with alphanumeric characters and can contain underscore and hyphen characters.',\n};\n","import { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\n\nconst apiWithToast = (dispatch, api, statusMessages) => {\n  const hasSuccess = statusMessages?.onSuccess;\n  const hasInfo = statusMessages?.onInfo;\n\n  if (!statusMessages) {\n    statusMessages = {\n      onSuccess: {\n        title: 'Success',\n        description: 'The request has been made successfully',\n      },\n      onError: {\n        title: 'Error',\n        description: 'An error occurred making the request',\n      },\n    };\n  }\n\n  const fetchData = async () => {\n    try {\n      const response = await api();\n      hasInfo &&\n        dispatch({\n          ...addNotification({\n            variant: 'info',\n            ...statusMessages.onInfo,\n          }),\n        });\n      hasSuccess &&\n        dispatch({\n          ...addNotification({\n            variant: 'success',\n            ...statusMessages.onSuccess,\n          }),\n        });\n      return response;\n    } catch (err) {\n      dispatch({\n        ...addNotification({\n          variant: 'danger',\n          ...statusMessages.onError,\n          // Add error message from API, if present\n          description: err?.Title\n            ? `${statusMessages.onError.description}: ${err.Title}`\n            : statusMessages.onError.description,\n        }),\n      });\n      return err;\n    }\n  };\n\n  return fetchData();\n};\n\nexport default apiWithToast;\n","/**\n * This module contains Button and DropdownItem components wrapped by RBAC checks.\n *\n * The permissions are checked _only_ within the Inventory app context.\n */\nimport React from 'react';\nimport { usePermissionsWithContext } from '@redhat-cloud-services/frontend-components-utilities/RBACHook';\nimport { Button, DropdownItem, Tooltip } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\n\nexport const ActionButton = ({\n  requiredPermissions,\n  noAccessTooltip,\n  checkAll,\n  override,\n  ignoreResourceDefinitions,\n  ...props\n}) => {\n  const { hasAccess: enabled } =\n    override !== undefined\n      ? { hasAccess: override }\n      : usePermissionsWithContext(\n          requiredPermissions,\n          checkAll,\n          !ignoreResourceDefinitions\n        );\n\n  return enabled ? (\n    <Button {...props} />\n  ) : (\n    <Tooltip content={noAccessTooltip}>\n      <Button {...props} isAriaDisabled />\n    </Tooltip>\n  );\n};\n\nActionButton.propTypes = {\n  requiredPermissions: PropTypes.array,\n  noAccessTooltip: PropTypes.string,\n  checkAll: PropTypes.bool,\n  override: PropTypes.bool,\n  ignoreResourceDefinitions: PropTypes.bool,\n};\n\nActionButton.defaultProps = {\n  checkAll: false,\n};\n\nexport const ActionDropdownItem = ({\n  requiredPermissions,\n  noAccessTooltip,\n  checkAll,\n  override,\n  ignoreResourceDefinitions,\n  ...props\n}) => {\n  const { hasAccess: enabled } =\n    override !== undefined\n      ? { hasAccess: override }\n      : usePermissionsWithContext(\n          requiredPermissions,\n          checkAll,\n          !ignoreResourceDefinitions\n        );\n\n  return enabled ? (\n    <DropdownItem {...props} />\n  ) : (\n    <DropdownItem {...props} isAriaDisabled tooltip={noAccessTooltip} />\n  );\n};\n\nActionDropdownItem.propTypes = {\n  requiredPermissions: PropTypes.array,\n  noAccessTooltip: PropTypes.string,\n  checkAll: PropTypes.bool,\n  override: PropTypes.bool,\n  ignoreResourceDefinitions: PropTypes.bool,\n};\n\nActionDropdownItem.defaultProps = {\n  checkAll: false,\n};\n"],"names":["i","RepoModal","isModalOpen","title","titleIconVariant","closeModal","submitLabel","schema","initialValues","variant","reloadData","reloadTimeout","size","onSubmit","customFormTemplate","additionalMappers","ouiaId","isOpen","onClose","FormTemplate","props","disableSubmit","buttonsProps","submit","componentMapper","values","undefined","setTimeout","onCancel","subscription","propTypes","PropTypes","defaultProps","createGroupSchema","namePresenceValidator","fields","component","componentTypes","TEXT_FIELD","name","label","helperText","isRequired","autoFocus","validate","type","validatorTypes","REQUIRED","MAX_LENGTH","threshold","nameValidator","confirmSystemsAddSchema","hostsNumber","PLAIN_TEXT","CHECKBOX","createDescription","hosts","length","display_name","loadOptions","awesomeDebouncePromise","searchValue","getGroups","data","results","reduce","acc","id","toLowerCase","includes","trim","value","onlyResolvesLast","addHostSchema","simpleValue","isSearchable","isClearable","placeholder","PATTERN","pattern","message","dispatch","api","statusMessages","hasSuccess","onSuccess","hasInfo","onInfo","description","onError","fetchData","response","addNotification","Title","ActionButton","requiredPermissions","noAccessTooltip","checkAll","override","ignoreResourceDefinitions","hasAccess","usePermissionsWithContext","content","isAriaDisabled","ActionDropdownItem","tooltip"],"sourceRoot":""}