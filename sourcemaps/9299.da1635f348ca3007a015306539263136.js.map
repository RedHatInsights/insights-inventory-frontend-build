{"version":3,"file":"js/9299.1655378178253.cf5d78b7e91dda2bc90c.js","mappings":"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","sources":["webpack:///./src/components/GeneralInfo/SystemCard/SystemCard.js","webpack:///./src/components/GeneralInfo/dataMapper/dataMapper.js","webpack:///./src/components/GeneralInfo/selectors/selectors.js"],"sourcesContent":["import React, { Fragment, Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport LoadingCard from '../LoadingCard';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport { propertiesSelector } from '../selectors';\nimport { editDisplayName, editAnsibleHost, systemProfile } from '../../../store/actions';\nimport TextInputModal from '../TextInputModal';\nimport { loadEntity } from '../../../store/actions';\nimport { Popover, Button } from '@patternfly/react-core';\nimport EditButton from '../EditButton';\nimport { generalMapper } from '../dataMapper';\nimport { extraShape } from '../../../constants';\n\nconst TitleWithPopover = ({ title, content }) => (\n    <React.Fragment>\n        <span>{ title }</span>\n        <Popover\n            headerContent={<div>{ title }</div>}\n            bodyContent={<div>{ content }</div>}>\n            <Button\n                variant=\"plain\"\n                aria-label={`Action for ${title}`}\n                className='ins-active-general_information__popover-icon'>\n                <OutlinedQuestionCircleIcon />\n            </Button>\n        </Popover>\n    </React.Fragment>\n);\n\nclass SystemCard extends Component {\n    state = {\n        isDisplayNameModalOpen: false,\n        isAnsibleHostModalOpen: false\n    };\n\n    onCancel = () => {\n        this.setState({\n            isDisplayNameModalOpen: false,\n            isAnsibleHostModalOpen: false\n        });\n    };\n\n    onSubmit = (fn) => (value) => {\n        const { entity } = this.props;\n        fn(entity.id, value);\n        this.onCancel();\n    }\n\n    onShowDisplayModal = (event) => {\n        event.preventDefault();\n        this.setState({\n            isDisplayNameModalOpen: true\n        });\n    };\n\n    onShowAnsibleModal = (event) => {\n        event.preventDefault();\n        this.setState({\n            isAnsibleHostModalOpen: true\n        });\n    };\n\n    getAnsibleHost = () => {\n        const { entity } = this.props;\n        return entity.ansible_host || entity.fqdn || entity.id;\n    };\n\n    render() {\n        const {\n            detailLoaded,\n            entity,\n            properties,\n            setDisplayName,\n            setAnsibleHost,\n            writePermissions,\n            handleClick,\n            hasHostName,\n            hasDisplayName,\n            hasAnsibleHostname,\n            hasSAP,\n            hasCPUs,\n            hasSockets,\n            hasCores,\n            hasCPUFlags,\n            hasRAM,\n            extra\n        } = this.props;\n        const { isDisplayNameModalOpen, isAnsibleHostModalOpen } = this.state;\n        return (\n            <Fragment>\n                <LoadingCard\n                    title=\"System properties\"\n                    isLoading={ !detailLoaded }\n                    items={ [\n                        ...hasHostName ? [{\n                            title: <TitleWithPopover\n                                title='Host name'\n                                content='Name imported from the system.'/>,\n                            value: entity.fqdn, size: 'md'\n                        }] : [],\n                        ...hasDisplayName ? [{\n                            title: <TitleWithPopover\n                                title='Display name'\n                                content='System name displayed in an inventory list.'/>,\n                            value: (\n                                <Fragment>\n                                    { entity.display_name }\n                                    <EditButton\n                                        writePermissions={writePermissions}\n                                        link=\"display_name\"\n                                        onClick={this.onShowDisplayModal}\n                                    />\n                                </Fragment>\n                            ), size: 'md'\n                        }] : [],\n                        ...hasAnsibleHostname ? [{\n                            title: <TitleWithPopover\n                                title='Ansible hostname'\n                                content='Hostname that is used in playbooks by Remediations.'/>,\n                            value: (\n                                <Fragment>\n                                    { this.getAnsibleHost() }\n                                    <EditButton\n                                        writePermissions={writePermissions}\n                                        link=\"ansible_name\"\n                                        onClick={this.onShowAnsibleModal}\n                                    />\n                                </Fragment>\n                            ), size: 'md'\n                        }] : [],\n                        ...hasSAP ? [{\n                            title: 'SAP',\n                            value: properties.sapIds?.length,\n                            singular: 'identifier',\n                            target: 'sap_sids',\n                            onClick: () => {\n                                handleClick(\n                                    'SAP IDs (SID)',\n                                    generalMapper(properties.sapIds, 'SID')\n                                );\n                            }\n                        }] : [],\n                        ...hasCPUs ? [{ title: 'Number of CPUs', value: properties.cpuNumber }] : [],\n                        ...hasSockets ? [{ title: 'Sockets', value: properties.sockets }] : [],\n                        ...hasCores ? [{ title: 'Cores per socket', value: properties.coresPerSocket }] : [],\n                        ...hasCPUFlags ? [{\n                            title: 'CPU flags',\n                            value: properties?.cpuFlags?.length,\n                            singular: 'flag',\n                            target: 'flag',\n                            onClick: () => handleClick('CPU flags', generalMapper(properties.cpuFlags, 'flag name'))\n                        }] : [],\n                        ...hasRAM ? [{ title: 'RAM', value: properties.ramSize }] : [],\n                        ...extra.map(({ onClick, ...item }) => ({\n                            ...item,\n                            ...onClick && { onClick: (e) => onClick(e, handleClick) }\n                        }))\n                    ] }\n                />\n                <TextInputModal\n                    isOpen={ isDisplayNameModalOpen }\n                    title='Edit display name'\n                    value={ entity && entity.display_name }\n                    ariaLabel='Host inventory display name'\n                    modalOuiaId=\"edit-display-name-modal\"\n                    cancelOuiaId=\"cancel-edit-display-name\"\n                    confirmOuiaId=\"confirm-edit-display-name\"\n                    inputOuiaId=\"input-edit-display-name\"\n                    onCancel={ this.onCancel }\n                    onSubmit={ this.onSubmit(setDisplayName) }\n                />\n                <TextInputModal\n                    isOpen={ isAnsibleHostModalOpen }\n                    title='Edit Ansible host'\n                    value={ entity && this.getAnsibleHost() }\n                    ariaLabel='Ansible host'\n                    modalOuiaId=\"edit-ansible-name-modal\"\n                    cancelOuiaId=\"cancel-edit-ansible-name\"\n                    confirmOuiaId=\"confirm-edit-ansible-name\"\n                    inputOuiaId=\"input-edit-ansible-name\"\n                    onCancel={ this.onCancel }\n                    onSubmit={ this.onSubmit(setAnsibleHost) }\n                />\n            </Fragment>\n        );\n    }\n}\n\nSystemCard.propTypes = {\n    detailLoaded: PropTypes.bool,\n    entity: PropTypes.shape({\n        // eslint-disable-next-line camelcase\n        display_name: PropTypes.string,\n        // eslint-disable-next-line camelcase\n        ansible_host: PropTypes.string,\n        fqdn: PropTypes.string,\n        id: PropTypes.string\n    }),\n    properties: PropTypes.shape({\n        cpuNumber: PropTypes.number,\n        sockets: PropTypes.number,\n        coresPerSocket: PropTypes.number,\n        ramSize: PropTypes.string,\n        storage: PropTypes.arrayOf(PropTypes.shape({\n            device: PropTypes.string,\n            // eslint-disable-next-line camelcase\n            mount_point: PropTypes.string,\n            options: PropTypes.shape({}),\n            type: PropTypes.string\n        })),\n        sapIds: PropTypes.arrayOf(PropTypes.string),\n        cpuFlags: PropTypes.array\n    }),\n    setDisplayName: PropTypes.func,\n    setAnsibleHost: PropTypes.func,\n    writePermissions: PropTypes.bool,\n    handleClick: PropTypes.func,\n    hasHostName: PropTypes.bool,\n    hasDisplayName: PropTypes.bool,\n    hasAnsibleHostname: PropTypes.bool,\n    hasSAP: PropTypes.bool,\n    hasCPUs: PropTypes.bool,\n    hasSockets: PropTypes.bool,\n    hasCores: PropTypes.bool,\n    hasCPUFlags: PropTypes.bool,\n    hasRAM: PropTypes.bool,\n    extra: PropTypes.arrayOf(extraShape)\n};\nSystemCard.defaultProps = {\n    detailLoaded: false,\n    entity: {},\n    properties: {},\n    hasHostName: true,\n    hasDisplayName: true,\n    hasAnsibleHostname: true,\n    hasSAP: true,\n    hasCPUs: true,\n    hasSockets: true,\n    hasCores: true,\n    hasCPUFlags: true,\n    hasRAM: true,\n    extra: []\n};\n\nTitleWithPopover.propTypes = {\n    title: PropTypes.string.isRequired,\n    content: PropTypes.string.isRequired\n};\n\nfunction mapDispatchToProps(dispatch) {\n    const reloadWrapper = (id, event) => {\n        event.payload.then(data => {\n            dispatch(systemProfile(id, { hasItems: true }));\n            dispatch(loadEntity(id, { hasItems: true }, { showTags: true }));\n            return data;\n        });\n\n        return event;\n    };\n\n    return {\n        setDisplayName: (id, value) => {\n            dispatch(reloadWrapper(id, editDisplayName(id, value)));\n        },\n\n        setAnsibleHost: (id, value) => {\n            dispatch(reloadWrapper(id, editAnsibleHost(id, value)));\n        }\n    };\n}\n\nexport default connect(({\n    entityDetails: {\n        entity\n    },\n    systemProfileStore: {\n        systemProfile\n    }\n}) => ({\n    entity,\n    detailLoaded: systemProfile && systemProfile.loaded,\n    properties: propertiesSelector(systemProfile, entity)\n}), mapDispatchToProps)(SystemCard);\n","/* eslint-disable camelcase */\n\nimport React from 'react';\nimport {\n    CheckCircleIcon,\n    TimesIcon,\n    OutlinedQuestionCircleIcon,\n    OutlinedArrowAltCircleUpIcon,\n    OutlinedArrowAltCircleDownIcon\n} from '@patternfly/react-icons';\nimport { sortable } from '@patternfly/react-table';\nimport { Tooltip } from '@patternfly/react-core';\n\nexport const statusHelper = {\n    UP: <Tooltip content=\"Service is running\">\n        <OutlinedArrowAltCircleUpIcon className=\"ins-c-inventory__detail--up\" />\n    </Tooltip>,\n    DOWN: <Tooltip content=\"Service has stopped\">\n        <OutlinedArrowAltCircleDownIcon className=\"ins-c-inventory__detail--down\" />\n    </Tooltip>\n};\n\nexport const enabledHelper = {\n    true: <Tooltip content=\"Source enabled\">\n        <CheckCircleIcon className=\"ins-c-inventory__detail--enabled\" />\n    </Tooltip>,\n    false: <Tooltip content=\"Source disabled\">\n        <TimesIcon className=\"ins-c-inventory__detail--disabled\" />\n    </Tooltip>\n};\n\nexport const diskMapper = (devices = []) => ({\n    cells: [\n        {\n            title: 'Device',\n            transforms: [sortable]\n        },\n        {\n            title: 'Label',\n            transforms: [sortable]\n        },\n        {\n            title: 'Mount point',\n            transforms: [sortable]\n        },\n        {\n            title: 'Type',\n            transforms: [sortable]\n        }\n    ],\n    rows: devices.map(({\n        device,\n        label,\n        mountpoint,\n        options,\n        mounttype\n    }) => {\n        const calculatedOptions = (options && options.options) || options;\n        return ({\n            isOpen: false,\n            child: <div>\n                {\n                    calculatedOptions &&\n                    Object.entries(calculatedOptions.value || calculatedOptions)\n                    .map(([oneKey, option]) => `${oneKey}=${option.value || option}`).join(',  ')\n                }\n            </div>,\n            cells: [\n                (device && device.value) || device,\n                label,\n                (mountpoint && mountpoint.value) || mountpoint,\n                (mounttype && mounttype.value) || mounttype\n            ]\n        });\n    }),\n    expandable: true\n});\n\nexport const productsMapper = (products = []) => ({\n    cells: [\n        {\n            title: 'Name',\n            transforms: [sortable]\n        },\n        'Status'\n    ],\n    rows: products.map(product => ([\n        product.name,\n        {\n            title: statusHelper[product.status] ||\n            <Tooltip content=\"Unknown service status\">\n                <OutlinedQuestionCircleIcon className=\"ins-c-inventory__detail--unknown\" />\n            </Tooltip>\n        }\n    ]))\n});\n\nexport const interfaceMapper = (data = []) => ({\n    cells: [\n        {\n            title: 'MAC address',\n            transforms: [sortable]\n        },\n        {\n            title: 'MTU',\n            transforms: [sortable]\n        },\n        {\n            title: 'Name',\n            transforms: [sortable]\n        },\n        'State',\n        {\n            title: 'Type',\n            transforms: [sortable]\n        }\n    ],\n    rows: data.map(item => ([\n        item.mac_address,\n        item.mtu,\n        item.name,\n        {\n            title: statusHelper[item.state] ||\n            <Tooltip content=\"Unknown service status\">\n                <OutlinedQuestionCircleIcon className=\"ins-c-inventory__detail--unknown\" />\n            </Tooltip>\n        },\n        item.type\n    ]))\n});\n\nexport const repositoriesMapper = ({ enabled, disabled } = { enabled: [], disabled: [] }) => ({\n    cells: [\n        {\n            title: 'Name',\n            transforms: [sortable]\n        },\n        {\n            title: 'Enabled',\n            transforms: [sortable]\n        },\n        {\n            title: 'GPG check',\n            transforms: [sortable]\n        }\n    ],\n    rows: [...enabled, ...disabled].map(repository => ([\n        {\n            title: repository.name,\n            sortValue: repository.name\n        },\n        {\n            title: enabledHelper[Boolean(repository.enabled)],\n            sortValue: `${repository.enabled}`\n        },\n        {\n            title: enabledHelper[Boolean(repository.gpgcheck)],\n            sortValue: `${repository.gpgcheck}`\n        }\n    ])),\n    filters: [\n        { type: 'textual' },\n        {\n            type: 'checkbox',\n            options: [\n                { label: 'Is enabled', value: 'true' },\n                { label: 'Not enabled', value: 'false' }\n            ]\n        },\n        {\n            type: 'checkbox',\n            options: [\n                { label: 'Is enabled', value: 'true' },\n                { label: 'Not enabled', value: 'false' }\n            ]\n        }\n    ]\n});\n\nexport const generalMapper = (data = [], title = '') => ({\n    cells: [{\n        title,\n        transforms: [sortable]\n    }],\n    rows: data.map(item => ([item])),\n    filters: [{ type: 'textual' }]\n});\n","/* eslint-disable camelcase */\nimport { registered } from '../../../Utilities/index';\n\nfunction safeParser(toParse, key) {\n    try {\n        return JSON.parse(toParse);\n    } catch {\n        return { [key]: toParse };\n    }\n}\n\nexport const propertiesSelector = ({\n    number_of_cpus,\n    number_of_sockets,\n    cores_per_socket,\n    ramSize,\n    disk_devices,\n    sap_sids,\n    cpu_flags\n} = {}, { facts } = { }) => ({\n    cpuNumber: number_of_cpus || facts?.rhsm?.CPU_CORES,\n    sockets: number_of_sockets || facts?.rhsm?.CPU_SOCKETS,\n    coresPerSocket: cores_per_socket || (\n        facts?.rhsm?.CPU_CORES\n            && facts?.rhsm?.CPU_CORES\n            && Number(facts?.rhsm?.CPU_CORES, 10) / Number(facts?.rhsm?.CPU_SOCKETS, 10)\n    ),\n    ramSize: ramSize || (facts?.rhsm?.MEMORY && `${facts?.rhsm?.MEMORY} GB`),\n    storage: disk_devices && disk_devices.map(({ device, label, mount_point, options, type }) => ({\n        ...device && safeParser(device, 'device'),\n        label,\n        ...mount_point && safeParser(mount_point, 'mountpoint'),\n        ...options && safeParser(options, 'options'),\n        ...type && safeParser(type, 'mounttype')\n    })\n    ),\n    sapIds: sap_sids,\n    cpuFlags: cpu_flags\n});\n\nexport const operatingSystem = ({\n    arch,\n    operating_system,\n    os_kernel_version,\n    last_boot_time,\n    kernel_modules\n} = {}, { facts } = {}) => ({\n    release: operating_system,\n    kernelRelease: os_kernel_version,\n    architecture: arch || facts?.rhsm?.ARCHITECTURE,\n    bootTime: last_boot_time,\n    kernelModules: kernel_modules\n});\n\nexport const biosSelector = ({\n    bios_vendor,\n    bios_version,\n    bios_release_date\n} = {}) => ({\n    vendor: bios_vendor,\n    version: bios_version,\n    releaseDate: bios_release_date\n});\n\nexport const infrastructureSelector = ({\n    infrastructure_type,\n    infrastructure_vendor,\n    network = {}\n} = {}, { facts } = {}) => ({\n    type: infrastructure_type || (\n        facts?.rhsm?.IS_VIRTUAL !== undefined && (facts?.rhsm?.IS_VIRTUAL ? 'virtual' : 'physical')\n    ) || undefined,\n    vendor: infrastructure_vendor,\n    ipv4: network.ipv4,\n    ipv6: network.ipv6,\n    nics: network.interfaces\n});\n\nexport const configurationSelector = ({\n    installed_packages,\n    enabled_services,\n    running_processes,\n    repositories\n} = {}) => ({\n    packages: installed_packages,\n    services: enabled_services,\n    processes: running_processes,\n    repositories\n});\n\nexport const collectionInformationSelector = ({\n    insights_client_version,\n    insights_egg_version\n} = {}) => ({\n    client: insights_client_version,\n    egg: insights_egg_version\n});\n\nexport const getDefaultCollectors = (entity) =>\n    registered?.filter(reporter => reporter.label !== 'insights-client not connected')\n    .map(reporter => ({\n        name: reporter.label,\n        status: entity?.per_reporter_staleness[reporter.value]?.check_in_succeeded,\n        updated: entity?.per_reporter_staleness[reporter.value]?.last_check_in,\n        details: {\n            name: reporter.idName,\n            id: entity?.[reporter.idValue]\n        }\n    }));\n\nexport const systemStatus = ({\n    stale_timestamp\n} = {}) => ({\n    stale: new Date() > new Date(stale_timestamp)\n});\n"],"names":["TitleWithPopover","title","content","headerContent","bodyContent","variant","className","SystemCard","isDisplayNameModalOpen","isAnsibleHostModalOpen","setState","fn","value","entity","props","id","onCancel","event","preventDefault","ansible_host","fqdn","this","detailLoaded","properties","setDisplayName","setAnsibleHost","writePermissions","handleClick","hasHostName","hasDisplayName","hasAnsibleHostname","hasSAP","hasCPUs","hasSockets","hasCores","hasCPUFlags","hasRAM","extra","state","Fragment","isLoading","items","size","display_name","link","onClick","onShowDisplayModal","getAnsibleHost","onShowAnsibleModal","sapIds","length","singular","target","generalMapper","cpuNumber","sockets","coresPerSocket","cpuFlags","ramSize","map","e","isOpen","ariaLabel","modalOuiaId","cancelOuiaId","confirmOuiaId","inputOuiaId","onSubmit","Component","propTypes","PropTypes","storage","device","mount_point","options","type","extraShape","defaultProps","connect","entityDetails","systemProfile","systemProfileStore","loaded","propertiesSelector","dispatch","reloadWrapper","payload","then","data","hasItems","loadEntity","showTags","editDisplayName","editAnsibleHost","statusHelper","UP","Tooltip","DOWN","enabledHelper","true","false","diskMapper","devices","cells","transforms","sortable","rows","label","mountpoint","mounttype","calculatedOptions","child","Object","entries","oneKey","option","join","expandable","productsMapper","products","product","name","status","interfaceMapper","item","mac_address","mtu","repositoriesMapper","enabled","disabled","repository","sortValue","Boolean","gpgcheck","filters","safeParser","toParse","key","JSON","parse","number_of_cpus","number_of_sockets","cores_per_socket","disk_devices","sap_sids","cpu_flags","facts","rhsm","CPU_CORES","CPU_SOCKETS","Number","MEMORY","operatingSystem","arch","operating_system","os_kernel_version","last_boot_time","kernel_modules","release","kernelRelease","architecture","ARCHITECTURE","bootTime","kernelModules","biosSelector","bios_vendor","bios_version","bios_release_date","vendor","version","releaseDate","infrastructureSelector","infrastructure_type","infrastructure_vendor","network","undefined","IS_VIRTUAL","ipv4","ipv6","nics","interfaces","configurationSelector","installed_packages","enabled_services","running_processes","repositories","packages","services","processes","collectionInformationSelector","insights_client_version","insights_egg_version","client","egg","getDefaultCollectors","registered","reporter","per_reporter_staleness","check_in_succeeded","updated","last_check_in","details","idName","idValue","systemStatus","stale_timestamp","stale","Date"],"sourceRoot":""}