{"version":3,"file":"js/8414.17847d0bd9e9286194b1.js","mappings":"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","sources":["webpack:///./src/Utilities/AccessDenied.js","webpack:///./src/Utilities/OperatingSystemFilterHelpers.js","webpack:///./src/components/InventoryTable/helpers.js","webpack:///./src/components/InventoryTable/EntityTableToolbar.js","webpack:///./src/components/InventoryTable/NoSystemsTable.js","webpack:///./src/components/InventoryTable/EntityTable.js","webpack:///./src/components/InventoryTable/hooks/useColumns.js","webpack:///./src/components/InventoryTable/InventoryList.js","webpack:///./src/components/InventoryTable/Pagination.js","webpack:///./src/components/InventoryTable/InventoryTable.js","webpack:///./src/components/filters/useTextFilter.js","webpack:///./src/components/filters/useStalenessFilter.js","webpack:///./src/components/filters/useRegisteredWithFilter.js","webpack:///./src/components/filters/useTagsFilter.js","webpack:///./src/components/filters/useRhcdFilter.js","webpack:///./src/components/filters/useUpdateMethodFilter.js","webpack:///./src/components/filters/index.js","webpack:///./src/components/filters/useOperatingSystemFilter.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NotAuthorized } from '@redhat-cloud-services/frontend-components/NotAuthorized';\nimport { Tooltip } from '@patternfly/react-core';\n\nconst AccessDenied = ({ title, description, ...props }) => (\n    <NotAuthorized\n        {...props}\n        className=\"ins-c-inventory__no--access\"\n        title={title}\n        description={<Tooltip content=\"inventory:*:read\">\n            {description}\n        </Tooltip>}\n    />\n);\n\nAccessDenied.propTypes = {\n    title: PropTypes.string,\n    description: PropTypes.node\n};\n\nAccessDenied.defaultProps = {\n    title: 'You do not have access to Inventory',\n    description: <div>\n        To view your systems, you must be granted inventory access from your Organization Administrator.\n    </div>\n};\n\nexport default AccessDenied;\n","import set  from 'lodash/set';\nimport omit  from 'lodash/omit';\nimport mapValues  from 'lodash/mapValues';\nimport { coerce, compare, rcompare } from 'semver';\nimport { OS_CHIP } from './constants';\n\nexport const updateGroupSelectionIdentifier = (selection, major) =>\n    // if every minor version is selected, then mark the group as selected\n    set(selection, [major, major], Object.values({ ...selection[major] }).filter(v => v !== major).every(Boolean));\n\n/** Takes an array of string versions `value` and returns an object in the format\n * required by ConditionalFilter component (group filter); */\nexport const toGroupSelection = (value = [], availableVersions) =>\n    (availableVersions === undefined ? value : availableVersions).reduce(\n        (acc, version) => {\n            const [major] = version.split('.');\n            set(acc, [major, version], value.includes(version));\n            updateGroupSelectionIdentifier(acc, major);\n            return acc;\n        },\n        {}\n    );\n\nexport const compareVersions = (a, b, asc = true) =>\n    asc ? compare(coerce(a), coerce(b)) : rcompare(coerce(a), coerce(b));\n\n/** Extracts enabled OS filter values from ConditionalFilter-like object */\nexport const getSelectedOsFilterVersions = (selected = {}) =>\n    Object.values(selected).reduce((acc, versions) => {\n        Object.entries(versions).forEach(\n            ([version, enabled]) =>\n                enabled && version.match(/[0-9]+.[0-9]+/) && acc.push(version)\n        );\n        return acc;\n    }, []);\n\nexport const groupOSFilterVersions = (versions = []) => {\n    const groups = Object.entries(\n        versions.reduce((prev, { label, value }) => {\n            const major = value.split('.')[0];\n\n            if (prev[major] === undefined) {\n                prev[major] = {\n                    groupSelectable: true, // without this flag, the group won't be rendered - behavior of ConditionalFilter\n                    label: 'RHEL ' + major,\n                    value: major,\n                    type: 'checkbox',\n                    items: []\n                };\n            }\n\n            prev[major].items.push({\n                label,\n                value,\n                type: 'checkbox'\n            });\n\n            return prev;\n        }, {})\n    );\n\n    // sort by major versions in descending order\n    groups.sort((a, b) => compareVersions(a[0], b[0], false));\n\n    const sorted = groups.map((group) => {\n        // sort minor versions under each group\n        group[1].items.sort((a, b) => compareVersions(a.value, b.value, false));\n        return group[1];\n    });\n\n    return sorted;\n};\n\nexport const buildOSFilterChip = (operatingSystemValue = {}, operatingSystems = []) => {\n    const minors = getSelectedOsFilterVersions(operatingSystemValue);\n    const chips = operatingSystems\n    .filter(({ value }) => minors.includes(value))\n    .map(({ label, ...props }) => ({ name: label, ...props }));\n\n    return minors?.length > 0\n        ? [\n            {\n                category: 'Operating System',\n                type: OS_CHIP,\n                chips\n            }\n        ]\n        : [];\n};\n\nexport const onOSFilterChange = (event, selection, clickedGroup, clickedItem) => {\n    const newSelection = Object.assign({}, selection);\n    const value = newSelection[clickedGroup.value][clickedItem.value];\n    const major = clickedGroup.value;\n\n    if (clickedItem.value === major) {\n        // group checkbox clicked => update all minor version selections\n        newSelection[major] = mapValues(newSelection[major], () => value);\n    } else {\n        newSelection[major][major] = Object.values(omit(newSelection[major], major)).every(Boolean);\n    }\n\n    return newSelection;\n};\n","import React from 'react';\nimport { cellWidth, sortable, expandable } from '@patternfly/react-table';\nimport get from 'lodash/get';\nimport flatten from 'lodash/flatten';\nimport TitleColumn from './TitleColumn';\nimport { Fragment } from 'react';\n\nexport const buildCells = (item, columns, extra) => {\n    return columns.map(({ key, composed, renderFunc }) => {\n        // eslint-disable-next-line new-cap\n        const data = composed ? <Fragment>{TitleColumn(\n            composed.map(key => get(item, key, ' ')),\n            item.id,\n            item,\n            extra\n        )}</Fragment> : get(item, key, ' ');\n        return renderFunc ? <Fragment>{ renderFunc(data, item.id, item, extra) }</Fragment> : data;\n    });\n};\n\nexport const createRows = (rows = [], columns = [], { actions, expandable, noSystemsTable, ...extra } = {}) => {\n    if (rows.length === 0) {\n        return [{\n            cells: [{\n                title: noSystemsTable,\n                props: {\n                    colSpan: columns.length + Boolean(actions),\n                    dataLabel: null\n                }\n            }]\n        }];\n    }\n\n    return flatten(rows.map((oneItem, key) => ([{\n        ...oneItem,\n        ...oneItem.children && expandable && { isOpen: !!oneItem.isOpen },\n        cells: buildCells(oneItem, columns, extra),\n        actionProps: {\n            'data-ouia-component-id': `${oneItem.id}-actions-kebab`\n        }\n    }, oneItem.children && expandable && {\n        cells: [\n            {\n                title: typeof oneItem.children === 'function' ? oneItem.children() : oneItem.children\n            }\n        ],\n        parent: key * 2,\n        fullWidth: true\n    }]))).filter(Boolean);\n};\n\nexport const onDeleteFilter = (deleted, currFilter = []) => {\n    const { value: deletedItem } = deleted?.chips?.[0] || {};\n    return  currFilter.filter((item) => item !== deletedItem);\n};\n\nexport const onDeleteTag = (deleted, selectedTags, onApplyTags) => {\n    const deletedItem = deleted?.chips?.[0];\n    if (selectedTags?.[deleted?.key]?.[deletedItem?.key] !== undefined) {\n        selectedTags[deleted?.key][deletedItem?.key] = false;\n    }\n\n    onApplyTags && onApplyTags(selectedTags, false);\n    return selectedTags;\n};\n\nconst includesSortable = (transforms) => transforms?.reduce((acc, fn) => acc || fn.toString().includes('onSort:'), false);\n\nexport const createColumns = (columns, hasItems, rows, isExpandable) => (\n    columns?.map(({ props, transforms, cellFormatters, ...oneCell }) => ({\n        ...oneCell,\n        transforms: [\n            ...transforms || [],\n            ...props?.width ? [cellWidth(props.width)] : [],\n            ...hasItems ||\n            rows.length <= 0 ||\n            (props && props.isStatic) ||\n            transforms?.includes(sortable) ||\n            includesSortable(transforms) ? [] : [sortable]\n        ],\n        cellFormatters: [\n            ...cellFormatters || [],\n            ...isExpandable ? [expandable] : []\n        ]\n    }))\n);\n\n","/* eslint-disable camelcase */\nimport React, { Fragment, useEffect, useCallback, useReducer } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport xor from 'lodash/xor';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components/Skeleton';\nimport { tagsFilterState, tagsFilterReducer, mapGroups } from '@redhat-cloud-services/frontend-components/FilterHooks';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport { fetchAllTags, clearFilters, toggleTagModal, setFilter } from '../../store/actions';\nimport debounce from 'lodash/debounce';\nimport {\n    TagsModal,\n    TEXT_FILTER,\n    reduceFilters,\n    TEXTUAL_CHIP,\n    STALE_CHIP,\n    REGISTERED_CHIP,\n    OS_CHIP,\n    TAG_CHIP,\n    arrayToSelection,\n    RHCD_FILTER_KEY,\n    UPDATE_METHOD_KEY\n} from '../../Utilities/index';\nimport { onDeleteFilter, onDeleteTag } from './helpers';\nimport {\n    useStalenessFilter,\n    useTextFilter,\n    useRegisteredWithFilter,\n    useTagsFilter,\n    useRhcdFilter,\n    useUpdateMethodFilter,\n    textFilterState,\n    textFilterReducer,\n    filtersReducer,\n    stalenessFilterReducer,\n    stalenessFilterState,\n    operatingSystemFilterReducer,\n    registeredWithFilterReducer,\n    registeredWithFilterState,\n    rhcdFilterReducer,\n    rhcdFilterState,\n    updateMethodFilterReducer,\n    updateMethodFilterState\n} from '../filters';\nimport useOperatingSystemFilter from '../filters/useOperatingSystemFilter';\nimport useFeatureFlag from '../../Utilities/useFeatureFlag';\n\n/**\n * Table toolbar used at top of inventory table.\n * It uses couple of filters and acces redux data along side all passed props.\n * @param {*} props used in this component.\n */\nconst EntityTableToolbar = ({\n    total,\n    page,\n    perPage,\n    filterConfig,\n    hasItems,\n    children,\n    actionsConfig,\n    activeFiltersConfig,\n    showTags,\n    getTags,\n    items,\n    sortBy,\n    customFilters,\n    hasAccess,\n    bulkSelect,\n    hideFilters,\n    paginationProps,\n    onRefreshData,\n    loaded,\n    showTagModal,\n    ...props\n}) => {\n    const dispatch = useDispatch();\n    const reducer = useReducer(filtersReducer([\n        textFilterReducer,\n        stalenessFilterReducer,\n        registeredWithFilterReducer,\n        tagsFilterReducer,\n        operatingSystemFilterReducer,\n        rhcdFilterReducer,\n        updateMethodFilterReducer\n    ]), {\n        ...textFilterState,\n        ...stalenessFilterState,\n        ...registeredWithFilterState,\n        ...tagsFilterState,\n        ...rhcdFilterState,\n        ...updateMethodFilterState\n    });\n    const filters = useSelector(({ entities: { activeFilters } }) => activeFilters);\n    const allTagsLoaded = useSelector(({ entities: { allTagsLoaded } }) => allTagsLoaded);\n    const allTags = useSelector(({ entities: { allTags } }) => allTags);\n    const additionalTagsCount = useSelector(({ entities: { additionalTagsCount } }) => additionalTagsCount);\n    const [nameFilter, nameChip, textFilter, setTextFilter] = useTextFilter(reducer);\n    const [stalenessFilter, stalenessChip, staleFilter, setStaleFilter] = useStalenessFilter(reducer);\n    const [registeredFilter, registeredChip, registeredWithFilter, setRegisteredWithFilter] = useRegisteredWithFilter(reducer);\n    const [rhcdFilterConfig, rhcdFilterChips, rhcdFilterValue, setRhcdFilterValue] = useRhcdFilter(reducer);\n    const [osFilterConfig, osFilterChips, osFilterValue, setOsFilterValue] = useOperatingSystemFilter();\n    const [updateMethodConfig, updateMethodChips, updateMethodValue, setUpdateMethodValue] = useUpdateMethodFilter(reducer);\n\n    const isUpdateMethodEnabled = useFeatureFlag('hbi.ui.system-update-method');\n\n    const {\n        tagsFilter,\n        tagsChip,\n        selectedTags,\n        setSelectedTags,\n        filterTagsBy,\n        seFilterTagsBy\n    } = useTagsFilter(allTags, allTagsLoaded, additionalTagsCount, () => dispatch(toggleTagModal(true)), reducer);\n\n    /**\n     * Debounced function for fetching all tags.\n     */\n    const debounceGetAllTags = useCallback(debounce((config, options) => {\n        if (showTags && !hasItems && hasAccess) {\n            dispatch(fetchAllTags(config, {\n                ...options?.pagination\n            },  getTags));\n        }\n    }, 800), [customFilters?.tags]);\n\n    const enabledFilters = {\n        name: !(hideFilters.all && hideFilters.name !== false) && !hideFilters.name,\n        stale: !(hideFilters.all && hideFilters.stale !== false) && !hideFilters.stale,\n        registeredWith: !(hideFilters.all && hideFilters.registeredWith !== false) && !hideFilters.registeredWith,\n        operatingSystem: !(hideFilters.all && hideFilters.operatingSystem !== false) && !hideFilters.operatingSystem,\n        tags: !(hideFilters.all && hideFilters.tags !== false) && !hideFilters.tags,\n        rhcdFilter: !(hideFilters.all && hideFilters.rhcdFilter !== false) && !hideFilters.rhcdFilter,\n        //hides the filter untill API is ready. JIRA: RHIF-169\n        updateMethodFilter: isUpdateMethodEnabled &&\n            !(hideFilters.all && hideFilters.updateMethodFilter !== false)\n                && !hideFilters.updateMethodFilter\n    };\n\n    /**\n     * Function to dispatch load systems and fetch all tags.\n     */\n    const onRefreshDataInner = useCallback((options) => {\n        if (hasAccess) {\n            onRefreshData(options);\n            if (showTags && !hasItems) {\n                dispatch(fetchAllTags(filterTagsBy, {}, getTags));\n            }\n        }\n    }, [customFilters?.tags]);\n\n    /**\n     * Function used to update data, it either calls `onRefresh` from props or dispatches `onRefreshData`.\n     * `onRefresh` function takes two parameters\n     *   * entire config with new changes.\n     *   * callback to update data.\n     * @param {*} config new config to fetch data.\n     */\n    const updateData = (config) => {\n        if (hasAccess) {\n            onRefreshDataInner(config);\n        }\n    };\n\n    /**\n     * Debounced `updateData` function.\n     */\n    const debouncedRefresh = useCallback(debounce((config) => updateData(config), 800), [sortBy?.key, sortBy?.direction]);\n\n    /**\n     * Component did mount effect to calculate actual filters from redux.\n     */\n    useEffect(() => {\n        const {\n            textFilter, tagFilters, staleFilter, registeredWithFilter, osFilter, rhcdFilter, updateMethodFilter\n        } = reduceFilters([...filters || [], ...customFilters?.filters || []]);\n\n        debouncedRefresh();\n        enabledFilters.name && setTextFilter(textFilter);\n        enabledFilters.stale && setStaleFilter(staleFilter);\n        enabledFilters.registeredWith && setRegisteredWithFilter(registeredWithFilter);\n        enabledFilters.tags && setSelectedTags(tagFilters);\n        enabledFilters.operatingSystem && setOsFilterValue(osFilter);\n        enabledFilters.rhcdFilter && setRhcdFilterValue(rhcdFilter);\n        enabledFilters.updateMethodFilter && setUpdateMethodValue(updateMethodFilter);\n    }, []);\n\n    /**\n     * Function used to change text filter.\n     * @param {*} value new value used for filtering.\n     * @param {*} debounced if debounce function should be used.\n     */\n    const onSetTextFilter = (value, debounced = true) => {\n        const trimmedValue = value.trim();\n\n        const textualFilter = filters?.find(oneFilter => oneFilter.value === TEXT_FILTER);\n        if (textualFilter) {\n            textualFilter.filter = trimmedValue;\n        } else {\n            filters?.push({ value: TEXT_FILTER, filter: trimmedValue });\n        }\n\n        const refresh = debounced ? debouncedRefresh : updateData;\n        refresh({ page: 1, perPage, filters });\n    };\n\n    /**\n     * General function to apply filter (excluding tag and text).\n     * @param {*} value new value to be set of specified filter.\n     * @param {*} filterKey which filter should be changed.\n     * @param {*} refresh refresh callback function.\n     */\n    const onSetFilter = (value, filterKey, refresh) => {\n        const newFilters = [\n            ...filters?.filter(oneFilter => !Object.prototype.hasOwnProperty.call(oneFilter, filterKey)),\n            { [filterKey]: value }\n        ];\n        refresh({ page: 1, perPage, filters: newFilters });\n    };\n\n    const shouldReload = page && perPage && filters && (!hasItems || items);\n\n    useEffect(() => {\n        if (shouldReload && showTags && enabledFilters.tags) {\n            debounceGetAllTags(filterTagsBy);\n        }\n    }, [filterTagsBy, customFilters?.tags]);\n\n    useEffect(() => {\n        if (shouldReload && enabledFilters.name) {\n            onSetTextFilter(textFilter, true);\n        }\n    }, [textFilter]);\n\n    useEffect(() => {\n        if (shouldReload && enabledFilters.stale) {\n            onSetFilter(staleFilter, 'staleFilter', debouncedRefresh);\n        }\n    }, [staleFilter]);\n\n    useEffect(() => {\n        if (shouldReload && enabledFilters.registeredWith) {\n            onSetFilter(registeredWithFilter, 'registeredWithFilter', debouncedRefresh);\n        }\n    }, [registeredWithFilter]);\n\n    useEffect(() => {\n        if (shouldReload && showTags && enabledFilters.tags) {\n            onSetFilter(mapGroups(selectedTags), 'tagFilters', debouncedRefresh);\n        }\n    }, [selectedTags]);\n\n    useEffect(() => {\n        if (shouldReload && enabledFilters.operatingSystem) {\n            onSetFilter(osFilterValue, 'osFilter', debouncedRefresh);\n        }\n    }, [osFilterValue]);\n\n    useEffect(() => {\n        if (shouldReload && enabledFilters.rhcdFilter) {\n            onSetFilter(rhcdFilterValue, 'rhcdFilter', debouncedRefresh);\n        }\n    }, [rhcdFilterValue]);\n\n    useEffect(() => {\n        if (shouldReload && enabledFilters.updateMethodFilter) {\n            onSetFilter(updateMethodValue, 'updateMethodFilter', debouncedRefresh);\n        }\n    }, [updateMethodValue]);\n\n    /**\n     * Mapper to simplify removing of any filter.\n     */\n    const deleteMapper = {\n        [TEXTUAL_CHIP]: () => setTextFilter(''),\n        [TAG_CHIP]: (deleted) => setSelectedTags(\n            onDeleteTag(\n                deleted,\n                selectedTags,\n                (selectedTags) => onSetFilter(mapGroups(selectedTags), 'tagFilters', updateData)\n            )\n        ),\n        [STALE_CHIP]: (deleted) => setStaleFilter(onDeleteFilter(deleted, staleFilter)),\n        [REGISTERED_CHIP]: (deleted) => setRegisteredWithFilter(\n            onDeleteFilter(deleted, registeredWithFilter)\n        ),\n        [OS_CHIP]: (deleted) => setOsFilterValue(xor(osFilterValue, deleted.chips.map(({ value }) => value))),\n        [RHCD_FILTER_KEY]: (deleted) => setRhcdFilterValue(onDeleteFilter(deleted, rhcdFilterValue)),\n        [UPDATE_METHOD_KEY]: (deleted) => setUpdateMethodValue(onDeleteFilter(deleted, updateMethodValue))\n    };\n    /**\n     * Function to reset all filters with 'Reset Filter' is clicked\n     */\n    const resetFilters = () => {\n        enabledFilters.name && setTextFilter('');\n        enabledFilters.stale && setStaleFilter([]);\n        enabledFilters.registeredWith && setRegisteredWithFilter([]);\n        enabledFilters.tags && setSelectedTags({});\n        enabledFilters.operatingSystem && setOsFilterValue([]);\n        enabledFilters.rhcdFilter && setRhcdFilterValue([]);\n        enabledFilters.updateMethodFilter && setUpdateMethodValue([]);\n        dispatch(setFilter([]));\n        updateData({ page: 1, filters: [] });\n    };\n\n    /**\n     * Function to create active filters chips.\n     */\n    const constructFilters = () => {\n        return {\n            ...activeFiltersConfig || {},\n            filters: [\n                ...(showTags && !hasItems && enabledFilters.tags) ? tagsChip : [],\n                ...!hasItems && enabledFilters.name ? nameChip : [],\n                ...!hasItems && enabledFilters.stale ? stalenessChip : [],\n                ...!hasItems && enabledFilters.registeredWith ? registeredChip : [],\n                ...!hasItems && enabledFilters.operatingSystem ? osFilterChips : [],\n                ...!hasItems && enabledFilters.rhcdFilter ? rhcdFilterChips : [],\n                ...!hasItems && enabledFilters.updateMethodFilter ? updateMethodChips : [],\n                ...activeFiltersConfig?.filters || []\n            ],\n            onDelete: (e, [deleted, ...restDeleted], isAll) => {\n                if (isAll) {\n                    dispatch(clearFilters());\n                    resetFilters();\n                } else {\n                    deleteMapper[deleted.type]?.(deleted);\n                }\n\n                activeFiltersConfig &&\n                activeFiltersConfig.onDelete &&\n                activeFiltersConfig.onDelete(e, [deleted, ...restDeleted], isAll);\n            }\n        };\n    };\n\n    const inventoryFilters = [\n        ...!hasItems ? [\n            ...enabledFilters.name ? [nameFilter] : [],\n            ...enabledFilters.stale ? [stalenessFilter] : [],\n            ...enabledFilters.operatingSystem ? [osFilterConfig] : [],\n            ...enabledFilters.registeredWith ? [registeredFilter] : [],\n            ...enabledFilters.rhcdFilter ? [rhcdFilterConfig] : [],\n            ...enabledFilters.updateMethodFilter ? [updateMethodConfig] : [],\n            ...showTags && enabledFilters.tags ? [tagsFilter] : []\n        ] : [],\n        ...filterConfig?.items || []\n    ];\n\n    return <Fragment>\n        <PrimaryToolbar\n            {...props}\n            {...bulkSelect && {\n                bulkSelect: {\n                    ...bulkSelect,\n                    isDisabled: bulkSelect?.isDisabled || !hasAccess\n                }\n            }}\n            className={`ins-c-inventory__table--toolbar ${\n                hasItems || !inventoryFilters.length ? 'ins-c-inventory__table--toolbar-has-items' : ''\n            }`}\n            {...inventoryFilters?.length > 0 && {\n                filterConfig: {\n                    ...filterConfig || {},\n                    isDisabled: !hasAccess,\n                    items: inventoryFilters?.map(filter => ({\n                        ...filter,\n                        filterValues: {\n                            placeholder: filter?.filterValues?.placeholder || `Filter by ${filter?.label?.toLowerCase()}`,\n                            ...filter?.filterValues,\n                            isDisabled: !hasAccess\n                        }\n                    }))\n                }\n            }}\n            { ...hasAccess && { activeFiltersConfig: constructFilters() } }\n            actionsConfig={ loaded ? actionsConfig : null }\n            pagination={loaded ? {\n                page,\n                itemCount: !hasAccess ? 0 : total,\n                isDisabled: !hasAccess,\n                perPage,\n                onSetPage: (_e, newPage) => onRefreshData({ page: newPage }),\n                onPerPageSelect: (_e, newPerPage) => onRefreshData({ page: 1, per_page: newPerPage }),\n                ...paginationProps\n            } : <Skeleton size={SkeletonSize.lg} />}\n        >\n            { children }\n        </PrimaryToolbar>\n        {\n            (showTags || enabledFilters.tags || showTagModal) && <TagsModal\n                filterTagsBy={filterTagsBy}\n                onApply={(selected) => setSelectedTags(arrayToSelection(selected))}\n                onToggleModal={() => seFilterTagsBy('')}\n                getTags={getTags}\n            />\n        }\n    </Fragment>;\n};\n\nEntityTableToolbar.propTypes = {\n    showTags: PropTypes.bool,\n    getTags: PropTypes.func,\n    hasAccess: PropTypes.bool,\n    filterConfig: PropTypes.object,\n    total: PropTypes.number,\n    hasItems: PropTypes.bool,\n    page: PropTypes.number,\n    onClearFilters: PropTypes.func,\n    toggleTagModal: PropTypes.func,\n    perPage: PropTypes.number,\n    children: PropTypes.node,\n    pagination: PropTypes.shape({\n        page: PropTypes.number,\n        perPage: PropTypes.number\n    }),\n    actionsConfig: PropTypes.object,\n    activeFiltersConfig: PropTypes.object,\n    onRefreshData: PropTypes.func,\n    customFilters: PropTypes.shape({\n        tags: PropTypes.oneOfType([\n            PropTypes.object,\n            PropTypes.arrayOf(PropTypes.string)\n        ]),\n        filters: PropTypes.array\n    }),\n    hideFilters: PropTypes.shape({\n        tags: PropTypes.bool,\n        name: PropTypes.bool,\n        registeredWith: PropTypes.bool,\n        stale: PropTypes.bool,\n        operatingSystem: PropTypes.bool,\n        rhcdFilter: PropTypes.bool,\n        updateMethodFilter: PropTypes.bool,\n        all: PropTypes.bool\n    }),\n    paginationProps: PropTypes.object,\n    loaded: PropTypes.bool,\n    onRefresh: PropTypes.func,\n    hasCheckbox: PropTypes.bool,\n    isLoaded: PropTypes.bool,\n    items: PropTypes.array,\n    sortBy: PropTypes.object,\n    bulkSelect: PropTypes.object,\n    showTagModal: PropTypes.bool,\n    disableDefaultColumns: PropTypes.any\n};\n\nEntityTableToolbar.defaultProps = {\n    showTags: false,\n    hasAccess: true,\n    activeFiltersConfig: {},\n    hideFilters: {}\n};\n\nexport default EntityTableToolbar;\n","import React from 'react';\nimport { EmptyStateBody, EmptyState, EmptyStateVariant, Title } from '@patternfly/react-core';\n\n/**\n * Empty state stable when no systems are found.\n */\nconst NoSystemsTable = () => (\n    <EmptyState variant={ EmptyStateVariant.full }>\n        <Title headingLevel=\"h5\" size=\"lg\">\n            No matching systems found\n        </Title>\n        <EmptyStateBody>\n            To continue, edit your filter settings and search again.\n        </EmptyStateBody>\n    </EmptyState>\n);\n\nexport default NoSystemsTable;\n","import React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { selectEntity, setSort } from '../../store/actions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport {\n    Table as PfTable,\n    TableBody,\n    TableHeader,\n    TableGridBreakpoint,\n    TableVariant\n} from '@patternfly/react-table';\nimport { SkeletonTable } from '@redhat-cloud-services/frontend-components/SkeletonTable';\nimport NoSystemsTable from './NoSystemsTable';\nimport { createRows, createColumns } from './helpers';\nimport useColumns from './hooks/useColumns';\n\n/**\n * The actual (PF)table component. It calculates each cell and every table property.\n * It uses rows, columns and loaded from redux to show correct data.\n * When row is selected `selectEntity` is dispatched.\n * @param {*} props all props used in this component.\n */\nconst EntityTable = ({\n    hasItems,\n    expandable,\n    onExpandClick,\n    hasCheckbox,\n    actions,\n    variant,\n    sortBy,\n    tableProps,\n    onSort,\n    expandable: isExpandable,\n    onRowClick,\n    noDetail,\n    noSystemsTable = <NoSystemsTable />,\n    showTags,\n    columns: columnsProp,\n    disableDefaultColumns,\n    loaded,\n    columnsCounter\n}) => {\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const location = useLocation();\n    const columns = useColumns(columnsProp, disableDefaultColumns, showTags, columnsCounter);\n    const rows = useSelector(({ entities: { rows } }) => rows);\n\n    const onItemSelect = (_event, checked, rowId) => {\n        const row = isExpandable ? rows[rowId / 2] : rows[rowId];\n        dispatch(selectEntity(rowId === -1 ? 0 : row.id, checked));\n    };\n\n    const onSortChange = (_event, key, direction, index) => {\n        if (key !== 'action' && key !== 'health') {\n            dispatch(setSort({ index, key, direction }));\n        }\n\n        onSort?.({ index, key, direction });\n    };\n\n    const cells = useMemo(() =>\n        loaded && createColumns(columns, hasItems, rows, isExpandable)\n    , [loaded, columns, hasItems, rows, isExpandable]);\n\n    const defaultRowClick = (_event, key) => {\n        history.push(`${location.pathname}${location.pathname.slice(-1) === '/' ? '' : '/'}${key}`);\n    };\n\n    delete tableProps.RowWrapper;\n    if (rows?.length === 0) {\n        delete tableProps.actionResolver;\n    }\n\n    return (\n        <React.Fragment>\n            { loaded && cells ?\n                PfTable && <PfTable\n                    variant={ variant }\n                    aria-label=\"Host inventory\"\n                    cells={ cells }\n                    rows={ createRows(\n                        rows,\n                        columns,\n                        {\n                            actions,\n                            expandable,\n                            loaded,\n                            onRowClick: onRowClick || defaultRowClick,\n                            noDetail,\n                            sortBy,\n                            noSystemsTable\n                        })\n                    }\n                    gridBreakPoint={\n                        columns?.length > 5 ?\n                            TableGridBreakpoint.gridLg :\n                            TableGridBreakpoint.gridMd\n                    }\n                    className=\"ins-c-entity-table\"\n                    onSort={ (event, index, direction) => {\n                        onSortChange(\n                            event,\n                            cells?.[index - Boolean(hasCheckbox) - Boolean(expandable)]?.sortKey ||\n                            cells?.[index - Boolean(hasCheckbox) - Boolean(expandable)]?.key,\n                            direction,\n                            index\n                        );\n                    } }\n                    sortBy={ {\n                        //Inventory API has different sortBy key than system_profile\n                        index:\n                            cells?.findIndex(\n                                item => (sortBy?.key === item.key)\n                                || (sortBy?.key === 'operating_system' && item.key === 'system_profile')\n                            ) + Boolean(hasCheckbox) + Boolean(expandable),\n                        direction: sortBy?.direction\n                    } }\n                    { ...{\n                        ...hasCheckbox && rows?.length !== 0 ? { onSelect: onItemSelect } : {},\n                        ...expandable ? { onCollapse: onExpandClick } : {},\n                        ...actions && rows?.length > 0 && { actions }\n                    } }\n                    isStickyHeader\n                    { ...tableProps }\n                >\n                    <TableHeader />\n                    <TableBody />\n                </PfTable> :\n                <SkeletonTable\n                    colSize={ columns?.length || 3 }\n                    rowSize={ 15 }\n                    variant={variant ?? tableProps.variant}\n                />\n            }\n        </React.Fragment>\n    );\n};\n\nEntityTable.propTypes = {\n    variant: PropTypes.oneOf(['compact']),\n    expandable: PropTypes.bool,\n    onExpandClick: PropTypes.func,\n    onSort: PropTypes.func,\n    hasCheckbox: PropTypes.bool,\n    showActions: PropTypes.bool,\n    hasItems: PropTypes.bool,\n    showHealth: PropTypes.bool,\n    sortBy: PropTypes.shape({\n        key: PropTypes.string,\n        direction: PropTypes.oneOf(['asc', 'desc'])\n    }),\n    tableProps: PropTypes.shape({\n        [PropTypes.string]: PropTypes.any,\n        RowWrapper: PropTypes.elementType,\n        variant: PropTypes.string,\n        actionResolver: PropTypes.func\n    }),\n    onRowClick: PropTypes.func,\n    showTags: PropTypes.bool,\n    noSystemsTable: PropTypes.node,\n    disableDefaultColumns: PropTypes.oneOfType([PropTypes.bool, PropTypes.arrayOf(PropTypes.string)]),\n    loaded: PropTypes.bool,\n    columnsCounter: PropTypes.number,\n    columns: PropTypes.oneOfType([PropTypes.array, PropTypes.func]),\n    isLoaded: PropTypes.bool,\n    actions: PropTypes.array,\n    noDetail: PropTypes.any\n};\n\nEntityTable.defaultProps = {\n    loaded: false,\n    showHealth: false,\n    expandable: false,\n    hasCheckbox: true,\n    showActions: false,\n    rows: [],\n    variant: TableVariant.compact,\n    onExpandClick: () => undefined,\n    tableProps: {}\n};\n\nexport default EntityTable;\n","import { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { mergeArraysByKey } from '@redhat-cloud-services/frontend-components-utilities/helpers/helpers';\nimport { defaultColumns } from '../../../store/entities';\n\nconst isColumnEnabled = (key, disableColumns, showTags) =>\n    (key === 'tags' && showTags) ||\n    (key !== 'tags' && (Array.isArray(disableColumns) && !(disableColumns).includes(key)));\n\nconst useColumns = (columnsProp, disableDefaultColumns, showTags, columnsCounter) => {\n    const columnsRedux = useSelector(\n        ({ entities: { columns } }) => columns,\n        (next, prev) => next.every(\n            ({ key }, index) => prev.findIndex(({ key: prevKey }) => prevKey === key) === index\n        )\n    );\n    const disabledColumns = Array.isArray(disableDefaultColumns) ? disableDefaultColumns : [];\n    const defaultColumnsFiltered = useMemo(() => (disableDefaultColumns === true) ?\n        [] : defaultColumns().filter(({ key }) =>\n            isColumnEnabled(key, disabledColumns, showTags)\n        ), [disabledColumns, disableDefaultColumns, showTags]);\n\n    return useMemo(() => {\n        if (typeof columnsProp === 'function') {\n            return columnsProp(defaultColumns());\n        } else if (columnsProp) {\n            return mergeArraysByKey([\n                defaultColumnsFiltered,\n                columnsProp\n            ], 'key');\n        } else if (!columnsProp && columnsRedux) {\n            return columnsRedux;\n        }  else {\n            return defaultColumnsFiltered;\n        }\n    }, [\n        showTags,\n        Array.isArray(disableDefaultColumns) ? disableDefaultColumns.join() : disableDefaultColumns,\n        Array.isArray(columnsProp) ?\n            columnsProp.map(({ key }) => key).join() :\n            typeof columnsProp === 'function' ? 'function' : columnsProp,\n        Array.isArray(columnsRedux) ? columnsRedux.map(({ key }) => key).join() : columnsRedux,\n        columnsCounter\n    ]);\n};\n\nexport default useColumns;\n","/* eslint-disable react/display-name */\nimport React, { useEffect, useRef } from 'react';\nimport { useSelector } from 'react-redux';\nimport InventoryEntityTable from './EntityTable';\nimport { Grid, GridItem } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport './InventoryList.scss';\nimport isEqual from 'lodash/isEqual';\nimport AccessDenied from '../../Utilities/AccessDenied';\n\nconst convertItem = ({ children, isOpen, ...item }) => item;\n\n/**\n * Component that works as a side channel for consumers to notify inventory of new data changes.\n */\nconst ContextInventoryList = ({ showHealth, onRefreshData, ignoreRefresh, ...props }) => {\n    const prevItems = useRef(props.items);\n    const prevSortBy = useRef(props.sortBy);\n\n    useEffect(() => {\n        if (props.hasItems) {\n            onRefreshData({}, ignoreRefresh);\n        }\n    }, []);\n\n    /**\n     * Function to calculate for new changes, this function limits re-renders by checking if previous items are\n     * same as new items.\n     * If items are not passed, it only checks for props sortBy.\n     * @param {*} prevProps previous props - items, hasItems, sortBy.\n     */\n    useEffect(() => {\n        if (props.hasItems && !isEqual(prevItems.current.map(convertItem), props.items.map(convertItem))) {\n            prevItems.current = props.items;\n            onRefreshData({}, ignoreRefresh);\n        }\n\n        if (!props.hasItems && !isEqual(prevSortBy.current, props.sortBy)) {\n            prevSortBy.current = props.sortBy;\n            onRefreshData({}, ignoreRefresh);\n        }\n    });\n\n    return (<Grid gutter=\"sm\" className=\"ins-inventory-list\">\n        <GridItem span={ 12 }>\n            <InventoryEntityTable { ...props } onRefreshData={onRefreshData} />\n        </GridItem>\n    </Grid>);\n};\n\n/**\n * Component that consumes active filters and passes them down to component.\n */\nconst InventoryList = React.forwardRef(({ hasAccess, onRefreshData, ...props }, ref) => {\n    const activeFilters = useSelector(({ entities: { activeFilters } }) => activeFilters);\n\n    if (ref) {\n        ref.current = {\n            onRefreshData: (params, disableRefresh = true) => onRefreshData(params, disableRefresh)\n        };\n    }\n\n    return !hasAccess ?\n        <div className=\"ins-c-inventory__no-access\">\n            <AccessDenied showReturnButton={false} />\n        </div>\n        : (\n            <ContextInventoryList\n                { ...props }\n                activeFilters={ activeFilters }\n                onRefreshData={ onRefreshData }\n            />\n        );\n});\n\nContextInventoryList.propTypes = {\n    ...InventoryList.propTypes,\n    setRefresh: PropTypes.func,\n    onRefreshData: PropTypes.func,\n    ignoreRefresh: PropTypes.bool\n};\nContextInventoryList.defaultProps = {\n    perPage: 50,\n    page: 1,\n    ignoreRefresh: true\n};\nInventoryList.propTypes = {\n    showTags: PropTypes.bool,\n    filterEntities: PropTypes.func,\n    loadEntities: PropTypes.func,\n    showHealth: PropTypes.bool,\n    page: PropTypes.number,\n    perPage: PropTypes.number,\n    sortBy: PropTypes.shape({\n        key: PropTypes.string,\n        direction: PropTypes.string\n    }),\n    items: PropTypes.arrayOf(PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.shape({\n            id: PropTypes.string.isRequired\n        }),\n        PropTypes.shape({\n            account: PropTypes.any,\n            isOpen: PropTypes.bool,\n            title: PropTypes.node\n        })\n    ])),\n    entities: PropTypes.arrayOf(PropTypes.any),\n    customFilters: PropTypes.shape({\n        tags: PropTypes.oneOfType([\n            PropTypes.object,\n            PropTypes.arrayOf(PropTypes.string)\n        ])\n    }),\n    getEntities: PropTypes.func,\n    hideFilters: PropTypes.shape({\n        tags: PropTypes.bool,\n        name: PropTypes.bool,\n        registeredWith: PropTypes.bool,\n        stale: PropTypes.bool,\n        operatingSystem: PropTypes.bool\n    }),\n    onRefreshData: PropTypes.func\n};\n\nInventoryList.defaultProps = {\n    hasAccess: true\n};\n\nexport default InventoryList;\n","/* eslint-disable camelcase */\nimport React from 'react';\nimport { Pagination, PaginationVariant } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\n\n/**\n * Bottom pagination used in table. It can remember what page user is on if user entered the page number in input.\n */\nconst FooterPagination = ({\n    total,\n    page,\n    perPage,\n    direction,\n    isFull,\n    hasAccess,\n    paginationProps,\n    onRefreshData,\n    loaded\n}) => {\n    /**\n     * Thi method sets new page and combines previous props to apply sort, filters etc.\n     * @param {*} event html event to figure if target was input.\n     * @param {*} page current page to change to.\n     */\n    const onSetPage = (_event, pageArg) => onRefreshData({ page: pageArg });\n\n    /**\n     * This method changes per page, it automatically sets page to first one.\n     * It also applies previous sort, filters, etc.\n     * @param {*} _event event is now not used.\n     * @param {*} perPage new perPage set by user.\n     */\n    const onPerPageSelect = (_event, perPageArg) => onRefreshData({ page: 1, per_page: perPageArg });\n\n    return (loaded || !hasAccess) ? (\n        <Pagination\n            { ...isFull && {\n                variant: PaginationVariant.bottom\n            } }\n            isDisabled={!hasAccess}\n            itemCount={ total }\n            page={ page }\n            perPage={ perPage }\n            dropDirection={ direction }\n            onSetPage={ onSetPage }\n            onPerPageSelect={ onPerPageSelect }\n            {...paginationProps}\n        />\n    ) : null;\n};\n\nFooterPagination.propTypes = {\n    perPage: PropTypes.number,\n    total: PropTypes.number,\n    page: PropTypes.number,\n    isFull: PropTypes.bool,\n    hasAccess: PropTypes.bool,\n    direction: PropTypes.string,\n    paginationProps: PropTypes.object,\n    loaded: PropTypes.bool,\n    onRefreshData: PropTypes.func.isRequired\n};\n\nFooterPagination.defaultProps = {\n    total: 0,\n    isFull: false,\n    direction: 'up',\n    hasAccess: true\n};\n\nexport default FooterPagination;\n","/* eslint-disable camelcase */\nimport React, { Fragment, forwardRef, useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector, shallowEqual, useStore, useDispatch } from 'react-redux';\nimport EntityTableToolbar from './EntityTableToolbar';\nimport { TableToolbar } from '@redhat-cloud-services/frontend-components/TableToolbar';\nimport { ErrorState } from '@redhat-cloud-services/frontend-components/ErrorState';\nimport InventoryList from './InventoryList';\nimport Pagination from './Pagination';\nimport AccessDenied from '../../Utilities/AccessDenied';\nimport { loadSystems } from '../../Utilities/sharedFunctions';\nimport isEqual from 'lodash/isEqual';\nimport { entitiesLoading } from '../../store/actions';\n\n/**\n * A helper function to store props and to always return the latest state.\n * For example, EntityTableToolbar wraps OnRefreshData in a callback, so we need this\n * to get the latest props and not the props at the time of when the function is\n * being wrapped in callback.\n */\nconst propsCache = () => {\n    let cache = {};\n\n    const updateProps = (props) => { cache = props; };\n\n    const getProps = () => cache;\n\n    return { updateProps, getProps };\n};\n\n/**\n * This component is used to combine all essential components together:\n *   * EntityTableToolbar - to control top toolbar.\n *   * InventoryList - to allow consumers to change data from outside and contains actual inventory table.\n *   * Pagination - bottom pagination.\n * It also calculates pagination and sortBy from props or from store if consumer passed items or not.\n */\n\nconst InventoryTable = forwardRef(({ // eslint-disable-line react/display-name\n    onRefresh,\n    children,\n    inventoryRef,\n    items,\n    total: propsTotal,\n    page: propsPage,\n    perPage: propsPerPage,\n    showTags,\n    sortBy: propsSortBy,\n    customFilters,\n    hasAccess = true,\n    isFullView = false,\n    getEntities,\n    getTags,\n    hideFilters,\n    paginationProps,\n    errorState = <ErrorState />,\n    autoRefresh,\n    isLoaded,\n    initialLoading,\n    ignoreRefresh,\n    showTagModal,\n    tableProps,\n    isRbacEnabled,\n    hasCheckbox,\n    onRowClick,\n    ...props\n}, ref) => {\n    const hasItems = Boolean(items);\n    const error = useSelector(({ entities }) => (\n        entities?.error\n    ));\n    const page = useSelector(({ entities: { page: invPage } }) => (\n        hasItems ? propsPage : (invPage || 1)\n    )\n    , shallowEqual);\n    const perPage = useSelector(({ entities: { perPage: invPerPage } }) => (\n        hasItems ? propsPerPage : (invPerPage || 50)\n    )\n    , shallowEqual);\n    const total = useSelector(({ entities: { total: invTotal } }) => {\n        if (hasItems) {\n            return propsTotal !== undefined ? propsTotal : items?.length;\n        }\n\n        return invTotal;\n    }, shallowEqual);\n    const pagination = {\n        page,\n        perPage,\n        total\n    };\n    const sortBy = useSelector(({ entities: { sortBy: invSortBy } }) => (\n        hasItems ? propsSortBy : invSortBy\n    ), shallowEqual);\n\n    const reduxLoaded = useSelector(({ entities }) => (\n        hasItems && isLoaded !== undefined ? (isLoaded && entities?.loaded) : entities?.loaded\n    ));\n\n    /**\n     * If initialLoading is set to true, then the component should be in loading state until\n     * entities.loaded is false (and then we can use the redux loading state and forget this one)\n     */\n    const [initialLoadingActive, disableInitialLoading] = useState(initialLoading);\n    useEffect(() => {\n        if (!reduxLoaded) {\n            disableInitialLoading();\n        }\n    }, [reduxLoaded]);\n    const loaded = reduxLoaded && !initialLoadingActive;\n\n    const dispatch = useDispatch();\n    const store = useStore();\n\n    const cache = useRef(propsCache());\n    cache.current.updateProps({\n        page,\n        perPage,\n        items,\n        sortBy,\n        hideFilters,\n        showTags,\n        getEntities,\n        customFilters,\n        hasItems\n    });\n\n    /**\n     * If consumer wants to change data they can call this function via component ref.\n     * @param {*} options new options to be applied, like pagination, filters, etc.\n     */\n    const onRefreshData = (options = {}, disableOnRefresh) => {\n        const { activeFilters } = store.getState().entities;\n        const cachedProps = cache.current?.getProps() || {};\n        const currPerPage = options?.per_page || options?.perPage || cachedProps.perPage;\n\n        const params = {\n            page: cachedProps.page,\n            per_page: currPerPage,\n            items: cachedProps.items,\n            sortBy: cachedProps.sortBy,\n            hideFilters: cachedProps.hideFilters,\n            filters: activeFilters,\n            hasItems: cachedProps.hasItems,\n            ...cachedProps.customFilters,\n            ...options\n        };\n\n        if (onRefresh && !disableOnRefresh) {\n            dispatch(entitiesLoading());\n            onRefresh(params, (options) => {\n                dispatch(\n                    loadSystems(\n                        { ...params, ...options },\n                        cachedProps.showTags,\n                        cachedProps.getEntities\n                    )\n                );\n            });\n        } else {\n            dispatch(\n                loadSystems(\n                    params,\n                    cachedProps.showTags,\n                    cachedProps.getEntities\n                )\n            );\n        }\n    };\n\n    const prevFilters = useRef(customFilters);\n    useEffect(() => {\n        if (autoRefresh && !isEqual(prevFilters.current, customFilters)) {\n            onRefreshData({ page: 1 });\n            prevFilters.current = customFilters;\n        }\n    });\n\n    return (\n        (hasAccess === false && isFullView) ?\n            <AccessDenied\n                title=\"This application requires Inventory permissions\"\n                description={<div>\n                    To view the content of this page, you must be granted\n                    a minimum of inventory permissions from your Organization Administrator.\n                </div>}\n            /> :\n            !error ? <Fragment>\n                <EntityTableToolbar\n                    { ...props }\n                    customFilters={customFilters}\n                    hasAccess={hasAccess}\n                    items={ items }\n                    hasItems={ hasItems }\n                    total={ pagination.total }\n                    page={ pagination.page }\n                    perPage={ pagination.perPage }\n                    showTags={ showTags }\n                    getTags={ getTags }\n                    onRefreshData={onRefreshData}\n                    sortBy={ sortBy }\n                    hideFilters={hideFilters}\n                    paginationProps={paginationProps}\n                    loaded={loaded}\n                    showTagModal={showTagModal}\n                    activeFiltersConfig={{ deleteTitle: 'Reset filters', ...props.activeFiltersConfig }}\n                >\n                    { children }\n                </EntityTableToolbar>\n                <InventoryList\n                    { ...props }\n                    hasCheckbox={hasCheckbox}\n                    onRowClick={onRowClick}\n                    tableProps={tableProps}\n                    customFilters={customFilters}\n                    hasAccess={hasAccess}\n                    ref={ref}\n                    hasItems={ hasItems }\n                    items={ items }\n                    page={ pagination.page }\n                    sortBy={ sortBy }\n                    perPage={ pagination.perPage }\n                    showTags={ showTags }\n                    onRefreshData={onRefreshData}\n                    loaded={loaded}\n                    ignoreRefresh={ignoreRefresh}\n                />\n                <TableToolbar isFooter className=\"ins-c-inventory__table--toolbar\">\n                    <Pagination\n                        hasAccess={hasAccess}\n                        isFull\n                        total={ pagination.total }\n                        page={ pagination.page }\n                        perPage={ pagination.perPage }\n                        hasItems={ hasItems }\n                        onRefreshData={onRefreshData}\n                        paginationProps={paginationProps}\n                        loaded={loaded}\n                    />\n                </TableToolbar>\n            </Fragment> : errorState\n    );\n});\n\nInventoryTable.propTypes = {\n    autoRefresh: PropTypes.bool,\n    onRefresh: PropTypes.func,\n    children: PropTypes.node,\n    inventoryRef: PropTypes.object,\n    items: PropTypes.array,\n    total: PropTypes.number,\n    page: PropTypes.number,\n    perPage: PropTypes.number,\n    showTags: PropTypes.bool,\n    getTags: PropTypes.func,\n    sortBy: PropTypes.object,\n    customFilters: PropTypes.any,\n    hasAccess: PropTypes.bool,\n    isFullView: PropTypes.bool,\n    getEntities: PropTypes.func,\n    hideFilters: PropTypes.object,\n    paginationProps: PropTypes.object,\n    errorState: PropTypes.node,\n    isLoaded: PropTypes.bool,\n    initialLoading: PropTypes.bool,\n    ignoreRefresh: PropTypes.bool,\n    showTagModal: PropTypes.bool,\n    activeFiltersConfig: PropTypes.object,\n    tableProps: PropTypes.object,\n    isRbacEnabled: PropTypes.bool,\n    hasCheckbox: PropTypes.bool,\n    onRowClick: PropTypes.func\n};\n\nexport default InventoryTable;\n","import { useState } from 'react';\nimport { TEXTUAL_CHIP } from '../../Utilities/index';\n\nexport const textFilterState = { textFilter: '' };\nexport const TEXT_FILTER = 'TEXT_FILTER';\nexport const textFilterReducer = (_state, { type, payload }) => ({\n    ...type === TEXT_FILTER && {\n        textFilter: payload\n    }\n});\n\nexport const useTextFilter = ([state, dispatch] = [textFilterState]) => {\n    const [stateValue, setStateValue] = useState('');\n    const value = dispatch ? state.textFilter : stateValue;\n    const setValue = dispatch ? (newValue) => dispatch({ type: TEXT_FILTER, payload: newValue }) : setStateValue;\n\n    const filter = {\n        label: 'Name',\n        value: 'name-filter',\n        filterValues: {\n            placeholder: 'Filter by name',\n            value,\n            onChange: (_e, value) => setValue(value)\n        }\n    };\n    const chip = value.length > 0 ? [{\n        category: 'Display name',\n        type: TEXTUAL_CHIP,\n        chips: [\n            { name: value }\n        ]\n    }] : [];\n    return [filter, chip, value, setValue];\n};\n","import { useState } from 'react';\nimport { STALE_CHIP, staleness } from '../../Utilities/constants';\n\nexport const stalenessFilterState = { stalenessFilter: [] };\nexport const STALENESS_FILTER = 'STALENESS_FILTER';\nexport const stalenessFilterReducer = (_state, { type, payload }) => ({\n    ...type === STALENESS_FILTER && {\n        stalenessFilter: payload\n    }\n});\n\nexport const useStalenessFilter = ([state, dispatch] = [stalenessFilterState]) => {\n    let [stalenessStateValue, setStateValue] = useState([]);\n    const stalenessValue = dispatch ? state.stalenessFilter : stalenessStateValue;\n    const setValue = dispatch ? (newValue) => dispatch({ type: STALENESS_FILTER, payload: newValue }) : setStateValue;\n\n    const filter = {\n        label: 'Status',\n        value: 'stale-status',\n        type: 'checkbox',\n        filterValues: {\n            value: stalenessValue,\n            onChange: (_e, value) => setValue(value),\n            items: staleness\n        }\n    };\n    const chip = stalenessValue?.length > 0 ? [{\n        category: 'Status',\n        type: STALE_CHIP,\n        chips: staleness.filter(({ value }) => stalenessValue.includes(value))\n        .map(({ label, ...props }) => ({ name: label, ...props }))\n    }] : [];\n    return [filter, chip, stalenessValue, setValue];\n};\n","import { useState } from 'react';\nimport { REGISTERED_CHIP, registered } from '../../Utilities/constants';\n\nexport const registeredWithFilterState = { registeredWithFilter: [] };\nexport const REGISTERED_WITH_FILTER = 'REGISTERED_WITH_FILTER';\nexport const registeredWithFilterReducer = (_state, { type, payload }) => ({\n    ...type === REGISTERED_WITH_FILTER && {\n        registeredWithFilter: payload\n    }\n});\n\nexport const useRegisteredWithFilter = ([state, dispatch] = [registeredWithFilterState]) => {\n    let [registeredWithStateValue, setStateValue] = useState([]);\n    const registeredWithValue = dispatch ? state.registeredWithFilter : registeredWithStateValue;\n    const setValue = dispatch ? (newValue) => dispatch({ type: REGISTERED_WITH_FILTER, payload: newValue }) : setStateValue;\n\n    const filter = {\n        label: 'Data Collector',\n        value: 'data-collector-registered-with',\n        type: 'checkbox',\n        filterValues: {\n            value: registeredWithValue,\n            onChange: (_e, value) => setValue(value),\n            items: registered\n        }\n    };\n    const chip = registeredWithValue?.length > 0 ? [{\n        category: 'Data Collector',\n        type: REGISTERED_CHIP,\n        chips: registered.filter(({ value }) => registeredWithValue.includes(value))\n        .map(({ label, ...props }) => ({ name: label, ...props }))\n    }] : [];\n    return [filter, chip, registeredWithValue, setValue];\n};\n","import { useTagsFilter as tagsFilter } from '@redhat-cloud-services/frontend-components/FilterHooks';\n\nexport const useTagsFilter = (\n    allTags = [],\n    loaded = false,\n    additionalTagsCount = 0,\n    onShowMoreClick,\n    stateMapper\n) => {\n    const {\n        filter,\n        chips,\n        selectedTags,\n        setValue,\n        filterTagsBy,\n        seFilterTagsBy\n    } = tagsFilter(\n        allTags,\n        loaded,\n        additionalTagsCount,\n        onShowMoreClick,\n        stateMapper,\n        'system'\n    );\n\n    return {\n        tagsFilter: {\n            label: 'Tags',\n            value: 'tags',\n            type: 'group',\n            placeholder: 'Filter system by tag',\n            filterValues: {\n                ...filter\n            }\n        },\n        tagsChip: chips,\n        selectedTags,\n        setSelectedTags: setValue,\n        filterTagsBy,\n        seFilterTagsBy\n    };\n};\n","import { useState } from 'react';\nimport { RHCD_FILTER_KEY, rhcdOptions } from '../../Utilities/index';\n\nexport const rhcdFilterState = { rhcdFilter: null };\nexport const RHCD_FILTER = 'RHCD_FILTER';\nexport const rhcdFilterReducer = (_state, { type, payload }) => ({\n    ...type === RHCD_FILTER && {\n        rhcdFilter: payload\n    }\n});\n\nexport const useRhcdFilter = ([state, dispatch] = [rhcdFilterState]) => {\n    let [rhcdStateValue, setStateValue] = useState([]);\n    const rhcdValue = dispatch ? state.rhcdFilter : rhcdStateValue;\n    const setValue = dispatch ? (newValue) => dispatch({ type: RHCD_FILTER, payload: newValue }) : setStateValue;\n\n    const filter = {\n        label: 'RHC status',\n        value: 'rhc-status',\n        type: 'checkbox',\n        filterValues: {\n            value: rhcdValue,\n            onChange: (_e, value) => setValue(value),\n            items: rhcdOptions\n        }\n    };\n    const chip = rhcdValue?.length > 0 ? [{\n        category: 'RHC status',\n        type: RHCD_FILTER_KEY,\n        chips: rhcdOptions.filter(({ value }) => rhcdValue.includes(value))\n        .map(({ label, ...props }) => ({ name: label, ...props }))\n    }] : [];\n    return [filter, chip, rhcdValue, setValue];\n};\n","import { useState } from 'react';\nimport { UPDATE_METHOD_KEY, updateMethodOptions } from '../../Utilities/index';\n\nexport const updateMethodFilterState = { updateMethodFilter: null };\nexport const UPDATE_METHOD_FILTER = 'UPDATE_METHOD_FILTER';\nexport const updateMethodFilterReducer = (_state, { type, payload }) => ({\n    ...type === UPDATE_METHOD_FILTER && {\n        updateMethodFilter: payload\n    }\n});\n\nexport const useUpdateMethodFilter = ([state, dispatch] = [updateMethodFilterState]) => {\n    let [filterStateValue, setStateValue] = useState([]);\n    const updateMethodValue = dispatch ? state.updateMethodFilter : filterStateValue;\n    const setValue = dispatch ? (newValue) => dispatch({ type: UPDATE_METHOD_FILTER, payload: newValue }) : setStateValue;\n\n    const filter = {\n        label: 'System Update Method',\n        value: 'update-method',\n        type: 'checkbox',\n        filterValues: {\n            value: updateMethodValue,\n            onChange: (_e, value) => setValue(value),\n            items: updateMethodOptions\n        }\n    };\n    const chip = updateMethodValue?.length > 0 ? [{\n        category: 'System Update Method',\n        type: UPDATE_METHOD_KEY,\n        chips: updateMethodOptions.filter(({ value }) => updateMethodValue.includes(value))\n        .map(({ label, ...props }) => ({ name: label, ...props }))\n    }] : [];\n    return [filter, chip, updateMethodValue, setValue];\n};\n","export * from './useTextFilter';\nexport * from './useStalenessFilter';\nexport * from './useRegisteredWithFilter';\nexport * from './useTagsFilter';\nexport * from './useOperatingSystemFilter';\nexport * from './useRhcdFilter';\nexport * from './useUpdateMethodFilter';\nexport const filtersReducer = (reducersList) => (state, action) => reducersList.reduce((acc, curr) => ({\n    ...acc,\n    ...curr?.(state, action)\n}), state);\n","import { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchOperatingSystems } from '../../store/inventory-actions';\nimport {\n    buildOSFilterChip,\n    getSelectedOsFilterVersions,\n    groupOSFilterVersions,\n    onOSFilterChange,\n    toGroupSelection\n} from '../../Utilities/OperatingSystemFilterHelpers';\n\nexport const OPERATING_SYSTEM_FILTER = 'OPERATING_SYSTEM_FILTER';\nexport const operatingSystemFilterReducer = (_state, { type, payload }) => ({\n    ...type === OPERATING_SYSTEM_FILTER && {\n        operatingSystemFilter: payload\n    }\n});\n\n/**\n* OS version filter hook.\n* @param {Array} apiParams - an array containing parameters for GET /system_profile/operating_system call\n* @return {Array} An array containing config object, chips array and value setter function.\n*/\nconst useOperatingSystemFilter = (apiParams = []) => {\n    const dispatch = useDispatch();\n    const operatingSystems = useSelector(({ entities }) => entities?.operatingSystems);\n    const operatingSystemsLoaded = useSelector(({ entities }) => entities?.operatingSystemsLoaded) || false;\n\n    // selected versions has the boolean set to true\n    const [selected, setSelected] = useState({});\n    const [groups, setGroups] = useState([]);\n\n    useEffect(() => {\n        dispatch(fetchOperatingSystems(apiParams));\n    }, []);\n\n    useEffect(() => {\n        const newGroups = groupOSFilterVersions(operatingSystems);\n        setGroups((operatingSystems || []).length === 0\n            ? [{ items: [{ label: 'No versions available' }] }]\n            : newGroups);\n        setSelected(\n            toGroupSelection(\n                getSelectedOsFilterVersions(selected),\n                (operatingSystems || []).map(({ value }) => value)\n            )\n        );\n    }, [operatingSystems]);\n\n    // PrimaryToolbar filter configuration\n    const config = useMemo(() => ({\n        label: 'Operating System',\n        value: 'operating-system-filter',\n        type: 'group',\n        filterValues: {\n            selected,\n            groups,\n            onChange: (event, newSelection, clickedGroup, clickedItem) => {\n                setSelected(onOSFilterChange(event, newSelection, clickedGroup, clickedItem));\n            }\n        }\n    }), [selected, groups]);\n\n    const chips = useMemo(() => buildOSFilterChip(selected, operatingSystems), [selected, operatingSystems]);\n\n    // receives an array of OS version values, e.g., ['7.3', '9.0']\n    const setValue = useCallback((versions = []) => {\n        setSelected(\n            toGroupSelection(\n                versions,\n                operatingSystemsLoaded\n                    ? (operatingSystems || []).map(({ value }) => value)\n                    : undefined\n            )\n        );\n    }, [operatingSystemsLoaded, operatingSystems]);\n\n    const value = useMemo(() => getSelectedOsFilterVersions(selected), [selected]);\n\n    return [config, chips, value, setValue];\n};\n\nexport default useOperatingSystemFilter;\n"],"names":["AccessDenied","title","description","props","className","content","propTypes","PropTypes","defaultProps","updateGroupSelectionIdentifier","selection","major","set","Object","values","filter","v","every","Boolean","toGroupSelection","value","availableVersions","undefined","reduce","acc","version","split","includes","compareVersions","a","b","asc","compare","coerce","rcompare","getSelectedOsFilterVersions","selected","versions","entries","forEach","match","push","groupOSFilterVersions","groups","prev","label","groupSelectable","type","items","sort","sorted","map","group","buildOSFilterChip","operatingSystemValue","operatingSystems","minors","chips","name","length","category","OS_CHIP","onOSFilterChange","event","clickedGroup","clickedItem","newSelection","assign","mapValues","omit","buildCells","item","columns","extra","key","composed","renderFunc","data","Fragment","TitleColumn","get","id","createRows","rows","actions","expandable","noSystemsTable","cells","colSpan","dataLabel","flatten","oneItem","children","isOpen","actionProps","parent","fullWidth","onDeleteFilter","deleted","currFilter","deletedItem","includesSortable","transforms","fn","toString","EntityTableToolbar","total","page","perPage","filterConfig","hasItems","actionsConfig","activeFiltersConfig","showTags","getTags","sortBy","customFilters","hasAccess","bulkSelect","hideFilters","paginationProps","onRefreshData","loaded","showTagModal","dispatch","useDispatch","reducer","useReducer","filtersReducer","textFilterReducer","stalenessFilterReducer","registeredWithFilterReducer","tagsFilterReducer","operatingSystemFilterReducer","rhcdFilterReducer","updateMethodFilterReducer","textFilterState","stalenessFilterState","registeredWithFilterState","tagsFilterState","rhcdFilterState","updateMethodFilterState","filters","useSelector","entities","activeFilters","allTagsLoaded","allTags","additionalTagsCount","useTextFilter","nameFilter","nameChip","textFilter","setTextFilter","useStalenessFilter","stalenessFilter","stalenessChip","staleFilter","setStaleFilter","useRegisteredWithFilter","registeredFilter","registeredChip","registeredWithFilter","setRegisteredWithFilter","useRhcdFilter","rhcdFilterConfig","rhcdFilterChips","rhcdFilterValue","setRhcdFilterValue","useOperatingSystemFilter","osFilterConfig","osFilterChips","osFilterValue","setOsFilterValue","useUpdateMethodFilter","updateMethodConfig","updateMethodChips","updateMethodValue","setUpdateMethodValue","isUpdateMethodEnabled","useFeatureFlag","useTagsFilter","toggleTagModal","tagsFilter","tagsChip","selectedTags","setSelectedTags","filterTagsBy","seFilterTagsBy","debounceGetAllTags","useCallback","debounce","config","options","fetchAllTags","pagination","tags","enabledFilters","all","stale","registeredWith","operatingSystem","rhcdFilter","updateMethodFilter","onRefreshDataInner","updateData","debouncedRefresh","direction","useEffect","reduceFilters","tagFilters","osFilter","onSetFilter","filterKey","refresh","newFilters","oneFilter","prototype","hasOwnProperty","call","shouldReload","debounced","trimmedValue","trim","textualFilter","find","TEXT_FILTER","onSetTextFilter","mapGroups","deleteMapper","TEXTUAL_CHIP","TAG_CHIP","onApplyTags","onDeleteTag","STALE_CHIP","REGISTERED_CHIP","xor","RHCD_FILTER_KEY","UPDATE_METHOD_KEY","inventoryFilters","PrimaryToolbar","isDisabled","filterValues","placeholder","toLowerCase","onDelete","e","isAll","restDeleted","clearFilters","setFilter","itemCount","onSetPage","_e","newPage","onPerPageSelect","newPerPage","per_page","Skeleton","size","SkeletonSize","TagsModal","onApply","arrayToSelection","onToggleModal","onClearFilters","onRefresh","hasCheckbox","isLoaded","disableDefaultColumns","EmptyState","variant","EmptyStateVariant","Title","headingLevel","EmptyStateBody","EntityTable","onExpandClick","tableProps","onSort","isExpandable","onRowClick","noDetail","columnsProp","columnsCounter","history","useHistory","location","useLocation","columnsRedux","next","index","findIndex","disabledColumns","Array","isArray","defaultColumnsFiltered","useMemo","defaultColumns","disableColumns","isColumnEnabled","mergeArraysByKey","join","useColumns","cellFormatters","width","cellWidth","isStatic","sortable","createColumns","RowWrapper","actionResolver","PfTable","_event","pathname","slice","gridBreakPoint","TableGridBreakpoint","setSort","onSortChange","sortKey","onSelect","checked","rowId","row","selectEntity","onCollapse","isStickyHeader","TableHeader","TableBody","SkeletonTable","colSize","rowSize","showActions","showHealth","TableVariant","convertItem","ContextInventoryList","ignoreRefresh","prevItems","useRef","prevSortBy","isEqual","current","Grid","gutter","GridItem","span","InventoryList","React","ref","params","disableRefresh","showReturnButton","setRefresh","filterEntities","loadEntities","account","getEntities","FooterPagination","isFull","Pagination","PaginationVariant","dropDirection","pageArg","perPageArg","InventoryTable","forwardRef","inventoryRef","propsTotal","propsPage","propsPerPage","propsSortBy","isFullView","errorState","ErrorState","autoRefresh","initialLoading","isRbacEnabled","error","invPage","shallowEqual","invPerPage","invTotal","invSortBy","reduxLoaded","useState","initialLoadingActive","disableInitialLoading","store","useStore","cache","updateProps","getProps","propsCache","disableOnRefresh","getState","cachedProps","currPerPage","entitiesLoading","loadSystems","prevFilters","deleteTitle","TableToolbar","isFooter","_state","payload","state","stateValue","setStateValue","setValue","newValue","onChange","chip","STALENESS_FILTER","stalenessStateValue","stalenessValue","staleness","REGISTERED_WITH_FILTER","registeredWithStateValue","registeredWithValue","registered","onShowMoreClick","stateMapper","RHCD_FILTER","rhcdStateValue","rhcdValue","rhcdOptions","UPDATE_METHOD_FILTER","filterStateValue","updateMethodOptions","reducersList","action","curr","operatingSystemFilter","apiParams","operatingSystemsLoaded","setSelected","setGroups","fetchOperatingSystems","newGroups"],"sourceRoot":""}