{"version":3,"file":"js/5768.d933c9a97ae1f2bd558f.js","mappings":"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","sources":["webpack:///./src/components/InventoryGroups/Modals/RemoveHostsFromGroupModal.js","webpack:///./src/components/SystemDetails/GeneralInfo.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/Main/Main.js","webpack:///./src/components/InventoryGroups/SmallComponents/CreateGroupButton.js","webpack:///./src/components/InventoryGroups/Modals/AddSelectedHostsToGroupModal.js","webpack:///./src/Utilities/hooks/useBulkSelectConfig.js","webpack:///./src/routes/InventoryTable.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Modal from './Modal';\nimport apiWithToast from '../utils/apiWithToast';\nimport { useDispatch } from 'react-redux';\nimport { removeHostsFromGroup } from '../utils/api';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport { Text } from '@patternfly/react-core';\n\nconst schema = (groupName, hosts) => ({\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'warning-message',\n      label:\n        hosts.length === 1 ? (\n          <Text>\n            <strong>{hosts[0].display_name}</strong> will no longer be part of{' '}\n            <strong>{groupName}</strong> and its configuration will be impacted.\n          </Text>\n        ) : (\n          <Text>\n            <strong>{hosts.length}</strong> systems will no longer be part of{' '}\n            <strong>{groupName}</strong> and their configuration will be\n            impacted.\n          </Text>\n        ),\n    },\n  ],\n});\n\nconst RemoveHostsFromGroupModal = ({\n  isModalOpen,\n  setIsModalOpen,\n  modalState: hosts,\n  reloadData,\n}) => {\n  const dispatch = useDispatch();\n  // the current iteration of groups feature a host can be in at maximum one group\n  const { name: groupName, id: groupId } = hosts[0].groups[0];\n\n  const handleRemoveHosts = () => {\n    const statusMessages = {\n      onSuccess: {\n        title: `${hosts.length} ${\n          hosts.length > 1 ? 'systems' : 'system'\n        } removed from ${groupName}`,\n      },\n      onError: {\n        title: `Failed to remove ${hosts.length} ${\n          hosts.length > 1 ? 'systems' : 'system'\n        } from ${groupName}`,\n      },\n    };\n\n    apiWithToast(\n      dispatch,\n      () =>\n        removeHostsFromGroup(\n          groupId,\n          hosts.map(({ id }) => id)\n        ),\n      statusMessages\n    );\n  };\n\n  return (\n    <Modal\n      isModalOpen={isModalOpen}\n      closeModal={() => setIsModalOpen(false)}\n      title=\"Remove from group\"\n      variant=\"danger\"\n      submitLabel=\"Remove\"\n      schema={schema(groupName, hosts)}\n      onSubmit={handleRemoveHosts}\n      reloadData={reloadData}\n    />\n  );\n};\n\nRemoveHostsFromGroupModal.propTypes = {\n  modalState: PropTypes.arrayOf(\n    PropTypes.shape({\n      // eslint-disable-next-line camelcase\n      display_name: PropTypes.string,\n      id: PropTypes.string,\n      groups: PropTypes.arrayOf(\n        PropTypes.shape({\n          id: PropTypes.string,\n          name: PropTypes.string,\n        })\n      ),\n    })\n  ).isRequired,\n  isModalOpen: PropTypes.bool.isRequired,\n  setIsModalOpen: PropTypes.func.isRequired,\n  reloadData: PropTypes.func,\n};\n\nexport default RemoveHostsFromGroupModal;\n","import React from 'react';\n\nimport GeneralInformation from '../GeneralInfo/GeneralInformation';\nimport useFeatureFlag from '../../Utilities/useFeatureFlag';\nexport { default as TextInputModal } from '../GeneralInfo/TextInputModal';\n\nconst GeneralInfoTab = (props) => {\n  const enableEdgeImageDetails = useFeatureFlag(\n    'edgeParity.inventory-system-detail'\n  );\n  const enableEdgeInventoryListDetails = useFeatureFlag(\n    'edgeParity.inventory-list'\n  );\n  return (\n    <GeneralInformation\n      {...props}\n      showImageDetails={\n        enableEdgeImageDetails && enableEdgeInventoryListDetails\n      }\n    />\n  );\n};\n\nexport default GeneralInfoTab;\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useEffect } from 'react';\nimport classNames from 'classnames';\nimport '../Main/main.css';\nexport var Main = function (_a) {\n    var children = _a.children, className = _a.className, props = __rest(_a, [\"children\", \"className\"]);\n    useEffect(function () {\n        console.error(\"Using deprecated \\\"Main\\\" component. Do not use it. Either remove it from your JSX or replace it by \\\"section\\\" HTML element.\");\n    }, []);\n    return (_jsx(\"section\", __assign({}, props, { className: \"\".concat(classNames(className, 'pf-l-page__main-section pf-c-page__main-section')) }, { children: children })));\n};\nexport var InternalMain = Main;\nexport default Main;\n//# sourceMappingURL=Main.js.map","import React from 'react';\nimport { Button, Text, Tooltip } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport { usePermissionsWithContext } from '@redhat-cloud-services/frontend-components-utilities/RBACHook';\nimport { NO_MODIFY_GROUPS_TOOLTIP_MESSAGE } from '../../../constants';\n\nexport const CreateGroupButton = ({ closeModal }) => {\n  const { hasAccess: canModifyGroups } = usePermissionsWithContext([\n    'inventory:groups:write',\n  ]);\n\n  return (\n    <>\n      <Text>Or</Text>\n      {canModifyGroups ? (\n        <Button variant=\"secondary\" className=\"pf-u-w-50\" onClick={closeModal}>\n          Create a new group\n        </Button>\n      ) : (\n        <Tooltip content={NO_MODIFY_GROUPS_TOOLTIP_MESSAGE}>\n          <Button variant=\"secondary\" className=\"pf-u-w-50\" isAriaDisabled>\n            Create a new group\n          </Button>\n        </Tooltip>\n      )}\n    </>\n  );\n};\n\nCreateGroupButton.propTypes = {\n  closeModal: PropTypes.func,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Modal from './Modal';\nimport { addHostsToGroupById } from '../utils/api';\nimport apiWithToast from '../utils/apiWithToast';\nimport { useDispatch } from 'react-redux';\nimport { CreateGroupButton } from '../SmallComponents/CreateGroupButton';\nimport { addHostSchema } from './ModalSchemas/schemes';\nimport CreateGroupModal from './CreateGroupModal';\n\nconst AddSelectedHostsToGroupModal = ({\n  isModalOpen,\n  setIsModalOpen,\n  modalState: hosts,\n  reloadData,\n}) => {\n  const dispatch = useDispatch();\n\n  const [isCreateGroupModalOpen, setIsCreateGroupModalOpen] = useState(false);\n  const handleAddDevices = (values) => {\n    const { group } = values;\n    const statusMessages = {\n      onSuccess: {\n        title: 'Success',\n        description: `System(s) have been added to ${group.name} successfully`,\n      },\n      onError: {\n        title: 'Error',\n        description: `Failed to add ${\n          hosts.length > 1 ? `${hosts.length} systems` : hosts[0].display_name\n        } to ${group.name}`,\n      },\n    };\n\n    apiWithToast(\n      dispatch,\n      () =>\n        addHostsToGroupById(\n          group.id,\n          hosts.map(({ id }) => id)\n        ),\n      statusMessages\n    );\n  };\n\n  return (\n    <>\n      {!isCreateGroupModalOpen && (\n        <Modal\n          isModalOpen={isModalOpen}\n          closeModal={() => setIsModalOpen(false)}\n          title=\"Add to group\"\n          submitLabel=\"Add\"\n          schema={addHostSchema(hosts)}\n          additionalMappers={{\n            'create-group-btn': {\n              component: CreateGroupButton,\n              closeModal: () => setIsCreateGroupModalOpen(true),\n            },\n          }}\n          onSubmit={handleAddDevices}\n          reloadData={reloadData}\n        />\n      )}\n      {isCreateGroupModalOpen && (\n        <CreateGroupModal\n          isModalOpen={isCreateGroupModalOpen}\n          setIsModalOpen={setIsCreateGroupModalOpen}\n          //modal before prop tells create group modal that it should\n          //reopen add host modal when user closes create group modal\n          modalBefore={true}\n          setterOfModalBefore={setIsModalOpen}\n        />\n      )}\n    </>\n  );\n};\n\nAddSelectedHostsToGroupModal.propTypes = {\n  modalState: PropTypes.arrayOf(\n    PropTypes.shape({\n      // eslint-disable-next-line camelcase\n      display_name: PropTypes.string,\n      id: PropTypes.string,\n    })\n  ).isRequired,\n  isModalOpen: PropTypes.bool,\n  setIsModalOpen: PropTypes.func,\n  reloadData: PropTypes.func,\n};\n\nexport default AddSelectedHostsToGroupModal;\n","/* eslint-disable camelcase */\nimport { Spinner } from '@patternfly/react-core';\nimport { flatten, map } from 'lodash';\nimport React, { Fragment, useCallback, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as actions from '../../store/actions';\nimport { loadSystems } from '../sharedFunctions';\nimport useFetchBatched from './useFetchBatched';\n\nexport const useBulkSelectConfig = (\n  selected,\n  globalFilter,\n  total,\n  rows,\n  loaded\n) => {\n  const [isBulkLoading, setBulkLoading] = useState(false);\n  const { fetchBatched } = useFetchBatched();\n  const dispatch = useDispatch();\n  const onSelectRows = (id, isSelected) =>\n    dispatch(actions.selectEntity(id, isSelected));\n  const calculateSelected = () => (selected ? selected.size : 0);\n  const { activeFilters } = useSelector(({ entities }) => entities);\n\n  const getEntitiesWrapper = async (filters, { page, per_page }) => {\n    const resp = loadSystems({ page, per_page, ...filters });\n\n    const data = await resp.payload;\n    return data;\n  };\n\n  const calculateChecked = (rows = [], selected) =>\n    rows.every(({ id }) => selected && selected.has(id))\n      ? rows.length > 0\n      : rows.some(({ id }) => selected && selected.has(id)) && null;\n\n  const fetchAllSystemIds = useCallback((filters, total) => {\n    return fetchBatched(getEntitiesWrapper, total, filters);\n  }, []);\n\n  const selectAllIds = async (selected = true) => {\n    setBulkLoading(true);\n    const data = await fetchAllSystemIds(\n      { filters: activeFilters, globalFilter },\n      total\n    );\n    const results = flatten(map(data, 'results'));\n    dispatch(actions.selectEntity(results, selected));\n    setBulkLoading(false);\n  };\n\n  return {\n    id: 'bulk-select-systems',\n    items: [\n      {\n        title: 'Select none (0)',\n        onClick: () => {\n          onSelectRows(-1, false);\n        },\n        props: { isDisabled: !selected },\n      },\n      {\n        ...(loaded && rows && rows.length > 0\n          ? {\n              title: `Select page (${rows.length})`,\n              onClick: () => {\n                onSelectRows(0, true);\n              },\n            }\n          : {}),\n      },\n      {\n        ...(loaded && rows && rows.length > 0\n          ? {\n              title: `Select all (${total})`,\n              onClick: async () => {\n                await selectAllIds();\n              },\n            }\n          : {}),\n      },\n    ],\n    checked: calculateChecked(rows, selected),\n    onSelect: (value) => {\n      onSelectRows(0, value);\n    },\n    toggleProps: {\n      'data-ouia-component-type': 'bulk-select-toggle-button',\n      children: isBulkLoading\n        ? [\n            <Fragment key=\"sd\">\n              <Spinner size=\"sm\" />\n              {`${calculateSelected()} selected`}\n            </Fragment>,\n          ]\n        : `${calculateSelected()} selected`,\n    },\n  };\n};\n","/* eslint-disable camelcase */\nimport React, { useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport './inventory.scss';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport * as actions from '../store/actions';\nimport {\n  Grid,\n  GridItem,\n  Tab,\n  TabTitleText,\n  Tabs,\n} from '@patternfly/react-core';\nimport { addNotification as addNotificationAction } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport DeleteModal from '../Utilities/DeleteModal';\nimport { TextInputModal } from '../components/SystemDetails/GeneralInfo';\nimport flatMap from 'lodash/flatMap';\nimport {\n  HOST_GROUP_CHIP,\n  RHCD_FILTER_KEY,\n  UPDATE_METHOD_KEY,\n  generateFilter,\n  useWritePermissions,\n} from '../Utilities/constants';\nimport { InventoryTable as InventoryTableCmp } from '../components/InventoryTable';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\nimport AddSelectedHostsToGroupModal from '../components/InventoryGroups/Modals/AddSelectedHostsToGroupModal';\nimport useFeatureFlag from '../Utilities/useFeatureFlag';\nimport AsyncComponent from '@redhat-cloud-services/frontend-components/AsyncComponent';\nimport { useBulkSelectConfig } from '../Utilities/hooks/useBulkSelectConfig';\nimport RemoveHostsFromGroupModal from '../components/InventoryGroups/Modals/RemoveHostsFromGroupModal';\n\nconst mapTags = ({ category, values }) =>\n  values.map(\n    ({ tagKey, value }) =>\n      `${category ? `${category}/` : ''}${tagKey}${value ? `=${value}` : ''}`\n  );\n\nconst filterMapper = {\n  staleFilter: ({ staleFilter }, searchParams) =>\n    staleFilter.forEach((item) => searchParams.append('status', item)),\n  osFilter: ({ osFilter }, searchParams) =>\n    osFilter?.forEach((item) => searchParams.append('operating_system', item)),\n  registeredWithFilter: ({ registeredWithFilter }, searchParams) =>\n    registeredWithFilter?.forEach((item) =>\n      searchParams.append('source', item)\n    ),\n  value: ({ value, filter }, searchParams) =>\n    value === 'hostname_or_id' &&\n    Boolean(filter) &&\n    searchParams.append('hostname_or_id', filter),\n  tagFilters: ({ tagFilters }, searchParams) =>\n    tagFilters?.length > 0 &&\n    searchParams.append('tags', flatMap(tagFilters, mapTags)),\n  rhcdFilter: ({ rhcdFilter }, searchParams) =>\n    rhcdFilter?.forEach((item) => searchParams.append(RHCD_FILTER_KEY, item)),\n  lastSeenFilter: ({ lastSeenFilter }, searchParams) =>\n    Object.keys(lastSeenFilter || {})?.forEach(\n      (item) =>\n        item === 'mark' &&\n        searchParams.append('last_seen', lastSeenFilter[item])\n    ),\n  updateMethodFilter: ({ updateMethodFilter }, searchParams) =>\n    updateMethodFilter?.forEach((item) =>\n      searchParams.append(UPDATE_METHOD_KEY, item)\n    ),\n  hostGroupFilter: ({ hostGroupFilter }, searchParams) =>\n    hostGroupFilter?.forEach((item) =>\n      searchParams.append(HOST_GROUP_CHIP, item)\n    ),\n};\n\nconst calculateFilters = (searchParams, filters = []) => {\n  filters.forEach((filter) => {\n    Object.keys(filter).forEach((key) => {\n      filterMapper?.[key]?.(filter, searchParams);\n    });\n  });\n  return searchParams;\n};\n\nexport const calculatePagination = (searchParams, page, perPage) => {\n  const currSearch = new URLSearchParams(location.search);\n  const newPage = page !== undefined ? page : currSearch.get('page');\n  const newPerPage =\n    perPage !== undefined ? perPage : currSearch.get('per_page');\n  !isNaN(parseInt(newPage)) && searchParams.append('page', newPage);\n  !isNaN(parseInt(newPerPage)) && searchParams.append('per_page', newPerPage);\n};\n\nconst Inventory = ({\n  status,\n  source,\n  filterbyName,\n  tagsFilter,\n  operatingSystem,\n  rhcdFilter,\n  updateMethodFilter,\n  lastSeenFilter,\n  page,\n  perPage,\n  initialLoading,\n  hasAccess,\n  hostGroupFilter,\n}) => {\n  const history = useHistory();\n  const chrome = useChrome();\n  const inventory = useRef(null);\n  const [isModalOpen, handleModalToggle] = useState(false);\n  const [currentSystem, setCurrentSystem] = useState({});\n  const [filters, onSetfilters] = useState(\n    generateFilter(\n      status,\n      source,\n      tagsFilter,\n      filterbyName,\n      operatingSystem,\n      rhcdFilter,\n      updateMethodFilter,\n      hostGroupFilter,\n      lastSeenFilter\n    )\n  );\n  const [activeTabKey, setActiveTabkey] = useState(0);\n  const handleTabClick = (_event, tabIndex) => setActiveTabkey(tabIndex);\n  const [ediOpen, onEditOpen] = useState(false);\n  const [addHostGroupModalOpen, setAddHostGroupModalOpen] = useState(false);\n  const [removeHostsFromGroupModalOpen, setRemoveHostsFromGroupModalOpen] =\n    useState(false);\n  const [globalFilter, setGlobalFilter] = useState();\n  const writePermissions = useWritePermissions();\n  const rows = useSelector(({ entities }) => entities?.rows, shallowEqual);\n  const loaded = useSelector(({ entities }) => entities?.loaded);\n  const selected = useSelector(({ entities }) => entities?.selected);\n  const total = useSelector(({ entities }) => entities?.total);\n  const dispatch = useDispatch();\n  const groupsEnabled = useFeatureFlag('hbi.ui.inventory-groups');\n  const bulkSelectConfig = useBulkSelectConfig(\n    selected,\n    globalFilter,\n    total,\n    rows,\n    loaded\n  );\n\n  const onRefresh = (options, callback) => {\n    onSetfilters(options?.filters);\n    const searchParams = new URLSearchParams();\n    calculateFilters(searchParams, options?.filters);\n    // eslint-disable-next-line camelcase\n    calculatePagination(searchParams, options?.page, options?.per_page);\n    const search = searchParams.toString();\n    history.push({\n      search,\n      hash: location.hash,\n    });\n\n    if (callback) {\n      callback(options);\n    }\n  };\n\n  const EdgeParityEnabled = useFeatureFlag('edgeParity.inventory-list');\n\n  useEffect(() => {\n    chrome.updateDocumentTitle('Systems | Red Hat Insights');\n    chrome?.hideGlobalFilter?.(false);\n    chrome.appAction('system-list');\n    chrome.appObjectId();\n    chrome.on('GLOBAL_FILTER_UPDATE', ({ data }) => {\n      const [workloads, SID, tags] = chrome.mapGlobalFilter(data, false, true);\n      setGlobalFilter({\n        tags,\n        filter: {\n          ...globalFilter?.filter,\n          system_profile: {\n            ...globalFilter?.filter?.system_profile,\n            ...(workloads?.SAP?.isSelected && { sap_system: true }),\n            ...(workloads &&\n              workloads['Ansible Automation Platform']?.isSelected && {\n                ansible: 'not_nil',\n              }),\n            ...(workloads?.['Microsoft SQL']?.isSelected && {\n              mssql: 'not_nil',\n            }),\n            ...(SID?.length > 0 && { sap_sids: SID }),\n          },\n        },\n      });\n    });\n    dispatch(actions.clearNotifications());\n\n    if (perPage || page) {\n      dispatch(\n        actions.setPagination(\n          Array.isArray(page) ? page[0] : page,\n          Array.isArray(perPage) ? perPage[0] : perPage\n        )\n      );\n    }\n\n    return () => {\n      dispatch(actions.clearEntitiesAction());\n    };\n  }, []);\n\n  const calculateSelected = () => (selected ? selected.size : 0);\n\n  const isBulkRemoveFromGroupsEnabled = () => {\n    if (calculateSelected() > 0) {\n      const selectedHosts = Array.from(selected.values());\n\n      return selectedHosts.every(\n        ({ groups }) =>\n          groups.length !== 0 &&\n          groups[0].name === selectedHosts[0].groups[0].name\n      );\n    }\n\n    return false;\n  };\n\n  const isBulkAddHostsToGroupsEnabled = () => {\n    if (calculateSelected() > 0) {\n      const selectedHosts = Array.from(selected.values());\n\n      return selectedHosts.every(({ groups }) => groups.length === 0);\n    }\n\n    return false;\n  };\n\n  //This wrapping of table actions allows to pass feature flag status and receive a prepared array of actions\n  const tableActions = (groupsUiStatus, row) => {\n    const standardActions = [\n      {\n        title: 'Edit',\n        onClick: (_event, _index, rowData) => {\n          setCurrentSystem(rowData);\n          onEditOpen(() => true);\n        },\n      },\n      {\n        title: 'Delete',\n        onClick: (_event, _index, rowData) => {\n          setCurrentSystem(rowData);\n          handleModalToggle(() => true);\n        },\n      },\n    ];\n\n    const actionsBehindFeatureFlag = [\n      {\n        title: 'Add to group',\n        onClick: (_event, _index, rowData) => {\n          setCurrentSystem([rowData]);\n          setAddHostGroupModalOpen(true);\n        },\n        isDisabled: row.groups.length > 0,\n      },\n      {\n        title: 'Remove from group',\n        onClick: (event, index, rowData) => {\n          setCurrentSystem([rowData]);\n          setRemoveHostsFromGroupModalOpen(true);\n        },\n        isDisabled: row.groups.length === 0,\n      },\n    ];\n\n    return [\n      ...(groupsUiStatus ? actionsBehindFeatureFlag : []),\n      ...standardActions,\n    ];\n  };\n\n  const traditionalDevices = (\n    <Grid gutter=\"md\">\n      <GridItem span={12}>\n        <InventoryTableCmp\n          hasAccess={hasAccess}\n          isRbacEnabled\n          customFilters={{ filters, globalFilter }}\n          isFullView\n          showTags\n          onRefresh={onRefresh}\n          hasCheckbox={writePermissions}\n          autoRefresh\n          ignoreRefresh\n          initialLoading={initialLoading}\n          ref={inventory}\n          tableProps={\n            writePermissions && {\n              actionResolver: (row) => tableActions(groupsEnabled, row),\n              canSelectAll: false,\n            }\n          }\n          {...(writePermissions && {\n            actionsConfig: {\n              actions: [\n                {\n                  label: 'Delete',\n                  props: {\n                    isDisabled: calculateSelected() === 0,\n                    variant: 'secondary',\n                    onClick: () => {\n                      setCurrentSystem(Array.from(selected.values()));\n                      handleModalToggle(true);\n                    },\n                  },\n                },\n                ...(groupsEnabled\n                  ? [\n                      {\n                        label: 'Add to group',\n                        props: {\n                          isDisabled: !isBulkAddHostsToGroupsEnabled(),\n                        },\n                        onClick: () => {\n                          setCurrentSystem(Array.from(selected.values()));\n                          setAddHostGroupModalOpen(true);\n                        },\n                      },\n                      {\n                        label: 'Remove from group',\n                        props: {\n                          isDisabled: !isBulkRemoveFromGroupsEnabled(),\n                        },\n                        onClick: () => {\n                          setCurrentSystem(Array.from(selected.values()));\n                          setRemoveHostsFromGroupModalOpen(true);\n                        },\n                      },\n                    ]\n                  : []),\n              ],\n            },\n            bulkSelect: bulkSelectConfig,\n          })}\n          onRowClick={(_e, id, app) =>\n            history.push(`/${id}${app ? `/${app}` : ''}`)\n          }\n        />\n      </GridItem>\n    </Grid>\n  );\n\n  return (\n    <React.Fragment>\n      <PageHeader className=\"pf-m-light\">\n        <PageHeaderTitle title=\"Systems\" />\n      </PageHeader>\n      <Main>\n        {EdgeParityEnabled ? (\n          <Tabs\n            className=\"pf-m-light pf-c-table\"\n            activeKey={activeTabKey}\n            onSelect={handleTabClick}\n          >\n            <Tab\n              eventKey={0}\n              title={<TabTitleText>Traditional (RPM-DNF)</TabTitleText>}\n            >\n              {traditionalDevices}\n            </Tab>\n            <Tab\n              eventKey={1}\n              title={<TabTitleText>Immutable (OSTree)</TabTitleText>}\n            >\n              <AsyncComponent\n                appName=\"edge\"\n                module=\"./Inventory\"\n                historyProp={useHistory}\n                locationProp={useLocation}\n                showHeaderProp={false}\n              />\n            </Tab>\n          </Tabs>\n        ) : (\n          traditionalDevices\n        )}\n      </Main>\n      <DeleteModal\n        className=\"sentry-mask data-hj-suppress\"\n        handleModalToggle={handleModalToggle}\n        isModalOpen={isModalOpen}\n        currentSytems={currentSystem}\n        onConfirm={() => {\n          let displayName;\n          let removeSystems;\n          if (Array.isArray(currentSystem)) {\n            removeSystems = currentSystem.map(({ id }) => id);\n            displayName =\n              currentSystem.length > 1\n                ? `${currentSystem.length} systems`\n                : currentSystem[0].display_name;\n          } else {\n            displayName = currentSystem.display_name;\n            removeSystems = [currentSystem.id];\n          }\n\n          dispatch(\n            addNotificationAction({\n              id: 'remove-initiated',\n              variant: 'warning',\n              title: 'Delete operation initiated',\n              description: `Removal of ${displayName} started.`,\n              dismissable: false,\n            })\n          );\n          dispatch(actions.deleteEntity(removeSystems, displayName));\n          handleModalToggle(false);\n        }}\n      />\n      <TextInputModal\n        title=\"Edit display name\"\n        isOpen={ediOpen}\n        value={currentSystem.display_name}\n        onCancel={() => onEditOpen(false)}\n        onSubmit={(value) => {\n          dispatch(actions.editDisplayName(currentSystem.id, value));\n          onEditOpen(false);\n        }}\n      />\n      {groupsEnabled === true && (\n        <>\n          {addHostGroupModalOpen && (\n            <AddSelectedHostsToGroupModal\n              isModalOpen={addHostGroupModalOpen}\n              setIsModalOpen={setAddHostGroupModalOpen}\n              modalState={currentSystem}\n              reloadData={() => {\n                if (calculateSelected() > 0) {\n                  dispatch(actions.selectEntity(-1, false));\n                }\n\n                inventory.current.onRefreshData(filters, false, true);\n              }}\n            />\n          )}\n          {removeHostsFromGroupModalOpen && (\n            <RemoveHostsFromGroupModal\n              isModalOpen={removeHostsFromGroupModalOpen}\n              setIsModalOpen={setRemoveHostsFromGroupModalOpen}\n              modalState={currentSystem}\n              reloadData={() => {\n                if (calculateSelected() > 0) {\n                  dispatch(actions.selectEntity(-1, false));\n                }\n\n                inventory.current.onRefreshData(filters, false, true);\n              }}\n            />\n          )}\n        </>\n      )}\n    </React.Fragment>\n  );\n};\n\nInventory.propTypes = {\n  status: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.string),\n    PropTypes.string,\n  ]),\n  source: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.string),\n    PropTypes.string,\n  ]),\n  operatingSystem: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.string),\n    PropTypes.string,\n  ]),\n  filterbyName: PropTypes.arrayOf(PropTypes.string),\n  tagsFilter: PropTypes.any,\n  page: PropTypes.arrayOf(\n    PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n  ),\n  perPage: PropTypes.arrayOf(\n    PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n  ),\n  initialLoading: PropTypes.bool,\n  rhcdFilter: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.string),\n    PropTypes.string,\n  ]),\n  updateMethodFilter: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.string),\n    PropTypes.string,\n  ]),\n  hasAccess: PropTypes.bool,\n  hostGroupFilter: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.string),\n    PropTypes.string,\n  ]),\n  lastSeenFilter: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.string),\n    PropTypes.string,\n  ]),\n};\n\nInventory.defaultProps = {\n  initialLoading: true,\n};\n\nexport default Inventory;\n"],"names":["schema","groupName","hosts","fields","component","componentTypes","PLAIN_TEXT","name","label","length","display_name","RemoveHostsFromGroupModal","isModalOpen","setIsModalOpen","modalState","reloadData","dispatch","useDispatch","groups","groupId","id","closeModal","title","variant","submitLabel","onSubmit","statusMessages","onSuccess","onError","apiWithToast","removeHostsFromGroup","map","propTypes","PropTypes","isRequired","props","enableEdgeImageDetails","useFeatureFlag","enableEdgeInventoryListDetails","GeneralInformation","showImageDetails","__assign","Object","assign","t","s","i","n","arguments","p","prototype","hasOwnProperty","call","apply","this","_a","children","className","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__rest","useEffect","console","error","concat","CreateGroupButton","canModifyGroups","usePermissionsWithContext","hasAccess","Text","Button","onClick","Tooltip","content","NO_MODIFY_GROUPS_TOOLTIP_MESSAGE","isAriaDisabled","AddSelectedHostsToGroupModal","useState","isCreateGroupModalOpen","setIsCreateGroupModalOpen","Modal","addHostSchema","additionalMappers","values","group","description","addHostsToGroupById","CreateGroupModal","modalBefore","setterOfModalBefore","mapTags","category","tagKey","value","filterMapper","staleFilter","searchParams","forEach","item","append","osFilter","registeredWithFilter","filter","Boolean","tagFilters","flatMap","rhcdFilter","RHCD_FILTER_KEY","lastSeenFilter","keys","updateMethodFilter","UPDATE_METHOD_KEY","hostGroupFilter","HOST_GROUP_CHIP","calculatePagination","page","perPage","currSearch","URLSearchParams","location","search","newPage","undefined","get","newPerPage","isNaN","parseInt","Inventory","status","source","filterbyName","tagsFilter","operatingSystem","initialLoading","history","useHistory","chrome","useChrome","inventory","useRef","handleModalToggle","currentSystem","setCurrentSystem","generateFilter","filters","onSetfilters","activeTabKey","setActiveTabkey","ediOpen","onEditOpen","addHostGroupModalOpen","setAddHostGroupModalOpen","removeHostsFromGroupModalOpen","setRemoveHostsFromGroupModalOpen","globalFilter","setGlobalFilter","writePermissions","useWritePermissions","rows","useSelector","entities","shallowEqual","loaded","selected","total","groupsEnabled","bulkSelectConfig","isBulkLoading","setBulkLoading","fetchBatched","useFetchBatched","onSelectRows","isSelected","actions","calculateSelected","size","activeFilters","getEntitiesWrapper","per_page","resp","loadSystems","payload","data","fetchAllSystemIds","useCallback","selectAllIds","results","flatten","items","isDisabled","checked","every","has","some","calculateChecked","onSelect","toggleProps","Fragment","key","Spinner","useBulkSelectConfig","EdgeParityEnabled","updateDocumentTitle","hideGlobalFilter","appAction","appObjectId","on","mapGlobalFilter","workloads","SID","tags","system_profile","SAP","sap_system","ansible","mssql","sap_sids","Array","isArray","traditionalDevices","Grid","gutter","GridItem","span","InventoryTable","isRbacEnabled","customFilters","isFullView","showTags","onRefresh","options","callback","calculateFilters","toString","push","hash","hasCheckbox","autoRefresh","ignoreRefresh","ref","tableProps","actionResolver","row","groupsUiStatus","standardActions","_event","_index","rowData","actionsBehindFeatureFlag","event","index","tableActions","canSelectAll","actionsConfig","from","selectedHosts","isBulkRemoveFromGroupsEnabled","bulkSelect","onRowClick","_e","app","PageHeader","PageHeaderTitle","Tabs","activeKey","tabIndex","Tab","eventKey","TabTitleText","T","AsyncComponent","appName","module","historyProp","locationProp","useLocation","showHeaderProp","DeleteModal","currentSytems","onConfirm","displayName","removeSystems","addNotificationAction","dismissable","TextInputModal","isOpen","onCancel","current","onRefreshData","defaultProps"],"sourceRoot":""}