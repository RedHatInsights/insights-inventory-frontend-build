{"version":3,"sources":["webpack:///./node_modules/focus-trap/dist/focus-trap.esm.js","webpack:///./node_modules/tabbable/dist/index.esm.js"],"names":["activeFocusDelay","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","trapQueue","activeFocusTraps","activateTrap","trap","length","activeTrap","pause","trapIndex","indexOf","splice","deactivateTrap","unpause","delay","fn","setTimeout","createFocusTrap","elements","userOptions","doc","document","config","target","i","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties","_objectSpread2","returnFocusOnDeactivate","escapeDeactivates","delayInitialFocus","state","containers","tabbableGroups","nodeFocusedBeforeActivation","mostRecentlyFocusedNode","active","paused","containersContain","element","some","container","contains","getNodeForOption","optionName","optionValue","node","querySelector","Error","concat","getInitialFocusNode","activeElement","firstTabbableGroup","firstTabbableNode","updateTabbableNodes","map","tabbableNodes","lastTabbableNode","group","tryFocus","focus","preventScroll","tagName","toLowerCase","select","isSelectableInput","checkPointerDown","e","clickOutsideDeactivates","deactivate","returnFocus","allowOutsideClick","preventDefault","checkFocusIn","targetContained","Document","stopImmediatePropagation","checkKey","keyCode","isEscapeEvent","isTabEvent","destinationNode","shiftKey","startOfGroupIndex","findIndex","_ref","destinationGroupIndex","lastOfGroupIndex","_ref2","_destinationGroupIndex","checkTab","checkClick","addListeners","addEventListener","capture","passive","removeListeners","removeEventListener","activate","activateOptions","this","onActivate","deactivateOptions","clearTimeout","onDeactivate","undefined","previousActiveElement","updateContainerElements","containerElements","elementsAsArray","Boolean","candidateSelectors","candidateSelector","join","matches","Element","prototype","msMatchesSelector","webkitMatchesSelector","getTabindex","tabindexAttr","parseInt","getAttribute","isNaN","contentEditable","isContentEditable","nodeName","tabIndex","sortOrderedTabbables","a","b","documentOrder","isInput","isNodeMatchingSelectorFocusable","options","disabled","type","isHiddenInput","displayCheck","getComputedStyle","visibility","nodeUnderDetails","call","parentElement","_node$getBoundingClie","getBoundingClientRect","width","height","display","isHidden","Array","slice","children","child","isDetailsWithSummary","isNodeMatchingSelectorTabbable","isRadio","name","radioSet","radioScope","form","ownerDocument","queryRadios","querySelectorAll","window","CSS","escape","err","console","error","message","checked","nodes","getCheckedRadio","isTabbableRadio","isNonTabbableRadio","tabbable","el","regularTabbables","orderedTabbables","includeContainer","candidates","unshift","getCandidates","bind","candidate","candidateTabindex","sort","focusableCandidateSelector","isFocusable"],"mappings":";oLAuDIA,E,WAjDJ,SAASC,EAAgBC,EAAKC,EAAKC,GAYjC,OAXID,KAAOD,EACTG,OAAOC,eAAeJ,EAAKC,EAAK,CAC9BC,MAAOA,EACPG,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZP,EAAIC,GAAOC,EAGNF,EAGT,SAASQ,EAAQC,EAAQC,GACvB,IAAIC,EAAOR,OAAOQ,KAAKF,GAEvB,GAAIN,OAAOS,sBAAuB,CAChC,IAAIC,EAAUV,OAAOS,sBAAsBH,GACvCC,IAAgBG,EAAUA,EAAQC,QAAO,SAAUC,GACrD,OAAOZ,OAAOa,yBAAyBP,EAAQM,GAAKV,eAEtDM,EAAKM,KAAKC,MAAMP,EAAME,GAGxB,OAAOF,EAyBT,IACMQ,EADFC,GACED,EAAY,GACT,CACLE,aAAc,SAAsBC,GAClC,GAAIH,EAAUI,OAAS,EAAG,CACxB,IAAIC,EAAaL,EAAUA,EAAUI,OAAS,GAE1CC,IAAeF,GACjBE,EAAWC,QAIf,IAAIC,EAAYP,EAAUQ,QAAQL,IAEf,IAAfI,GAIFP,EAAUS,OAAOF,EAAW,GAH5BP,EAAUF,KAAKK,IAOnBO,eAAgB,SAAwBP,GACtC,IAAII,EAAYP,EAAUQ,QAAQL,IAEf,IAAfI,GACFP,EAAUS,OAAOF,EAAW,GAG1BP,EAAUI,OAAS,GACrBJ,EAAUA,EAAUI,OAAS,GAAGO,aAkBpCC,EAAQ,SAAeC,GACzB,OAAOC,WAAWD,EAAI,IAGpBE,EAAkB,SAAyBC,EAAUC,GACvD,IAwBId,EAxBAe,EAAMC,SAENC,EA7EN,SAAwBC,GACtB,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUnB,OAAQkB,IAAK,CACzC,IAAIE,EAAyB,MAAhBD,UAAUD,GAAaC,UAAUD,GAAK,GAE/CA,EAAI,EACNjC,EAAQL,OAAOwC,IAAS,GAAMC,SAAQ,SAAU3C,GAC9CF,EAAgByC,EAAQvC,EAAK0C,EAAO1C,OAE7BE,OAAO0C,0BAChB1C,OAAO2C,iBAAiBN,EAAQrC,OAAO0C,0BAA0BF,IAEjEnC,EAAQL,OAAOwC,IAASC,SAAQ,SAAU3C,GACxCE,OAAOC,eAAeoC,EAAQvC,EAAKE,OAAOa,yBAAyB2B,EAAQ1C,OAKjF,OAAOuC,EA4DMO,CAAe,CAC1BC,yBAAyB,EACzBC,mBAAmB,EACnBC,mBAAmB,GAClBd,GAECe,EAAQ,CAEVC,WAAY,GAQZC,eAAgB,GAChBC,4BAA6B,KAC7BC,wBAAyB,KACzBC,QAAQ,EACRC,QAAQ,GAINC,EAAoB,SAA2BC,GACjD,OAAOR,EAAMC,WAAWQ,MAAK,SAAUC,GACrC,OAAOA,EAAUC,SAASH,OAI1BI,EAAmB,SAA0BC,GAC/C,IAAIC,EAAc1B,EAAOyB,GAEzB,IAAKC,EACH,OAAO,KAGT,IAAIC,EAAOD,EAEX,GAA2B,iBAAhBA,KACTC,EAAO7B,EAAI8B,cAAcF,IAGvB,MAAM,IAAIG,MAAM,IAAIC,OAAOL,EAAY,8BAI3C,GAA2B,mBAAhBC,KACTC,EAAOD,KAGL,MAAM,IAAIG,MAAM,IAAIC,OAAOL,EAAY,4BAI3C,OAAOE,GAGLI,EAAsB,WACxB,IAAIJ,EAEJ,GAAyC,OAArCH,EAAiB,gBACnBG,EAAOH,EAAiB,qBACnB,GAAIL,EAAkBrB,EAAIkC,eAC/BL,EAAO7B,EAAIkC,kBACN,CACL,IAAIC,EAAqBrB,EAAME,eAAe,GAE9Ca,EADwBM,GAAsBA,EAAmBC,mBACrCV,EAAiB,iBAG/C,IAAKG,EACH,MAAM,IAAIE,MAAM,gEAGlB,OAAOF,GAGLQ,EAAsB,WAiBxB,GAhBAvB,EAAME,eAAiBF,EAAMC,WAAWuB,KAAI,SAAUd,GACpD,IAAIe,GAAgB,QAASf,GAE7B,GAAIe,EAAcrD,OAAS,EACzB,MAAO,CACLkD,kBAAmBG,EAAc,GACjCC,iBAAkBD,EAAcA,EAAcrD,OAAS,OAK1DT,QAAO,SAAUgE,GAClB,QAASA,KAIP3B,EAAME,eAAe9B,QAAU,IAAMwC,EAAiB,iBACxD,MAAM,IAAIK,MAAM,wGAIhBW,EAAW,SAASA,EAASb,GAC3BA,IAAS7B,EAAIkC,gBAIZL,GAASA,EAAKc,OAKnBd,EAAKc,MAAM,CACTC,gBAAiB1C,EAAO0C,gBAE1B9B,EAAMI,wBAA0BW,EApIZ,SAA2BA,GACjD,OAAOA,EAAKgB,SAA0C,UAA/BhB,EAAKgB,QAAQC,eAAoD,mBAAhBjB,EAAKkB,OAqIvEC,CAAkBnB,IACpBA,EAAKkB,UAVLL,EAAST,OAqBTgB,EAAmB,SAA0BC,GAC3C7B,EAAkB6B,EAAE/C,UAKpBD,EAAOiD,wBAETlE,EAAKmE,WAAW,CAYdC,YAAanD,EAAOS,2BAA4B,QAAYuC,EAAE/C,UAQ9DD,EAAOoD,oBAA0D,kBAA7BpD,EAAOoD,kBAAkCpD,EAAOoD,kBAAoBpD,EAAOoD,kBAAkBJ,KAMrIA,EAAEK,mBAIAC,EAAe,SAAsBN,GACvC,IAAIO,EAAkBpC,EAAkB6B,EAAE/C,QAEtCsD,GAAmBP,EAAE/C,kBAAkBuD,SACrCD,IACF3C,EAAMI,wBAA0BgC,EAAE/C,SAIpC+C,EAAES,2BACFjB,EAAS5B,EAAMI,yBAA2Be,OA+C1C2B,EAAW,SAAkBV,GAC/B,IAAiC,IAA7BhD,EAAOU,mBA9OK,SAAuBsC,GACzC,MAAiB,WAAVA,EAAEtF,KAA8B,QAAVsF,EAAEtF,KAA+B,KAAdsF,EAAEW,QA6ONC,CAAcZ,GAGtD,OAFAA,EAAEK,sBACFtE,EAAKmE,cA5OM,SAAoBF,GACnC,MAAiB,QAAVA,EAAEtF,KAA+B,IAAdsF,EAAEW,SA+OtBE,CAAWb,IA9CF,SAAkBA,GAC/Bb,IACA,IAAI2B,EAAkB,KAEtB,GAAIlD,EAAME,eAAe9B,OAAS,EAChC,GAAIgE,EAAEe,SAAU,CACd,IAAIC,EAAoBpD,EAAME,eAAemD,WAAU,SAAUC,GAC/D,IAAIhC,EAAoBgC,EAAKhC,kBAC7B,OAAOc,EAAE/C,SAAWiC,KAGtB,GAAI8B,GAAqB,EAAG,CAC1B,IAAIG,EAA8C,IAAtBH,EAA0BpD,EAAME,eAAe9B,OAAS,EAAIgF,EAAoB,EAE5GF,EADuBlD,EAAME,eAAeqD,GACT7B,sBAEhC,CACL,IAAI8B,EAAmBxD,EAAME,eAAemD,WAAU,SAAUI,GAC9D,IAAI/B,EAAmB+B,EAAM/B,iBAC7B,OAAOU,EAAE/C,SAAWqC,KAGtB,GAAI8B,GAAoB,EAAG,CACzB,IAAIE,EAAyBF,IAAqBxD,EAAME,eAAe9B,OAAS,EAAI,EAAIoF,EAAmB,EAG3GN,EADwBlD,EAAME,eAAewD,GACTpC,wBAIxC4B,EAAkBtC,EAAiB,iBAGjCsC,IACFd,EAAEK,iBACFb,EAASsB,IAYTS,CAASvB,IAKTwB,EAAa,SAAoBxB,GAC/BhD,EAAOiD,yBAIP9B,EAAkB6B,EAAE/C,SAIpBD,EAAOoD,oBAA0D,kBAA7BpD,EAAOoD,kBAAkCpD,EAAOoD,kBAAoBpD,EAAOoD,kBAAkBJ,MAIrIA,EAAEK,iBACFL,EAAES,6BAMAgB,EAAe,WACjB,GAAK7D,EAAMK,OA4BX,OAvBApC,EAAiBC,aAAaC,GAG9BxB,EAAmByC,EAAOW,kBAAoBnB,GAAM,WAClDgD,EAAST,QACNS,EAAST,KACdjC,EAAI4E,iBAAiB,UAAWpB,GAAc,GAC9CxD,EAAI4E,iBAAiB,YAAa3B,EAAkB,CAClD4B,SAAS,EACTC,SAAS,IAEX9E,EAAI4E,iBAAiB,aAAc3B,EAAkB,CACnD4B,SAAS,EACTC,SAAS,IAEX9E,EAAI4E,iBAAiB,QAASF,EAAY,CACxCG,SAAS,EACTC,SAAS,IAEX9E,EAAI4E,iBAAiB,UAAWhB,EAAU,CACxCiB,SAAS,EACTC,SAAS,IAEJ7F,GAGL8F,EAAkB,WACpB,GAAKjE,EAAMK,OASX,OALAnB,EAAIgF,oBAAoB,UAAWxB,GAAc,GACjDxD,EAAIgF,oBAAoB,YAAa/B,GAAkB,GACvDjD,EAAIgF,oBAAoB,aAAc/B,GAAkB,GACxDjD,EAAIgF,oBAAoB,QAASN,GAAY,GAC7C1E,EAAIgF,oBAAoB,UAAWpB,GAAU,GACtC3E,GAqFT,OA/EAA,EAAO,CACLgG,SAAU,SAAkBC,GAC1B,GAAIpE,EAAMK,OACR,OAAOgE,KAGT9C,IACAvB,EAAMK,QAAS,EACfL,EAAMM,QAAS,EACfN,EAAMG,4BAA8BjB,EAAIkC,cACxC,IAAIkD,EAAaF,GAAmBA,EAAgBE,WAAaF,EAAgBE,WAAalF,EAAOkF,WAOrG,OALIA,GACFA,IAGFT,IACOQ,MAET/B,WAAY,SAAoBiC,GAC9B,IAAKvE,EAAMK,OACT,OAAOgE,KAGTG,aAAa7H,GACbsH,IACAjE,EAAMK,QAAS,EACfL,EAAMM,QAAS,EACfrC,EAAiBS,eAAeP,GAChC,IAAIsG,EAAeF,QAAwDG,IAAnCH,EAAkBE,aAA6BF,EAAkBE,aAAerF,EAAOqF,aAc/H,OAZIA,GACFA,KAGgBF,QAAuDG,IAAlCH,EAAkBhC,YAA4BgC,EAAkBhC,YAAcnD,EAAOS,0BAG1HjB,GAAM,WA7Na,IAA4B+F,EA8N7C/C,GA9N6C+C,EA8NjB3E,EAAMG,4BA7N7BS,EAAiB,mBACP+D,OAgOZN,MAET/F,MAAO,WACL,OAAI0B,EAAMM,SAAWN,EAAMK,SAI3BL,EAAMM,QAAS,EACf2D,KAJSI,MAOX1F,QAAS,WACP,OAAKqB,EAAMM,QAAWN,EAAMK,QAI5BL,EAAMM,QAAS,EACfiB,IACAsC,IACOQ,MANEA,MAQXO,wBAAyB,SAAiCC,GACxD,IAAIC,EAAkB,GAAG5D,OAAO2D,GAAmBlH,OAAOoH,SAS1D,OARA/E,EAAMC,WAAa6E,EAAgBtD,KAAI,SAAUhB,GAC/C,MAA0B,iBAAZA,EAAuBtB,EAAI8B,cAAcR,GAAWA,KAGhER,EAAMK,QACRkB,IAGK8C,QAINO,wBAAwB5F,GACtBb,I,wDC1eT,IAAI6G,EAAqB,CAAC,QAAS,SAAU,WAAY,UAAW,SAAU,aAAc,kBAAmB,kBAAmB,mDAAoD,gCAAiC,WACnNC,EAAmCD,EAAmBE,KAAK,KAC3DC,EAA6B,oBAAZC,QAA0B,aAAiBA,QAAQC,UAAUF,SAAWC,QAAQC,UAAUC,mBAAqBF,QAAQC,UAAUE,sBAiBlJC,EAAc,SAAqBzE,GACrC,IAAI0E,EAAeC,SAAS3E,EAAK4E,aAAa,YAAa,IAE3D,OAAKC,MAAMH,GAPW,SAA2B1E,GACjD,MAAgC,SAAzBA,EAAK8E,gBAYRC,CAAkB/E,GACb,EAQc,UAAlBA,EAAKgF,UAA0C,UAAlBhF,EAAKgF,UAA0C,YAAlBhF,EAAKgF,UAA6D,OAAlChF,EAAK4E,aAAa,YAI1G5E,EAAKiF,SAHH,EAfAP,GAqBPQ,EAAuB,SAA8BC,EAAGC,GAC1D,OAAOD,EAAEF,WAAaG,EAAEH,SAAWE,EAAEE,cAAgBD,EAAEC,cAAgBF,EAAEF,SAAWG,EAAEH,UAGpFK,EAAU,SAAiBtF,GAC7B,MAAwB,UAAjBA,EAAKgB,SA0FVuE,EAAkC,SAAyCC,EAASxF,GACtF,QAAIA,EAAKyF,UAxFS,SAAuBzF,GACzC,OAAOsF,EAAQtF,IAAuB,WAAdA,EAAK0F,KAuFRC,CAAc3F,IAhCtB,SAAkBA,EAAM4F,GACrC,GAA0C,WAAtCC,iBAAiB7F,GAAM8F,WACzB,OAAO,EAGT,IACIC,EADkB3B,EAAQ4B,KAAKhG,EAAM,iCACAA,EAAKiG,cAAgBjG,EAE9D,GAAIoE,EAAQ4B,KAAKD,EAAkB,yBACjC,OAAO,EAGT,GAAKH,GAAiC,SAAjBA,GAQd,GAAqB,kBAAjBA,EAAkC,CAC3C,IAAIM,EAAwBlG,EAAKmG,wBAC7BC,EAAQF,EAAsBE,MAC9BC,EAASH,EAAsBG,OAEnC,OAAiB,IAAVD,GAA0B,IAAXC,QAZtB,KAAOrG,GAAM,CACX,GAAuC,SAAnC6F,iBAAiB7F,GAAMsG,QACzB,OAAO,EAGTtG,EAAOA,EAAKiG,cAUhB,OAAO,EAIqCM,CAASvG,EAAMwF,EAAQI,eApF1C,SAA8B5F,GAIvD,MAHyB,YAAjBA,EAAKgB,SAAyBwF,MAAMlC,UAAUmC,MAAMzJ,MAAMgD,EAAK0G,UAAUhH,MAAK,SAAUiH,GAC9F,MAAyB,YAAlBA,EAAM3F,WAoFf4F,CAAqB5G,KAOnB6G,EAAiC,SAAwCrB,EAASxF,GACpF,SAAKuF,EAAgCC,EAASxF,IA9CvB,SAA4BA,GACnD,OALY,SAAiBA,GAC7B,OAAOsF,EAAQtF,IAAuB,UAAdA,EAAK0F,KAItBoB,CAAQ9G,KAlCK,SAAyBA,GAC7C,IAAKA,EAAK+G,KACR,OAAO,EAGT,IAMIC,EANAC,EAAajH,EAAKkH,MAAQlH,EAAKmH,cAE/BC,EAAc,SAAqBL,GACrC,OAAOE,EAAWI,iBAAiB,6BAA+BN,EAAO,OAK3E,GAAsB,oBAAXO,aAAgD,IAAfA,OAAOC,KAAoD,mBAAtBD,OAAOC,IAAIC,OAC1FR,EAAWI,EAAYE,OAAOC,IAAIC,OAAOxH,EAAK+G,YAE9C,IACEC,EAAWI,EAAYpH,EAAK+G,MAC5B,MAAOU,GAGP,OADAC,QAAQC,MAAM,2IAA4IF,EAAIG,UACvJ,EAIX,IAAIC,EAjCgB,SAAyBC,EAAOZ,GACpD,IAAK,IAAI3I,EAAI,EAAGA,EAAIuJ,EAAMzK,OAAQkB,IAChC,GAAIuJ,EAAMvJ,GAAGsJ,SAAWC,EAAMvJ,GAAG2I,OAASA,EACxC,OAAOY,EAAMvJ,GA8BHwJ,CAAgBf,EAAUhH,EAAKkH,MAC7C,OAAQW,GAAWA,IAAY7H,EAQNgI,CAAgBhI,GA6CciI,CAAmBjI,IAASyE,EAAYzE,GAAQ,IAOrGkI,EAAW,SAAkBC,EAAI3C,GAEnC,IAAI4C,EAAmB,GACnBC,EAAmB,GAkBvB,OA9KkB,SAAuBF,EAAIG,EAAkB1L,GAC/D,IAAI2L,EAAa/B,MAAMlC,UAAUmC,MAAMzJ,MAAMmL,EAAGd,iBAAiBnD,IAOjE,OALIoE,GAAoBlE,EAAQ4B,KAAKmC,EAAIjE,IACvCqE,EAAWC,QAAQL,GAGRI,EAAW3L,OAAOA,GAsJd6L,CAAcN,GAH/B3C,EAAUA,GAAW,IAGsB8C,iBAAkBzB,EAA+B6B,KAAK,KAAMlD,IAC5F9G,SAAQ,SAAUiK,EAAWpK,GACtC,IAAIqK,EAAoBnE,EAAYkE,GAEV,IAAtBC,EACFR,EAAiBrL,KAAK4L,GAEtBN,EAAiBtL,KAAK,CACpBsI,cAAe9G,EACf0G,SAAU2D,EACV5I,KAAM2I,OAIQN,EAAiBQ,KAAK3D,GAAsBzE,KAAI,SAAU0E,GAC5E,OAAOA,EAAEnF,QACRG,OAAOiI,IAwBRU,EAA4C7E,EAAmB9D,OAAO,UAAUgE,KAAK,KAErF4E,EAAc,SAAqB/I,EAAMwF,GAG3C,GAFAA,EAAUA,GAAW,IAEhBxF,EACH,MAAM,IAAIE,MAAM,oBAGlB,OAAuD,IAAnDkE,EAAQ4B,KAAKhG,EAAM8I,IAIhBvD,EAAgCC,EAASxF","file":"js/303.3628360a7efbeb971565.js","sourcesContent":["/*!\n* focus-trap 6.2.2\n* @license MIT, https://github.com/focus-trap/focus-trap/blob/master/LICENSE\n*/\nimport { tabbable, isFocusable } from 'tabbable';\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar activeFocusDelay;\n\nvar activeFocusTraps = function () {\n  var trapQueue = [];\n  return {\n    activateTrap: function activateTrap(trap) {\n      if (trapQueue.length > 0) {\n        var activeTrap = trapQueue[trapQueue.length - 1];\n\n        if (activeTrap !== trap) {\n          activeTrap.pause();\n        }\n      }\n\n      var trapIndex = trapQueue.indexOf(trap);\n\n      if (trapIndex === -1) {\n        trapQueue.push(trap);\n      } else {\n        // move this existing trap to the front of the queue\n        trapQueue.splice(trapIndex, 1);\n        trapQueue.push(trap);\n      }\n    },\n    deactivateTrap: function deactivateTrap(trap) {\n      var trapIndex = trapQueue.indexOf(trap);\n\n      if (trapIndex !== -1) {\n        trapQueue.splice(trapIndex, 1);\n      }\n\n      if (trapQueue.length > 0) {\n        trapQueue[trapQueue.length - 1].unpause();\n      }\n    }\n  };\n}();\n\nvar isSelectableInput = function isSelectableInput(node) {\n  return node.tagName && node.tagName.toLowerCase() === 'input' && typeof node.select === 'function';\n};\n\nvar isEscapeEvent = function isEscapeEvent(e) {\n  return e.key === 'Escape' || e.key === 'Esc' || e.keyCode === 27;\n};\n\nvar isTabEvent = function isTabEvent(e) {\n  return e.key === 'Tab' || e.keyCode === 9;\n};\n\nvar delay = function delay(fn) {\n  return setTimeout(fn, 0);\n};\n\nvar createFocusTrap = function createFocusTrap(elements, userOptions) {\n  var doc = document;\n\n  var config = _objectSpread2({\n    returnFocusOnDeactivate: true,\n    escapeDeactivates: true,\n    delayInitialFocus: true\n  }, userOptions);\n\n  var state = {\n    // @type {Array<HTMLElement>}\n    containers: [],\n    // list of objects identifying the first and last tabbable nodes in all containers/groups in\n    //  the trap\n    // NOTE: it's possible that a group has no tabbable nodes if nodes get removed while the trap\n    //  is active, but the trap should never get to a state where there isn't at least one group\n    //  with at least one tabbable node in it (that would lead to an error condition that would\n    //  result in an error being thrown)\n    // @type {Array<{ firstTabbableNode: HTMLElement|null, lastTabbableNode: HTMLElement|null }>}\n    tabbableGroups: [],\n    nodeFocusedBeforeActivation: null,\n    mostRecentlyFocusedNode: null,\n    active: false,\n    paused: false\n  };\n  var trap; // eslint-disable-line prefer-const -- some private functions reference it, and its methods reference private functions, so we must declare here and define later\n\n  var containersContain = function containersContain(element) {\n    return state.containers.some(function (container) {\n      return container.contains(element);\n    });\n  };\n\n  var getNodeForOption = function getNodeForOption(optionName) {\n    var optionValue = config[optionName];\n\n    if (!optionValue) {\n      return null;\n    }\n\n    var node = optionValue;\n\n    if (typeof optionValue === 'string') {\n      node = doc.querySelector(optionValue);\n\n      if (!node) {\n        throw new Error(\"`\".concat(optionName, \"` refers to no known node\"));\n      }\n    }\n\n    if (typeof optionValue === 'function') {\n      node = optionValue();\n\n      if (!node) {\n        throw new Error(\"`\".concat(optionName, \"` did not return a node\"));\n      }\n    }\n\n    return node;\n  };\n\n  var getInitialFocusNode = function getInitialFocusNode() {\n    var node;\n\n    if (getNodeForOption('initialFocus') !== null) {\n      node = getNodeForOption('initialFocus');\n    } else if (containersContain(doc.activeElement)) {\n      node = doc.activeElement;\n    } else {\n      var firstTabbableGroup = state.tabbableGroups[0];\n      var firstTabbableNode = firstTabbableGroup && firstTabbableGroup.firstTabbableNode;\n      node = firstTabbableNode || getNodeForOption('fallbackFocus');\n    }\n\n    if (!node) {\n      throw new Error('Your focus-trap needs to have at least one focusable element');\n    }\n\n    return node;\n  };\n\n  var updateTabbableNodes = function updateTabbableNodes() {\n    state.tabbableGroups = state.containers.map(function (container) {\n      var tabbableNodes = tabbable(container);\n\n      if (tabbableNodes.length > 0) {\n        return {\n          firstTabbableNode: tabbableNodes[0],\n          lastTabbableNode: tabbableNodes[tabbableNodes.length - 1]\n        };\n      }\n\n      return undefined;\n    }).filter(function (group) {\n      return !!group;\n    }); // remove groups with no tabbable nodes\n    // throw if no groups have tabbable nodes and we don't have a fallback focus node either\n\n    if (state.tabbableGroups.length <= 0 && !getNodeForOption('fallbackFocus')) {\n      throw new Error('Your focus-trap must have at least one container with at least one tabbable node in it at all times');\n    }\n  };\n\n  var tryFocus = function tryFocus(node) {\n    if (node === doc.activeElement) {\n      return;\n    }\n\n    if (!node || !node.focus) {\n      tryFocus(getInitialFocusNode());\n      return;\n    }\n\n    node.focus({\n      preventScroll: !!config.preventScroll\n    });\n    state.mostRecentlyFocusedNode = node;\n\n    if (isSelectableInput(node)) {\n      node.select();\n    }\n  };\n\n  var getReturnFocusNode = function getReturnFocusNode(previousActiveElement) {\n    var node = getNodeForOption('setReturnFocus');\n    return node ? node : previousActiveElement;\n  }; // This needs to be done on mousedown and touchstart instead of click\n  // so that it precedes the focus event.\n\n\n  var checkPointerDown = function checkPointerDown(e) {\n    if (containersContain(e.target)) {\n      // allow the click since it ocurred inside the trap\n      return;\n    }\n\n    if (config.clickOutsideDeactivates) {\n      // immediately deactivate the trap\n      trap.deactivate({\n        // if, on deactivation, we should return focus to the node originally-focused\n        //  when the trap was activated (or the configured `setReturnFocus` node),\n        //  then assume it's also OK to return focus to the outside node that was\n        //  just clicked, causing deactivation, as long as that node is focusable;\n        //  if it isn't focusable, then return focus to the original node focused\n        //  on activation (or the configured `setReturnFocus` node)\n        // NOTE: by setting `returnFocus: false`, deactivate() will do nothing,\n        //  which will result in the outside click setting focus to the node\n        //  that was clicked, whether it's focusable or not; by setting\n        //  `returnFocus: true`, we'll attempt to re-focus the node originally-focused\n        //  on activation (or the configured `setReturnFocus` node)\n        returnFocus: config.returnFocusOnDeactivate && !isFocusable(e.target)\n      });\n      return;\n    } // This is needed for mobile devices.\n    // (If we'll only let `click` events through,\n    // then on mobile they will be blocked anyways if `touchstart` is blocked.)\n\n\n    if (config.allowOutsideClick && (typeof config.allowOutsideClick === 'boolean' ? config.allowOutsideClick : config.allowOutsideClick(e))) {\n      // allow the click outside the trap to take place\n      return;\n    } // otherwise, prevent the click\n\n\n    e.preventDefault();\n  }; // In case focus escapes the trap for some strange reason, pull it back in.\n\n\n  var checkFocusIn = function checkFocusIn(e) {\n    var targetContained = containersContain(e.target); // In Firefox when you Tab out of an iframe the Document is briefly focused.\n\n    if (targetContained || e.target instanceof Document) {\n      if (targetContained) {\n        state.mostRecentlyFocusedNode = e.target;\n      }\n    } else {\n      // escaped! pull it back in to where it just left\n      e.stopImmediatePropagation();\n      tryFocus(state.mostRecentlyFocusedNode || getInitialFocusNode());\n    }\n  }; // Hijack Tab events on the first and last focusable nodes of the trap,\n  // in order to prevent focus from escaping. If it escapes for even a\n  // moment it can end up scrolling the page and causing confusion so we\n  // kind of need to capture the action at the keydown phase.\n\n\n  var checkTab = function checkTab(e) {\n    updateTabbableNodes();\n    var destinationNode = null;\n\n    if (state.tabbableGroups.length > 0) {\n      if (e.shiftKey) {\n        var startOfGroupIndex = state.tabbableGroups.findIndex(function (_ref) {\n          var firstTabbableNode = _ref.firstTabbableNode;\n          return e.target === firstTabbableNode;\n        });\n\n        if (startOfGroupIndex >= 0) {\n          var destinationGroupIndex = startOfGroupIndex === 0 ? state.tabbableGroups.length - 1 : startOfGroupIndex - 1;\n          var destinationGroup = state.tabbableGroups[destinationGroupIndex];\n          destinationNode = destinationGroup.lastTabbableNode;\n        }\n      } else {\n        var lastOfGroupIndex = state.tabbableGroups.findIndex(function (_ref2) {\n          var lastTabbableNode = _ref2.lastTabbableNode;\n          return e.target === lastTabbableNode;\n        });\n\n        if (lastOfGroupIndex >= 0) {\n          var _destinationGroupIndex = lastOfGroupIndex === state.tabbableGroups.length - 1 ? 0 : lastOfGroupIndex + 1;\n\n          var _destinationGroup = state.tabbableGroups[_destinationGroupIndex];\n          destinationNode = _destinationGroup.firstTabbableNode;\n        }\n      }\n    } else {\n      destinationNode = getNodeForOption('fallbackFocus');\n    }\n\n    if (destinationNode) {\n      e.preventDefault();\n      tryFocus(destinationNode);\n    }\n  };\n\n  var checkKey = function checkKey(e) {\n    if (config.escapeDeactivates !== false && isEscapeEvent(e)) {\n      e.preventDefault();\n      trap.deactivate();\n      return;\n    }\n\n    if (isTabEvent(e)) {\n      checkTab(e);\n      return;\n    }\n  };\n\n  var checkClick = function checkClick(e) {\n    if (config.clickOutsideDeactivates) {\n      return;\n    }\n\n    if (containersContain(e.target)) {\n      return;\n    }\n\n    if (config.allowOutsideClick && (typeof config.allowOutsideClick === 'boolean' ? config.allowOutsideClick : config.allowOutsideClick(e))) {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }; //\n  // EVENT LISTENERS\n  //\n\n\n  var addListeners = function addListeners() {\n    if (!state.active) {\n      return;\n    } // There can be only one listening focus trap at a time\n\n\n    activeFocusTraps.activateTrap(trap); // Delay ensures that the focused element doesn't capture the event\n    // that caused the focus trap activation.\n\n    activeFocusDelay = config.delayInitialFocus ? delay(function () {\n      tryFocus(getInitialFocusNode());\n    }) : tryFocus(getInitialFocusNode());\n    doc.addEventListener('focusin', checkFocusIn, true);\n    doc.addEventListener('mousedown', checkPointerDown, {\n      capture: true,\n      passive: false\n    });\n    doc.addEventListener('touchstart', checkPointerDown, {\n      capture: true,\n      passive: false\n    });\n    doc.addEventListener('click', checkClick, {\n      capture: true,\n      passive: false\n    });\n    doc.addEventListener('keydown', checkKey, {\n      capture: true,\n      passive: false\n    });\n    return trap;\n  };\n\n  var removeListeners = function removeListeners() {\n    if (!state.active) {\n      return;\n    }\n\n    doc.removeEventListener('focusin', checkFocusIn, true);\n    doc.removeEventListener('mousedown', checkPointerDown, true);\n    doc.removeEventListener('touchstart', checkPointerDown, true);\n    doc.removeEventListener('click', checkClick, true);\n    doc.removeEventListener('keydown', checkKey, true);\n    return trap;\n  }; //\n  // TRAP DEFINITION\n  //\n\n\n  trap = {\n    activate: function activate(activateOptions) {\n      if (state.active) {\n        return this;\n      }\n\n      updateTabbableNodes();\n      state.active = true;\n      state.paused = false;\n      state.nodeFocusedBeforeActivation = doc.activeElement;\n      var onActivate = activateOptions && activateOptions.onActivate ? activateOptions.onActivate : config.onActivate;\n\n      if (onActivate) {\n        onActivate();\n      }\n\n      addListeners();\n      return this;\n    },\n    deactivate: function deactivate(deactivateOptions) {\n      if (!state.active) {\n        return this;\n      }\n\n      clearTimeout(activeFocusDelay);\n      removeListeners();\n      state.active = false;\n      state.paused = false;\n      activeFocusTraps.deactivateTrap(trap);\n      var onDeactivate = deactivateOptions && deactivateOptions.onDeactivate !== undefined ? deactivateOptions.onDeactivate : config.onDeactivate;\n\n      if (onDeactivate) {\n        onDeactivate();\n      }\n\n      var returnFocus = deactivateOptions && deactivateOptions.returnFocus !== undefined ? deactivateOptions.returnFocus : config.returnFocusOnDeactivate;\n\n      if (returnFocus) {\n        delay(function () {\n          tryFocus(getReturnFocusNode(state.nodeFocusedBeforeActivation));\n        });\n      }\n\n      return this;\n    },\n    pause: function pause() {\n      if (state.paused || !state.active) {\n        return this;\n      }\n\n      state.paused = true;\n      removeListeners();\n      return this;\n    },\n    unpause: function unpause() {\n      if (!state.paused || !state.active) {\n        return this;\n      }\n\n      state.paused = false;\n      updateTabbableNodes();\n      addListeners();\n      return this;\n    },\n    updateContainerElements: function updateContainerElements(containerElements) {\n      var elementsAsArray = [].concat(containerElements).filter(Boolean);\n      state.containers = elementsAsArray.map(function (element) {\n        return typeof element === 'string' ? doc.querySelector(element) : element;\n      });\n\n      if (state.active) {\n        updateTabbableNodes();\n      }\n\n      return this;\n    }\n  }; // initialize container elements\n\n  trap.updateContainerElements(elements);\n  return trap;\n};\n\nexport { createFocusTrap };\n//# sourceMappingURL=focus-trap.esm.js.map\n","/*!\n* tabbable 5.2.0\n* @license MIT, https://github.com/focus-trap/tabbable/blob/master/LICENSE\n*/\nvar candidateSelectors = ['input', 'select', 'textarea', 'a[href]', 'button', '[tabindex]', 'audio[controls]', 'video[controls]', '[contenteditable]:not([contenteditable=\"false\"])', 'details>summary:first-of-type', 'details'];\nvar candidateSelector = /* #__PURE__ */candidateSelectors.join(',');\nvar matches = typeof Element === 'undefined' ? function () {} : Element.prototype.matches || Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\n\nvar getCandidates = function getCandidates(el, includeContainer, filter) {\n  var candidates = Array.prototype.slice.apply(el.querySelectorAll(candidateSelector));\n\n  if (includeContainer && matches.call(el, candidateSelector)) {\n    candidates.unshift(el);\n  }\n\n  candidates = candidates.filter(filter);\n  return candidates;\n};\n\nvar isContentEditable = function isContentEditable(node) {\n  return node.contentEditable === 'true';\n};\n\nvar getTabindex = function getTabindex(node) {\n  var tabindexAttr = parseInt(node.getAttribute('tabindex'), 10);\n\n  if (!isNaN(tabindexAttr)) {\n    return tabindexAttr;\n  } // Browsers do not return `tabIndex` correctly for contentEditable nodes;\n  // so if they don't have a tabindex attribute specifically set, assume it's 0.\n\n\n  if (isContentEditable(node)) {\n    return 0;\n  } // in Chrome, <details/>, <audio controls/> and <video controls/> elements get a default\n  //  `tabIndex` of -1 when the 'tabindex' attribute isn't specified in the DOM,\n  //  yet they are still part of the regular tab order; in FF, they get a default\n  //  `tabIndex` of 0; since Chrome still puts those elements in the regular tab\n  //  order, consider their tab index to be 0.\n\n\n  if ((node.nodeName === 'AUDIO' || node.nodeName === 'VIDEO' || node.nodeName === 'DETAILS') && node.getAttribute('tabindex') === null) {\n    return 0;\n  }\n\n  return node.tabIndex;\n};\n\nvar sortOrderedTabbables = function sortOrderedTabbables(a, b) {\n  return a.tabIndex === b.tabIndex ? a.documentOrder - b.documentOrder : a.tabIndex - b.tabIndex;\n};\n\nvar isInput = function isInput(node) {\n  return node.tagName === 'INPUT';\n};\n\nvar isHiddenInput = function isHiddenInput(node) {\n  return isInput(node) && node.type === 'hidden';\n};\n\nvar isDetailsWithSummary = function isDetailsWithSummary(node) {\n  var r = node.tagName === 'DETAILS' && Array.prototype.slice.apply(node.children).some(function (child) {\n    return child.tagName === 'SUMMARY';\n  });\n  return r;\n};\n\nvar getCheckedRadio = function getCheckedRadio(nodes, form) {\n  for (var i = 0; i < nodes.length; i++) {\n    if (nodes[i].checked && nodes[i].form === form) {\n      return nodes[i];\n    }\n  }\n};\n\nvar isTabbableRadio = function isTabbableRadio(node) {\n  if (!node.name) {\n    return true;\n  }\n\n  var radioScope = node.form || node.ownerDocument;\n\n  var queryRadios = function queryRadios(name) {\n    return radioScope.querySelectorAll('input[type=\"radio\"][name=\"' + name + '\"]');\n  };\n\n  var radioSet;\n\n  if (typeof window !== 'undefined' && typeof window.CSS !== 'undefined' && typeof window.CSS.escape === 'function') {\n    radioSet = queryRadios(window.CSS.escape(node.name));\n  } else {\n    try {\n      radioSet = queryRadios(node.name);\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error('Looks like you have a radio button with a name attribute containing invalid CSS selector characters and need the CSS.escape polyfill: %s', err.message);\n      return false;\n    }\n  }\n\n  var checked = getCheckedRadio(radioSet, node.form);\n  return !checked || checked === node;\n};\n\nvar isRadio = function isRadio(node) {\n  return isInput(node) && node.type === 'radio';\n};\n\nvar isNonTabbableRadio = function isNonTabbableRadio(node) {\n  return isRadio(node) && !isTabbableRadio(node);\n};\n\nvar isHidden = function isHidden(node, displayCheck) {\n  if (getComputedStyle(node).visibility === 'hidden') {\n    return true;\n  }\n\n  var isDirectSummary = matches.call(node, 'details>summary:first-of-type');\n  var nodeUnderDetails = isDirectSummary ? node.parentElement : node;\n\n  if (matches.call(nodeUnderDetails, 'details:not([open]) *')) {\n    return true;\n  }\n\n  if (!displayCheck || displayCheck === 'full') {\n    while (node) {\n      if (getComputedStyle(node).display === 'none') {\n        return true;\n      }\n\n      node = node.parentElement;\n    }\n  } else if (displayCheck === 'non-zero-area') {\n    var _node$getBoundingClie = node.getBoundingClientRect(),\n        width = _node$getBoundingClie.width,\n        height = _node$getBoundingClie.height;\n\n    return width === 0 && height === 0;\n  }\n\n  return false;\n};\n\nvar isNodeMatchingSelectorFocusable = function isNodeMatchingSelectorFocusable(options, node) {\n  if (node.disabled || isHiddenInput(node) || isHidden(node, options.displayCheck) ||\n  /* For a details element with a summary, the summary element gets the focused  */\n  isDetailsWithSummary(node)) {\n    return false;\n  }\n\n  return true;\n};\n\nvar isNodeMatchingSelectorTabbable = function isNodeMatchingSelectorTabbable(options, node) {\n  if (!isNodeMatchingSelectorFocusable(options, node) || isNonTabbableRadio(node) || getTabindex(node) < 0) {\n    return false;\n  }\n\n  return true;\n};\n\nvar tabbable = function tabbable(el, options) {\n  options = options || {};\n  var regularTabbables = [];\n  var orderedTabbables = [];\n  var candidates = getCandidates(el, options.includeContainer, isNodeMatchingSelectorTabbable.bind(null, options));\n  candidates.forEach(function (candidate, i) {\n    var candidateTabindex = getTabindex(candidate);\n\n    if (candidateTabindex === 0) {\n      regularTabbables.push(candidate);\n    } else {\n      orderedTabbables.push({\n        documentOrder: i,\n        tabIndex: candidateTabindex,\n        node: candidate\n      });\n    }\n  });\n  var tabbableNodes = orderedTabbables.sort(sortOrderedTabbables).map(function (a) {\n    return a.node;\n  }).concat(regularTabbables);\n  return tabbableNodes;\n};\n\nvar focusable = function focusable(el, options) {\n  options = options || {};\n  var candidates = getCandidates(el, options.includeContainer, isNodeMatchingSelectorFocusable.bind(null, options));\n  return candidates;\n};\n\nvar isTabbable = function isTabbable(node, options) {\n  options = options || {};\n\n  if (!node) {\n    throw new Error('No node provided');\n  }\n\n  if (matches.call(node, candidateSelector) === false) {\n    return false;\n  }\n\n  return isNodeMatchingSelectorTabbable(options, node);\n};\n\nvar focusableCandidateSelector = /* #__PURE__ */candidateSelectors.concat('iframe').join(',');\n\nvar isFocusable = function isFocusable(node, options) {\n  options = options || {};\n\n  if (!node) {\n    throw new Error('No node provided');\n  }\n\n  if (matches.call(node, focusableCandidateSelector) === false) {\n    return false;\n  }\n\n  return isNodeMatchingSelectorFocusable(options, node);\n};\n\nexport { focusable, isFocusable, isTabbable, tabbable };\n//# sourceMappingURL=index.esm.js.map\n"],"sourceRoot":""}