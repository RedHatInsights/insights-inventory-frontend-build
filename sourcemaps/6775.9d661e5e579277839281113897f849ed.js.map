{"version":3,"file":"js/6775.88bff184ba7950422ece.js","mappings":"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","sources":["webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/NotAuthorized/NotAuthorized.js","webpack:///./src/Utilities/AccessDenied.js","webpack:///./src/components/InventoryDetail/FactsInfo.js","webpack:///./src/components/InventoryDetail/helpers.js","webpack:///./src/components/InventoryDetail/DetailRenderer.js","webpack:///./src/modules/DetailWrapper.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport React from 'react';\nimport { Button, EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title } from '@patternfly/react-core';\nimport { LockIcon } from '@patternfly/react-icons';\nimport '../NotAuthorized/NotAuthorized.css';\nvar ContactBody = function () { return (_jsxs(React.Fragment, { children: [\"Contact your organization administrator(s) for more information or visit\\u00A0\", _jsx(\"a\", __assign({ href: \"./settings/my-user-access\" }, { children: \"My User Access\" })), \"\\u00A0 to learn more about your permissions.\"] })); };\nvar NotAuthorized = function (_a) {\n    var _b = _a.prevPageButtonText, prevPageButtonText = _b === void 0 ? 'Return to previous page' : _b, _c = _a.toLandingPageText, toLandingPageText = _c === void 0 ? 'Go to landing page' : _c, title = _a.title, _d = _a.actions, actions = _d === void 0 ? null : _d, serviceName = _a.serviceName, _e = _a.icon, Icon = _e === void 0 ? LockIcon : _e, _f = _a.description, description = _f === void 0 ? _jsx(ContactBody, {}) : _f, _g = _a.showReturnButton, showReturnButton = _g === void 0 ? true : _g, className = _a.className, props = __rest(_a, [\"prevPageButtonText\", \"toLandingPageText\", \"title\", \"actions\", \"serviceName\", \"icon\", \"description\", \"showReturnButton\", \"className\"]);\n    var heading = title || \"You do not have access to \".concat(serviceName);\n    return (_jsxs(EmptyState, __assign({ variant: EmptyStateVariant.full, className: \"ins-c-not-authorized \".concat(className || '') }, props, { children: [_jsx(EmptyStateIcon, { icon: Icon }), _jsx(Title, __assign({ headingLevel: \"h5\", size: \"lg\" }, { children: heading })), _jsx(EmptyStateBody, { children: description }), actions, showReturnButton &&\n                (document.referrer ? (_jsx(Button, __assign({ variant: \"primary\", onClick: function () { return history.back(); } }, { children: prevPageButtonText }))) : (_jsx(Button, __assign({ variant: \"primary\", component: \"a\", href: \".\" }, { children: toLandingPageText }))))] })));\n};\nexport default NotAuthorized;\n//# sourceMappingURL=NotAuthorized.js.map","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NotAuthorized } from '@redhat-cloud-services/frontend-components/NotAuthorized';\nimport { Tooltip } from '@patternfly/react-core';\n\nconst AccessDenied = ({ title, description, ...props }) => (\n    <NotAuthorized\n        {...props}\n        className=\"ins-c-inventory__no--access\"\n        title={title}\n        description={<Tooltip content=\"inventory:*:read\">\n            {description}\n        </Tooltip>}\n    />\n);\n\nAccessDenied.propTypes = {\n    title: PropTypes.string,\n    description: PropTypes.node\n};\n\nAccessDenied.defaultProps = {\n    title: 'You do not have access to Inventory',\n    description: <div>\n        To view your systems, you must be granted inventory access from your Organization Administrator.\n    </div>\n};\n\nexport default AccessDenied;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid, GridItem, Flex, FlexItem } from '@patternfly/react-core';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components/Skeleton';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport { CullingInformation } from '@redhat-cloud-services/frontend-components/CullingInfo';\nimport { getFact } from './helpers';\nimport InsightsDisconnected from '../../Utilities/InsightsDisconnected';\nimport { verifyCulledInsightsClient } from '../../Utilities/sharedFunctions';\n/**\n * Basic information about system.\n * UUID and last seen.\n * @param {*} props entity and if entity is loaded.\n */\nconst FactsInfo = ({ entity, loaded, UUIDWrapper, LastSeenWrapper, ...props }) => (\n    <Grid className=\"ins-entity-facts\" { ...props }>\n        <GridItem md={ 6 }>\n            <Flex>\n                <FlexItem>UUID:</FlexItem>\n                <FlexItem grow={{ default: 'grow' }}>\n                    {loaded ? getFact(`id`, entity) || ' ' : <Skeleton size={SkeletonSize.md} fontSize=\"sm\" />}\n                </FlexItem>\n            </Flex>\n            <Flex>\n                <FlexItem>Last seen:</FlexItem>\n                <FlexItem grow={{ default: 'grow' }}>\n                    {\n                        loaded ?\n                            <LastSeenWrapper>{\n                                (\n                                    CullingInformation ? <CullingInformation\n                                        culled={getFact('culled_timestamp', entity)}\n                                        staleWarning={getFact('stale_warning_timestamp', entity)}\n                                        stale={getFact('stale_timestamp', entity)}\n                                        currDate={new Date()}\n                                    >\n                                        <DateFormat date={getFact('updated', entity)} type=\"exact\" />\n                                    </CullingInformation> : <DateFormat date={getFact('updated', entity)} type=\"exact\" />\n                                )}\n                            </LastSeenWrapper> :\n                            <Skeleton size={SkeletonSize.md} fontSize=\"sm\" />\n                    }\n                    {loaded && verifyCulledInsightsClient(getFact('per_reporter_staleness', entity)) && <InsightsDisconnected />}\n                </FlexItem>\n            </Flex>\n        </GridItem>\n    </Grid>\n);\n\nFactsInfo.propTypes = {\n    loaded: PropTypes.bool,\n    entity: PropTypes.object,\n    UUIDWrapper: PropTypes.elementType,\n    LastSeenWrapper: PropTypes.elementType\n};\n\nFactsInfo.defaultProps = {\n    UUIDWrapper: Fragment,\n    LastSeenWrapper: Fragment\n};\n\nexport default FactsInfo;\n","import get from 'lodash/get';\n\nexport const redirectToInventoryList = (id, onBackToListClick) => {\n    if (onBackToListClick) {\n        onBackToListClick();\n    } else {\n        /**\n         * Prevent the case that refferer has the same URL as current browser URL is\n         */\n        if (document.referrer && document.referrer !== `${document.location.origin}${document.location.pathname}`) {\n            history.back();\n        } else {\n            location.href = location.pathname.replace(new RegExp(`${[id]}.*`, 'g'), '');\n        }\n    }\n};\n\nexport const getFact = (path, factDict) => get(factDict, path, undefined);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { usePermissionsWithContext } from '@redhat-cloud-services/frontend-components-utilities/RBACHook';\nimport DetailWrapper from './DetailWrapper';\nimport AccessDenied from '../../Utilities/AccessDenied';\n\nconst DetailRenderer = ({ isRbacEnabled, ...props }) => {\n    const { hasAccess } = usePermissionsWithContext([\n        'inventory:*:*',\n        'inventory:*:read',\n        'inventory:hosts:read'\n    ]);\n\n    if (isRbacEnabled && hasAccess === false) {\n        return <AccessDenied />;\n    } else {\n        return <DetailWrapper {...props} />;\n    }\n};\n\nDetailRenderer.propTypes = {\n    isRbacEnabled: PropTypes.bool\n};\n\nexport default DetailRenderer;\n","import React from 'react';\nimport AsyncInventory from './AsyncInventory';\nimport DetailWrapperCmp from '../components/InventoryDetail/DetailRenderer';\n\nconst BaseDetailWrapper = (props) => <AsyncInventory {...props} component={DetailWrapperCmp}  />;\n\nconst DetailWrapper = React.forwardRef((props, ref) => <BaseDetailWrapper {...props} innerRef={ref} />);\n\nexport default DetailWrapper;\n"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","ContactBody","children","href","_a","_b","prevPageButtonText","_c","toLandingPageText","title","_d","actions","serviceName","_e","icon","Icon","LockIcon","_f","description","_g","showReturnButton","className","props","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__rest","heading","concat","EmptyState","variant","EmptyStateVariant","EmptyStateIcon","Title","headingLevel","size","EmptyStateBody","document","referrer","Button","onClick","history","back","component","AccessDenied","content","propTypes","PropTypes","defaultProps","FactsInfo","entity","loaded","LastSeenWrapper","UUIDWrapper","md","grow","default","getFact","SkeletonSize","fontSize","CullingInformation","culled","staleWarning","stale","currDate","Date","date","type","verifyCulledInsightsClient","Fragment","redirectToInventoryList","id","onBackToListClick","location","origin","pathname","replace","RegExp","path","factDict","get","undefined","DetailRenderer","isRbacEnabled","hasAccess","usePermissionsWithContext","DetailWrapper","BaseDetailWrapper","AsyncInventory","DetailWrapperCmp","React","ref","innerRef"],"sourceRoot":""}