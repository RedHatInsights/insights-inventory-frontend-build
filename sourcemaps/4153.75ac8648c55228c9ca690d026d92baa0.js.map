{"version":3,"file":"js/4153.43ffc27b04f8d6bec138.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Breadcrumb/Breadcrumb.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Breadcrumb/BreadcrumbItem.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Dropdown/Dropdown.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Page/PageContext.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Page/PageSection.js","webpack:///./node_modules/@patternfly/react-styles/css/components/Breadcrumb/breadcrumb.mjs","webpack:///./node_modules/@patternfly/react-styles/css/components/Page/page.mjs","webpack:///./src/components/GroupSystems/GroupSystems.js","webpack:///./node_modules/@data-driven-forms/react-form-renderer/esm/field-provider/field-provider.js","webpack:///./src/components/InventoryGroups/Modals/ConfirmSystemsAddModal.js","webpack:///./src/components/InventoryGroups/Modals/AddSystemsToGroupModal.js","webpack:///./src/components/InventoryGroupDetail/NoSystemsEmptyState.js","webpack:///./src/components/GroupSystems/index.js","webpack:///./src/components/InventoryGroupDetail/GroupDetailHeader.js","webpack:///./src/components/InventoryGroupDetail/InventoryGroupDetail.js","webpack:///./src/routes/InventoryGroupDetail.js","webpack:///./src/components/InventoryGroupDetail/index.js"],"sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Breadcrumb/breadcrumb';\nimport { css } from '@patternfly/react-styles';\nimport { useOUIAProps } from '../../helpers';\nexport const Breadcrumb = (_a) => {\n    var { children = null, className = '', 'aria-label': ariaLabel = 'Breadcrumb', ouiaId, ouiaSafe = true } = _a, props = __rest(_a, [\"children\", \"className\", 'aria-label', \"ouiaId\", \"ouiaSafe\"]);\n    const ouiaProps = useOUIAProps(Breadcrumb.displayName, ouiaId, ouiaSafe);\n    return (React.createElement(\"nav\", Object.assign({}, props, { \"aria-label\": ariaLabel, className: css(styles.breadcrumb, className) }, ouiaProps),\n        React.createElement(\"ol\", { className: styles.breadcrumbList }, React.Children.map(children, (child, index) => {\n            const showDivider = index > 0;\n            if (React.isValidElement(child)) {\n                return React.cloneElement(child, { showDivider });\n            }\n            return child;\n        }))));\n};\nBreadcrumb.displayName = 'Breadcrumb';\n//# sourceMappingURL=Breadcrumb.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nimport styles from '@patternfly/react-styles/css/components/Breadcrumb/breadcrumb';\nimport { css } from '@patternfly/react-styles';\nexport const BreadcrumbItem = (_a) => {\n    var { children = null, className: classNameProp = '', to = undefined, isActive = false, isDropdown = false, showDivider, target = undefined, component = 'a', render = undefined } = _a, props = __rest(_a, [\"children\", \"className\", \"to\", \"isActive\", \"isDropdown\", \"showDivider\", \"target\", \"component\", \"render\"]);\n    const Component = component;\n    const ariaCurrent = isActive ? 'page' : undefined;\n    const className = css(styles.breadcrumbLink, isActive && styles.modifiers.current);\n    return (React.createElement(\"li\", Object.assign({}, props, { className: css(styles.breadcrumbItem, classNameProp) }),\n        showDivider && (React.createElement(\"span\", { className: styles.breadcrumbItemDivider },\n            React.createElement(AngleRightIcon, null))),\n        component === 'button' && (React.createElement(\"button\", { className: className, \"aria-current\": ariaCurrent, type: \"button\" }, children)),\n        isDropdown && React.createElement(\"span\", { className: css(styles.breadcrumbDropdown) }, children),\n        render && render({ className, ariaCurrent }),\n        to && !render && (React.createElement(Component, { href: to, target: target, className: className, \"aria-current\": ariaCurrent }, children)),\n        !to && component !== 'button' && !isDropdown && children));\n};\nBreadcrumbItem.displayName = 'BreadcrumbItem';\n//# sourceMappingURL=BreadcrumbItem.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Dropdown/dropdown';\nimport { DropdownContext } from './dropdownConstants';\nimport { DropdownWithContext } from './DropdownWithContext';\nimport { useOUIAId } from '../../helpers';\nexport const Dropdown = (_a) => {\n    var { onSelect, \n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    ref, // Types of Ref are different for React.FunctionComponent vs React.Component\n    ouiaId, ouiaSafe, alignments, contextProps, menuAppendTo = 'inline', isFlipEnabled = true, removeFindDomNode = false, zIndex = 9999 } = _a, props = __rest(_a, [\"onSelect\", \"ref\", \"ouiaId\", \"ouiaSafe\", \"alignments\", \"contextProps\", \"menuAppendTo\", \"isFlipEnabled\", \"removeFindDomNode\", \"zIndex\"]);\n    return (React.createElement(DropdownContext.Provider, { value: Object.assign({ onSelect: event => onSelect && onSelect(event), toggleTextClass: styles.dropdownToggleText, toggleIconClass: styles.dropdownToggleImage, toggleIndicatorClass: styles.dropdownToggleIcon, menuClass: styles.dropdownMenu, itemClass: styles.dropdownMenuItem, toggleClass: styles.dropdownToggle, baseClass: styles.dropdown, baseComponent: 'div', sectionClass: styles.dropdownGroup, sectionTitleClass: styles.dropdownGroupTitle, sectionComponent: 'section', disabledClass: styles.modifiers.disabled, plainTextClass: styles.modifiers.text, ouiaId: useOUIAId(Dropdown.displayName, ouiaId), ouiaSafe, ouiaComponentType: Dropdown.displayName, alignments }, contextProps) },\n        React.createElement(DropdownWithContext, Object.assign({ menuAppendTo: menuAppendTo, isFlipEnabled: isFlipEnabled, removeFindDomNode: removeFindDomNode, zIndex: zIndex }, props))));\n};\nDropdown.displayName = 'Dropdown';\n//# sourceMappingURL=Dropdown.js.map","import * as React from 'react';\nimport { getBreakpoint, getVerticalBreakpoint } from '../../helpers/util';\nexport const pageContextDefaults = {\n    isManagedSidebar: false,\n    isNavOpen: false,\n    onNavToggle: () => null,\n    width: null,\n    height: null,\n    getBreakpoint,\n    getVerticalBreakpoint\n};\nexport const PageContext = React.createContext(pageContextDefaults);\nexport const PageContextProvider = PageContext.Provider;\nexport const PageContextConsumer = PageContext.Consumer;\n//# sourceMappingURL=PageContext.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Page/page';\nimport { css } from '@patternfly/react-styles';\nimport { formatBreakpointMods } from '../../helpers/util';\nimport { PageContext } from './PageContext';\nexport var PageSectionVariants;\n(function (PageSectionVariants) {\n    PageSectionVariants[\"default\"] = \"default\";\n    PageSectionVariants[\"light\"] = \"light\";\n    PageSectionVariants[\"dark\"] = \"dark\";\n    PageSectionVariants[\"darker\"] = \"darker\";\n})(PageSectionVariants || (PageSectionVariants = {}));\nexport var PageSectionTypes;\n(function (PageSectionTypes) {\n    PageSectionTypes[\"default\"] = \"default\";\n    PageSectionTypes[\"nav\"] = \"nav\";\n    PageSectionTypes[\"subNav\"] = \"subnav\";\n    PageSectionTypes[\"breadcrumb\"] = \"breadcrumb\";\n    PageSectionTypes[\"tabs\"] = \"tabs\";\n    PageSectionTypes[\"wizard\"] = \"wizard\";\n})(PageSectionTypes || (PageSectionTypes = {}));\nconst variantType = {\n    [PageSectionTypes.default]: styles.pageMainSection,\n    [PageSectionTypes.nav]: styles.pageMainNav,\n    [PageSectionTypes.subNav]: styles.pageMainSubnav,\n    [PageSectionTypes.breadcrumb]: styles.pageMainBreadcrumb,\n    [PageSectionTypes.tabs]: styles.pageMainTabs,\n    [PageSectionTypes.wizard]: styles.pageMainWizard\n};\nconst variantStyle = {\n    [PageSectionVariants.default]: '',\n    [PageSectionVariants.light]: styles.modifiers.light,\n    [PageSectionVariants.dark]: styles.modifiers.dark_200,\n    [PageSectionVariants.darker]: styles.modifiers.dark_100\n};\nexport const PageSection = (_a) => {\n    var { className = '', children, variant = 'default', type = 'default', padding, isFilled, isWidthLimited = false, isCenterAligned = false, sticky, stickyOnBreakpoint, hasShadowTop = false, hasShadowBottom = false, hasOverflowScroll = false, 'aria-label': ariaLabel, component = 'section' } = _a, props = __rest(_a, [\"className\", \"children\", \"variant\", \"type\", \"padding\", \"isFilled\", \"isWidthLimited\", \"isCenterAligned\", \"sticky\", \"stickyOnBreakpoint\", \"hasShadowTop\", \"hasShadowBottom\", \"hasOverflowScroll\", 'aria-label', \"component\"]);\n    const { height, getVerticalBreakpoint } = React.useContext(PageContext);\n    React.useEffect(() => {\n        if (hasOverflowScroll && !ariaLabel) {\n            /* eslint-disable no-console */\n            console.warn('PageSection: An accessible aria-label is required when hasOverflowScroll is set to true.');\n        }\n    }, [hasOverflowScroll, ariaLabel]);\n    const Component = component;\n    return (React.createElement(Component, Object.assign({}, props, { className: css(variantType[type], formatBreakpointMods(padding, styles), formatBreakpointMods(stickyOnBreakpoint, styles, 'sticky-', getVerticalBreakpoint(height), true), variantStyle[variant], isFilled === false && styles.modifiers.noFill, isFilled === true && styles.modifiers.fill, isWidthLimited && styles.modifiers.limitWidth, isWidthLimited && isCenterAligned && type !== PageSectionTypes.subNav && styles.modifiers.alignCenter, sticky === 'top' && styles.modifiers.stickyTop, sticky === 'bottom' && styles.modifiers.stickyBottom, hasShadowTop && styles.modifiers.shadowTop, hasShadowBottom && styles.modifiers.shadowBottom, hasOverflowScroll && styles.modifiers.overflowScroll, className) }, (hasOverflowScroll && { tabIndex: 0 }), { \"aria-label\": ariaLabel }),\n        isWidthLimited && React.createElement(\"div\", { className: css(styles.pageMainBody) }, children),\n        !isWidthLimited && children));\n};\nPageSection.displayName = 'PageSection';\n//# sourceMappingURL=PageSection.js.map","import './breadcrumb.css';\nexport default {\n  \"breadcrumb\": \"pf-c-breadcrumb\",\n  \"breadcrumbDropdown\": \"pf-c-breadcrumb__dropdown\",\n  \"breadcrumbHeading\": \"pf-c-breadcrumb__heading\",\n  \"breadcrumbItem\": \"pf-c-breadcrumb__item\",\n  \"breadcrumbItemDivider\": \"pf-c-breadcrumb__item-divider\",\n  \"breadcrumbLink\": \"pf-c-breadcrumb__link\",\n  \"breadcrumbList\": \"pf-c-breadcrumb__list\",\n  \"dropdownToggle\": \"pf-c-dropdown__toggle\",\n  \"modifiers\": {\n    \"current\": \"pf-m-current\",\n    \"overpassFont\": \"pf-m-overpass-font\"\n  },\n  \"themeDark\": \"pf-theme-dark\"\n};","import './page.css';\nexport default {\n  \"avatar\": \"pf-c-avatar\",\n  \"brand\": \"pf-c-brand\",\n  \"button\": \"pf-c-button\",\n  \"card\": \"pf-c-card\",\n  \"contextSelector\": \"pf-c-context-selector\",\n  \"drawer\": \"pf-c-drawer\",\n  \"masthead\": \"pf-c-masthead\",\n  \"modifiers\": {\n    \"light\": \"pf-m-light\",\n    \"menu\": \"pf-m-menu\",\n    \"hidden\": \"pf-m-hidden\",\n    \"hiddenOnSm\": \"pf-m-hidden-on-sm\",\n    \"visibleOnSm\": \"pf-m-visible-on-sm\",\n    \"hiddenOnMd\": \"pf-m-hidden-on-md\",\n    \"visibleOnMd\": \"pf-m-visible-on-md\",\n    \"hiddenOnLg\": \"pf-m-hidden-on-lg\",\n    \"visibleOnLg\": \"pf-m-visible-on-lg\",\n    \"hiddenOnXl\": \"pf-m-hidden-on-xl\",\n    \"visibleOnXl\": \"pf-m-visible-on-xl\",\n    \"hiddenOn_2xl\": \"pf-m-hidden-on-2xl\",\n    \"visibleOn_2xl\": \"pf-m-visible-on-2xl\",\n    \"fullHeight\": \"pf-m-full-height\",\n    \"read\": \"pf-m-read\",\n    \"selected\": \"pf-m-selected\",\n    \"unread\": \"pf-m-unread\",\n    \"attention\": \"pf-m-attention\",\n    \"expanded\": \"pf-m-expanded\",\n    \"collapsed\": \"pf-m-collapsed\",\n    \"limitWidth\": \"pf-m-limit-width\",\n    \"alignCenter\": \"pf-m-align-center\",\n    \"overflowScroll\": \"pf-m-overflow-scroll\",\n    \"shadowBottom\": \"pf-m-shadow-bottom\",\n    \"shadowTop\": \"pf-m-shadow-top\",\n    \"stickyTop\": \"pf-m-sticky-top\",\n    \"stickyBottom\": \"pf-m-sticky-bottom\",\n    \"stickyTopOnSmHeight\": \"pf-m-sticky-top-on-sm-height\",\n    \"stickyBottomOnSmHeight\": \"pf-m-sticky-bottom-on-sm-height\",\n    \"stickyTopOnMdHeight\": \"pf-m-sticky-top-on-md-height\",\n    \"stickyBottomOnMdHeight\": \"pf-m-sticky-bottom-on-md-height\",\n    \"stickyTopOnLgHeight\": \"pf-m-sticky-top-on-lg-height\",\n    \"stickyBottomOnLgHeight\": \"pf-m-sticky-bottom-on-lg-height\",\n    \"stickyTopOnXlHeight\": \"pf-m-sticky-top-on-xl-height\",\n    \"stickyBottomOnXlHeight\": \"pf-m-sticky-bottom-on-xl-height\",\n    \"stickyTopOn_2xlHeight\": \"pf-m-sticky-top-on-2xl-height\",\n    \"stickyBottomOn_2xlHeight\": \"pf-m-sticky-bottom-on-2xl-height\",\n    \"fill\": \"pf-m-fill\",\n    \"noFill\": \"pf-m-no-fill\",\n    \"light_100\": \"pf-m-light-100\",\n    \"dark_100\": \"pf-m-dark-100\",\n    \"dark_200\": \"pf-m-dark-200\",\n    \"padding\": \"pf-m-padding\",\n    \"noPadding\": \"pf-m-no-padding\",\n    \"paddingOnSm\": \"pf-m-padding-on-sm\",\n    \"noPaddingOnSm\": \"pf-m-no-padding-on-sm\",\n    \"paddingOnMd\": \"pf-m-padding-on-md\",\n    \"noPaddingOnMd\": \"pf-m-no-padding-on-md\",\n    \"paddingOnLg\": \"pf-m-padding-on-lg\",\n    \"noPaddingOnLg\": \"pf-m-no-padding-on-lg\",\n    \"paddingOnXl\": \"pf-m-padding-on-xl\",\n    \"noPaddingOnXl\": \"pf-m-no-padding-on-xl\",\n    \"paddingOn_2xl\": \"pf-m-padding-on-2xl\",\n    \"noPaddingOn_2xl\": \"pf-m-no-padding-on-2xl\",\n    \"light_200\": \"pf-m-light-200\"\n  },\n  \"nav\": \"pf-c-nav\",\n  \"notificationBadge\": \"pf-c-notification-badge\",\n  \"page\": \"pf-c-page\",\n  \"pageDrawer\": \"pf-c-page__drawer\",\n  \"pageHeader\": \"pf-c-page__header\",\n  \"pageHeaderBrand\": \"pf-c-page__header-brand\",\n  \"pageHeaderBrandLink\": \"pf-c-page__header-brand-link\",\n  \"pageHeaderBrandToggle\": \"pf-c-page__header-brand-toggle\",\n  \"pageHeaderNav\": \"pf-c-page__header-nav\",\n  \"pageHeaderTools\": \"pf-c-page__header-tools\",\n  \"pageHeaderToolsGroup\": \"pf-c-page__header-tools-group\",\n  \"pageHeaderToolsItem\": \"pf-c-page__header-tools-item\",\n  \"pageMain\": \"pf-c-page__main\",\n  \"pageMainBody\": \"pf-c-page__main-body\",\n  \"pageMainBreadcrumb\": \"pf-c-page__main-breadcrumb\",\n  \"pageMainDrawer\": \"pf-c-page__main-drawer\",\n  \"pageMainGroup\": \"pf-c-page__main-group\",\n  \"pageMainNav\": \"pf-c-page__main-nav\",\n  \"pageMainSection\": \"pf-c-page__main-section\",\n  \"pageMainSubnav\": \"pf-c-page__main-subnav\",\n  \"pageMainTabs\": \"pf-c-page__main-tabs\",\n  \"pageMainWizard\": \"pf-c-page__main-wizard\",\n  \"pageSidebar\": \"pf-c-page__sidebar\",\n  \"pageSidebarBody\": \"pf-c-page__sidebar-body\",\n  \"themeDark\": \"pf-theme-dark\"\n};","import { Button } from '@patternfly/react-core';\nimport { fitContent, TableVariant } from '@patternfly/react-table';\nimport difference from 'lodash/difference';\nimport map from 'lodash/map';\nimport PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { clearFilters, selectEntity } from '../../store/inventory-actions';\nimport AddSystemsToGroupModal from '../InventoryGroups/Modals/AddSystemsToGroupModal';\nimport InventoryTable from '../InventoryTable/InventoryTable';\n\nexport const bulkSelectConfig = (dispatch, selectedNumber, noneSelected, pageSelected, rowsNumber) => ({\n    count: selectedNumber,\n    id: 'bulk-select-groups',\n    items: [\n        {\n            title: 'Select none (0)',\n            onClick: () => dispatch(selectEntity(-1, false)),\n            props: { isDisabled: noneSelected }\n        },\n        {\n            title: `${pageSelected ? 'Deselect' : 'Select'} page (${\n                rowsNumber\n            } items)`,\n            onClick: () => dispatch(selectEntity(0, !pageSelected))\n        }\n        // TODO: Implement \"select all\"\n    ],\n    onSelect: (value) => {\n        dispatch(selectEntity(0, value));\n    },\n    checked: selectedNumber > 0 // TODO: support partial selection (dash sign) in FEC BulkSelect\n});\n\nconst prepareColumns = (initialColumns) => {\n    // hides the \"groups\" column\n    const columns = initialColumns.filter(({ key }) => key !== 'groups');\n\n    // additionally insert the \"update method\" column\n    columns.splice(columns.length - 1 /* must be penultimate */, 0, {\n        key: 'update_method',\n        title: 'Update method',\n        sortKey: 'update_method',\n        transforms: [fitContent],\n        renderFunc: (value, hostId, systemData) =>\n            systemData?.system_profile?.system_update_method || 'N/A',\n        props: {\n            // TODO: remove isStatic when the sorting is supported by API\n            isStatic: true,\n            width: 10\n        }\n    });\n\n    return columns;\n};\n\nconst GroupSystems = ({ groupName, groupId }) => {\n    const dispatch = useDispatch();\n\n    const selected = useSelector(\n        (state) => state?.entities?.selected || new Map()\n    );\n    const rows = useSelector(({ entities }) => entities?.rows || []);\n\n    const noneSelected = selected.size === 0;\n    const displayedIds = map(rows, 'id');\n    const pageSelected =\n    difference(displayedIds, [...selected.keys()]).length === 0;\n\n    const [isModalOpen, setIsModalOpen] = useState(false);\n\n    const resetTable = () => {\n        dispatch(clearFilters());\n        dispatch(selectEntity(-1, false));\n    };\n\n    useEffect(() => {\n        return () => {\n            resetTable();\n        };\n    }, []);\n\n    return (\n        <div id='group-systems-table'>\n            {\n                isModalOpen && <AddSystemsToGroupModal\n                    isModalOpen={isModalOpen}\n                    setIsModalOpen={(value) => {\n                        resetTable();\n                        setIsModalOpen(value);\n                    }\n                    }\n                    groupId={groupId}\n                    groupName={groupName}\n                />\n            }\n            {\n                !isModalOpen &&\n                <InventoryTable\n                    columns={prepareColumns}\n                    getEntities={async (items, config, showTags, defaultGetEntities) =>\n                        await defaultGetEntities(\n                            items,\n                            // filter systems by the group name\n                            {\n                                ...config,\n                                filters: {\n                                    ...config.filters,\n                                    groupName: [groupName] // TODO: the param is not yet supported by `apiHostGetHostList`\n                                }\n                            },\n                            showTags\n                        )\n                    }\n                    tableProps={{\n                        isStickyHeader: true,\n                        variant: TableVariant.compact,\n                        canSelectAll: false\n                    }}\n                    bulkSelect={bulkSelectConfig(dispatch, selected.size, noneSelected, pageSelected, rows.length)}\n                >\n                    <Button\n                        variant='primary'\n                        onClick={() => {\n                            resetTable();\n                            setIsModalOpen(true);\n                        }}\n\n                    >\n                    Add systems\n                    </Button>\n                </InventoryTable>\n            }\n        </div>\n    );\n};\n\nGroupSystems.propTypes = {\n    groupName: PropTypes.string.isRequired,\n    groupId: PropTypes.string.isRequired\n};\n\nexport default GroupSystems;\n","import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"Component\", \"render\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport useFieldApi from '../use-field-api';\n\nvar FieldProvider = function FieldProvider(_ref) {\n  var Component = _ref.Component,\n      render = _ref.render,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var fieldProviderProps = useFieldApi(props);\n\n  if (Component) {\n    return /*#__PURE__*/React.createElement(Component, fieldProviderProps);\n  }\n\n  if (render) {\n    return render(_objectSpread({}, fieldProviderProps));\n  }\n\n  throw new Error('Field provider is missing either Component or render prop.');\n};\n\nFieldProvider.propTypes = {\n  Component: PropTypes.oneOfType([PropTypes.node, PropTypes.element, PropTypes.func]),\n  render: PropTypes.func\n};\nexport default FieldProvider;","import { FormSpy, useFormApi } from '@data-driven-forms/react-form-renderer';\nimport { Button, Flex } from '@patternfly/react-core';\nimport ExclamationTriangleIcon from '@patternfly/react-icons/dist/js/icons/exclamation-triangle-icon';\nimport warningColor from '@patternfly/react-tokens/dist/esm/global_warning_color_100';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Modal from './Modal';\nimport { confirmSystemsAddSchema } from './ModalSchemas/schemes';\n\nconst ConfirmSystemsAddModal = ({\n    isModalOpen,\n    onSubmit,\n    onBack,\n    onCancel,\n    hostsNumber\n}) => (\n    <Modal\n        isModalOpen={isModalOpen}\n        title={'Add all selected systems to group?'}\n        titleIconVariant={() => (\n            <ExclamationTriangleIcon color={warningColor.value} />\n        )}\n        closeModal={onCancel}\n        schema={confirmSystemsAddSchema(hostsNumber)}\n        reloadData={() => {}}\n        onSubmit={onSubmit}\n        customFormTemplate={({ formFields, schema }) => {\n            const { handleSubmit, getState } = useFormApi();\n            const { submitting, valid } = getState();\n\n            return (\n                <form onSubmit={handleSubmit}>\n                    <Flex\n                        direction={{ default: 'column' }}\n                        spaceItems={{ default: 'spaceItemsLg' }}\n                    >\n                        {schema.title}\n                        {formFields}\n                        <FormSpy>\n                            {() => (\n                                <Flex>\n                                    <Button\n                                        isDisabled={submitting || !valid}\n                                        type=\"submit\"\n                                        color=\"primary\"\n                                        variant=\"primary\"\n                                    >\n                                        Yes, add all systems to group\n                                    </Button>\n                                    <Button variant=\"secondary\" onClick={onBack}>\n                                        Back\n                                    </Button>\n                                    <Button variant=\"link\" onClick={onCancel}>\n                                        Cancel\n                                    </Button>\n                                </Flex>\n                            )}\n                        </FormSpy>\n                    </Flex>\n                </form>\n            );\n        }}\n    />\n);\n\nConfirmSystemsAddModal.propTypes = {\n    isModalOpen: PropTypes.bool,\n    onSubmit: PropTypes.func,\n    onBack: PropTypes.func,\n    onCancel: PropTypes.func,\n    hostsNumber: PropTypes.number\n};\n\nexport default ConfirmSystemsAddModal;\n","import {\n    Alert,\n    Button,\n    Flex,\n    FlexItem,\n    Modal\n} from '@patternfly/react-core';\nimport { fitContent, TableVariant } from '@patternfly/react-table';\nimport difference from 'lodash/difference';\nimport map from 'lodash/map';\nimport PropTypes from 'prop-types';\nimport React, { useCallback, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchGroupDetail } from '../../../store/inventory-actions';\nimport { bulkSelectConfig } from '../../GroupSystems/GroupSystems';\nimport InventoryTable from '../../InventoryTable/InventoryTable';\nimport { addHostsToGroupById } from '../utils/api';\nimport apiWithToast from '../utils/apiWithToast';\nimport ConfirmSystemsAddModal from './ConfirmSystemsAddModal';\n\nexport const prepareColumns = (initialColumns) => {\n    const columns = initialColumns;\n\n    // additionally insert the \"update method\" column\n    columns.splice(columns.length - 2 /* must be the 3rd col from the end */, 0, {\n        key: 'update_method',\n        title: 'Update method',\n        sortKey: 'update_method',\n        transforms: [fitContent],\n        renderFunc: (value, hostId, systemData) =>\n            systemData?.system_profile?.system_update_method || 'N/A',\n        props: {\n            // TODO: remove isStatic when the sorting is supported by API\n            isStatic: true,\n            width: 10\n        }\n    });\n\n    // map columns to the speicifc order\n    return [\n        'display_name',\n        'system_profile',\n        'tags',\n        'update_method',\n        'groups',\n        'updated'\n    ].map((colKey) => columns.find(({ key }) => key === colKey))\n    .filter(Boolean); // eliminate possible undefined's\n};\n\nconst AddSystemsToGroupModal = ({\n    isModalOpen,\n    setIsModalOpen,\n    groupId,\n    groupName\n}) => {\n    const dispatch = useDispatch();\n\n    const [confirmationModalOpen, setConfirmationModalOpen] = useState(false);\n    const [systemsSelectModalOpen, setSystemSelectModalOpen] = useState(true);\n    const selected = useSelector(\n        (state) => state?.entities?.selected || new Map()\n    );\n    const rows = useSelector(({ entities }) => entities?.rows || []);\n\n    const noneSelected = selected.size === 0;\n    const displayedIds = map(rows, 'id');\n    const pageSelected = difference(displayedIds, [...selected.keys()]).length === 0;\n\n    const alreadyHasGroup = [...selected].filter(\n    // eslint-disable-next-line camelcase\n        (entry) => {\n            return entry[1].group_name !== undefined && entry[1].group_name !== '';\n        }\n    );\n    const showWarning = alreadyHasGroup.length > 0;\n\n    const handleSystemAddition = useCallback(\n        (hostIds) => {\n            const statusMessages = {\n                onSuccess: {\n                    title: 'Success',\n                    description: `${hostIds.length > 1 ? 'Systems' : 'System'} added to ${groupName || groupId}`\n                },\n                onError: {\n                    title: 'Error',\n                    description: `Failed to add ${hostIds.length > 1 ? 'systems' : 'system'} to ${groupName || groupId}`\n                }\n            };\n            return apiWithToast(\n                dispatch,\n                () => addHostsToGroupById(groupId, hostIds),\n                statusMessages\n            );\n        },\n        [isModalOpen]\n    );\n\n    return (\n        isModalOpen && (\n            <>\n                {/** confirmation modal */}\n                <ConfirmSystemsAddModal\n                    isModalOpen={confirmationModalOpen}\n                    onSubmit={async () => {\n                        await handleSystemAddition([...selected.keys()]);\n                        setTimeout(() => dispatch(fetchGroupDetail(groupId)), 500); // refetch data for this group\n                        setIsModalOpen(false);\n\n                    }}\n                    onBack={() => {\n                        setConfirmationModalOpen(false);\n                        setSystemSelectModalOpen(true); // switch back to the systems table modal\n                    }}\n                    onCancel={() => setIsModalOpen(false)}\n                    hostsNumber={alreadyHasGroup.length}\n                />\n                {/** hosts selection modal */}\n                <Modal\n                    title=\"Add systems\"\n                    isOpen={systemsSelectModalOpen}\n                    onClose={() => setIsModalOpen(false)}\n                    footer={\n                        <Flex direction={{ default: 'column' }} style={{ width: '100%' }}>\n                            {showWarning && (\n                                <FlexItem fullWidth={{ default: 'fullWidth' }}>\n                                    <Alert\n                                        variant=\"warning\"\n                                        isInline\n                                        title=\"One or more of the selected systems\n                                    already belong to a group. Adding these systems\n                                    to a different group may impact system configuration.\"\n                                    />\n                                </FlexItem>\n                            )}\n                            <FlexItem>\n                                <Button\n                                    key=\"confirm\"\n                                    variant=\"primary\"\n                                    onClick={async () => {\n                                        if (showWarning) {\n                                            setSystemSelectModalOpen(false);\n                                            setConfirmationModalOpen(true); // switch to the confirmation modal\n                                        } else {\n                                            await handleSystemAddition([\n                                                ...selected.keys()\n                                            ]);\n                                            setTimeout(\n                                                () =>\n                                                    dispatch(\n                                                        fetchGroupDetail(groupId)\n                                                    ),\n                                                500\n                                            ); // refetch data for this group\n                                            setIsModalOpen(false);\n                                        }\n                                    }}\n                                    isDisabled={noneSelected}\n                                >\n                                    Add systems\n                                </Button>\n                                <Button\n                                    key=\"cancel\"\n                                    variant=\"link\"\n                                    onClick={() => setIsModalOpen(false)}\n                                >\n                                    Cancel\n                                </Button>\n                            </FlexItem>\n                        </Flex>\n                    }\n                    variant=\"large\" // required to accomodate the systems table\n                >\n                    <InventoryTable\n                        columns={prepareColumns}\n                        variant={TableVariant.compact} // TODO: this doesn't affect the table variant\n                        tableProps={{\n                            isStickyHeader: false,\n                            canSelectAll: false\n                        }}\n                        bulkSelect={bulkSelectConfig(dispatch, selected.size, noneSelected, pageSelected, rows.length)}\n                        initialLoading={true}\n                    />\n                </Modal>\n            </>\n        )\n    );\n};\n\nAddSystemsToGroupModal.propTypes = {\n    isModalOpen: PropTypes.bool,\n    setIsModalOpen: PropTypes.func,\n    reloadData: PropTypes.func,\n    groupId: PropTypes.string,\n    groupName: PropTypes.string\n};\n\nexport default AddSystemsToGroupModal;\n","import React, { useState } from 'react';\nimport {\n    Button,\n    EmptyState,\n    EmptyStateBody,\n    EmptyStateIcon,\n    EmptyStateSecondaryActions,\n    Title\n} from '@patternfly/react-core';\nimport { ExternalLinkAltIcon, PlusCircleIcon } from '@patternfly/react-icons';\n\nimport { global_palette_black_600 as globalPaletteBlack600 } from '@patternfly/react-tokens/dist/js/global_palette_black_600';\nimport AddSystemsToGroupModal from '../InventoryGroups/Modals/AddSystemsToGroupModal';\nimport PropTypes from 'prop-types';\n\nconst NoSystemsEmptyState = ({ groupId, groupName }) => {\n    const [isModalOpen, setIsModalOpen] = useState(false);\n\n    return (\n        <EmptyState\n            data-ouia-component-id=\"empty-state\"\n            data-ouia-component-type=\"PF4/EmptyState\"\n            data-ouia-safe={true}\n        >\n            <AddSystemsToGroupModal\n                isModalOpen={isModalOpen}\n                setIsModalOpen={setIsModalOpen}\n                groupId={groupId}\n                groupName={groupName}\n            />\n            <EmptyStateIcon icon={PlusCircleIcon} color={globalPaletteBlack600.value} />\n            <Title headingLevel=\"h4\" size=\"lg\">\n                No systems added\n            </Title>\n            <EmptyStateBody>\n                To manage systems more effectively, add systems to the group.\n            </EmptyStateBody>\n            <Button variant=\"primary\" onClick={() => setIsModalOpen(true)}>\n                Add systems\n            </Button>\n            <EmptyStateSecondaryActions>\n                <Button\n                    variant=\"link\"\n                    icon={<ExternalLinkAltIcon />}\n                    iconPosition=\"right\"\n                >\n                    Learn more about system groups\n                </Button>\n            </EmptyStateSecondaryActions>\n        </EmptyState>\n    );};\n\nNoSystemsEmptyState.propTypes = {\n    groupId: PropTypes.string,\n    groupName: PropTypes.string\n};\nexport default NoSystemsEmptyState;\n","import { EmptyState, EmptyStateBody, Spinner } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport NoSystemsEmptyState from '../InventoryGroupDetail/NoSystemsEmptyState';\nimport GroupSystems from './GroupSystems';\n\nconst GroupSystemsWrapper = ({ groupName, groupId }) => {\n    const { uninitialized, loading, data } = useSelector((state) => state.groupDetail);\n    const hosts = data?.results?.[0]?.host_ids /* can be null */ || [];\n\n    return uninitialized || loading ? (\n        <EmptyState>\n            <EmptyStateBody>\n                <Spinner />\n            </EmptyStateBody>\n        </EmptyState>\n    ) : hosts.length > 0 ? (\n        <GroupSystems groupId={groupId} groupName={groupName} />\n    ) :\n        <NoSystemsEmptyState groupId={groupId} groupName={groupName} />;\n};\n\nGroupSystemsWrapper.propTypes = {\n    groupName: PropTypes.string.isRequired,\n    groupId: PropTypes.string.isRequired\n};\n\nexport default GroupSystemsWrapper;\nexport { GroupSystems };\n","import {\n    Breadcrumb,\n    BreadcrumbItem,\n    Dropdown,\n    DropdownItem,\n    DropdownToggle,\n    Flex,\n    FlexItem,\n    Skeleton\n} from '@patternfly/react-core';\nimport {\n    PageHeader,\n    PageHeaderTitle\n} from '@redhat-cloud-services/frontend-components';\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, useHistory } from 'react-router-dom';\nimport { routes } from '../../Routes';\nimport PropTypes from 'prop-types';\nimport DeleteGroupModal from '../InventoryGroups/Modals/DeleteGroupModal';\nimport RenameGroupModal from '../InventoryGroups/Modals/RenameGroupModal';\nimport { fetchGroupDetail } from '../../store/inventory-actions';\n\nconst GroupDetailHeader = ({ groupId }) => {\n    const dispatch = useDispatch();\n    const { uninitialized, loading, data } = useSelector(\n        (state) => state.groupDetail\n    );\n\n    const [dropdownOpen, setDropdownOpen] = useState(false);\n    const [renameModalOpen, setRenameModalOpen] = useState(false);\n    const [deleteModalOpen, setDeleteModalOpen] = useState(false);\n\n    const name = data?.results?.[0]?.name;\n    const title =\n      uninitialized || loading ? (\n          <Skeleton width=\"250px\" screenreaderText=\"Loading group details\" />\n      ) : (\n          name || groupId // in case of error, render just id from URL\n      );\n\n    const history = useHistory();\n\n    return (\n        <PageHeader>\n            <RenameGroupModal\n                isModalOpen={renameModalOpen}\n                setIsModalOpen={() => setRenameModalOpen(false)}\n                modalState={{\n                    id: groupId,\n                    name: name || groupId\n                }}\n                reloadData={() => dispatch(fetchGroupDetail(groupId))}\n            />\n            <DeleteGroupModal\n                isModalOpen={deleteModalOpen}\n                setIsModalOpen={() => setDeleteModalOpen(false)}\n                modalState={{\n                    id: groupId,\n                    name: name || groupId\n                }}\n                reloadData={() => history.push('/groups')}\n            />\n            <Breadcrumb>\n                <BreadcrumbItem>\n                    <Link to={routes.groups}>Groups</Link>\n                </BreadcrumbItem>\n                <BreadcrumbItem isActive>{title}</BreadcrumbItem>\n            </Breadcrumb>\n            <Flex id=\"group-header\" justifyContent={{ default: 'justifyContentSpaceBetween' }}>\n                <FlexItem>\n                    <PageHeaderTitle title={title} />\n                </FlexItem>\n                <FlexItem id=\"group-header-dropdown\">\n                    <Dropdown\n                        onSelect={() => setDropdownOpen(!dropdownOpen)}\n                        autoFocus={false}\n                        isOpen={dropdownOpen}\n                        toggle={\n                            <DropdownToggle\n                                id=\"group-dropdown-toggle\"\n                                onToggle={(isOpen) => setDropdownOpen(isOpen)}\n                                toggleVariant=\"secondary\"\n                                isDisabled={uninitialized || loading}\n                            >\n                                Group actions\n                            </DropdownToggle>\n                        }\n                        dropdownItems={[\n                            <DropdownItem\n                                key=\"rename-group\"\n                                onClick={() => setRenameModalOpen(true)}\n                            >\n                                Rename\n                            </DropdownItem>,\n                            <DropdownItem\n                                key=\"delete-group\"\n                                onClick={() => setDeleteModalOpen(true)}\n                            >\n                                Delete\n                            </DropdownItem>\n                        ]}\n                    />\n                </FlexItem>\n            </Flex>\n        </PageHeader>\n    );\n};\n\nGroupDetailHeader.propTypes = {\n    groupId: PropTypes.string.isRequired\n};\n\nexport default GroupDetailHeader;\n","import {\n    Bullseye,\n    PageSection,\n    Spinner,\n    Tab,\n    Tabs\n} from '@patternfly/react-core';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\nimport PropTypes from 'prop-types';\nimport React, { lazy, Suspense, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchGroupDetail } from '../../store/inventory-actions';\nimport GroupSystems from '../GroupSystems';\nimport GroupDetailHeader from './GroupDetailHeader';\n\nconst GroupDetailInfo = lazy(() => import('./GroupDetailInfo'));\n\nconst InventoryGroupDetail = ({ groupId }) => {\n    const dispatch = useDispatch();\n    const { data } = useSelector((state) => state.groupDetail);\n    const chrome = useChrome();\n    const groupName = data?.results?.[0]?.name;\n\n    useEffect(() => {\n        dispatch(fetchGroupDetail(groupId));\n    }, []);\n\n    useEffect(() => {\n    // if available, change ID to the group's name in the window title\n        chrome?.updateDocumentTitle?.(\n      `${groupName || groupId} - Inventory Groups | Red Hat Insights`\n        );\n    }, [data]);\n\n    const [activeTabKey, setActiveTabKey] = useState(0);\n\n    // TODO: append search parameter to identify the active tab\n\n    return (\n        <React.Fragment>\n            <GroupDetailHeader groupId={groupId} />\n            <PageSection variant=\"light\" type=\"tabs\">\n                <Tabs\n                    activeKey={activeTabKey}\n                    onSelect={(event, value) => setActiveTabKey(value)}\n                    aria-label=\"Group tabs\"\n                    role=\"region\"\n                    inset={{ default: 'insetMd' }} // add extra space before the first tab (according to mocks)\n                >\n                    <Tab\n                        eventKey={0}\n                        title='Systems'\n                        aria-label=\"Group systems tab\"\n                    >\n                        <PageSection>\n                            <GroupSystems groupName={groupName} groupId={groupId}/>\n                        </PageSection>\n                    </Tab>\n                    <Tab\n                        eventKey={1}\n                        title='Group info'\n                        aria-label=\"Group info tab\"\n                    >\n                        {activeTabKey === 1 && ( // helps to lazy load the component\n                            <PageSection>\n                                <Suspense\n                                    fallback={\n                                        <Bullseye>\n                                            <Spinner />\n                                        </Bullseye>\n                                    }\n                                >\n                                    <GroupDetailInfo />\n                                </Suspense>\n                            </PageSection>\n                        )}\n                    </Tab>\n                </Tabs>\n            </PageSection>\n        </React.Fragment>\n    );\n};\n\nInventoryGroupDetail.propTypes = {\n    groupId: PropTypes.string.isRequired\n};\n\nexport default InventoryGroupDetail;\n","import InventoryGroupDetail from '../components/InventoryGroupDetail';\n\nexport default InventoryGroupDetail;\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport InventoryGroupDetail from './InventoryGroupDetail';\n\nconst InventoryGroupDetailWrapper = () => {\n    const { groupId } = useParams();\n\n    return <InventoryGroupDetail groupId={groupId} />;\n};\n\nexport default InventoryGroupDetailWrapper;\n"],"names":["Breadcrumb","_a","children","className","ariaLabel","ouiaId","ouiaSafe","props","__rest","ouiaProps","displayName","Object","assign","child","index","showDivider","BreadcrumbItem","classNameProp","to","isActive","isDropdown","target","component","render","Component","ariaCurrent","undefined","type","href","Dropdown","onSelect","ref","alignments","contextProps","menuAppendTo","isFlipEnabled","removeFindDomNode","zIndex","value","event","toggleTextClass","toggleIconClass","toggleIndicatorClass","menuClass","itemClass","toggleClass","baseClass","baseComponent","sectionClass","sectionTitleClass","sectionComponent","disabledClass","plainTextClass","ouiaComponentType","pageContextDefaults","isManagedSidebar","isNavOpen","onNavToggle","width","height","getBreakpoint","getVerticalBreakpoint","PageContext","PageContextProvider","Provider","PageContextConsumer","Consumer","PageSectionVariants","PageSectionTypes","variantType","default","nav","subNav","breadcrumb","tabs","wizard","variantStyle","light","dark","darker","PageSection","variant","padding","isFilled","isWidthLimited","isCenterAligned","sticky","stickyOnBreakpoint","hasShadowTop","hasShadowBottom","hasOverflowScroll","console","warn","tabIndex","i","bulkSelectConfig","dispatch","selectedNumber","noneSelected","pageSelected","rowsNumber","count","id","items","title","onClick","selectEntity","isDisabled","checked","prepareColumns","initialColumns","columns","filter","key","splice","length","sortKey","transforms","fitContent","renderFunc","hostId","systemData","system_profile","system_update_method","isStatic","GroupSystems","groupName","groupId","useDispatch","selected","useSelector","state","entities","Map","rows","size","displayedIds","map","difference","keys","useState","isModalOpen","setIsModalOpen","resetTable","clearFilters","useEffect","InventoryTable","getEntities","config","showTags","defaultGetEntities","filters","tableProps","isStickyHeader","TableVariant","canSelectAll","bulkSelect","Button","propTypes","PropTypes","ConfirmSystemsAddModal","onSubmit","onBack","onCancel","hostsNumber","titleIconVariant","color","warningColor","closeModal","schema","confirmSystemsAddSchema","reloadData","customFormTemplate","formFields","useFormApi","handleSubmit","getState","submitting","valid","Flex","direction","spaceItems","colKey","find","Boolean","AddSystemsToGroupModal","confirmationModalOpen","setConfirmationModalOpen","systemsSelectModalOpen","setSystemSelectModalOpen","alreadyHasGroup","entry","group_name","showWarning","handleSystemAddition","useCallback","hostIds","statusMessages","onSuccess","description","onError","apiWithToast","addHostsToGroupById","setTimeout","fetchGroupDetail","Modal","isOpen","onClose","footer","style","FlexItem","fullWidth","Alert","isInline","initialLoading","NoSystemsEmptyState","EmptyState","EmptyStateIcon","icon","PlusCircleIcon","globalPaletteBlack600","Title","headingLevel","EmptyStateBody","EmptyStateSecondaryActions","iconPosition","GroupSystemsWrapper","groupDetail","uninitialized","loading","data","hosts","results","host_ids","Spinner","GroupDetailHeader","dropdownOpen","setDropdownOpen","renameModalOpen","setRenameModalOpen","deleteModalOpen","setDeleteModalOpen","name","Skeleton","screenreaderText","history","useHistory","PageHeader","RenameGroupModal","modalState","DeleteGroupModal","push","Link","routes","justifyContent","PageHeaderTitle","autoFocus","toggle","DropdownToggle","onToggle","toggleVariant","dropdownItems","DropdownItem","GroupDetailInfo","lazy","InventoryGroupDetail","chrome","useChrome","updateDocumentTitle","activeTabKey","setActiveTabKey","Tabs","activeKey","role","inset","Tab","eventKey","Suspense","fallback","Bullseye","useParams"],"sourceRoot":""}