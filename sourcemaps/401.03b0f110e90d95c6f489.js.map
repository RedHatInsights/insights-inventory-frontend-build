{"version":3,"sources":["webpack:///./src/modules/AsyncInventory.js"],"names":["AsyncInventory","componentName","onLoad","store","history","innerRef","props","useState","Component","setComponent","useEffect","Promise","all","then","inventoryConnector","shared","api","mergeWithDetail","rest","undefined","InvCmp","Provider","Router","fallback","LoadingFallback","ref","propTypes","PropTypes","current","defaultProps"],"mappings":"s3BAMA,IAAMA,EAAiB,SAAC,GAAkE,IAAhEC,EAAgE,EAAhEA,cAAeC,EAAiD,EAAjDA,OAAQC,EAAyC,EAAzCA,MAAOC,EAAkC,EAAlCA,QAASC,EAAyB,EAAzBA,SAAaC,GAAY,kEACtF,GAAkCC,gBAAlC,eAAOC,EAAP,KAAkBC,EAAlB,KA6BA,OA5BAC,gBAAU,YACN,iBAAC,kHAC+EC,QAAQC,IAAI,CACpF,+HAIA,iKACA,6GACA,2EACDC,MAAK,+BAAIC,EAAJ,KAAIA,mBAAJ,OAAwDC,EAAxD,KAAgEC,EAAhE,eACJF,qBACAG,gBAFI,EAA4BA,gBAGhCF,SACAC,QAJI,kCATX,gBACWF,EADX,EACWA,mBAAoBG,EAD/B,EAC+BA,gBAAiBF,EADhD,EACgDA,OAAQC,EADxD,EACwDA,IAAQE,GADhE,oEAgBuCJ,EAAmBX,OAAOgB,OAAWA,GAAW,GAA3DC,EAhB5B,EAgBYnB,GACTC,EAAO,EAAD,OACCgB,GACAH,GAFD,IAGFC,MACAC,qBAEJR,GAAa,kBAAMW,KAvBtB,2CAAD,KAyBD,CAACnB,IAGA,kBAAC,EAAAoB,SAAD,CAAUlB,MAAOA,GACb,kBAAC,EAAAmB,OAAD,CAAQlB,QAASA,GACZI,GAAa,kBAACA,GAAD,UAAeF,EAAf,CAAsBiB,SAAUC,IAAiBC,IAAKpB,QAMpFL,EAAe0B,UAAY,CACvBvB,MAAOwB,WACPzB,OAAQyB,SACR1B,cAAe0B,WACfvB,QAASuB,WACTtB,SAAUsB,UAAgB,CACtBC,QAASD,WAIjB3B,EAAe6B,aAAe,CAC1B3B,OAAQ,cAGZ","file":"js/401.c34509922e0672a9bf8b.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Provider } from 'react-redux';\nimport { Router } from 'react-router-dom';\nimport LoadingFallback from '../components/SpinnerFallback';\n\nconst AsyncInventory = ({ componentName, onLoad, store, history, innerRef, ...props }) => {\n    const [Component, setComponent] = useState();\n    useEffect(() => {\n        (async () => {\n            const { inventoryConnector, mergeWithDetail, shared, api, ...rest } = await Promise.all([\n                import(\n                    /* webpackChunkName: \"inventoryConnector\" */\n                    '../Utilities/inventoryConnector'\n                ),\n                import(/* webpackChunkName: \"inventoryRedux\" */ '../store/redux'),\n                import(/* webpackChunkName: \"inventoryShared\" */ '../Utilities/index'),\n                import(/* webpackChunkName: \"inventoryApi\" */ '../api/index')\n            ]).then(([{ inventoryConnector }, { mergeWithDetail, ...rest }, shared, api]) => ({\n                inventoryConnector,\n                mergeWithDetail,\n                shared,\n                api,\n                ...rest\n            }));\n            const { [componentName]: InvCmp } = inventoryConnector(store, undefined, undefined, true);\n            onLoad({\n                ...rest,\n                ...shared,\n                api,\n                mergeWithDetail\n            });\n            setComponent(() => InvCmp);\n        })();\n    }, [componentName]);\n\n    return (\n        <Provider store={store}>\n            <Router history={history}>\n                {Component && <Component {...props} fallback={LoadingFallback} ref={innerRef} />}\n            </Router>\n        </Provider>\n    );\n};\n\nAsyncInventory.propTypes = {\n    store: PropTypes.object,\n    onLoad: PropTypes.func,\n    componentName: PropTypes.string,\n    history: PropTypes.object,\n    innerRef: PropTypes.shape({\n        current: PropTypes.any\n    })\n};\n\nAsyncInventory.defaultProps = {\n    onLoad: () => undefined\n};\n\nexport default AsyncInventory;\n"],"sourceRoot":""}