{"version":3,"file":"js/764.1b387c7fd763042b7167.js","mappings":"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","sources":["webpack:///./src/components/InventoryGroups/Modals/RemoveHostsFromGroupModal.js","webpack:///./src/components/InventoryTable/ActionWithRBAC.js","webpack:///./src/components/SystemDetails/GeneralInfo.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/Main/Main.js","webpack:///./src/components/InventoryGroups/SmallComponents/CreateGroupButton.js","webpack:///./src/components/InventoryGroups/Modals/AddSelectedHostsToGroupModal.js","webpack:///./src/Utilities/hooks/useBulkSelectConfig.js","webpack:///./src/Utilities/edge.js","webpack:///./src/Utilities/path.js","webpack:///./src/routes/InventoryTable.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Modal from './Modal';\nimport apiWithToast from '../utils/apiWithToast';\nimport { useDispatch } from 'react-redux';\nimport { removeHostsFromGroup } from '../utils/api';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport { Text } from '@patternfly/react-core';\n\nconst schema = (groupName, hosts) => ({\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'warning-message',\n      label:\n        hosts.length === 1 ? (\n          <Text>\n            <strong>{hosts[0].display_name}</strong> will no longer be part of{' '}\n            <strong>{groupName}</strong> and its configuration will be impacted.\n          </Text>\n        ) : (\n          <Text>\n            <strong>{hosts.length}</strong> systems will no longer be part of{' '}\n            <strong>{groupName}</strong> and their configuration will be\n            impacted.\n          </Text>\n        ),\n    },\n  ],\n});\n\nconst RemoveHostsFromGroupModal = ({\n  isModalOpen,\n  setIsModalOpen,\n  modalState: hosts,\n  reloadData,\n  reloadTimeout,\n}) => {\n  const dispatch = useDispatch();\n  // the current iteration of groups feature a host can be in at maximum one group\n  const { name: groupName, id: groupId } = hosts[0].groups[0];\n\n  const handleRemoveHosts = () => {\n    const statusMessages = {\n      onSuccess: {\n        title: `${hosts.length} ${\n          hosts.length > 1 ? 'systems' : 'system'\n        } removed from ${groupName}`,\n      },\n      onError: {\n        title: `Failed to remove ${hosts.length} ${\n          hosts.length > 1 ? 'systems' : 'system'\n        } from ${groupName}`,\n      },\n    };\n\n    apiWithToast(\n      dispatch,\n      async () =>\n        await removeHostsFromGroup(\n          groupId,\n          hosts.map(({ id }) => id)\n        ),\n      statusMessages\n    );\n  };\n\n  return (\n    <Modal\n      isModalOpen={isModalOpen}\n      closeModal={() => setIsModalOpen(false)}\n      title=\"Remove from group\"\n      variant=\"danger\"\n      submitLabel=\"Remove\"\n      schema={schema(groupName, hosts)}\n      onSubmit={handleRemoveHosts}\n      reloadData={reloadData}\n      reloadTimeout={reloadTimeout}\n    />\n  );\n};\n\nRemoveHostsFromGroupModal.propTypes = {\n  modalState: PropTypes.arrayOf(\n    PropTypes.shape({\n      // eslint-disable-next-line camelcase\n      display_name: PropTypes.string,\n      id: PropTypes.string,\n      groups: PropTypes.arrayOf(\n        PropTypes.shape({\n          id: PropTypes.string,\n          name: PropTypes.string,\n        })\n      ),\n    })\n  ).isRequired,\n  isModalOpen: PropTypes.bool.isRequired,\n  setIsModalOpen: PropTypes.func.isRequired,\n  reloadData: PropTypes.func,\n  reloadTimeout: PropTypes.number,\n};\n\nexport default RemoveHostsFromGroupModal;\n","/**\n * This module contains Button and DropdownItem components wrapped by RBAC checks.\n *\n * The permissions are checked _only_ within the Inventory app context.\n */\nimport React from 'react';\nimport { usePermissionsWithContext } from '@redhat-cloud-services/frontend-components-utilities/RBACHook';\nimport { Button, DropdownItem, Tooltip } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\n\nexport const ActionButton = ({\n  requiredPermissions,\n  noAccessTooltip,\n  checkAll,\n  override,\n  ...props\n}) => {\n  const { hasAccess: enabled } =\n    override !== undefined\n      ? { hasAccess: override }\n      : usePermissionsWithContext(requiredPermissions, checkAll);\n\n  return enabled ? (\n    <Button {...props} />\n  ) : (\n    <Tooltip content={noAccessTooltip}>\n      <Button {...props} isAriaDisabled />\n    </Tooltip>\n  );\n};\n\nActionButton.propTypes = {\n  requiredPermissions: PropTypes.array,\n  noAccessTooltip: PropTypes.string,\n  checkAll: PropTypes.bool,\n  override: PropTypes.bool,\n};\n\nActionButton.defaultProps = {\n  checkAll: false,\n};\n\nexport const ActionDropdownItem = ({\n  requiredPermissions,\n  noAccessTooltip,\n  checkAll,\n  override,\n  ...props\n}) => {\n  const { hasAccess: enabled } =\n    override !== undefined\n      ? { hasAccess: override }\n      : usePermissionsWithContext(requiredPermissions, checkAll);\n\n  return enabled ? (\n    <DropdownItem {...props} />\n  ) : (\n    <DropdownItem {...props} isAriaDisabled tooltip={noAccessTooltip} />\n  );\n};\n\nActionDropdownItem.propTypes = {\n  requiredPermissions: PropTypes.array,\n  noAccessTooltip: PropTypes.string,\n  checkAll: PropTypes.bool,\n  override: PropTypes.bool,\n};\n\nActionDropdownItem.defaultProps = {\n  checkAll: false,\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport GeneralInformation from '../GeneralInfo/GeneralInformation';\nimport useFeatureFlag from '../../Utilities/useFeatureFlag';\nexport { default as TextInputModal } from '../GeneralInfo/TextInputModal';\n\nconst GeneralInfoTab = (props) => {\n  const systemProfile = useSelector(\n    ({ systemProfileStore }) => systemProfileStore?.systemProfile\n  );\n  const isEdgeHost = systemProfile?.host_type === 'edge';\n  const enableEdgeImageDetails = useFeatureFlag(\n    'edgeParity.inventory-system-detail'\n  );\n  const enableEdgeInventoryListDetails = useFeatureFlag(\n    'edgeParity.inventory-list'\n  );\n\n  return (\n    <GeneralInformation\n      {...props}\n      showImageDetails={\n        enableEdgeImageDetails && enableEdgeInventoryListDetails && isEdgeHost\n      }\n    />\n  );\n};\n\nexport default GeneralInfoTab;\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useEffect } from 'react';\nimport classNames from 'classnames';\nimport '../Main/main.css';\nexport var Main = function (_a) {\n    var children = _a.children, className = _a.className, props = __rest(_a, [\"children\", \"className\"]);\n    useEffect(function () {\n        console.error(\"Using deprecated \\\"Main\\\" component. Do not use it. Either remove it from your JSX or replace it by \\\"section\\\" HTML element.\");\n    }, []);\n    return (_jsx(\"section\", __assign({}, props, { className: \"\".concat(classNames(className, 'pf-l-page__main-section pf-c-page__main-section')) }, { children: children })));\n};\nexport var InternalMain = Main;\nexport default Main;\n//# sourceMappingURL=Main.js.map","import React from 'react';\nimport { Button, Text, Tooltip } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport { usePermissionsWithContext } from '@redhat-cloud-services/frontend-components-utilities/RBACHook';\nimport { NO_MODIFY_GROUPS_TOOLTIP_MESSAGE } from '../../../constants';\n\nexport const CreateGroupButton = ({ closeModal }) => {\n  const { hasAccess: canModifyGroups } = usePermissionsWithContext([\n    'inventory:groups:write',\n  ]);\n\n  return (\n    <>\n      <Text>Or</Text>\n      {canModifyGroups ? (\n        <Button variant=\"secondary\" className=\"pf-u-w-50\" onClick={closeModal}>\n          Create a new group\n        </Button>\n      ) : (\n        <Tooltip content={NO_MODIFY_GROUPS_TOOLTIP_MESSAGE}>\n          <Button variant=\"secondary\" className=\"pf-u-w-50\" isAriaDisabled>\n            Create a new group\n          </Button>\n        </Tooltip>\n      )}\n    </>\n  );\n};\n\nCreateGroupButton.propTypes = {\n  closeModal: PropTypes.func,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Modal from './Modal';\nimport { addHostsToGroupById } from '../utils/api';\nimport apiWithToast from '../utils/apiWithToast';\nimport { useDispatch } from 'react-redux';\nimport { CreateGroupButton } from '../SmallComponents/CreateGroupButton';\nimport { addHostSchema } from './ModalSchemas/schemes';\nimport CreateGroupModal from './CreateGroupModal';\n\nconst AddSelectedHostsToGroupModal = ({\n  isModalOpen,\n  setIsModalOpen,\n  modalState: hosts,\n  reloadData,\n}) => {\n  const dispatch = useDispatch();\n\n  const [isCreateGroupModalOpen, setIsCreateGroupModalOpen] = useState(false);\n  const handleAddDevices = (values) => {\n    const { group } = values;\n    const statusMessages = {\n      onSuccess: {\n        title: 'Success',\n        description: `System(s) have been added to ${group.name} successfully`,\n      },\n      onError: {\n        title: 'Error',\n        description: `Failed to add ${\n          hosts.length > 1 ? `${hosts.length} systems` : hosts[0].display_name\n        } to ${group.name}`,\n      },\n    };\n\n    apiWithToast(\n      dispatch,\n      () =>\n        addHostsToGroupById(\n          group.id,\n          hosts.map(({ id }) => id)\n        ),\n      statusMessages\n    );\n  };\n\n  return (\n    <>\n      {!isCreateGroupModalOpen && (\n        <Modal\n          isModalOpen={isModalOpen}\n          closeModal={() => setIsModalOpen(false)}\n          title=\"Add to group\"\n          submitLabel=\"Add\"\n          schema={addHostSchema(hosts)}\n          additionalMappers={{\n            'create-group-btn': {\n              component: CreateGroupButton,\n              closeModal: () => setIsCreateGroupModalOpen(true),\n            },\n          }}\n          onSubmit={handleAddDevices}\n          reloadData={reloadData}\n        />\n      )}\n      {isCreateGroupModalOpen && (\n        <CreateGroupModal\n          isModalOpen={isCreateGroupModalOpen}\n          setIsModalOpen={setIsCreateGroupModalOpen}\n          //modal before prop tells create group modal that it should\n          //reopen add host modal when user closes create group modal\n          modalBefore={true}\n          setterOfModalBefore={setIsModalOpen}\n        />\n      )}\n    </>\n  );\n};\n\nAddSelectedHostsToGroupModal.propTypes = {\n  modalState: PropTypes.arrayOf(\n    PropTypes.shape({\n      // eslint-disable-next-line camelcase\n      display_name: PropTypes.string,\n      id: PropTypes.string,\n    })\n  ).isRequired,\n  isModalOpen: PropTypes.bool,\n  setIsModalOpen: PropTypes.func,\n  reloadData: PropTypes.func,\n};\n\nexport default AddSelectedHostsToGroupModal;\n","/* eslint-disable camelcase */\nimport { Spinner } from '@patternfly/react-core';\nimport { flatten, map } from 'lodash';\nimport React, { Fragment, useCallback, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as actions from '../../store/actions';\nimport { loadSystems } from '../sharedFunctions';\nimport useFetchBatched from './useFetchBatched';\n\nexport const useBulkSelectConfig = (\n  selected,\n  globalFilter,\n  total,\n  rows,\n  loaded\n) => {\n  const [isBulkLoading, setBulkLoading] = useState(false);\n  const { fetchBatched } = useFetchBatched();\n  const dispatch = useDispatch();\n  const onSelectRows = (id, isSelected) =>\n    dispatch(actions.selectEntity(id, isSelected));\n  const calculateSelected = () => (selected ? selected.size : 0);\n  const { activeFilters } = useSelector(({ entities }) => entities);\n\n  const getEntitiesWrapper = async (filters, { page, per_page }) => {\n    const resp = loadSystems({ page, per_page, ...filters });\n\n    const data = await resp.payload;\n    return data;\n  };\n\n  const calculateChecked = (rows = [], selected) =>\n    rows.every(({ id }) => selected && selected.has(id))\n      ? rows.length > 0\n      : rows.some(({ id }) => selected && selected.has(id)) && null;\n\n  const fetchAllSystemIds = useCallback((filters, total) => {\n    return fetchBatched(getEntitiesWrapper, total, filters);\n  }, []);\n\n  const selectAllIds = async (selected = true) => {\n    setBulkLoading(true);\n    const data = await fetchAllSystemIds(\n      { filters: activeFilters, globalFilter },\n      total\n    );\n    const results = flatten(map(data, 'results'));\n    dispatch(actions.selectEntity(results, selected));\n    setBulkLoading(false);\n  };\n\n  return {\n    id: 'bulk-select-systems',\n    items: [\n      {\n        title: 'Select none (0)',\n        onClick: () => {\n          onSelectRows(-1, false);\n        },\n        props: { isDisabled: !selected },\n      },\n      {\n        ...(loaded && rows && rows.length > 0\n          ? {\n              title: `Select page (${rows.length})`,\n              onClick: () => {\n                onSelectRows(0, true);\n              },\n            }\n          : {}),\n      },\n      {\n        ...(loaded && rows && rows.length > 0\n          ? {\n              title: `Select all (${total})`,\n              onClick: async () => {\n                await selectAllIds();\n              },\n            }\n          : {}),\n      },\n    ],\n    checked: calculateChecked(rows, selected),\n    onSelect: (value) => {\n      onSelectRows(0, value);\n    },\n    toggleProps: {\n      'data-ouia-component-type': 'bulk-select-toggle-button',\n      children: isBulkLoading\n        ? [\n            <Fragment key=\"sd\">\n              <Spinner size=\"sm\" />\n              {`${calculateSelected()} selected`}\n            </Fragment>,\n          ]\n        : `${calculateSelected()} selected`,\n    },\n  };\n};\n","import { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\n\nconst manageEdgeInventoryUrlName = 'manage-edge-inventory';\n\nconst getNotificationProp = (dispatch) => {\n  return {\n    hasInfo: (hasInfoMessage) => {\n      dispatch({\n        ...addNotification({\n          variant: 'info',\n          ...hasInfoMessage,\n        }),\n      });\n    },\n    hasSuccess: (hasSuccessMessage) => {\n      dispatch({\n        ...addNotification({\n          variant: 'success',\n          ...hasSuccessMessage,\n        }),\n      });\n    },\n    err: (errMessage, err) => {\n      dispatch({\n        ...addNotification({\n          variant: 'danger',\n          ...errMessage,\n          // Add error message from API, if present\n          description: err?.Title\n            ? `${errMessage.description}: ${err.Title}`\n            : errMessage.description,\n        }),\n      });\n    },\n  };\n};\n\nexport { getNotificationProp, manageEdgeInventoryUrlName };\n","function getBaseName(pathname) {\n  let release = '/';\n  const pathName = pathname.split('/');\n\n  pathName.shift();\n\n  if (pathName[0] === 'preview') {\n    pathName.shift();\n    release = `/preview/`;\n  }\n\n  return `${release}`;\n}\n\nfunction resolveRelPath(path = '') {\n  return `${path.length > 0 ? `/${path}` : ''}`;\n}\n\nexport { getBaseName, resolveRelPath };\n","/* eslint-disable camelcase */\nimport React, { useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport './inventory.scss';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport * as actions from '../store/actions';\nimport {\n  Grid,\n  GridItem,\n  Tab,\n  TabTitleText,\n  Tabs,\n} from '@patternfly/react-core';\nimport { addNotification as addNotificationAction } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport DeleteModal from '../Utilities/DeleteModal';\nimport { TextInputModal } from '../components/SystemDetails/GeneralInfo';\nimport flatMap from 'lodash/flatMap';\nimport {\n  HOST_GROUP_CHIP,\n  RHCD_FILTER_KEY,\n  UPDATE_METHOD_KEY,\n  generateFilter,\n} from '../Utilities/constants';\nimport { InventoryTable as InventoryTableCmp } from '../components/InventoryTable';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\nimport AddSelectedHostsToGroupModal from '../components/InventoryGroups/Modals/AddSelectedHostsToGroupModal';\nimport useFeatureFlag from '../Utilities/useFeatureFlag';\nimport AsyncComponent from '@redhat-cloud-services/frontend-components/AsyncComponent';\nimport { useBulkSelectConfig } from '../Utilities/hooks/useBulkSelectConfig';\nimport RemoveHostsFromGroupModal from '../components/InventoryGroups/Modals/RemoveHostsFromGroupModal';\nimport { manageEdgeInventoryUrlName } from '../Utilities/edge';\nimport { resolveRelPath } from '../Utilities/path';\nimport {\n  GENERAL_GROUPS_WRITE_PERMISSION,\n  GENERAL_HOSTS_WRITE_PERMISSIONS,\n  NO_MODIFY_GROUPS_TOOLTIP_MESSAGE,\n  NO_MODIFY_HOSTS_TOOLTIP_MESSAGE,\n  NO_MODIFY_HOST_TOOLTIP_MESSAGE,\n  REQUIRED_PERMISSION_TO_MODIFY_HOST_IN_GROUP,\n} from '../constants';\nimport {\n  ActionButton,\n  ActionDropdownItem,\n} from '../components/InventoryTable/ActionWithRBAC';\n\nconst mapTags = ({ category, values }) =>\n  values.map(\n    ({ tagKey, value }) =>\n      `${category ? `${category}/` : ''}${tagKey}${value ? `=${value}` : ''}`\n  );\n\nconst filterMapper = {\n  staleFilter: ({ staleFilter }, searchParams) =>\n    staleFilter.forEach((item) => searchParams.append('status', item)),\n  osFilter: ({ osFilter }, searchParams) =>\n    osFilter?.forEach((item) => searchParams.append('operating_system', item)),\n  registeredWithFilter: ({ registeredWithFilter }, searchParams) =>\n    registeredWithFilter?.forEach((item) =>\n      searchParams.append('source', item)\n    ),\n  value: ({ value, filter }, searchParams) =>\n    value === 'hostname_or_id' &&\n    Boolean(filter) &&\n    searchParams.append('hostname_or_id', filter),\n  tagFilters: ({ tagFilters }, searchParams) =>\n    tagFilters?.length > 0 &&\n    searchParams.append('tags', flatMap(tagFilters, mapTags)),\n  rhcdFilter: ({ rhcdFilter }, searchParams) =>\n    rhcdFilter?.forEach((item) => searchParams.append(RHCD_FILTER_KEY, item)),\n  lastSeenFilter: ({ lastSeenFilter }, searchParams) =>\n    Object.keys(lastSeenFilter || {})?.forEach(\n      (item) =>\n        item === 'mark' &&\n        searchParams.append('last_seen', lastSeenFilter[item])\n    ),\n  updateMethodFilter: ({ updateMethodFilter }, searchParams) =>\n    updateMethodFilter?.forEach((item) =>\n      searchParams.append(UPDATE_METHOD_KEY, item)\n    ),\n  hostGroupFilter: ({ hostGroupFilter }, searchParams) =>\n    hostGroupFilter?.forEach((item) =>\n      searchParams.append(HOST_GROUP_CHIP, item)\n    ),\n};\n\nconst calculateFilters = (searchParams, filters = []) => {\n  filters.forEach((filter) => {\n    Object.keys(filter).forEach((key) => {\n      filterMapper?.[key]?.(filter, searchParams);\n    });\n  });\n  return searchParams;\n};\n\nexport const calculatePagination = (searchParams, page, perPage) => {\n  const currSearch = new URLSearchParams(location.search);\n  const newPage = page !== undefined ? page : currSearch.get('page');\n  const newPerPage =\n    perPage !== undefined ? perPage : currSearch.get('per_page');\n  !isNaN(parseInt(newPage)) && searchParams.append('page', newPage);\n  !isNaN(parseInt(newPerPage)) && searchParams.append('per_page', newPerPage);\n};\n\nconst BulkDeleteButton = ({ selectedSystems, ...props }) => {\n  const requiredPermissions = selectedSystems.every(\n    ({ groups }) => groups.length > 0\n  )\n    ? selectedSystems.map(({ groups }) =>\n        REQUIRED_PERMISSION_TO_MODIFY_HOST_IN_GROUP(groups[0].id)\n      )\n    : [GENERAL_HOSTS_WRITE_PERMISSIONS];\n\n  return (\n    <ActionButton\n      requiredPermissions={requiredPermissions}\n      noAccessTooltip={NO_MODIFY_HOSTS_TOOLTIP_MESSAGE}\n      checkAll\n      ouiaId=\"bulk-delete-button\"\n      {...props}\n    >\n      Delete\n    </ActionButton>\n  );\n};\n\nBulkDeleteButton.propTypes = {\n  selectedSystems: PropTypes.array,\n};\n\nconst Inventory = ({\n  status,\n  source,\n  filterbyName,\n  tagsFilter,\n  operatingSystem,\n  rhcdFilter,\n  updateMethodFilter,\n  lastSeenFilter,\n  page,\n  perPage,\n  initialLoading,\n  hasAccess,\n  hostGroupFilter,\n}) => {\n  const history = useHistory();\n  const chrome = useChrome();\n  const inventory = useRef(null);\n  const [isModalOpen, handleModalToggle] = useState(false);\n  const [currentSystem, setCurrentSystem] = useState({});\n  const [filters, onSetfilters] = useState(\n    generateFilter(\n      status,\n      source,\n      tagsFilter,\n      filterbyName,\n      operatingSystem,\n      rhcdFilter,\n      updateMethodFilter,\n      hostGroupFilter,\n      lastSeenFilter\n    )\n  );\n  const { pathname } = useLocation();\n  const tabsPath = [\n    resolveRelPath(''),\n    resolveRelPath(manageEdgeInventoryUrlName),\n  ];\n  const initialActiveTabKey =\n    tabsPath.indexOf(pathname) >= 0 ? tabsPath.indexOf(pathname) : 0;\n  const [activeTabKey, setActiveTabKey] = useState(initialActiveTabKey);\n  useEffect(() => {\n    setActiveTabKey(initialActiveTabKey);\n  }, [pathname]);\n  const handleTabClick = (_event, tabIndex) => {\n    const tabPath = tabsPath[tabIndex];\n    if (tabPath !== undefined) {\n      history.push(`${tabPath}`);\n    }\n    setActiveTabKey(tabIndex);\n  };\n  const [ediOpen, onEditOpen] = useState(false);\n  const [addHostGroupModalOpen, setAddHostGroupModalOpen] = useState(false);\n  const [removeHostsFromGroupModalOpen, setRemoveHostsFromGroupModalOpen] =\n    useState(false);\n  const [globalFilter, setGlobalFilter] = useState();\n  const rows = useSelector(({ entities }) => entities?.rows, shallowEqual);\n  const loaded = useSelector(({ entities }) => entities?.loaded);\n  const selected = useSelector(({ entities }) => entities?.selected);\n  const total = useSelector(({ entities }) => entities?.total);\n  const dispatch = useDispatch();\n  const groupsEnabled = useFeatureFlag('hbi.ui.inventory-groups');\n  const bulkSelectConfig = useBulkSelectConfig(\n    selected,\n    globalFilter,\n    total,\n    rows,\n    loaded\n  );\n\n  const onRefresh = (options, callback) => {\n    onSetfilters(options?.filters);\n    const searchParams = new URLSearchParams();\n    calculateFilters(searchParams, options?.filters);\n    // eslint-disable-next-line camelcase\n    calculatePagination(searchParams, options?.page, options?.per_page);\n    const search = searchParams.toString();\n    history.push({\n      search,\n      hash: location.hash,\n    });\n\n    if (callback) {\n      callback(options);\n    }\n  };\n\n  const EdgeParityEnabled = useFeatureFlag('edgeParity.inventory-list');\n  const EdgeParityFilterDeviceEnabled = useFeatureFlag(\n    'edgeParity.inventory-list-filter'\n  );\n  useEffect(() => {\n    chrome.updateDocumentTitle('Systems | Red Hat Insights');\n    chrome?.hideGlobalFilter?.(false);\n    chrome.appAction('system-list');\n    chrome.appObjectId();\n    chrome.on('GLOBAL_FILTER_UPDATE', ({ data }) => {\n      const [workloads, SID, tags] = chrome.mapGlobalFilter(data, false, true);\n      setGlobalFilter({\n        tags,\n        filter: {\n          ...globalFilter?.filter,\n          system_profile: {\n            ...globalFilter?.filter?.system_profile,\n            ...(workloads?.SAP?.isSelected && { sap_system: true }),\n            ...(workloads &&\n              workloads['Ansible Automation Platform']?.isSelected && {\n                ansible: 'not_nil',\n              }),\n            ...(workloads?.['Microsoft SQL']?.isSelected && {\n              mssql: 'not_nil',\n            }),\n            ...(EdgeParityFilterDeviceEnabled && { host_type: 'nil' }),\n            ...(SID?.length > 0 && { sap_sids: SID }),\n          },\n        },\n      });\n    });\n    dispatch(actions.clearNotifications());\n\n    if (perPage || page) {\n      dispatch(\n        actions.setPagination(\n          Array.isArray(page) ? page[0] : page,\n          Array.isArray(perPage) ? perPage[0] : perPage\n        )\n      );\n    }\n\n    return () => {\n      dispatch(actions.clearEntitiesAction());\n    };\n  }, []);\n\n  const calculateSelected = () => (selected ? selected.size : 0);\n\n  const isBulkRemoveFromGroupsEnabled = () => {\n    if (calculateSelected() > 0) {\n      const selectedHosts = Array.from(selected.values());\n\n      return selectedHosts.every(\n        ({ groups }) =>\n          groups.length !== 0 &&\n          groups[0].name === selectedHosts[0].groups[0].name\n      );\n    }\n\n    return false;\n  };\n\n  const isBulkAddHostsToGroupsEnabled = () => {\n    if (calculateSelected() > 0) {\n      const selectedHosts = Array.from(selected.values());\n\n      return selectedHosts.every(({ groups }) => groups.length === 0);\n    }\n\n    return false;\n  };\n\n  // some actions are hidden under feature flag\n  const tableActions = (row) => {\n    const hostActions = [\n      {\n        title: (\n          <ActionDropdownItem\n            key={`${row.id}-edit`}\n            onClick={() => {\n              setCurrentSystem(row);\n              onEditOpen(() => true);\n            }}\n            requiredPermissions={\n              row.groups.length > 0\n                ? [\n                    REQUIRED_PERMISSION_TO_MODIFY_HOST_IN_GROUP(\n                      row.groups[0].id\n                    ),\n                  ]\n                : ['inventory:hosts:write']\n            }\n            noAccessTooltip={NO_MODIFY_HOST_TOOLTIP_MESSAGE}\n          >\n            Edit\n          </ActionDropdownItem>\n        ),\n        style: {\n          padding: 0, // custom component creates extra padding space\n        },\n      },\n      {\n        title: (\n          <ActionDropdownItem\n            key={`${row.id}-delete`}\n            onClick={() => {\n              setCurrentSystem(row);\n              handleModalToggle(() => true);\n            }}\n            requiredPermissions={\n              row.groups.length > 0\n                ? [\n                    REQUIRED_PERMISSION_TO_MODIFY_HOST_IN_GROUP(\n                      row.groups[0].id\n                    ),\n                  ]\n                : ['inventory:hosts:write']\n            }\n            noAccessTooltip={NO_MODIFY_HOST_TOOLTIP_MESSAGE}\n          >\n            Delete\n          </ActionDropdownItem>\n        ),\n        style: {\n          padding: 0,\n        },\n      },\n    ];\n\n    const groupActions = [\n      {\n        title: (\n          <ActionDropdownItem\n            key={`${row.id}-add-to-group`}\n            onClick={() => {\n              setCurrentSystem([row]);\n              setAddHostGroupModalOpen(true);\n            }}\n            requiredPermissions={[GENERAL_GROUPS_WRITE_PERMISSION]}\n            noAccessTooltip={NO_MODIFY_GROUPS_TOOLTIP_MESSAGE}\n            isAriaDisabled={row.groups.length > 0} // additional condition for enabling the button\n          >\n            Add to group\n          </ActionDropdownItem>\n        ),\n        style: {\n          padding: 0,\n        },\n      },\n      {\n        title: (\n          <ActionDropdownItem\n            key={`${row.id}-remove-from-group`}\n            onClick={() => {\n              setCurrentSystem([row]);\n              setRemoveHostsFromGroupModalOpen(true);\n            }}\n            requiredPermissions={[GENERAL_GROUPS_WRITE_PERMISSION]}\n            noAccessTooltip={NO_MODIFY_GROUPS_TOOLTIP_MESSAGE}\n            isAriaDisabled={row.groups.length === 0}\n          >\n            Remove from group\n          </ActionDropdownItem>\n        ),\n        style: {\n          padding: 0,\n        },\n      },\n    ];\n\n    return [...(groupsEnabled ? groupActions : []), ...hostActions];\n  };\n\n  const traditionalDevices = (\n    <Grid gutter=\"md\">\n      <GridItem span={12}>\n        <InventoryTableCmp\n          hasAccess={hasAccess}\n          isRbacEnabled\n          customFilters={{ filters, globalFilter }}\n          isFullView\n          showTags\n          onRefresh={onRefresh}\n          hasCheckbox\n          autoRefresh\n          ignoreRefresh\n          initialLoading={initialLoading}\n          ref={inventory}\n          tableProps={{\n            actionResolver: tableActions,\n            canSelectAll: false,\n          }}\n          actionsConfig={{\n            actions: [\n              <BulkDeleteButton\n                key=\"bulk-systems-delete\"\n                selectedSystems={Array.from(selected?.values?.() || [])}\n                onClick={() => {\n                  setCurrentSystem(Array.from(selected.values()));\n                  handleModalToggle(true);\n                }}\n                variant=\"secondary\"\n                isAriaDisabled={calculateSelected() === 0}\n              />,\n              ...(groupsEnabled\n                ? [\n                    {\n                      label: (\n                        <ActionDropdownItem\n                          key=\"bulk-add-to-group\"\n                          requiredPermissions={[\n                            GENERAL_GROUPS_WRITE_PERMISSION,\n                          ]}\n                          isAriaDisabled={!isBulkAddHostsToGroupsEnabled()}\n                          noAccessTooltip={NO_MODIFY_GROUPS_TOOLTIP_MESSAGE}\n                          onClick={() => {\n                            setCurrentSystem(Array.from(selected.values()));\n                            setAddHostGroupModalOpen(true);\n                          }}\n                        >\n                          Add to group\n                        </ActionDropdownItem>\n                      ),\n                      props: {\n                        style: {\n                          padding: 0, // custom component creates extra padding space\n                        },\n                      },\n                    },\n                    {\n                      label: (\n                        <ActionDropdownItem\n                          key=\"bulk-remove-from-group\"\n                          requiredPermissions={[\n                            GENERAL_GROUPS_WRITE_PERMISSION,\n                          ]}\n                          isAriaDisabled={!isBulkRemoveFromGroupsEnabled()}\n                          noAccessTooltip={NO_MODIFY_GROUPS_TOOLTIP_MESSAGE}\n                          onClick={() => {\n                            setCurrentSystem(Array.from(selected.values()));\n                            setRemoveHostsFromGroupModalOpen(true);\n                          }}\n                        >\n                          Remove from group\n                        </ActionDropdownItem>\n                      ),\n                      props: {\n                        style: {\n                          padding: 0,\n                        },\n                      },\n                    },\n                  ]\n                : []),\n            ],\n          }}\n          bulkSelect={bulkSelectConfig}\n          onRowClick={(_e, id, app) =>\n            history.push(`/${id}${app ? `/${app}` : ''}`)\n          }\n        />\n      </GridItem>\n    </Grid>\n  );\n\n  return (\n    <React.Fragment>\n      <PageHeader className=\"pf-m-light\">\n        <PageHeaderTitle title=\"Systems\" />\n      </PageHeader>\n      <Main>\n        {EdgeParityEnabled ? (\n          <Tabs\n            className=\"pf-m-light pf-c-table\"\n            activeKey={activeTabKey}\n            onSelect={handleTabClick}\n          >\n            <Tab\n              eventKey={0}\n              title={<TabTitleText>Conventional (RPM-DNF)</TabTitleText>}\n            >\n              {traditionalDevices}\n            </Tab>\n            <Tab\n              eventKey={1}\n              title={<TabTitleText>Immutable (OSTree)</TabTitleText>}\n            >\n              <AsyncComponent\n                appName=\"edge\"\n                module=\"./Inventory\"\n                historyProp={useHistory}\n                locationProp={useLocation}\n                showHeaderProp={false}\n                pathPrefix={resolveRelPath('')}\n                urlName={manageEdgeInventoryUrlName}\n              />\n            </Tab>\n          </Tabs>\n        ) : (\n          traditionalDevices\n        )}\n      </Main>\n      <DeleteModal\n        className=\"sentry-mask data-hj-suppress\"\n        handleModalToggle={handleModalToggle}\n        isModalOpen={isModalOpen}\n        currentSytems={currentSystem}\n        onConfirm={() => {\n          let displayName;\n          let removeSystems;\n          if (Array.isArray(currentSystem)) {\n            removeSystems = currentSystem.map(({ id }) => id);\n            displayName =\n              currentSystem.length > 1\n                ? `${currentSystem.length} systems`\n                : currentSystem[0].display_name;\n          } else {\n            displayName = currentSystem.display_name;\n            removeSystems = [currentSystem.id];\n          }\n\n          dispatch(\n            addNotificationAction({\n              id: 'remove-initiated',\n              variant: 'warning',\n              title: 'Delete operation initiated',\n              description: `Removal of ${displayName} started.`,\n              dismissable: false,\n            })\n          );\n          dispatch(actions.deleteEntity(removeSystems, displayName));\n          handleModalToggle(false);\n        }}\n      />\n      <TextInputModal\n        title=\"Edit display name\"\n        isOpen={ediOpen}\n        value={currentSystem.display_name}\n        onCancel={() => onEditOpen(false)}\n        onSubmit={(value) => {\n          dispatch(actions.editDisplayName(currentSystem.id, value));\n          onEditOpen(false);\n        }}\n      />\n      {groupsEnabled === true && (\n        <>\n          {addHostGroupModalOpen && (\n            <AddSelectedHostsToGroupModal\n              isModalOpen={addHostGroupModalOpen}\n              setIsModalOpen={setAddHostGroupModalOpen}\n              modalState={currentSystem}\n              reloadData={() => {\n                if (calculateSelected() > 0) {\n                  dispatch(actions.selectEntity(-1, false));\n                }\n\n                inventory.current.onRefreshData(filters, false, true);\n              }}\n            />\n          )}\n          {removeHostsFromGroupModalOpen && (\n            <RemoveHostsFromGroupModal\n              isModalOpen={removeHostsFromGroupModalOpen}\n              setIsModalOpen={setRemoveHostsFromGroupModalOpen}\n              modalState={currentSystem}\n              reloadData={() => {\n                if (calculateSelected() > 0) {\n                  dispatch(actions.selectEntity(-1, false));\n                }\n\n                inventory.current.onRefreshData(filters, false, true);\n              }}\n            />\n          )}\n        </>\n      )}\n    </React.Fragment>\n  );\n};\n\nInventory.propTypes = {\n  status: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.string),\n    PropTypes.string,\n  ]),\n  source: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.string),\n    PropTypes.string,\n  ]),\n  operatingSystem: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.string),\n    PropTypes.string,\n  ]),\n  filterbyName: PropTypes.arrayOf(PropTypes.string),\n  tagsFilter: PropTypes.any,\n  page: PropTypes.arrayOf(\n    PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n  ),\n  perPage: PropTypes.arrayOf(\n    PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n  ),\n  initialLoading: PropTypes.bool,\n  rhcdFilter: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.string),\n    PropTypes.string,\n  ]),\n  updateMethodFilter: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.string),\n    PropTypes.string,\n  ]),\n  hasAccess: PropTypes.bool,\n  hostGroupFilter: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.string),\n    PropTypes.string,\n  ]),\n  lastSeenFilter: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.string),\n    PropTypes.string,\n  ]),\n};\n\nInventory.defaultProps = {\n  initialLoading: true,\n};\n\nexport default Inventory;\n"],"names":["i","schema","groupName","hosts","fields","component","componentTypes","PLAIN_TEXT","name","label","length","display_name","RemoveHostsFromGroupModal","isModalOpen","setIsModalOpen","modalState","reloadData","reloadTimeout","dispatch","useDispatch","groups","groupId","id","closeModal","title","variant","submitLabel","onSubmit","statusMessages","onSuccess","onError","apiWithToast","removeHostsFromGroup","map","propTypes","PropTypes","isRequired","ActionButton","requiredPermissions","noAccessTooltip","checkAll","override","props","undefined","hasAccess","usePermissionsWithContext","content","isAriaDisabled","defaultProps","ActionDropdownItem","tooltip","systemProfile","useSelector","systemProfileStore","isEdgeHost","host_type","enableEdgeImageDetails","useFeatureFlag","enableEdgeInventoryListDetails","GeneralInformation","showImageDetails","__assign","Object","assign","t","s","n","arguments","p","prototype","hasOwnProperty","call","apply","this","_a","children","className","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__rest","useEffect","console","error","concat","CreateGroupButton","canModifyGroups","Text","Button","onClick","Tooltip","NO_MODIFY_GROUPS_TOOLTIP_MESSAGE","AddSelectedHostsToGroupModal","useState","isCreateGroupModalOpen","setIsCreateGroupModalOpen","Modal","addHostSchema","additionalMappers","values","group","description","addHostsToGroupById","CreateGroupModal","modalBefore","setterOfModalBefore","manageEdgeInventoryUrlName","resolveRelPath","path","mapTags","category","tagKey","value","filterMapper","staleFilter","searchParams","forEach","item","append","osFilter","registeredWithFilter","filter","Boolean","tagFilters","flatMap","rhcdFilter","RHCD_FILTER_KEY","lastSeenFilter","keys","updateMethodFilter","UPDATE_METHOD_KEY","hostGroupFilter","HOST_GROUP_CHIP","calculatePagination","page","perPage","currSearch","URLSearchParams","location","search","newPage","get","newPerPage","isNaN","parseInt","BulkDeleteButton","selectedSystems","every","REQUIRED_PERMISSION_TO_MODIFY_HOST_IN_GROUP","GENERAL_HOSTS_WRITE_PERMISSIONS","NO_MODIFY_HOSTS_TOOLTIP_MESSAGE","ouiaId","Inventory","status","source","filterbyName","tagsFilter","operatingSystem","initialLoading","history","useHistory","chrome","useChrome","inventory","useRef","handleModalToggle","currentSystem","setCurrentSystem","generateFilter","filters","onSetfilters","pathname","useLocation","tabsPath","initialActiveTabKey","activeTabKey","setActiveTabKey","ediOpen","onEditOpen","addHostGroupModalOpen","setAddHostGroupModalOpen","removeHostsFromGroupModalOpen","setRemoveHostsFromGroupModalOpen","globalFilter","setGlobalFilter","rows","entities","shallowEqual","loaded","selected","total","groupsEnabled","bulkSelectConfig","isBulkLoading","setBulkLoading","fetchBatched","useFetchBatched","onSelectRows","isSelected","actions","calculateSelected","size","activeFilters","getEntitiesWrapper","per_page","resp","loadSystems","payload","data","fetchAllSystemIds","useCallback","selectAllIds","results","flatten","items","isDisabled","checked","has","some","calculateChecked","onSelect","toggleProps","Fragment","key","Spinner","useBulkSelectConfig","EdgeParityEnabled","EdgeParityFilterDeviceEnabled","updateDocumentTitle","hideGlobalFilter","appAction","appObjectId","on","mapGlobalFilter","workloads","SID","tags","system_profile","SAP","sap_system","ansible","mssql","sap_sids","Array","isArray","traditionalDevices","Grid","gutter","GridItem","span","InventoryTable","isRbacEnabled","customFilters","isFullView","showTags","onRefresh","options","callback","calculateFilters","toString","push","hash","hasCheckbox","autoRefresh","ignoreRefresh","ref","tableProps","actionResolver","row","hostActions","NO_MODIFY_HOST_TOOLTIP_MESSAGE","style","padding","groupActions","GENERAL_GROUPS_WRITE_PERMISSION","canSelectAll","actionsConfig","from","selectedHosts","isBulkRemoveFromGroupsEnabled","bulkSelect","onRowClick","_e","app","PageHeader","PageHeaderTitle","Tabs","activeKey","_event","tabIndex","tabPath","Tab","eventKey","TabTitleText","T","AsyncComponent","appName","module","historyProp","locationProp","showHeaderProp","pathPrefix","urlName","DeleteModal","currentSytems","onConfirm","displayName","removeSystems","addNotificationAction","dismissable","TextInputModal","isOpen","onCancel","current","onRefreshData"],"sourceRoot":""}