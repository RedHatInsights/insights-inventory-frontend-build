{"version":3,"file":"js/693.72bf46cf95f321eba473.js","mappings":"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","sources":["webpack:///./src/components/GeneralInfo/GeneralInformation/GeneralInformation.js","webpack:///./src/components/GeneralInfo/InfoTable/InfoTable.js","webpack:///./src/store/systemProfileStore.js"],"sourcesContent":["import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport {\n    Grid,\n    GridItem,\n    Modal\n} from '@patternfly/react-core';\nimport { SortByDirection } from '@patternfly/react-table';\n\nimport { systemProfile } from '../../../store/actions';\nimport InfoTable from '../InfoTable';\nimport OperatingSystemCard from '../OperatingSystemCard';\nimport SystemCard from '../SystemCard';\nimport BiosCard from '../BiosCard';\nimport InfrastructureCard from '../InfrastructureCard';\nimport ConfigurationCard from '../ConfigurationCard';\nimport CollectionCard from '../CollectionCard';\nimport { Provider } from 'react-redux';\nimport './general-information.scss';\n\nclass GeneralInformation extends Component {\n    state = {\n        isModalOpen: false,\n        modalTitle: '',\n        modalVariant: 'small'\n    };\n\n    onSort = (_event, index, direction, customRows) => {\n        const { rows } = this.state;\n        const sorted = (customRows || rows).sort((a, b) => {\n            const firstRow = a.cells || a;\n            const secondRow = b.cells || b;\n            const aSortBy = ('' + (firstRow[index].sortValue || firstRow[index])).toLocaleLowerCase();\n            const bSortBy = ('' + (secondRow[index].sortValue || secondRow[index])).toLocaleLowerCase();\n            return (aSortBy > bSortBy) ? -1 : 1;\n        });\n        this.setState({\n            rows: direction === SortByDirection.asc ? sorted : sorted.reverse()\n        });\n    }\n\n    handleModalToggle = (modalTitle = '', { cells, rows, expandable, filters } = {}, modalVariant = 'small') => {\n        rows && this.onSort(undefined, expandable ? 1 : 0, SortByDirection.asc, rows);\n        this.setState(({ isModalOpen }) => ({\n            isModalOpen: !isModalOpen,\n            modalTitle,\n            cells,\n            expandable,\n            filters,\n            modalVariant\n        }));\n    };\n\n    componentDidMount() {\n        this.props.loadSystemDetail && this.props.loadSystemDetail(this.props.entity.id);\n    };\n\n    render() {\n        const { isModalOpen, modalTitle, cells, rows, expandable, filters, modalVariant } = this.state;\n        const {\n            store,\n            writePermissions,\n            SystemCardWrapper,\n            OperatingSystemCardWrapper,\n            BiosCardWrapper,\n            InfrastructureCardWrapper,\n            ConfigurationCardWrapper,\n            CollectionCardWrapper,\n            children\n        } = this.props;\n        const Wrapper = store ? Provider : Fragment;\n        return (\n            <Wrapper {...(store && { store })}>\n                <div className=\"ins-c-general-information\">\n                    <Grid sm={ 12 } md={ 6 } hasGutter>\n                        {SystemCardWrapper && <GridItem>\n                            <SystemCardWrapper handleClick={ this.handleModalToggle } writePermissions={writePermissions} />\n                        </GridItem>}\n                        {OperatingSystemCardWrapper && <GridItem>\n                            <OperatingSystemCardWrapper handleClick={ this.handleModalToggle } />\n                        </GridItem>}\n                        {BiosCardWrapper && <GridItem>\n                            <BiosCardWrapper handleClick={ this.handleModalToggle } />\n                        </GridItem>}\n                        {InfrastructureCardWrapper && <GridItem>\n                            <InfrastructureCardWrapper handleClick={ this.handleModalToggle } />\n                        </GridItem>}\n                        {ConfigurationCardWrapper && <GridItem>\n                            <ConfigurationCardWrapper handleClick={ this.handleModalToggle } />\n                        </GridItem>}\n                        {CollectionCardWrapper && <GridItem>\n                            <CollectionCardWrapper handleClick={ this.handleModalToggle } />\n                        </GridItem>}\n                        {children}\n                        <Modal\n                            title={ modalTitle || '' }\n                            aria-label={`${modalTitle || ''} modal`}\n                            isOpen={ isModalOpen }\n                            onClose={ () => this.handleModalToggle() }\n                            className=\"ins-c-inventory__detail--dialog\"\n                            variant={ modalVariant }\n                        >\n                            <InfoTable\n                                cells={ cells }\n                                rows={ rows }\n                                expandable={ expandable }\n                                onSort={ this.onSort }\n                                filters={ filters }\n                            />\n                        </Modal>\n                    </Grid>\n                </div>\n            </Wrapper>\n        );\n    }\n}\n\nGeneralInformation.propTypes = {\n    entity: PropTypes.shape({\n        id: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    }),\n    loadSystemDetail: PropTypes.func,\n    store: PropTypes.any,\n    writePermissions: PropTypes.bool,\n    SystemCardWrapper: PropTypes.oneOfType([PropTypes.node, PropTypes.bool]),\n    OperatingSystemCardWrapper: PropTypes.oneOfType([PropTypes.node, PropTypes.bool]),\n    BiosCardWrapper: PropTypes.oneOfType([PropTypes.node, PropTypes.bool]),\n    InfrastructureCardWrapper: PropTypes.oneOfType([PropTypes.node, PropTypes.bool]),\n    ConfigurationCardWrapper: PropTypes.oneOfType([PropTypes.node, PropTypes.bool]),\n    CollectionCardWrapper: PropTypes.oneOfType([PropTypes.node, PropTypes.bool]),\n    children: PropTypes.node\n};\nGeneralInformation.defaultProps = {\n    entity: {},\n    SystemCardWrapper: SystemCard,\n    OperatingSystemCardWrapper: OperatingSystemCard,\n    BiosCardWrapper: BiosCard,\n    InfrastructureCardWrapper: InfrastructureCard,\n    ConfigurationCardWrapper: ConfigurationCard,\n    CollectionCardWrapper: CollectionCard\n};\n\nconst mapStateToProps = ({\n    entityDetails: {\n        entity\n    }\n}) => ({\n    entity\n});\nconst mapDispatchToProps = (dispatch) => ({\n    loadSystemDetail: (itemId) => dispatch(systemProfile(itemId))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GeneralInformation);\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { TextContent, Text, TextVariants, Pagination } from '@patternfly/react-core';\nimport PrimaryToolbar from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport TableToolbar from '@redhat-cloud-services/frontend-components/TableToolbar';\nimport { Table, TableHeader, TableBody, TableVariant, SortByDirection } from '@patternfly/react-table';\nimport flatMap from 'lodash/flatMap';\nimport { prepareRows, filterRows, generateFilters, onDeleteFilter } from '../../../constants';\nclass InfoTable extends Component {\n    state = {\n        sortBy: { index: 0, direction: SortByDirection.asc },\n        opened: [],\n        pagination: {\n            page: 1,\n            perPage: 10\n        },\n        activeFilters: {}\n    };\n\n    onSort = (event, index, direction) => {\n        const { expandable } = this.props;\n        this.props.onSort(event, expandable ? index - 1 : index, direction);\n        this.setState({\n            sortBy: {\n                index,\n                direction\n            }\n        });\n    }\n\n    onCollapse = (_event, index, isOpen) => {\n        const { opened } = this.state;\n        opened[index] = isOpen;\n        this.setState({\n            opened\n        });\n    }\n\n    onUpdatePagination = ({ page, perPage }) => {\n        this.setState({ pagination: { ...this.state.pagination, page, perPage } });\n    }\n\n    setFilter = (key, value, label) => {\n        const { activeFilters } = this.state;\n        // eslint-disable-next-line no-unused-vars\n        const { [key]: currFilter, ...restFilter } = activeFilters;\n        this.setState({\n            activeFilters: {\n                ...restFilter,\n                ...value.length !== 0 && {\n                    [key]: { key, value, label }\n                }\n            },\n            pagination: { ...this.state.pagination, page: 1 }\n        });\n    }\n\n    onDeleteFilter = (_e, [deleted], deleteAll) => {\n        this.setState({\n            activeFilters: onDeleteFilter(\n                deleted,\n                deleteAll,\n                this.state.activeFilters\n            ),\n            pagination: { ...this.state.pagination, page: 1 }\n        });\n    }\n\n    render() {\n        const { cells, rows, expandable, filters } = this.props;\n        const { sortBy, opened, pagination, activeFilters } = this.state;\n        const collapsibleProps = expandable ? { onCollapse: this.onCollapse } : {};\n        const activeRows = filterRows(rows, activeFilters);\n        const mappedRows = expandable ? flatMap(\n            prepareRows(activeRows, pagination),\n            ({ child, ...row }, key) => [\n                {\n                    ...row,\n                    isOpen: opened[key * 2] || false\n                },\n                {\n                    cells: [{ title: child }],\n                    parent: key * 2\n                }\n            ]) : prepareRows(activeRows, pagination);\n        return (\n            <Fragment>\n                <PrimaryToolbar pagination={{\n                    ...pagination,\n                    itemCount: activeRows.length,\n                    onSetPage: (_e, page) => this.onUpdatePagination({ ...pagination, page }),\n                    onPerPageSelect: (_e, perPage) => this.onUpdatePagination({ ...pagination, page: 1, perPage })\n                }}\n                {...filters && {\n                    filterConfig: {\n                        items: generateFilters(cells, filters, activeFilters, this.setFilter)\n                    }\n                } }\n                activeFiltersConfig={{\n                    filters: Object.values(activeFilters).map(filter => ({\n                        ...filter,\n                        category: filter.label,\n                        chips: Array.isArray(filter.value) ? filter.value.map(item => ({ name: item })) : [{ name: filter.value }]\n                    })),\n                    onDelete: this.onDeleteFilter\n                }}\n                />\n                {\n                    cells.length !== 1 ? <Table\n                        aria-label=\"General information dialog table\"\n                        variant={ TableVariant.compact }\n                        cells={ cells }\n                        rows={ mappedRows }\n                        sortBy={ {\n                            ...sortBy,\n                            index: expandable && sortBy.index === 0 ? 1 : sortBy.index\n                        } }\n                        onSort={ this.onSort }\n                        { ...collapsibleProps }\n                    >\n                        <TableHeader />\n                        <TableBody />\n                    </Table> :\n                        <TextContent>\n                            {\n                                prepareRows(activeRows, pagination)\n                                .map((row, key) => (\n                                    <Text component={ TextVariants.small } key={ key }>\n                                        { row.title || row }\n                                    </Text>\n                                )) }\n                        </TextContent>\n                }\n                <TableToolbar isFooter className=\"ins-c-inventory__table--toolbar\">\n                    <Pagination\n                        {...pagination}\n                        itemCount={activeRows.length}\n                        variant=\"bottom\"\n                        onSetPage={(_e, page) => this.onUpdatePagination({ ...pagination, page })}\n                        onPerPageSelect={(_e, perPage) => this.onUpdatePagination({ ...pagination, page: 1, perPage })}\n                    />\n                </TableToolbar>\n            </Fragment>\n\n        );\n    }\n}\n\nInfoTable.propTypes = {\n    rows: PropTypes.array,\n    cells: PropTypes.array,\n    onSort: PropTypes.func,\n    expandable: PropTypes.bool,\n    filters: PropTypes.arrayOf(PropTypes.shape({\n        index: PropTypes.number,\n        title: PropTypes.string,\n        type: PropTypes.oneOf(['text', 'checkbox', 'radio', 'group']),\n        options: PropTypes.arrayOf(PropTypes.shape({\n            value: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n            label: PropTypes.node\n        }))\n    }))\n};\nInfoTable.defaultProps = {\n    cells: [],\n    rows: [],\n    onSort: () => undefined,\n    sortBy: {},\n    expandable: false\n};\n\nexport default InfoTable;\n","import { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport { ACTION_TYPES } from './action-types';\n\nexport const defaultState = { loaded: false };\n\nexport const sizes = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n\n// Kudos to https://stackoverflow.com/a/18650828/2560321\nexport const formatBytes = (bytes) => {\n    if (bytes === 0 || isNaN(Number(bytes))) {\n        return '0 B';\n    }\n\n    const index = Math.floor(Math.log(bytes) / Math.log(1024));\n    return `${parseFloat((bytes / Math.pow(1024, index)).toFixed(2))} ${sizes[index]}`;\n};\n\nexport function systemProfilePending(state) {\n    return {\n        ...state,\n        systemProfile: {\n            loaded: false\n        }\n    };\n}\n\nexport function calculateRepos(repos) {\n    return repos && repos.reduce((acc, curr) => ({\n        ...acc,\n        ...curr.enabled ? {\n            enabled: [...acc.enabled, curr]\n        } : {\n            disabled: [...acc.disabled, curr]\n        }\n    }), { enabled: [], disabled: [] });\n}\n\nexport function calculateInterfaces(interfaces) {\n    return interfaces && interfaces.reduce((acc, curr) => ({\n        interfaces: [...acc.interfaces, curr],\n        ipv4: [...acc.ipv4, ...curr.ipv4_addresses || []].filter(Boolean),\n        ipv6: [...acc.ipv6, ...curr.ipv6_addresses || []].filter(Boolean)\n    }), { interfaces: [], ipv4: [], ipv6: [] });\n}\n\nexport function onSystemProfile(state, { payload: { results } }) {\n    const systemProfile = (results && results[0] && results[0].system_profile) || {};\n    return {\n        ...state,\n        systemProfile: {\n            loaded: true,\n            ...systemProfile,\n            ramSize: systemProfile.system_memory_bytes && formatBytes(systemProfile.system_memory_bytes),\n            repositories: calculateRepos(systemProfile.yum_repos),\n            network: calculateInterfaces(systemProfile.network_interfaces)\n        }\n    };\n}\n\nexport default applyReducerHash(\n    {\n        [ACTION_TYPES.LOAD_SYSTEM_PROFILE_FULFILLED]: onSystemProfile,\n        [ACTION_TYPES.LOAD_SYSTEM_PROFILE_PENDING]: systemProfilePending\n    },\n    {\n        systemProfile: defaultState\n    }\n);\n"],"names":["GeneralInformation","isModalOpen","modalTitle","modalVariant","_event","index","direction","customRows","rows","state","sorted","sort","a","b","firstRow","cells","secondRow","sortValue","toLocaleLowerCase","setState","SortByDirection","reverse","expandable","filters","onSort","undefined","this","props","loadSystemDetail","entity","id","store","writePermissions","SystemCardWrapper","OperatingSystemCardWrapper","BiosCardWrapper","InfrastructureCardWrapper","ConfigurationCardWrapper","CollectionCardWrapper","children","Wrapper","Provider","Fragment","className","sm","md","hasGutter","handleClick","handleModalToggle","title","isOpen","onClose","variant","Component","propTypes","PropTypes","defaultProps","SystemCard","OperatingSystemCard","BiosCard","InfrastructureCard","ConfigurationCard","CollectionCard","connect","entityDetails","dispatch","itemId","systemProfile","InfoTable","sortBy","opened","pagination","page","perPage","activeFilters","event","key","value","label","restFilter","length","_e","deleteAll","deleted","onDeleteFilter","collapsibleProps","onCollapse","activeRows","filterRows","mappedRows","flatMap","prepareRows","child","parent","itemCount","onSetPage","onUpdatePagination","onPerPageSelect","filterConfig","items","generateFilters","setFilter","activeFiltersConfig","Object","values","map","filter","category","chips","Array","isArray","item","name","onDelete","Table","TableVariant","TableHeader","TableBody","row","component","TextVariants","isFooter","type","options","sizes","formatBytes","bytes","isNaN","Number","Math","floor","log","parseFloat","pow","toFixed","applyReducerHash","ACTION_TYPES","interfaces","repos","results","payload","system_profile","loaded","ramSize","system_memory_bytes","repositories","yum_repos","reduce","acc","curr","enabled","disabled","network","network_interfaces","ipv4","ipv4_addresses","Boolean","ipv6","ipv6_addresses"],"sourceRoot":""}