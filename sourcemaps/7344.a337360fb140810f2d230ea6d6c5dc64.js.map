{"version":3,"file":"js/7344.1658936112986.845a8f5d0236f4f6d1f5.js","mappings":"2UAQMA,EAAiB,SAAC,GAA8B,IAA5BC,EAA4B,EAA5BA,YAAgBC,GAAY,YAClD,GAA8BC,EAAAA,EAAAA,YAA9B,eAAOC,EAAP,KAAgBC,EAAhB,KAQA,OAPAC,EAAAA,EAAAA,YAAU,WACW,QAAbL,IACW,QAAX,EAAAA,WAAA,mBAAeM,gBAAf,gBAA0B,CAAEC,mBAAAA,EAAAA,MAGhCH,GAAW,kBAAMJ,EAAcQ,EAAAA,SAAWC,EAAAA,cAC3C,IACIN,EAAU,kBAACA,EACVH,GAAe,CACfU,MAAOV,IAAcW,YAGzB,kBAAC,IAAuBV,IACfW,EAAAA,GAGjBb,EAAec,UAAY,CACvBb,YAAac,IAAAA,MAGjB,W,2FC3BMC,EAAc,SAACd,GAAD,OAAW,kBAAC,KAAD,QAAgBe,cAAc,WAAcf,KAI3E,QAFgBgB,IAAAA,YAAiB,SAAChB,EAAOiB,GAAR,OAAgB,kBAACH,GAAD,QAAaI,SAAUD,GAASjB,Q,irECMjF,IAAMmB,EAAiB,SAAC,GAAkE,IAAhEJ,EAAgE,EAAhEA,cAAeK,EAAiD,EAAjDA,OAAQX,EAAyC,EAAzCA,MAAOY,EAAkC,EAAlCA,QAASH,EAAyB,EAAzBA,SAAalB,GAAY,YACtF,GAAkCC,EAAAA,EAAAA,YAAlC,eAAOqB,EAAP,KAAkBC,EAAlB,KAoBA,OAnBAnB,EAAAA,EAAAA,YAAU,WACN,IAASoB,EACLC,EAAAA,GADyBC,GAA7B,OACID,EADJ,GAAqCE,EAEjCC,EAFyCC,EAGzCC,EAEqBC,GAAWC,EAAAA,EAAAA,GAAmBvB,OAAOwB,GAAW,GAAM,GAAtElB,GAETK,EAAO,EAAD,OACCM,GACAC,GAFD,IAGFE,IAAAA,EACAL,gBAAAA,KAGJD,GAAa,kBAAMQ,OAEpB,CAAChB,IAGA,kBAAC,EAAAR,SAAD,CAAUE,MAAOA,GACb,kBAAC,EAAAyB,OAAD,CAAQb,QAASA,GACZC,GAAa,kBAACA,GAAD,UAAetB,EAAf,CAAsBW,SAAUwB,EAAAA,EAAiBlB,IAAKC,QAMpFC,EAAeP,UAAY,CACvBH,MAAOI,IAAAA,OACPO,OAAQP,IAAAA,KACRE,cAAeF,IAAAA,OACfQ,QAASR,IAAAA,OACTK,SAAUL,IAAAA,MAAgB,CACtBuB,QAASvB,IAAAA,OAIjBM,EAAekB,aAAe,CAC1BjB,OAAQ,cAGZ","sources":["webpack:///./src/components/SystemDetails/GeneralInfo.js","webpack:///./src/modules/AppInfo.js","webpack:///./src/modules/AsyncInventory.js"],"sourcesContent":["import React, { useEffect, useState, Fragment } from 'react';\nimport { Provider } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport GeneralInformation from '../GeneralInfo/GeneralInformation';\nexport { default as TextInputModal } from '../GeneralInfo/TextInputModal';\nimport fallback from '../SpinnerFallback';\nimport systemProfileStore from '../../store/systemProfileStore';\n\nconst GeneralInfoTab = ({ getRegistry, ...props }) => {\n    const [Wrapper, setWrapper] = useState();\n    useEffect(() => {\n        if (getRegistry) {\n            getRegistry()?.register?.({ systemProfileStore });\n        }\n\n        setWrapper(() => getRegistry ? Provider : Fragment);\n    }, []);\n    return Wrapper ? <Wrapper\n        {...getRegistry && {\n            store: getRegistry().getStore()\n        }}\n    >\n        <GeneralInformation {...props} />\n    </Wrapper> : fallback;\n};\n\nGeneralInfoTab.propTypes = {\n    getRegistry: PropTypes.func\n};\n\nexport default GeneralInfoTab;\n","import React from 'react';\nimport AsyncInventory from './AsyncInventory';\n\nconst BaseAppInfo = (props) => <AsyncInventory componentName=\"AppInfo\" {...props} />;\n\nconst AppInfo = React.forwardRef((props, ref) => <BaseAppInfo innerRef={ref} {...props} />);\n\nexport default AppInfo;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Provider } from 'react-redux';\nimport { Router } from 'react-router-dom';\nimport LoadingFallback from '../components/SpinnerFallback';\n\nimport { inventoryConnector } from '../Utilities/inventoryConnector';\nimport * as storeMod from '../store/redux';\nimport * as utils from '../Utilities/index';\nimport * as apiMod from '../api/index';\n\nconst AsyncInventory = ({ componentName, onLoad, store, history, innerRef, ...props }) => {\n    const [Component, setComponent] = useState();\n    useEffect(() => {\n        const [{ mergeWithDetail, ...rest }, shared, api] = [\n            storeMod,\n            utils,\n            apiMod\n        ];\n        const { [componentName]: InvCmp } = inventoryConnector(store, undefined, true, true);\n\n        onLoad({\n            ...rest,\n            ...shared,\n            api,\n            mergeWithDetail\n        });\n\n        setComponent(() => InvCmp);\n\n    }, [componentName]);\n\n    return (\n        <Provider store={store}>\n            <Router history={history}>\n                {Component && <Component {...props} fallback={LoadingFallback} ref={innerRef} />}\n            </Router>\n        </Provider>\n    );\n};\n\nAsyncInventory.propTypes = {\n    store: PropTypes.object,\n    onLoad: PropTypes.func,\n    componentName: PropTypes.string,\n    history: PropTypes.object,\n    innerRef: PropTypes.shape({\n        current: PropTypes.any\n    })\n};\n\nAsyncInventory.defaultProps = {\n    onLoad: () => undefined\n};\n\nexport default AsyncInventory;\n"],"names":["GeneralInfoTab","getRegistry","props","useState","Wrapper","setWrapper","useEffect","register","systemProfileStore","Provider","Fragment","store","getStore","fallback","propTypes","PropTypes","BaseAppInfo","componentName","React","ref","innerRef","AsyncInventory","onLoad","history","Component","setComponent","mergeWithDetail","storeMod","rest","shared","utils","api","apiMod","InvCmp","inventoryConnector","undefined","Router","LoadingFallback","current","defaultProps"],"sourceRoot":""}