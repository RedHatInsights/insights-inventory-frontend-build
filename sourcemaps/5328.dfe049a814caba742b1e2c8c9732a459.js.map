{"version":3,"file":"js/5328.b34060b014c45a257f91.js","mappings":"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","sources":["webpack:///./src/components/InventoryHostStaleness/constants.js","webpack:///./src/components/InventoryHostStaleness/BaseDropDown.js","webpack:///./src/components/InventoryHostStaleness/TabCard.js","webpack:///./src/components/InventoryHostStaleness/HostStalenessCard.js","webpack:///./src/components/InventoryHostStaleness/index.js","webpack:///./src/components/InventoryHostStaleness/InventoryHostStaleness.js","webpack:///./src/components/InventoryHostStaleness/HostStalenessEmptyState.js","webpack:///./src/routes/InventoryHostStaleness.js"],"sourcesContent":["import React from 'react';\nimport { Button, Flex, Popover, Title } from '@patternfly/react-core';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\n\nexport const CONVENTIONAL_TAB_TOOLTIP =\n  'With RPM-DNF, you can manage the system software by using the DNF package manager and updated RPM packages. This is a simple and adaptive method of managing and modifying the system over its lifecycle.';\n\nexport const IMMUTABLE_TAB_TOOLTIP =\n  'With OSTree, you can manage the system software by referencing a central image repository. OSTree images contain a complete operating system ready to be remotely installed at scale.  You can track updates to images through commits and enable secure updates that only address changes and keep the operating system unchanged. The updates are quick, and the rollbacks are easy.';\n\nexport const GENERAL_HOST_STALENESS_WRITE_PERMISSION = 'inventory:groups:write';\nexport const GENERAL_HOST_STALENESS_READ_PERMISSION = 'inventory:groups:read';\n\nexport const HOST_STALENESS_ADMINISTRATOR_PERMISSIONS = [\n  GENERAL_HOST_STALENESS_READ_PERMISSION,\n  GENERAL_HOST_STALENESS_WRITE_PERMISSION,\n];\n\n//86400 seconds in one day -> divide each by secodns in a day to get day values\nexport const secondsToDaysConversion = (seconds) => {\n  return parseInt(seconds) / 86400;\n};\n\nexport const hostStalenessApiKeys = [\n  'conventional_staleness_delta',\n  'conventional_stale_warning_delta',\n  'conventional_culling_delta',\n  'immutable_staleness_delta',\n  'immutable_stale_warning_delta',\n  'immutable_culling_delta',\n];\nexport const daysToSecondsConversion = (days) => {\n  return JSON.stringify(parseInt(days) * 86400);\n};\nexport const conditionalDropdownError = (newFormValues, dropdownItems) => {\n  //this runs on every select every time\n  let apiKey = dropdownItems[0].apiKey;\n  let formValue = parseInt(newFormValues[apiKey]);\n\n  if (apiKey === 'conventional_staleness_delta') {\n    if (\n      formValue > parseInt(newFormValues['conventional_stale_warning_delta'])\n    ) {\n      return (\n        <p className=\"pf-u-font-size-sm pf-v5-u-danger-color-100\">\n          Staleness must be before stale warning\n        </p>\n      );\n    } else if (\n      formValue > parseInt(newFormValues['conventional_culling_delta'])\n    ) {\n      return (\n        <p className=\"pf-u-font-size-sm pf-v5-u-danger-color-100\">\n          Staleness must be before culling\n        </p>\n      );\n    } else {\n      return <p className=\"pf-u-font-size-sm \">Maximum days 7</p>;\n    }\n  }\n  if (apiKey === 'conventional_stale_warning_delta') {\n    if (formValue > parseInt(newFormValues['conventional_culling_delta'])) {\n      return (\n        <p className=\"pf-u-font-size-sm pf-v5-u-danger-color-100\">\n          Stale warning must be before culling\n        </p>\n      );\n    } else if (\n      formValue < parseInt(newFormValues['conventional_staleness_delta'])\n    ) {\n      return (\n        <p className=\"pf-u-font-size-sm pf-v5-u-danger-color-100\">\n          Stale warning must be after staleness\n        </p>\n      );\n    } else {\n      return <p className=\"pf-u-font-size-sm \">Maximum days 180</p>;\n    }\n  }\n  if (apiKey === 'conventional_culling_delta') {\n    if (\n      formValue < parseInt(newFormValues['conventional_stale_warning_delta'])\n    ) {\n      return (\n        <p className=\"pf-u-font-size-sm pf-v5-u-danger-color-100\">\n          Culling must be after staleness\n        </p>\n      );\n    } else if (\n      formValue < parseInt(newFormValues['conventional_staleness_delta'])\n    ) {\n      return (\n        <p className=\"pf-u-font-size-sm pf-v5-u-danger-color-100\">\n          Culling must be after stale warning\n        </p>\n      );\n    }\n  }\n\n  if (apiKey === 'immutable_staleness_delta') {\n    if (formValue > parseInt(newFormValues['immutable_stale_warning_delta'])) {\n      return (\n        <p className=\"pf-u-font-size-sm pf-v5-u-danger-color-100\">\n          Staleness must be before stale warning\n        </p>\n      );\n    } else if (formValue > parseInt(newFormValues['immutable_culling_delta'])) {\n      return (\n        <p className=\"pf-u-font-size-sm pf-v5-u-danger-color-100\">\n          Staleness must be before culling\n        </p>\n      );\n    } else {\n      return <p className=\"pf-u-font-size-sm \">Maximum days 7</p>;\n    }\n  }\n  if (apiKey === 'immutable_stale_warning_delta') {\n    if (formValue > parseInt(newFormValues['immutable_culling_delta'])) {\n      return (\n        <p className=\"pf-u-font-size-sm pf-v5-u-danger-color-100\">\n          Stale warning must be before culling\n        </p>\n      );\n    } else if (\n      formValue < parseInt(newFormValues['immutable_staleness_delta'])\n    ) {\n      return (\n        <p className=\"pf-u-font-size-sm pf-v5-u-danger-color-100\">\n          Stale warning must be after staleness\n        </p>\n      );\n    } else {\n      return <p className=\"pf-u-font-size-sm \">Maximum days 180</p>;\n    }\n  }\n  if (apiKey === 'immutable_culling_delta') {\n    if (formValue < parseInt(newFormValues['immutable_stale_warning_delta'])) {\n      return (\n        <p className=\"pf-u-font-size-sm pf-v5-u-danger-color-100\">\n          Culling must be after staleness\n        </p>\n      );\n    } else if (\n      formValue < parseInt(newFormValues['immutable_staleness_delta'])\n    ) {\n      return (\n        <p className=\"pf-u-font-size-sm pf-v5-u-danger-color-100\">\n          Culling must be after stale warning\n        </p>\n      );\n    }\n  }\n};\nexport const HostStalenessResetDefaultPopover = () => {\n  return (\n    <Popover\n      aria-label=\"Organization level popover\"\n      headerContent={\n        <Title headingLevel=\"h4\">Orginization level setting</Title>\n      }\n      position=\"top\"\n      bodyContent={\n        <Flex\n          direction={{ default: 'column' }}\n          spaceItems={{ default: 'spaceItemsNone' }}\n        >\n          <span className=\"pf-u-font-size-sm\">\n            - Systems are marked as stale after 1 day since last check-in.\n          </span>\n          <span className=\"pf-u-font-size-sm\">\n            - Systems are marked as stale warning after 14 days since last\n            check-in.\n          </span>\n\n          <span className=\"pf-u-font-size-sm\">\n            - Systems are culled after 30 days since last check-in.\n          </span>\n        </Flex>\n      }\n    >\n      <Button\n        variant=\"plain\"\n        aria-label=\"Organization level popover\"\n        style={{ padding: 0 }}\n      >\n        <OutlinedQuestionCircleIcon className=\"pf-u-ml-md\" />\n      </Button>\n    </Popover>\n  );\n};\n\nexport const InventoryHostStalenessPopover = () => {\n  return (\n    <Popover\n      aria-label=\"Orginization level popover\"\n      headerContent={\n        <Title headingLevel=\"h4\">Orginization level setting</Title>\n      }\n      hasAutoWidth\n      position=\"top\"\n      bodyContent={\n        <div>\n          <p className=\"pf-u-font-size-sm\">\n            Configure the number of days it will take for your systems to be\n            marked as stale, stale warning, and be cullled.\n          </p>\n          <Flex\n            direction={{ default: 'column' }}\n            spaceItems={{ default: 'spaceItemsNone' }}\n          >\n            <span className=\"pf-u-font-size-sm\">By default:</span>\n            <span className=\"pf-u-font-size-sm\">\n              <p>\n                - Systems are marked as stale after 1 day since last check-in.\n              </p>\n            </span>\n            <span className=\"pf-u-font-size-sm\">\n              - Systems are marked as stale warning after 14 days since last\n              check-in.\n            </span>\n            <span className=\"pf-u-font-size-sm\">\n              - Systems are culled after 30 days since last check-in.\n            </span>\n          </Flex>\n        </div>\n      }\n    >\n      <Button\n        variant=\"plain\"\n        aria-label=\"Orginization level popover\"\n        style={{ padding: 0 }}\n      >\n        <OutlinedQuestionCircleIcon className=\"pf-u-ml-sm\" />\n      </Button>\n    </Popover>\n  );\n};\nexport const systemStalenessItems = (activeTabKey) => {\n  return [\n    {\n      name: '1 day',\n      value: '1',\n      apiKey: activeTabKey\n        ? 'immutable_staleness_delta'\n        : 'conventional_staleness_delta',\n      title: 'System staleness',\n      modalMessage:\n        'A stale status on a system indicates that your system has not checked-in in a certain amount of time.',\n    },\n    {\n      name: '2 days',\n      value: '2',\n      apiKey: activeTabKey\n        ? 'immutable_staleness_delta'\n        : 'conventional_staleness_delta',\n    },\n    {\n      name: '3 days',\n      value: '3',\n      apiKey: activeTabKey\n        ? 'immutable_staleness_delta'\n        : 'conventional_staleness_delta',\n    },\n    {\n      name: '4 days',\n      value: '4',\n      apiKey: activeTabKey\n        ? 'immutable_staleness_delta'\n        : 'conventional_staleness_delta',\n    },\n    {\n      name: '5 days',\n      value: '5',\n      apiKey: activeTabKey\n        ? 'immutable_staleness_delta'\n        : 'conventional_staleness_delta',\n    },\n    {\n      name: '6 days',\n      value: '6',\n      apiKey: activeTabKey\n        ? 'immutable_staleness_delta'\n        : 'conventional_staleness_delta',\n    },\n    {\n      name: '7 days',\n      value: '7',\n      apiKey: activeTabKey\n        ? 'immutable_staleness_delta'\n        : 'conventional_staleness_delta',\n    },\n    {\n      name: 'Never',\n      value: 'Never',\n      apiKey: activeTabKey\n        ? 'immutable_staleness_delta'\n        : 'conventional_staleness_delta',\n    },\n  ];\n};\n\nexport const systemStalenessWarningItems = (activeTabKey) => {\n  return [\n    {\n      name: '7 days',\n      value: '7',\n      apiKey: activeTabKey\n        ? 'immutable_stale_warning_delta'\n        : 'conventional_stale_warning_delta',\n      title: 'System stale warning',\n      modalMessage:\n        'A stale warning status on a system indicates that your system has not checked-in in a while, and is at risk of being deleted from your inventory.',\n    },\n    {\n      name: '14 days',\n      value: '14',\n      apiKey: activeTabKey\n        ? 'immutable_stale_warning_delta'\n        : 'conventional_stale_warning_delta',\n    },\n    {\n      name: '21 days',\n      value: '21',\n      apiKey: activeTabKey\n        ? 'immutable_stale_warning_delta'\n        : 'conventional_stale_warning_delta',\n    },\n    {\n      name: '30 days',\n      value: '30',\n      apiKey: activeTabKey\n        ? 'immutable_stale_warning_delta'\n        : 'conventional_stale_warning_delta',\n    },\n    {\n      name: '60 days',\n      value: '60',\n      apiKey: activeTabKey\n        ? 'immutable_stale_warning_delta'\n        : 'conventional_stale_warning_delta',\n    },\n    {\n      name: '90 days',\n      value: '90',\n      apiKey: activeTabKey\n        ? 'immutable_stale_warning_delta'\n        : 'conventional_stale_warning_delta',\n    },\n    {\n      name: '120 days',\n      value: '120',\n      apiKey: activeTabKey\n        ? 'immutable_stale_warning_delta'\n        : 'conventional_stale_warning_delta',\n    },\n    {\n      name: '150 days',\n      value: '150',\n      apiKey: activeTabKey\n        ? 'immutable_stale_warning_delta'\n        : 'conventional_stale_warning_delta',\n    },\n    {\n      name: '180 days',\n      value: '180',\n      apiKey: activeTabKey\n        ? 'immutable_stale_warning_delta'\n        : 'conventional_stale_warning_delta',\n    },\n    {\n      name: 'Never',\n      value: 'Never',\n      apiKey: activeTabKey\n        ? 'immutable_stale_warning_delta'\n        : 'conventional_stale_warning_delta',\n    },\n  ];\n};\n\nexport const systemCullingItems = (activeTabKey) => {\n  return [\n    {\n      name: '14 days',\n      value: '14',\n      apiKey: activeTabKey\n        ? 'immutable_culling_delta'\n        : 'conventional_culling_delta',\n      title: 'System culling',\n      modalMessage:\n        'This is the time at which your system will be deleted from your inventory. Once your system is culled, it will have to be re-registered to be added back to your inventory.',\n    },\n    {\n      name: '21 days',\n      value: '21',\n      apiKey: activeTabKey\n        ? 'immutable_culling_delta'\n        : 'conventional_culling_delta',\n    },\n    {\n      name: '30 days',\n      value: '30',\n      apiKey: activeTabKey\n        ? 'immutable_culling_delta'\n        : 'conventional_culling_delta',\n    },\n    {\n      name: '60 days',\n      value: '60',\n      apiKey: activeTabKey\n        ? 'immutable_culling_delta'\n        : 'conventional_culling_delta',\n    },\n    {\n      name: '90 days',\n      value: '90',\n      apiKey: activeTabKey\n        ? 'immutable_culling_delta'\n        : 'conventional_culling_delta',\n    },\n    {\n      name: '120 days',\n      value: '120',\n      apiKey: activeTabKey\n        ? 'immutable_culling_delta'\n        : 'conventional_culling_delta',\n    },\n    {\n      name: '150 days',\n      value: '150',\n      apiKey: activeTabKey\n        ? 'immutable_culling_delta'\n        : 'conventional_culling_delta',\n    },\n    {\n      name: '180 days',\n      value: '180',\n      apiKey: activeTabKey\n        ? 'immutable_culling_delta'\n        : 'conventional_culling_delta',\n    },\n    {\n      name: 'Never',\n      value: 'Never',\n      apiKey: activeTabKey\n        ? 'immutable_culling_delta'\n        : 'conventional_culling_delta',\n    },\n  ];\n};\n\nexport const formValidation = async (newFormValues, setIsFormValid) => {\n  for (let i = 0; i < hostStalenessApiKeys.length; i++) {\n    const formKey = hostStalenessApiKeys[i];\n    let value = parseInt(newFormValues[formKey]);\n    if (\n      formKey === 'conventional_staleness_delta' &&\n      value > newFormValues['conventional_stale_warning_delta']\n    ) {\n      setIsFormValid(false);\n      break;\n    }\n    if (\n      formKey === 'immutable_staleness_delta' &&\n      value > newFormValues['immutable_stale_warning_delta']\n    ) {\n      setIsFormValid(false);\n      break;\n    }\n    if (\n      formKey === 'conventional_stale_warning_delta' &&\n      value > newFormValues['conventional_culling_delta']\n    ) {\n      setIsFormValid(false);\n      break;\n    }\n    if (\n      formKey === 'immutable_stale_warning_delta' &&\n      value > newFormValues['immutable_culling_delta']\n    ) {\n      setIsFormValid(false);\n      break;\n    } else {\n      setIsFormValid(true);\n    }\n  }\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  Flex,\n  FlexItem,\n  Popover,\n  Select,\n  SelectOption,\n} from '@patternfly/react-core';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport { useEffect } from 'react';\nimport { conditionalDropdownError, formValidation } from './constants';\n\nconst BaseDropdown = ({\n  dropdownItems,\n  currentItem,\n  disabled,\n  title,\n  newFormValues,\n  setNewFormValues,\n  edit,\n  modalMessage,\n  isFormValid,\n  setIsFormValid,\n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [selected, setSelected] = useState(currentItem);\n  const onSelect = (event, value) => {\n    let select = dropdownItems.find((item) => item.value === value);\n    setSelected(select.name);\n    setIsOpen(false);\n  };\n\n  const updateFilter = (item) => {\n    setNewFormValues({ ...newFormValues, [item.apiKey]: item.value });\n  };\n\n  useEffect(() => {\n    setSelected(currentItem);\n    formValidation(newFormValues, setIsFormValid);\n  }, [edit, currentItem]);\n  return (\n    <React.Fragment>\n      <Flex direction={{ default: 'column' }} gap={{ default: 'gapNone' }}>\n        <FlexItem className=\"pf-u-mb-sm\">\n          <Flex>\n            <FlexItem spacer={{ default: 'spacerXs' }}>\n              <p className=\"pf-u-font-weight-bold pf-u-font-size-sm\">{title}</p>\n            </FlexItem>\n            <FlexItem>\n              <Popover\n                aria-label={`${title} popover`}\n                headerContent={<div>{title}</div>}\n                bodyContent={<div>{modalMessage}</div>}\n              >\n                <Button\n                  className=\"pf-u-ml-xs\"\n                  variant=\"plain\"\n                  style={{ padding: 0 }}\n                >\n                  <OutlinedQuestionCircleIcon />\n                </Button>\n              </Popover>\n            </FlexItem>\n          </Flex>\n        </FlexItem>\n        <FlexItem>\n          <Select\n            isOpen={isOpen}\n            onSelect={onSelect}\n            onToggle={() => setIsOpen(!isOpen)}\n            isDisabled={disabled}\n            selections={selected}\n            width={'150px'}\n            validated={!isFormValid && 'error'}\n          >\n            {dropdownItems.map((item) => (\n              <SelectOption\n                key={item.name}\n                value={item.value}\n                onClick={() => updateFilter(item)}\n              >\n                {item.name}\n              </SelectOption>\n            ))}\n          </Select>\n          {conditionalDropdownError(newFormValues, dropdownItems)}\n        </FlexItem>\n      </Flex>\n    </React.Fragment>\n  );\n};\n\nBaseDropdown.propTypes = {\n  dropdownItems: PropTypes.array,\n  disabled: PropTypes.bool,\n  onSelect: PropTypes.bool,\n  placeholder: PropTypes.string,\n  title: PropTypes.string,\n  currentItem: PropTypes.string,\n  filter: PropTypes.object,\n  newFormValues: PropTypes.any,\n  setNewFormValues: PropTypes.any,\n  edit: PropTypes.bool,\n  modalMessage: PropTypes.string,\n  isFormValid: PropTypes.any,\n  setIsFormValid: PropTypes.any,\n};\n\nexport default BaseDropdown;\n","import { Card, Flex, FlexItem, Grid, GridItem } from '@patternfly/react-core';\nimport React from 'react';\nimport BaseDropdown from './BaseDropDown';\nimport PropTypes from 'prop-types';\nimport {\n  HostStalenessResetDefaultPopover,\n  systemCullingItems,\n  systemStalenessItems,\n  systemStalenessWarningItems,\n} from './constants';\n\nconst TabCard = ({\n  edit,\n  filter,\n  setFilter,\n  activeTabKey,\n  newFormValues,\n  setNewFormValues,\n  isFormValid,\n  setIsFormValid,\n}) => {\n  const standardValues = {\n    conventional_staleness_delta: '1',\n    conventional_stale_warning_delta: '7',\n    conventional_culling_delta: '14',\n    immutable_staleness_delta: '2',\n    immutable_stale_warning_delta: '120',\n    immutable_culling_delta: '180',\n  };\n  const dropdownArray = (activeTabKey) => [\n    systemStalenessItems(activeTabKey),\n    systemStalenessWarningItems(activeTabKey),\n    systemCullingItems(activeTabKey),\n  ];\n  //this to be replaced by api values\n  const resetToStandard = () => {\n    setNewFormValues(standardValues);\n  };\n\n  return (\n    <React.Fragment>\n      <Card isPlain className=\"pf-u-mb-lg\">\n        <Grid span={3}>\n          {dropdownArray(activeTabKey).map((item) => (\n            <GridItem key={item[0].title}>\n              <BaseDropdown\n                data-ouia-component-id={item[0].title}\n                dropdownItems={item}\n                currentItem={newFormValues[item[0].apiKey]}\n                disabled={!edit}\n                title={item[0].title}\n                filter={filter}\n                setFilter={setFilter}\n                newFormValues={newFormValues}\n                setNewFormValues={setNewFormValues}\n                edit={edit}\n                modalMessage={item[0].modalMessage}\n                isFormValid={isFormValid}\n                setIsFormValid={setIsFormValid}\n              />\n            </GridItem>\n          ))}\n          {edit && (\n            <Flex>\n              <FlexItem alignSelf={{ default: 'alignSelfCenter' }}>\n                <a onClick={() => resetToStandard()} className=\"pf-u-ml-sm \">\n                  Reset to default setting\n                </a>\n                <HostStalenessResetDefaultPopover />\n              </FlexItem>\n            </Flex>\n          )}\n        </Grid>\n      </Card>\n    </React.Fragment>\n  );\n};\n\nTabCard.propTypes = {\n  filter: PropTypes.object,\n  newFormValues: PropTypes.any,\n  setNewFormValues: PropTypes.any,\n  setFilter: PropTypes.any,\n  activeTabKey: PropTypes.number,\n  edit: PropTypes.bool,\n  setEdit: PropTypes.any,\n  isFormValid: PropTypes.any,\n  setIsFormValid: PropTypes.any,\n};\nexport default TabCard;\n","/* eslint-disable react/no-unescaped-entities */\nimport React, { useEffect, useState } from 'react';\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardHeader,\n  Flex,\n  Modal,\n  Popover,\n  Spinner,\n  Tab,\n  TabTitleText,\n  Tabs,\n  Title,\n} from '@patternfly/react-core';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport TabCard from './TabCard';\nimport {\n  CONVENTIONAL_TAB_TOOLTIP,\n  IMMUTABLE_TAB_TOOLTIP,\n  daysToSecondsConversion,\n  hostStalenessApiKeys,\n  secondsToDaysConversion,\n} from './constants';\nimport { InventoryHostStalenessPopover } from './constants';\nimport { INVENTORY_API_BASE } from '../../api';\nimport { useAxiosWithPlatformInterceptors } from '@redhat-cloud-services/frontend-components-utilities/interceptors';\n\nconst HostStalenessCard = () => {\n  //need to figure out which key matches to which dropdown\n  //multiply these values be seconds at the end before sending to the api\n  const [filter, setFilter] = useState({\n    conventional_staleness_delta: '',\n    conventional_stale_warning_delta: '',\n    conventional_culling_delta: '',\n    immutable_staleness_delta: '',\n    immutable_stale_warning_delta: '',\n    immutable_culling_delta: '',\n  });\n\n  const axios = useAxiosWithPlatformInterceptors();\n  const [newFormValues, setNewFormValues] = useState(filter);\n  const [edit, setEdit] = useState(false);\n  const [activeTabKey, setActiveTabKey] = useState(0);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isFormValid, setIsFormValid] = useState(true);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const handleTabClick = (_event, tabIndex) => {\n    setActiveTabKey(tabIndex);\n  };\n  const handleModalToggle = () => {\n    setIsModalOpen(!isModalOpen);\n  };\n\n  //Cancel button when a user opts out of saving changes\n  const resetToOriginalValues = () => {\n    setNewFormValues(filter);\n    setEdit(!edit);\n  };\n\n  //On save Button\n  const saveHostData = async () => {\n    let apiData = {};\n    hostStalenessApiKeys.forEach(\n      (filterKey) =>\n        filterKey !== 'id' &&\n        (apiData[filterKey] = daysToSecondsConversion(newFormValues[filterKey]))\n    );\n    //system_default means the account has no record, therefor, post for new instance of record.\n    if (filter.id === 'system_default') {\n      axios.post(`${INVENTORY_API_BASE}/account/staleness`, apiData);\n    } else {\n      axios.patch(`${INVENTORY_API_BASE}/account/staleness`, apiData);\n    }\n    setEdit(!edit);\n  };\n\n  const fetchStalenessData = async () => {\n    let results = await axios\n      .get(`${INVENTORY_API_BASE}/account/staleness`)\n      .then((res) => res);\n    let newFilter = {};\n    hostStalenessApiKeys.forEach(\n      (filterKey) =>\n        (newFilter[filterKey] = secondsToDaysConversion(results[filterKey]))\n    );\n    newFilter['id'] = results.id;\n    setFilter(newFilter);\n    setNewFormValues(newFilter);\n  };\n\n  const batchedApi = async () => {\n    fetchStalenessData();\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    batchedApi();\n  }, []);\n  return (\n    <React.Fragment>\n      {!isLoading ? (\n        <Card id={'HostStalenessCard'}>\n          <CardHeader>\n            <Title headingLevel=\"h4\" size=\"xl\" id=\"HostTitle\">\n              Organization level system staleness and culling\n            </Title>\n            <InventoryHostStalenessPopover />\n          </CardHeader>\n          <CardBody>\n            <p>\n              Keep or customize your organization's default settings using the\n              options below.\n            </p>\n            <Flex className=\"pf-u-mt-md\">\n              <Title headingLevel=\"h6\">System configuration </Title>\n              <a\n                role=\"button\"\n                onClick={() => {\n                  setEdit(!edit);\n                }}\n              >\n                Edit\n              </a>\n            </Flex>\n            <Tabs\n              id={'HostTabs'}\n              className=\"pf-m-light pf-c-table pf-u-mb-lg pf-u-mt-lg\"\n              activeKey={activeTabKey}\n              onSelect={handleTabClick}\n            >\n              <Tab\n                eventKey={0}\n                title={\n                  <TabTitleText>\n                    Conventional (RPM-DNF){' '}\n                    <Popover\n                      aria-label=\"Basic popover\"\n                      headerContent={<div>Conventional systems (RPM-DNF)</div>}\n                      bodyContent={<div>{CONVENTIONAL_TAB_TOOLTIP}</div>}\n                    >\n                      <OutlinedQuestionCircleIcon className=\"pf-u-ml-md\" />\n                    </Popover>\n                  </TabTitleText>\n                }\n              >\n                <TabCard\n                  edit={edit}\n                  setEdit={setEdit}\n                  filter={filter}\n                  setFilter={setFilter}\n                  activeTabKey={0}\n                  newFormValues={newFormValues}\n                  setNewFormValues={setNewFormValues}\n                  isFormValid={isFormValid}\n                  setIsFormValid={setIsFormValid}\n                />\n              </Tab>\n              <Tab\n                eventKey={1}\n                title={\n                  <TabTitleText>\n                    Immutable (OSTree){' '}\n                    <Popover\n                      aria-label=\"Basic popover\"\n                      headerContent={<div>Immutable (OSTree)</div>}\n                      bodyContent={<div>{IMMUTABLE_TAB_TOOLTIP}</div>}\n                    >\n                      <OutlinedQuestionCircleIcon className=\"pf-u-ml-md\" />\n                    </Popover>\n                  </TabTitleText>\n                }\n              >\n                <TabCard\n                  edit={edit}\n                  setEdit={setEdit}\n                  filter={filter}\n                  setFilter={setFilter}\n                  activeTabKey={1}\n                  newFormValues={newFormValues}\n                  setNewFormValues={setNewFormValues}\n                  isFormValid={isFormValid}\n                  setIsFormValid={setIsFormValid}\n                />\n              </Tab>\n            </Tabs>\n            {edit && (\n              <Flex justifyContent={{ default: 'justifyContentFlexStart' }}>\n                <Button\n                  className=\"pf-u-mt-md\"\n                  size={'sm'}\n                  onClick={() => handleModalToggle()}\n                  isDisabled={!isFormValid}\n                >\n                  Save\n                </Button>\n                <Button\n                  className=\"pf-u-mt-md\"\n                  size={'sm'}\n                  variant=\"link\"\n                  //CancelButton when a user opts out of saving changes\n                  onClick={() => resetToOriginalValues()}\n                >\n                  Cancel\n                </Button>\n                <Modal\n                  variant=\"small\"\n                  titleIconVariant=\"warning\"\n                  title=\"Update organization level setting\"\n                  isOpen={isModalOpen}\n                  onClose={handleModalToggle}\n                  actions={[\n                    <Button\n                      key=\"confirm\"\n                      variant=\"primary\"\n                      onClick={saveHostData}\n                    >\n                      Update\n                    </Button>,\n                    <Button\n                      key=\"cancel\"\n                      variant=\"link\"\n                      onClick={handleModalToggle}\n                    >\n                      Cancel\n                    </Button>,\n                  ]}\n                  ouiaId=\"BasicModal\"\n                >\n                  {`Changing the organization level setting for system staleness and\n              culling may impact your systems. Some systems will be culled as a\n              result.`}\n                </Modal>\n              </Flex>\n            )}{' '}\n          </CardBody>\n        </Card>\n      ) : (\n        <Spinner />\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default HostStalenessCard;\n","import InventoryHostStaleness from './InventoryHostStaleness';\n\nexport default InventoryHostStaleness;\n","/* eslint-disable react/no-unescaped-entities */\nimport React, { useState } from 'react';\nimport { Bullseye, Spinner } from '@patternfly/react-core';\nimport HostStalenessCard from './HostStalenessCard';\n\nconst InventoryHostStaleness = () => {\n  const [isLoading] = useState(false);\n\n  return (\n    <section>\n      {isLoading ? (\n        <Bullseye>\n          <Spinner />\n        </Bullseye>\n      ) : (\n        <section className=\"pf-l-page__main-section pf-c-page__main-section\">\n          <HostStalenessCard />\n        </section>\n      )}\n    </section>\n  );\n};\n\nexport default InventoryHostStaleness;\n","import React from 'react';\nimport {\n  Button,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  Title,\n} from '@patternfly/react-core';\nimport { ExternalLinkAltIcon, LockIcon } from '@patternfly/react-icons';\n\nconst HostStalenessEmptyState = () => {\n  return (\n    <EmptyState>\n      <EmptyStateIcon icon={LockIcon} />\n      <Title headingLevel=\"h5\" size=\"lg\">\n        Acess permissions needed\n      </Title>\n      <EmptyStateBody>\n        You do not have the necessary Inventory staleness and culling viewer\n        role required to view this page.\n      </EmptyStateBody>\n      <Button\n        variant=\"link\"\n        component=\"a\"\n        // href=\"https://access.redhat.com/products/red-hat-insights#getstarted\"\n      >\n        <p>\n          Learn more about managing user access{' '}\n          <ExternalLinkAltIcon className=\"pf-u-ml-sm\" />\n        </p>\n      </Button>\n    </EmptyState>\n  );\n};\n\nexport default HostStalenessEmptyState;\n","import React, { useEffect } from 'react';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport InventoryHostStaleness from '../components/InventoryHostStaleness';\nimport { usePermissionsWithContext } from '@redhat-cloud-services/frontend-components-utilities/RBACHook';\nimport { GENERAL_HOST_STALENESS_WRITE_PERMISSION } from '../components/InventoryHostStaleness/constants';\nimport HostStalenessEmptyState from '../components/InventoryHostStaleness/HostStalenessEmptyState';\nimport { Page, PageSection } from '@patternfly/react-core';\n\nconst REQUIRED_PERMISSIONS = [GENERAL_HOST_STALENESS_WRITE_PERMISSION];\n\nconst HostStaleness = () => {\n  const chrome = useChrome();\n  const { hasAccess: canModifyHostStaleness } =\n    usePermissionsWithContext(REQUIRED_PERMISSIONS);\n\n  useEffect(() => {\n    chrome?.updateDocumentTitle?.(\n      'Staleness and Culling - System Configuration - Inventory | Red Hat Insights'\n    );\n  }, [chrome]);\n\n  return (\n    <React.Fragment>\n      <PageHeader>\n        <PageHeaderTitle title={'Staleness and Culling'} />\n      </PageHeader>\n      {canModifyHostStaleness ? (\n        <InventoryHostStaleness />\n      ) : (\n        <Page>\n          <PageSection variant=\"default\">\n            <HostStalenessEmptyState />\n          </PageSection>\n        </Page>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default HostStaleness;\n"],"names":["i","hostStalenessApiKeys","HostStalenessResetDefaultPopover","Popover","headerContent","Title","headingLevel","position","bodyContent","Flex","direction","default","spaceItems","className","Button","variant","style","padding","InventoryHostStalenessPopover","hasAutoWidth","systemStalenessItems","activeTabKey","name","value","apiKey","title","modalMessage","systemStalenessWarningItems","systemCullingItems","formValidation","newFormValues","setIsFormValid","length","formKey","parseInt","BaseDropdown","dropdownItems","currentItem","disabled","setNewFormValues","edit","isFormValid","useState","isOpen","setIsOpen","selected","setSelected","useEffect","gap","FlexItem","spacer","Select","onSelect","event","select","find","item","onToggle","isDisabled","selections","width","validated","map","SelectOption","key","onClick","updateFilter","formValue","conditionalDropdownError","propTypes","PropTypes","placeholder","filter","TabCard","setFilter","standardValues","conventional_staleness_delta","conventional_stale_warning_delta","conventional_culling_delta","immutable_staleness_delta","immutable_stale_warning_delta","immutable_culling_delta","Card","isPlain","Grid","span","dropdownArray","GridItem","alignSelf","setEdit","axios","useAxiosWithPlatformInterceptors","setActiveTabKey","isModalOpen","setIsModalOpen","isLoading","setIsLoading","handleModalToggle","saveHostData","apiData","forEach","filterKey","days","JSON","stringify","id","post","INVENTORY_API_BASE","patch","fetchStalenessData","get","then","res","results","newFilter","seconds","batchedApi","Spinner","CardHeader","size","CardBody","role","Tabs","activeKey","_event","tabIndex","Tab","eventKey","TabTitleText","T","justifyContent","Modal","titleIconVariant","onClose","actions","ouiaId","Bullseye","EmptyState","EmptyStateIcon","icon","LockIcon","EmptyStateBody","component","REQUIRED_PERMISSIONS","chrome","useChrome","canModifyHostStaleness","usePermissionsWithContext","hasAccess","updateDocumentTitle","PageHeader","PageHeaderTitle","Page","PageSection"],"sourceRoot":""}