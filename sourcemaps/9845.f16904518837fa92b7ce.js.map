{"version":3,"sources":["webpack:///./src/Utilities/AccessDenied.js","webpack:///./src/Utilities/inventoryConnector.js","webpack:///./src/components/InventoryDetail/AppInfo.js","webpack:///./src/components/InventoryDetail/ApplicationDetails.js","webpack:///./src/components/InventoryDetail/DetailRenderer.js","webpack:///./src/components/InventoryDetail/DetailWrapper.js","webpack:///./src/components/InventoryDetail/FactsInfo.js","webpack:///./src/components/InventoryDetail/FullDetail.js","webpack:///./src/components/InventoryDetail/InventoryDetail.js","webpack:///./src/components/InventoryDetail/SystemNotFound.js","webpack:///./src/components/InventoryDetail/TopBar.js","webpack:///./src/components/InventoryDetail/helpers.js","webpack:///./src/components/InventoryDetailDrawer/BasicInfo.js","webpack:///./src/components/InventoryDetailDrawer/SystemIssues.js","webpack:///./src/components/InventoryTable/EntityTable.js","webpack:///./src/components/InventoryTable/EntityTableToolbar.js","webpack:///./src/components/InventoryTable/InventoryList.js","webpack:///./src/components/InventoryTable/InventoryTable.js","webpack:///./src/components/InventoryTable/NoSystemsTable.js","webpack:///./src/components/InventoryTable/Pagination.js","webpack:///./src/components/InventoryTable/helpers.js","webpack:///./src/components/filters/index.js","webpack:///./src/components/filters/useRegisteredWithFilter.js","webpack:///./src/components/filters/useStalenessFilter.js","webpack:///./src/components/filters/useTagsFilter.js","webpack:///./src/components/filters/useTextFilter.js","webpack:///./src/components/InventoryDetail/InventoryDetail.scss","webpack:///./src/components/InventoryTable/InventoryList.scss","webpack:///./src/components/InventoryDetail/InventoryDetail.scss?320a","webpack:///./src/components/InventoryTable/InventoryList.scss?96e8"],"names":["AccessDenied","title","description","props","className","content","propTypes","PropTypes","defaultProps","inventoryConnector","store","componentsMapper","Wrapper","isRbacEnabled","showInventoryDrawer","Boolean","InventoryTable","React","ref","inventoryRef","cmp","AppInfo","hideLoader","InventoryDetailHead","hideInvDrawer","InventoryDetail","FullDetail","TagWithDialog","DetailWrapper","inventoryFitlers","componentMapper","appList","useStore","search","useLocation","searchParams","URLSearchParams","loaded","useSelector","entityDetails","entity","activeApp","activeApps","find","item","name","get","appName","Cmp","component","Fragment","inventoryId","id","size","SkeletonSize","pageId","ApplicationDetails","onTabSelect","history","useHistory","dispatch","useDispatch","items","defaultApp","applications","useEffect","detailSelect","length","activeKey","onSelect","event","activeItem","oneApp","set","push","toString","isFilled","map","key","eventKey","hasAccess","usePermissions","undefined","children","hideInvLink","showTags","isExpanded","isToggleOpened","onExpand","toggleDrawer","panelContent","onClick","isOpened","FactsInfo","md","getFact","CullingInformation","culled","staleWarning","stale","currDate","Date","date","type","actions","onBackToListClick","showDelete","useParams","currId","location","pathname","replace","split","pop","loadEntity","hasItems","deleteEntity","systems","displayName","callback","action","reloadWrapper","addNotification","payload","hideBack","SystemNotFound","variant","EmptyStateVariant","icon","CubesIcon","headingLevel","redirectToInventoryList","TopBar","useState","isOpen","setIsOpen","isModalOpen","setIsModalOpen","inventoryActions","href","display_name","count","tags","systemId","TagsModal","toggle","onToggle","position","DropdownPosition","dropdownItems","DeleteModal","handleModalToggle","currentSytems","onConfirm","dismissable","document","referrer","back","RegExp","path","factDict","BasicInfo","hasGutter","isReadOnly","namespace","value","SystemIssues","advisor","systemIssues","compliance","cve","patch","getAdvisorData","getComplianceData","getPatchData","getVulnData","isLoaded","critical","important","moderate","low","bug","security","enhancement","criticalCount","profiles","EntityTable","expandable","onExpandClick","hasCheckbox","sortBy","tableProps","onSort","isExpandable","onRowClick","noDetail","noSystemsTable","columnsProp","columns","disableDefaultColumns","columnsCounter","rows","entities","columnsRedux","next","prev","every","index","findIndex","useRef","useMemo","current","defaultColumns","disabledColumns","Array","isArray","defaultColumnsFiltered","includes","mergeArraysByKey","join","cells","createColumns","RowWrapper","PfTable","aria-label","createRows","_event","slice","gridBreakPoint","TableGridBreakpoint","direction","setSort","onSortChange","checked","rowId","row","selectEntity","onCollapse","TableHeader","TableBody","colSize","rowSize","showActions","showHealth","EntityTableToolbar","total","page","perPage","filterConfig","actionsConfig","activeFiltersConfig","customFilters","bulkSelect","hideFilters","paginationProps","onRefreshData","showTagModal","reducer","useReducer","filtersReducer","textFilterReducer","stalenessFilterReducer","registeredWithFilterReducer","tagsFilterReducer","textFilterState","stalenessFilterState","registeredWithFilterState","tagsFilterState","filters","activeFilters","allTagsLoaded","allTags","additionalTagsCount","useTextFilter","nameFilter","nameChip","textFilter","setTextFilter","useStalenessFilter","stalenessFilter","stalenessChip","staleFilter","setStaleFilter","useRegisteredWithFilter","registeredFilter","registeredChip","registeredWithFilter","setRegisteredWithFilter","useTagsFilter","toggleTagModal","tagsFilter","tagsChip","selectedTags","setSelectedTags","filterTagsBy","seFilterTagsBy","debounceGetAllTags","useCallback","debounce","config","options","fetchAllTags","onRefreshDataInner","enabledFilters","all","registeredWith","updateData","debouncedRefresh","reduceFilters","tagFilters","onSetFilter","filterKey","refresh","newFilters","filter","oneFilter","Object","prototype","hasOwnProperty","call","shouldReload","debounced","trimmedValue","trim","textualFilter","TEXT_FILTER","onSetTextFilter","mapGroups","deleteMapper","TEXTUAL_CHIP","TAG_CHIP","deleted","onDeleteTag","STALE_CHIP","onDeleteFilter","REGISTERED_CHIP","inventoryFilters","isDisabled","filterValues","placeholder","label","toLowerCase","flatMap","values","onDelete","e","isAll","restDeleted","clearFilters","pagination","itemCount","onSetPage","_e","newPage","onPerPageSelect","newPerPage","per_page","onApply","selected","arrayToSelection","onToggleModal","PrimaryToolbar","onClearFilters","onRefresh","convertItem","ContextInventoryList","ignoreRefresh","prevItems","prevSortBy","isEqual","gutter","span","InventoryList","params","disableRefresh","showReturnButton","setRefresh","filterEntities","loadEntities","account","getEntities","forwardRef","propsTotal","propsPage","propsPerPage","propsSortBy","isFullView","errorState","autoRefresh","initialLoading","error","invPage","shallowEqual","invPerPage","invTotal","invSortBy","reduxLoaded","initialLoadingActive","disableInitialLoading","cache","updateProps","getProps","propsCache","disableOnRefresh","getState","cachedProps","currPerPage","entitiesLoading","loadSystems","prevFilters","isFooter","isFull","FooterPagination","PaginationVariant","dropDirection","pageArg","perPageArg","buildCells","extra","composed","renderFunc","data","TitleColumn","colSpan","flatten","oneItem","actionProps","parent","fullWidth","currFilter","deletedItem","chips","onApplyTags","includesSortable","transforms","reduce","acc","fn","cellFormatters","width","cellWidth","isStatic","sortable","reducersList","state","curr","REGISTERED_WITH_FILTER","_state","registeredWithStateValue","setStateValue","registeredWithValue","setValue","newValue","onChange","registered","chip","category","STALENESS_FILTER","stalenessStateValue","stalenessValue","staleness","onShowMoreClick","stateMapper","stateValue","___CSS_LOADER_EXPORT___","module","update","hot","invalidate","oldLocals","accept","a","b","isNamedExport","p","isEqualLocals","dispose"],"mappings":"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","file":"js/9845.f1807340d261ca7ea6d5.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NotAuthorized } from '@redhat-cloud-services/frontend-components/NotAuthorized';\nimport { Tooltip } from '@patternfly/react-core';\n\nconst AccessDenied = ({ title, description, ...props }) => (\n    <NotAuthorized\n        {...props}\n        className=\"ins-c-inventory__no--access\"\n        title={title}\n        description={<Tooltip content=\"inventory:*:read\">\n            {description}\n        </Tooltip>}\n    />\n);\n\nAccessDenied.propTypes = {\n    title: PropTypes.string,\n    description: PropTypes.node\n};\n\nAccessDenied.defaultProps = {\n    title: 'You do not have access to Inventory',\n    description: <div>\n        To view your systems, you must be granted inventory access from your Organization Administrator.\n    </div>\n};\n\nexport default AccessDenied;\n","/* eslint-disable react/display-name */\nimport React from 'react';\nimport { AppInfo, InventoryDetail, FullDetail } from '../components/InventoryDetail';\nimport RenderWrapper from './Wrapper';\nimport TagWithDialog from './TagWithDialog';\nimport { InventoryTable } from '../components/InventoryTable';\nimport * as inventoryFitlers from '../components/filters';\nimport DetailRenderer from '../components/InventoryDetail/DetailRenderer';\n\nexport function inventoryConnector(store, componentsMapper, Wrapper, isRbacEnabled = true) {\n    const showInventoryDrawer = Boolean(Wrapper);\n    return {\n        InventoryTable: React.forwardRef(\n            (props, ref) => <RenderWrapper\n                { ...props }\n                isRbacEnabled={ isRbacEnabled }\n                inventoryRef={ ref }\n                store={ store }\n                cmp={ InventoryTable }\n            />\n        ),\n        AppInfo: React.forwardRef(\n            (props, ref) => <RenderWrapper\n                hideLoader\n                { ...props }\n                {...componentsMapper}\n                isRbacEnabled={ isRbacEnabled }\n                inventoryRef={ ref }\n                store={ store }\n                cmp={ AppInfo }\n            />\n        ),\n        InventoryDetailHead: React.forwardRef(\n            (props, ref) => <RenderWrapper\n                hideLoader\n                { ...props }\n                {...componentsMapper}\n                isRbacEnabled={ isRbacEnabled }\n                inventoryRef={ ref }\n                store={ store }\n                // eslint-disable-next-line react/prop-types\n                showInventoryDrawer={ showInventoryDrawer && !props.hideInvDrawer }\n                cmp={ InventoryDetail }\n            />\n        ),\n        InventoryDetail: React.forwardRef(\n            (props, ref) => <RenderWrapper\n                hideLoader\n                { ...props }\n                {...componentsMapper}\n                isRbacEnabled={ isRbacEnabled }\n                inventoryRef={ ref }\n                store={ store }\n                showInventoryDrawer={ showInventoryDrawer }\n                cmp={ FullDetail }\n            />\n        ),\n        TagWithDialog: React.forwardRef(\n            (props, ref) => <RenderWrapper\n                { ...props }\n                inventoryRef={ ref }\n                isRbacEnabled={ isRbacEnabled }\n                store={ store }\n                cmp={ TagWithDialog }\n            />\n        ),\n        // eslint-disable-next-line react/display-name\n        DetailWrapper: (props) => <DetailRenderer\n            Wrapper={Wrapper}\n            isRbacEnabled={ isRbacEnabled }\n            showInventoryDrawer={ showInventoryDrawer }\n            {...props}\n        />,\n        ...inventoryFitlers\n    };\n}\n","/* eslint-disable camelcase */\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { useStore, useSelector } from 'react-redux';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components/Skeleton';\n\n/**\n * Small component that just renders active detail with some specific class.\n * This component detail is accessed from redux if no component found `missing component` is displayed.\n * @param {*} props `componentsMapper` if you want to pass different components list.\n */\nconst AppInfo = ({ componentMapper, appList }) => {\n    const store = useStore();\n    const { search } = useLocation();\n    const searchParams = new URLSearchParams(search);\n    const loaded = useSelector(({ entityDetails }) => entityDetails?.loaded);\n    const entity = useSelector(({ entityDetails }) => entityDetails?. entity);\n    const activeApp = useSelector(({ entityDetails }) => {\n        if (entityDetails?.loaded) {\n            return (appList || entityDetails?.activeApps)?.find?.(item => item?.name === (\n                searchParams.get('appName') || entityDetails?.activeApp?.appName\n            )) || entityDetails?.activeApps?.[0];\n        }\n    });\n    const Cmp = componentMapper || activeApp?.component;\n    return (\n        <Fragment>\n            {\n                loaded ? activeApp && (\n                    <div className={ `ins-active-app-${activeApp?.name}` }>\n                        { Cmp ?\n                            <Cmp\n                                store={store}\n                                inventoryId={entity?.id}\n                                appName={activeApp?.name}\n                            /> :\n                            'missing component'}\n                    </div>\n                ) : <Skeleton size={ SkeletonSize.md } />\n            }\n        </Fragment>\n    );\n};\n\nAppInfo.propTypes = {\n    componentMapper: PropTypes.element,\n    appList: PropTypes.arrayOf(PropTypes.shape({\n        title: PropTypes.node,\n        name: PropTypes.string,\n        pageId: PropTypes.string\n    }))\n};\n\nexport default AppInfo;\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport { Tabs, Tab } from '@patternfly/react-core';\nimport { detailSelect } from '../../store/actions';\n\n/**\n * Component that renders tabs for each application detail and handles clicking on each item.\n * @param {*} props onTabSelect can be used to notify parent component that detail has been selected.\n */\nconst ApplicationDetails = ({ onTabSelect, appList, ...props }) => {\n    const { search } = useLocation();\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const searchParams = new URLSearchParams(search);\n    const items = useSelector(({ entityDetails }) => entityDetails?.activeApps);\n    const activeApp = useSelector(({ entityDetails }) => entityDetails?.activeApp);\n    const defaultApp = activeApp?.appName || appList?.find(({ pageId, name }) => items?.[0]?.name === (\n        pageId || name))?.name || items?.[0]?.name;\n    const applications = appList || items;\n    useEffect(() => {\n        /**\n         * Initialize first inventory detail type\n         */\n        const appName = searchParams.get('appName');\n        if (appName) {\n            dispatch(detailSelect(appName));\n        }\n    }, []);\n\n    return (\n        <React.Fragment>\n            {\n                applications?.length > 1 &&\n                <Tabs\n                    {...props}\n                    activeKey={ defaultApp }\n                    onSelect={ (event, item) => {\n                        const activeItem = applications.find(oneApp => oneApp.name === item);\n                        if (onTabSelect) {\n                            onTabSelect(event, item, activeItem);\n                        } else {\n                            searchParams.set('appName', activeItem.name);\n                            history.push({ search: searchParams.toString() });\n                        }\n\n                        dispatch(detailSelect(activeItem.name));\n                    } }\n                    isFilled\n                    className=\"ins-c-inventory-detail__app-tabs\"\n                >\n                    { applications.map((item, key) => (\n                        <Tab key={ key } eventKey={ item.name } title={ item.title }></Tab>\n                    )) }\n                </Tabs>\n            }\n        </React.Fragment>\n    );\n};\n\nApplicationDetails.propTypes = {\n    appList: PropTypes.arrayOf(PropTypes.shape({\n        title: PropTypes.node,\n        name: PropTypes.string.isRequired,\n        pageId: PropTypes.string\n    })),\n    onTabSelect: PropTypes.func\n};\n\nexport default ApplicationDetails;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { usePermissions } from '@redhat-cloud-services/frontend-components-utilities/RBACHook';\nimport { Spinner } from '@patternfly/react-core';\nimport DetailWrapper from './DetailWrapper';\nimport AccessDenied from '../../Utilities/AccessDenied';\n\nconst DetailRenderer = ({ showInventoryDrawer, isRbacEnabled, ...props }) => {\n    const { hasAccess } = usePermissions('inventory', [\n        'inventory:*:*',\n        'inventory:*:read',\n        'inventory:hosts:read'\n    ]);\n    if (hasAccess === undefined) {\n        return <Spinner />;\n    } else if (isRbacEnabled && hasAccess === false) {\n        return <AccessDenied />;\n    } else {\n        return showInventoryDrawer ? <DetailWrapper {...props} /> : <React.Fragment {...props} />;\n    }\n};\n\nDetailWrapper.propTypes = {\n    showInventoryDrawer: PropTypes.bool,\n    isRbacEnabled: PropTypes.bool\n};\n\nDetailWrapper.defaultProps = {\n    showInventoryDrawer: false\n};\n\nexport default DetailRenderer;\n","import React from 'react';\nimport {\n    Drawer,\n    DrawerPanelContent,\n    DrawerContent,\n    DrawerContentBody,\n    DrawerPanelBody,\n    DrawerActions,\n    DrawerHead,\n    DrawerCloseButton,\n    Stack,\n    StackItem\n} from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch, useStore } from 'react-redux';\nimport { toggleDrawer } from '../../store/actions';\nimport { BasicInfo, SystemIssues } from '../InventoryDetailDrawer';\nimport FactsInfo from './FactsInfo';\n\nconst DetailWrapper = ({ children, hideInvLink, showTags, Wrapper, className, appName, ...props }) => {\n    const dispatch = useDispatch();\n    const store = useStore();\n    const isExpanded = useSelector(({ entityDetails: { isToggleOpened } }) => isToggleOpened);\n    const entity = useSelector(({ entityDetails: { entity } }) => entity);\n    const loaded = useSelector(({ entityDetails: { loaded } }) => loaded);\n\n    return <Drawer\n        className={`ins-c-inventory__drawer ${className || ''}`}\n        isExpanded={isExpanded}\n        onExpand={() => dispatch(toggleDrawer(true))}\n        {...props}\n    >\n        <DrawerContent\n            panelContent={\n                <DrawerPanelContent>\n                    <DrawerHead>\n                        <BasicInfo hideInvLink={ hideInvLink } showTags={ showTags } />\n                        <DrawerActions>\n                            <DrawerCloseButton onClick={() =>  dispatch(toggleDrawer(false))} />\n                        </DrawerActions>\n                    </DrawerHead>\n                    <DrawerPanelBody>\n                        <Stack className=\"ins-c-inventory__drawer--content\">\n                            <StackItem>\n                                <SystemIssues isOpened={isExpanded} />\n                            </StackItem>\n                            <StackItem isFilled className=\"ins-c-inventory__drawer--facts\">\n                                <FactsInfo entity={entity} loaded={loaded} />\n                                {\n                                    isExpanded &&\n                                    loaded &&\n                                    Wrapper &&\n                                    <Wrapper\n                                        store={store}\n                                        appName={appName}\n                                    />\n                                }\n                            </StackItem>\n                        </Stack>\n                    </DrawerPanelBody>\n                </DrawerPanelContent>\n            }\n        >\n            <DrawerContentBody>\n                {children}\n            </DrawerContentBody>\n        </DrawerContent>\n    </Drawer>;\n};\n\nDetailWrapper.propTypes = {\n    children: PropTypes.any,\n    hideInvLink: PropTypes.bool,\n    showTags: PropTypes.bool,\n    appName: PropTypes.oneOf([\n        'general_information',\n        'advisor',\n        'insights',\n        'compliance',\n        'vulnerabilities',\n        'patch'\n    ]),\n    className: PropTypes.string,\n    Wrapper: PropTypes.elementType\n};\n\nDetailWrapper.defaultProps = {\n    appName: 'general_information'\n};\n\nexport default DetailWrapper;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid, GridItem } from '@patternfly/react-core';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components/Skeleton';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport { CullingInformation } from '@redhat-cloud-services/frontend-components/CullingInfo';\nimport { getFact } from './helpers';\nimport InsightsDisconnected from '../../Utilities/InsightsDisconnected';\n\n/**\n * Basic information about system.\n * UUID and last seen.\n * @param {*} props entity and if entity is loaded.\n */\nconst FactsInfo = ({ entity, loaded, ...props }) => (\n    <Grid className=\"ins-entity-facts\" { ...props }>\n        <GridItem md={ 6 }>\n            <div>\n                <span>\n                    UUID:\n                </span>\n                <span>\n                    {\n                        loaded ?\n                            getFact(`id`, entity) || ' ' :\n                            <Skeleton size={ SkeletonSize.md } />\n                    }\n                </span>\n            </div>\n            <div>\n                <span>\n                    Last seen:\n                </span>\n                <span>\n                    {\n                        loaded ?\n                            (\n                                CullingInformation ? <CullingInformation\n                                    culled={getFact('culled_timestamp', entity)}\n                                    staleWarning={getFact('stale_warning_timestamp', entity)}\n                                    stale={getFact('stale_timestamp', entity)}\n                                    currDate={new Date()}\n                                >\n                                    <DateFormat date={getFact('updated', entity)} type=\"exact\" />\n                                </CullingInformation> : <DateFormat date={getFact('updated', entity)} type=\"exact\" />\n                            ) :\n                            <Skeleton size={ SkeletonSize.sm } />\n                    }\n                </span>\n                {loaded && !getFact('insights_id', entity) && <InsightsDisconnected />}\n            </div>\n        </GridItem>\n    </Grid>\n);\n\nFactsInfo.propTypes = {\n    loaded: PropTypes.bool,\n    entity: PropTypes.object\n};\n\nexport default FactsInfo;\n","import React, { Fragment } from 'react';\nimport InventoryDetail from './InventoryDetail';\nimport AppInfo from './AppInfo';\n\n/**\n * Fallback component that binds together App info and inventory Detail.\n * You should not use this component unless you know what you are doing.\n * @param {*} props any parent props, just passed to InventoryDetail and AppInfo.\n */\nexport const FullDetail = (props) => (\n    <Fragment>\n        <InventoryDetail { ...props } />\n        <AppInfo { ...props } />\n    </Fragment>\n);\n\nexport default FullDetail;\n","import React, { useEffect, Fragment } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { loadEntity, deleteEntity } from '../../store/actions';\nimport './InventoryDetail.scss';\nimport SystemNotFound from './SystemNotFound';\nimport TopBar from './TopBar';\nimport FactsInfo from './FactsInfo';\nimport { reloadWrapper } from '../../Utilities/index';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport ApplicationDetails from './ApplicationDetails';\nimport './InventoryDetail.scss';\n\n/**\n * Composit component which tangles together Topbar, facts, tags, app details and if system is found or not.\n * This component is connected to redux and reads `loaded` and `entity`.\n * @param {*} props additional features from parent component.\n */\nconst InventoryDetail = ({\n    actions,\n    showTags,\n    hideInvLink,\n    onTabSelect,\n    onBackToListClick,\n    showDelete,\n    appList,\n    showInventoryDrawer,\n    children\n}) => {\n    const { inventoryId } = useParams();\n    const dispatch = useDispatch();\n    const loaded = useSelector(({ entityDetails }) => entityDetails?.loaded || false);\n    const entity = useSelector(({ entityDetails }) => entityDetails?.entity);\n    useEffect(() => {\n        const currId = inventoryId || location.pathname.replace(/\\/$/, '').split('/').pop();\n        if (!entity || !(entity?.id === currId) || !loaded) {\n            dispatch(loadEntity(currId, { hasItems: true }, { showTags }));\n        }\n    }, []);\n    return <div className=\"ins-entity-detail\">\n        {loaded && !entity ? (\n            <SystemNotFound\n                onBackToListClick={onBackToListClick}\n                inventoryId={location.pathname.split('/')[location.pathname.split('/').length - 1]}\n            />\n        ) : <Fragment>\n            <TopBar\n                entity={ entity }\n                loaded={ loaded }\n                onBackToListClick={ onBackToListClick }\n                actions={ actions }\n                deleteEntity={ (systems, displayName, callback) => {\n                    const action = deleteEntity(systems, displayName);\n                    dispatch(reloadWrapper(action, callback));\n                } }\n                addNotification={ (payload) => dispatch(addNotification(payload))}\n                hideInvLink={ hideInvLink }\n                showInventoryDrawer={ showInventoryDrawer }\n                showDelete={ showDelete }\n                showTags={ showTags }\n            />\n            <FactsInfo loaded={ loaded } entity={ entity } />\n            {children}\n        </Fragment>\n        }\n        <ApplicationDetails onTabSelect={ onTabSelect } appList={ appList } />\n    </div>;\n};\n\nInventoryDetail.propTypes = {\n    hideInvLink: PropTypes.bool,\n    hideBack: PropTypes.bool,\n    showTags: PropTypes.bool,\n    showDelete: PropTypes.bool,\n    showInventoryDrawer: PropTypes.bool,\n    actions: PropTypes.arrayOf(PropTypes.shape({\n        title: PropTypes.node,\n        onClick: PropTypes.func,\n        key: PropTypes.string\n    })),\n    appList: PropTypes.arrayOf(PropTypes.shape({\n        title: PropTypes.node,\n        name: PropTypes.string,\n        pageId: PropTypes.string\n    })),\n    onTabSelect: PropTypes.func,\n    onBackToListClick: PropTypes.func,\n    children: PropTypes.node\n};\nInventoryDetail.defaultProps = {\n    actions: [],\n    hideInvLink: false,\n    showTags: false,\n    onBackToListClick: () => undefined\n};\n\nexport default InventoryDetail;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    EmptyState,\n    EmptyStateVariant,\n    EmptyStateIcon,\n    EmptyStateBody,\n    Title,\n    Button\n} from '@patternfly/react-core';\nimport CubesIcon from '@patternfly/react-icons/dist/js/icons/cubes-icon';\nimport { redirectToInventoryList } from './helpers';\n\n/**\n * Empty state when system was not found in inventory.\n * @param {*} params - inventoryId and onBackToListClick.\n */\nconst SystemNotFound = ({ inventoryId, onBackToListClick }) => {\n    return <EmptyState variant={EmptyStateVariant.full}>\n        <EmptyStateIcon icon={CubesIcon} />\n        <Title headingLevel=\"h5\" size=\"lg\">\n                System not found\n        </Title>\n        <EmptyStateBody>\n                System with ID {inventoryId} does not exist\n        </EmptyStateBody>\n        <Button\n            variant=\"primary\"\n            onClick={() => redirectToInventoryList(inventoryId, onBackToListClick)}\n        >\n                Back to previous page\n        </Button>\n    </EmptyState>;\n};\n\nSystemNotFound.propTypes = {\n    inventoryId: PropTypes.string,\n    onBackToListClick: PropTypes.func\n};\n\nexport default SystemNotFound;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { DeleteModal, TagsModal, TagWithDialog } from '../../Utilities/index';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components/Skeleton';\nimport {\n    Dropdown,\n    DropdownItem,\n    DropdownPosition,\n    DropdownToggle,\n    Title,\n    Button,\n    Flex,\n    FlexItem,\n    Split,\n    SplitItem\n} from '@patternfly/react-core';\nimport { redirectToInventoryList } from './helpers';\nimport { useDispatch } from 'react-redux';\nimport { toggleDrawer } from '../../store/actions';\n\n/**\n * Top inventory bar with title, buttons (namely remove from inventory and inventory detail button) and actions.\n * Remove from inventory button requires remove modal, which is included at bottom of this component.\n * @param {*} props namely entity and if entity is loaded.\n */\nconst TopBar = ({\n    entity,\n    loaded,\n    actions,\n    deleteEntity,\n    addNotification,\n    hideInvLink,\n    onBackToListClick,\n    showDelete,\n    showInventoryDrawer,\n    showTags\n}) => {\n    const dispatch = useDispatch();\n    const [isOpen, setIsOpen] = useState(false);\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const inventoryActions = [\n        ...(!hideInvLink ? [{\n            title: 'View system in Inventory',\n            component: 'a',\n            href: `./insights/inventory/${entity?.id}`\n        }] : []),\n        ... actions || []\n    ];\n\n    return (\n        <Split className=\"ins-c-inventory__detail--header\">\n            <SplitItem isFilled>\n                {\n                    loaded ? (\n                        <Flex>\n                            <FlexItem>\n                                <Title headingLevel=\"h1\" size='2xl'>{ entity && entity.display_name }</Title>\n                            </FlexItem>\n                            {\n                                showTags &&\n                                <FlexItem>\n                                    <TagWithDialog\n                                        count={ entity && entity.tags && entity.tags.length }\n                                        systemId={ entity && entity.id }\n                                    />\n                                    <TagsModal />\n                                </FlexItem>\n                            }\n                        </Flex>\n                    ) :\n                        <Skeleton size={ SkeletonSize.md } />\n                }\n            </SplitItem>\n            {\n                <SplitItem>\n                    {\n                        loaded ?\n                            <Flex>\n                                {showDelete && <FlexItem>\n                                    <Button\n                                        onClick={ () => setIsModalOpen(true) }\n                                        variant=\"secondary\">\n                                        Delete\n                                    </Button>\n                                </FlexItem>}\n                                { inventoryActions?.length > 0 && (\n                                    <FlexItem>\n                                        <Dropdown\n                                            onSelect={ () => setIsOpen(false) }\n                                            toggle={ <DropdownToggle\n                                                onToggle={(isOpen) => setIsOpen(isOpen)}\n                                            >Actions</DropdownToggle>}\n                                            isOpen={ isOpen }\n                                            position={ DropdownPosition.right }\n                                            dropdownItems={\n                                                inventoryActions.map(({ title, ...action }, key) => (\n                                                    <DropdownItem\n                                                        key={ key }\n                                                        component=\"button\"\n                                                        onClick={ (event) => action.onClick(event, action, action.key || key) }\n                                                        {...action}\n                                                    >\n                                                        { title }\n                                                    </DropdownItem>)\n                                                ) }\n                                        />\n                                    </FlexItem>)}\n                                <FlexItem>\n                                    {\n                                        showInventoryDrawer &&\n                                        <Button onClick={() => dispatch(toggleDrawer(true))}>\n                                            Show more information\n                                        </Button>\n                                    }\n                                </FlexItem>\n                            </Flex>\n                            :\n                            <Skeleton size={ SkeletonSize.lg } />\n                    }\n                </SplitItem>\n            }\n            { isModalOpen && (\n                <DeleteModal\n                    handleModalToggle={() => setIsModalOpen(!isModalOpen)}\n                    isModalOpen={isModalOpen}\n                    currentSytems={entity}\n                    onConfirm={() => {\n                        addNotification({\n                            id: 'remove-initiated',\n                            variant: 'warning',\n                            title: 'Delete operation initiated',\n                            description: `Removal of ${entity.display_name} started.`,\n                            dismissable: false\n                        });\n                        deleteEntity(\n                            [entity.id],\n                            entity.display_name,\n                            () => redirectToInventoryList(entity.id, onBackToListClick)\n                        );\n                        setIsModalOpen(false);\n                    }}\n                />)}\n        </Split>\n    );\n};\n\nTopBar.propTypes = {\n    entity: PropTypes.object,\n    loaded: PropTypes.bool,\n    showDelete: PropTypes.bool,\n    hideInvLink: PropTypes.bool,\n    showInventoryDrawer: PropTypes.bool,\n    showTags: PropTypes.bool,\n    actions: PropTypes.arrayOf(PropTypes.shape({\n        key: PropTypes.string,\n        title: PropTypes.node,\n        onClick: PropTypes.func\n    })),\n    deleteEntity: PropTypes.func,\n    addNotification: PropTypes.func,\n    onBackToListClick: PropTypes.func\n};\n\nTopBar.defaultProps = {\n    actions: [],\n    loaded: false,\n    hideInvLink: false,\n    showDelete: false,\n    showInventoryDrawer: false,\n    deleteEntity: () => undefined,\n    addNotification: () => undefined,\n    onBackToListClick: () => undefined\n};\n\nexport default TopBar;\n","import get from 'lodash/get';\n\nexport const redirectToInventoryList = (id, onBackToListClick) => {\n    if (onBackToListClick) {\n        onBackToListClick();\n    } else {\n        if (document.referrer) {\n            history.back();\n        } else {\n            location.href = location.pathname.replace(new RegExp(`${[id]}.*`, 'g'), '');\n        }\n    }\n};\n\nexport const getFact = (path, factDict) => get(factDict, path, undefined);\n","/* eslint-disable react/display-name */\n/* eslint-disable camelcase */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Chip, ChipGroup, Title, Split, SplitItem, Stack, StackItem } from '@patternfly/react-core';\nimport { useSelector } from 'react-redux';\n\nconst BasicInfo = ({ hideInvLink, showTags }) => {\n    const displayName = useSelector(({ entityDetails: { entity } }) => entity?.display_name);\n    const systemId = useSelector(({ entityDetails: { entity } }) => entity?.id);\n    const tags = useSelector(({ entityDetails: { entity } }) => entity?.tags);\n    return <Stack hasGutter>\n        <StackItem>\n            <Split>\n                <SplitItem isFilled>\n                    <Title headingLevel=\"h3\" size='xl'>{ displayName }</Title>\n                </SplitItem>\n                {!hideInvLink && <SplitItem>\n                    <a className='ins-c-entity-detail__inv-link' href={`./insights/inventory/${systemId}`}>Open in Inventory</a>\n                </SplitItem>}\n            </Split>\n        </StackItem>\n        {\n            showTags &&\n            <StackItem>\n                <Split hasGutter>\n                    <SplitItem>\n                        Tags:\n                    </SplitItem>\n                    <SplitItem>\n                        <ChipGroup>\n                            {tags?.length !== 0 ? tags?.map((item, key) => (\n                                <Chip key={key} isReadOnly>\n                                    {item?.namespace && `${item?.namespace}/`}\n                                    {item?.key}\n                                    {item?.value && `=${item?.value}`}\n                                </Chip>\n                            )) : 'No tags'}\n                        </ChipGroup>\n                    </SplitItem>\n                </Split>\n            </StackItem>\n        }\n    </Stack>;\n};\n\nBasicInfo.propTypes = {\n    hideInvLink: PropTypes.bool,\n    showTags: PropTypes.bool\n};\n\nBasicInfo.defaultProps = {\n    hideInvLink: false,\n    showTags: false\n};\n\nexport default BasicInfo;\n","/* eslint-disable react/prop-types */\n/* eslint-disable react/display-name */\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAdvisorData, getComplianceData, getPatchData, getVulnData } from '../../store/actions';\nimport { Title, Level, LevelItem,  Stack, StackItem } from '@patternfly/react-core';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components/Skeleton';\nimport BugIcon from '@patternfly/react-icons/dist/js/icons/bug-icon';\nimport EnhancementIcon from '@patternfly/react-icons/dist/js/icons/enhancement-icon';\nimport SecurityIcon from '@patternfly/react-icons/dist/js/icons/security-icon';\n\nconst SystemIssues = ({ isOpened }) => {\n    const dispatch = useDispatch();\n    const systemId = useSelector(({ entityDetails: { entity } }) => entity?.id);\n    const advisor = useSelector(({ entityDetails: { systemIssues } }) => systemIssues?.advisor);\n    const compliance = useSelector(({ entityDetails: { systemIssues } }) => systemIssues?.compliance);\n    const cve = useSelector(({ entityDetails: { systemIssues } }) => systemIssues?.cve);\n    const patch = useSelector(({ entityDetails: { systemIssues } }) => systemIssues?.patch);\n    useEffect(() => {\n        if (systemId && isOpened) {\n            dispatch(getAdvisorData(systemId));\n            dispatch(getComplianceData(systemId));\n            dispatch(getPatchData(systemId));\n            dispatch(getVulnData(systemId));\n        }\n    }, [systemId, isOpened]);\n\n    return <Stack hasGutter className=\"ins-c-inventory__drawer-system-issues\">\n        <StackItem>\n            <Title headingLevel=\"h4\" size='lg'>Top system issues</Title>\n        </StackItem>\n        <StackItem>\n            <Level>\n                <LevelItem>\n                    <Stack hasGutter>\n                        <StackItem className=\"ins-c-inventory__drawer--title\">\n                            Applicable CVEs\n                        </StackItem>\n                        <StackItem>\n                            {\n                                cve?.isLoaded ?\n                                    <Level hasGutter className=\"ins-c-inventory__drawer-cve\">\n                                        <LevelItem className=\"ins-m-critical\">\n                                            <a href={`/insights/vulnerability/systems/${systemId}?impact=7`}>\n                                                {cve?.critical?.count || 0} critical\n                                            </a>\n                                        </LevelItem>\n                                        <LevelItem className=\"ins-m-important\">\n                                            <a href={`/insights/vulnerability/systems/${systemId}?impact=5`}>\n                                                {cve?.important?.count || 0} important\n                                            </a>\n                                        </LevelItem>\n                                        <LevelItem className=\"ins-m-moderate\">\n                                            <a href={`/insights/vulnerability/systems/${systemId}?impact=4`}>\n                                                {cve?.moderate?.count || 0} moderate\n                                            </a>\n                                        </LevelItem>\n                                        <LevelItem className=\"ins-m-low\">\n                                            <a href={`/insights/vulnerability/systems/${systemId}?impact=2`}>\n                                                {cve?.low?.count || 0} low\n                                            </a>\n                                        </LevelItem>\n                                    </Level> :\n                                    <Skeleton size={ SkeletonSize.md } />\n                            }\n                        </StackItem>\n                    </Stack>\n                </LevelItem>\n                <LevelItem>\n                    <Stack hasGutter>\n                        <StackItem className=\"ins-c-inventory__drawer--title\">\n                            Applicable advisories\n                        </StackItem>\n                        <StackItem>\n                            {\n                                patch?.isLoaded ?\n                                    <Level hasGutter className=\"ins-c-inventory__drawer-patch\">\n                                        <LevelItem>\n                                            <a href={`/insights/patch/systems/${systemId}/?advisory_type=2`}>\n                                                <BugIcon /> {patch?.bug?.count}\n                                            </a>\n                                        </LevelItem>\n                                        <LevelItem className=\"ins-m-moderate\">\n                                            <a href={`/insights/patch/systems/${systemId}/?advisory_type=3`}>\n                                                <SecurityIcon /> {patch?.security?.count}\n                                            </a>\n                                        </LevelItem>\n                                        <LevelItem>\n                                            <a href={`/insights/patch/systems/${systemId}/?advisory_type=1`}>\n                                                <EnhancementIcon /> {patch?.enhancement?.count}\n                                            </a>\n                                        </LevelItem>\n                                    </Level> :\n                                    <Skeleton size={ SkeletonSize.md } />\n                            }\n                        </StackItem>\n                    </Stack>\n                </LevelItem>\n            </Level>\n        </StackItem>\n        <StackItem>\n            {\n                advisor?.isLoaded ?\n                    <span>\n                        <span className=\"ins-m-critical\">\n                            {advisor?.criticalCount?.length || 0} critical\n                        </span> recommendations in <a href={`./insights/advisor/systems/${systemId}`}>Advisor</a>\n                    </span> :\n                    <Skeleton size={ SkeletonSize.md } />\n            }\n        </StackItem>\n        {\n            compliance?.isLoaded ?\n                (compliance?.profiles &&\n                    <span>\n                        System above compliance threshold for <a\n                            href={'./insights/compliance/reports/'}\n                        >\n                            {compliance?.profiles?.length} {compliance?.profiles?.length > 1 ? 'policies' : 'policy'}\n                        </a>\n                    </span>\n                ) :\n                <Skeleton size={ SkeletonSize.md } />\n        }\n    </Stack>;\n};\n\nSystemIssues.propTypes = {\n    isOpened: PropTypes.bool\n};\n\nexport default SystemIssues;\n","import React, { useMemo, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { selectEntity, setSort } from '../../store/actions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport {\n    Table as PfTable,\n    TableBody,\n    TableHeader,\n    TableGridBreakpoint\n} from '@patternfly/react-table';\nimport { mergeArraysByKey } from '@redhat-cloud-services/frontend-components-utilities/helpers/helpers';\nimport { SkeletonTable } from '@redhat-cloud-services/frontend-components/SkeletonTable';\nimport NoSystemsTable from './NoSystemsTable';\nimport { createRows, createColumns } from './helpers';\nimport { defaultColumns } from '../../store/entities';\n\n/**\n * The actual (PF)table component. It calculates each cell and every table property.\n * It uses rows, columns and loaded from redux to show correct data.\n * When row is selected `selectEntity` is dispatched.\n * @param {*} props all props used in this component.\n */\nconst EntityTable = ({\n    hasItems,\n    expandable,\n    onExpandClick,\n    hasCheckbox,\n    actions,\n    variant,\n    sortBy,\n    tableProps,\n    onSort,\n    expandable: isExpandable,\n    onRowClick,\n    noDetail,\n    noSystemsTable = <NoSystemsTable />,\n    showTags,\n    columns: columnsProp,\n    disableDefaultColumns,\n    loaded,\n    columnsCounter\n}) => {\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const location = useLocation();\n    const rows = useSelector(({ entities: { rows } }) => rows);\n    const columnsRedux = useSelector(\n        ({ entities: { columns } }) => columns,\n        (next, prev) => next.every(\n            ({ key }, index) => prev.findIndex(({ key: prevKey }) => prevKey === key) === index\n        )\n    );\n\n    const onItemSelect = (_event, checked, rowId) => {\n        const row = isExpandable ? rows[rowId / 2] : rows[rowId];\n        dispatch(selectEntity(rowId === -1 ? 0 : row.id, checked));\n    };\n\n    const onSortChange = (_event, key, direction, index) => {\n        if (key !== 'action' && key !== 'health') {\n            dispatch(setSort({ index, key, direction }));\n        }\n\n        onSort?.({ index, key, direction });\n    };\n\n    const columns = useRef([]);\n    useMemo(() => {\n        if (typeof columnsProp === 'function') {\n            columns.current = columnsProp(defaultColumns);\n        } else if (columnsProp) {\n            const disabledColumns = Array.isArray(disableDefaultColumns) ? disableDefaultColumns : [];\n            const defaultColumnsFiltered = defaultColumns.filter(({ key }) =>\n                (key === 'tags' && showTags) || (key !== 'tags' && !disabledColumns.includes(key))\n            );\n            columns.current = mergeArraysByKey([\n                typeof disableDefaultColumns === 'boolean' && disableDefaultColumns ? [] : defaultColumnsFiltered,\n                columnsProp\n            ], 'key');\n        } else {\n            columns.current = columnsRedux;\n        }\n    }, [\n        showTags,\n        Array.isArray(disableDefaultColumns) ? disableDefaultColumns.join() : disableDefaultColumns,\n        Array.isArray(columnsProp) ?\n            columnsProp.map(({ key }) => key).join() :\n            typeof columnsProp === 'function' ? 'function' : columnsProp,\n        Array.isArray(columnsRedux) ? columnsRedux.map(({ key }) => key).join() : columnsRedux,\n        columnsCounter\n    ]);\n\n    const cells = loaded && createColumns(columns.current, hasItems, rows, isExpandable);\n\n    const defaultRowClick = (_event, key) => {\n        history.push(`${location.pathname}${location.pathname.slice(-1) === '/' ? '' : '/'}${key}`);\n    };\n\n    delete tableProps.RowWrapper;\n\n    return (\n        <React.Fragment>\n            { loaded && cells ?\n                PfTable && <PfTable\n                    variant={ variant }\n                    aria-label=\"Host inventory\"\n                    cells={ cells }\n                    rows={ createRows(\n                        rows,\n                        columns.current,\n                        {\n                            actions,\n                            expandable,\n                            loaded,\n                            onRowClick: onRowClick || defaultRowClick,\n                            noDetail,\n                            sortBy,\n                            noSystemsTable\n                        })\n                    }\n                    gridBreakPoint={\n                        columns.current?.length > 5 ?\n                            TableGridBreakpoint.gridLg :\n                            TableGridBreakpoint.gridMd\n                    }\n                    className=\"ins-c-entity-table\"\n                    onSort={ (event, index, direction) => {\n                        onSortChange(\n                            event,\n                            cells?.[index - Boolean(hasCheckbox) - Boolean(expandable)]?.key,\n                            direction,\n                            index\n                        );\n                    } }\n                    sortBy={ {\n                        index: cells?.findIndex(item => sortBy?.key === item.key) + Boolean(hasCheckbox) + Boolean(expandable),\n                        direction: sortBy?.direction\n                    } }\n                    { ...{\n                        ...hasCheckbox && rows?.length !== 0 ? { onSelect: onItemSelect } : {},\n                        ...expandable ? { onCollapse: onExpandClick } : {},\n                        ...actions && rows?.length > 0 && { actions }\n                    } }\n                    { ...tableProps }\n                >\n                    <TableHeader />\n                    <TableBody />\n                </PfTable> :\n                <SkeletonTable colSize={ columns.current?.length || 3 } rowSize={ 15 } />\n            }\n        </React.Fragment>\n    );\n};\n\nEntityTable.propTypes = {\n    variant: PropTypes.oneOf(['compact']),\n    expandable: PropTypes.bool,\n    onExpandClick: PropTypes.func,\n    onSort: PropTypes.func,\n    hasCheckbox: PropTypes.bool,\n    showActions: PropTypes.bool,\n    hasItems: PropTypes.bool,\n    showHealth: PropTypes.bool,\n    sortBy: PropTypes.shape({\n        key: PropTypes.string,\n        direction: PropTypes.oneOf(['asc', 'desc'])\n    }),\n    tableProps: PropTypes.shape({\n        [PropTypes.string]: PropTypes.any,\n        RowWrapper: PropTypes.elementType\n    }),\n    onRowClick: PropTypes.func,\n    showTags: PropTypes.bool,\n    noSystemsTable: PropTypes.node,\n    disableDefaultColumns: PropTypes.oneOfType([PropTypes.bool, PropTypes.arrayOf(PropTypes.string)]),\n    loaded: PropTypes.bool,\n    columnsCounter: PropTypes.number,\n    columns: PropTypes.oneOfType([PropTypes.array, PropTypes.func]),\n    isLoaded: PropTypes.bool,\n    actions: PropTypes.array,\n    noDetail: PropTypes.any\n};\n\nEntityTable.defaultProps = {\n    loaded: false,\n    showHealth: false,\n    expandable: false,\n    hasCheckbox: true,\n    showActions: false,\n    rows: [],\n    onExpandClick: () => undefined,\n    tableProps: {}\n};\n\nexport default EntityTable;\n","/* eslint-disable camelcase */\nimport React, { Fragment, useEffect, useCallback, useReducer } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components/Skeleton';\nimport { tagsFilterState, tagsFilterReducer, mapGroups } from '@redhat-cloud-services/frontend-components/FilterHooks';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport { fetchAllTags, clearFilters, toggleTagModal } from '../../store/actions';\nimport debounce from 'lodash/debounce';\nimport flatMap from 'lodash/flatMap';\nimport {\n    TagsModal,\n    TEXT_FILTER,\n    reduceFilters,\n    TEXTUAL_CHIP,\n    STALE_CHIP,\n    REGISTERED_CHIP,\n    TAG_CHIP,\n    arrayToSelection\n} from '../../Utilities/index';\nimport { onDeleteFilter, onDeleteTag } from './helpers';\nimport {\n    useStalenessFilter,\n    useTextFilter,\n    useRegisteredWithFilter,\n    useTagsFilter,\n    textFilterState,\n    textFilterReducer,\n    filtersReducer,\n    stalenessFilterReducer,\n    stalenessFilterState,\n    registeredWithFilterReducer,\n    registeredWithFilterState\n} from '../filters';\n\n/**\n * Table toolbar used at top of inventory table.\n * It uses couple of filters and acces redux data along side all passed props.\n * @param {*} props used in this component.\n */\nconst EntityTableToolbar = ({\n    total,\n    page,\n    perPage,\n    filterConfig,\n    hasItems,\n    children,\n    actionsConfig,\n    activeFiltersConfig,\n    showTags,\n    items,\n    sortBy,\n    customFilters,\n    hasAccess,\n    bulkSelect,\n    hideFilters,\n    paginationProps,\n    onRefreshData,\n    loaded,\n    showTagModal,\n    ...props\n}) => {\n    const dispatch = useDispatch();\n    const reducer = useReducer(filtersReducer([\n        textFilterReducer,\n        stalenessFilterReducer,\n        registeredWithFilterReducer,\n        tagsFilterReducer\n    ]), {\n        ...textFilterState,\n        ...stalenessFilterState,\n        ...registeredWithFilterState,\n        ...tagsFilterState\n    });\n    const filters = useSelector(({ entities: { activeFilters } }) => activeFilters);\n    const allTagsLoaded = useSelector(({ entities: { allTagsLoaded } }) => allTagsLoaded);\n    const allTags = useSelector(({ entities: { allTags } }) => allTags);\n    const additionalTagsCount = useSelector(({ entities: { additionalTagsCount } }) => additionalTagsCount);\n    const [nameFilter, nameChip, textFilter, setTextFilter] = useTextFilter(reducer);\n    const [stalenessFilter, stalenessChip, staleFilter, setStaleFilter] = useStalenessFilter(reducer);\n    const [registeredFilter, registeredChip, registeredWithFilter, setRegisteredWithFilter] = useRegisteredWithFilter(reducer);\n    const {\n        tagsFilter,\n        tagsChip,\n        selectedTags,\n        setSelectedTags,\n        filterTagsBy,\n        seFilterTagsBy\n    } = useTagsFilter(allTags, allTagsLoaded, additionalTagsCount, () => dispatch(toggleTagModal(true)), reducer);\n\n    /**\n     * Debounced function for fetching all tags.\n     */\n    const debounceGetAllTags = useCallback(debounce((config, options) => {\n        if (showTags && !hasItems && hasAccess) {\n            dispatch(fetchAllTags(config, {\n                ...customFilters,\n                ...options\n            }));\n        }\n    }, 800), [customFilters?.tags]);\n\n    /**\n     * Function to dispatch load systems and fetch all tags.\n     */\n    const onRefreshDataInner = useCallback((options) => {\n        if (hasAccess) {\n            onRefreshData(options);\n            if (showTags && !hasItems) {\n                dispatch(fetchAllTags(filterTagsBy, { ...customFilters, filters: options?.filters || filters }));\n            }\n        }\n    }, [customFilters?.tags]);\n\n    const enabledFilters = {\n        name: !(hideFilters.all && hideFilters.name !== false) && !hideFilters.name,\n        stale: !(hideFilters.all && hideFilters.stale !== false) && !hideFilters.stale,\n        registeredWith: !(hideFilters.all && hideFilters.registeredWith !== false) && !hideFilters.registeredWith,\n        tags: !(hideFilters.all && hideFilters.tags !== false) && !hideFilters.tags\n    };\n\n    /**\n     * Function used to update data, it either calls `onRefresh` from props or dispatches `onRefreshData`.\n     * `onRefresh` function takes two parameters\n     *   * entire config with new changes.\n     *   * callback to update data.\n     * @param {*} config new config to fetch data.\n     */\n    const updateData = (config) => {\n        if (hasAccess) {\n            onRefreshDataInner(config);\n        }\n    };\n\n    /**\n     * Debounced `updateData` function.\n     */\n    const debouncedRefresh = useCallback(debounce((config) => updateData(config), 800), [sortBy?.key, sortBy?.direction]);\n\n    /**\n     * Component did mount effect to calculate actual filters from redux.\n     */\n    useEffect(() => {\n        const { textFilter, tagFilters, staleFilter, registeredWithFilter } = reduceFilters(filters);\n        debouncedRefresh();\n        enabledFilters.name && setTextFilter(textFilter);\n        enabledFilters.stale && setStaleFilter(staleFilter);\n        enabledFilters.registeredWith && setRegisteredWithFilter(registeredWithFilter);\n        enabledFilters.tags && setSelectedTags(tagFilters);\n    }, []);\n\n    /**\n     * Function used to change text filter.\n     * @param {*} value new value used for filtering.\n     * @param {*} debounced if debounce function should be used.\n     */\n    const onSetTextFilter = (value, debounced = true) => {\n        const trimmedValue = value.trim();\n\n        const textualFilter = filters?.find(oneFilter => oneFilter.value === TEXT_FILTER);\n        if (textualFilter) {\n            textualFilter.filter = trimmedValue;\n        } else {\n            filters?.push({ value: TEXT_FILTER, filter: trimmedValue });\n        }\n\n        const refresh = debounced ? debouncedRefresh : updateData;\n        refresh({ page: 1, perPage, filters });\n    };\n\n    /**\n     * General function to apply filter (excluding tag and text).\n     * @param {*} value new value to be set of specified filter.\n     * @param {*} filterKey which filter should be changed.\n     * @param {*} refresh refresh callback function.\n     */\n    const onSetFilter = (value, filterKey, refresh) => {\n        const newFilters = [\n            ...filters?.filter(oneFilter => !Object.prototype.hasOwnProperty.call(oneFilter, filterKey)),\n            { [filterKey]: value }\n        ];\n        refresh({ page: 1, perPage, filters: newFilters });\n    };\n\n    const shouldReload = page && perPage && filters && (!hasItems || items) && loaded;\n\n    useEffect(() => {\n        if (shouldReload && showTags && enabledFilters.tags) {\n            debounceGetAllTags(filterTagsBy, { filters });\n        }\n    }, [filterTagsBy, customFilters?.tags]);\n\n    useEffect(() => {\n        if (shouldReload && enabledFilters.name) {\n            onSetTextFilter(textFilter, true);\n        }\n    }, [textFilter]);\n\n    useEffect(() => {\n        if (shouldReload && enabledFilters.stale) {\n            onSetFilter(staleFilter, 'staleFilter', debouncedRefresh);\n        }\n    }, [staleFilter]);\n\n    useEffect(() => {\n        if (shouldReload && enabledFilters.registeredWith) {\n            onSetFilter(registeredWithFilter, 'registeredWithFilter', debouncedRefresh);\n        }\n    }, [registeredWithFilter]);\n\n    useEffect(() => {\n        if (shouldReload && showTags && enabledFilters.tags) {\n            onSetFilter(mapGroups(selectedTags), 'tagFilters', debouncedRefresh);\n        }\n    }, [selectedTags]);\n\n    /**\n     * Mapper to simplify removing of any filter.\n     */\n    const deleteMapper = {\n        [TEXTUAL_CHIP]: () => setTextFilter(''),\n        [TAG_CHIP]: (deleted) => setSelectedTags(\n            onDeleteTag(\n                deleted,\n                selectedTags,\n                (selectedTags) => onSetFilter(mapGroups(selectedTags), 'tagFilters', updateData)\n            )\n        ),\n        [STALE_CHIP]: (deleted) => setStaleFilter(onDeleteFilter(deleted, staleFilter)),\n        [REGISTERED_CHIP]: (deleted) => setRegisteredWithFilter(\n            onDeleteFilter(deleted, registeredWithFilter)\n        )\n    };\n\n    /**\n     * Function to create active filters chips.\n     */\n    const constructFilters = () => {\n        return {\n            filters: [\n                ...(showTags && !hasItems && enabledFilters.tags) ? tagsChip : [],\n                ...!hasItems && enabledFilters.name ? nameChip : [],\n                ...!hasItems && enabledFilters.stale ? stalenessChip : [],\n                ...!hasItems && enabledFilters.registeredWith ? registeredChip : [],\n                ...activeFiltersConfig?.filters || []\n            ],\n            onDelete: (e, [deleted, ...restDeleted], isAll) => {\n                if (isAll) {\n                    updateData({ page: 1, filters: [] });\n                    dispatch(clearFilters());\n                    enabledFilters.name && setTextFilter('');\n                    enabledFilters.stale && setStaleFilter([]);\n                    enabledFilters.registeredWith && setRegisteredWithFilter([]);\n                    enabledFilters.tags && setSelectedTags({});\n                } else if (deleted.type) {\n                    deleteMapper[deleted.type](deleted);\n                }\n\n                activeFiltersConfig &&\n                activeFiltersConfig.onDelete &&\n                activeFiltersConfig.onDelete(e, [deleted, ...restDeleted], isAll);\n            }\n        };\n    };\n\n    /**\n     * Function to calculate if any filter is applied.\n     */\n    const isFilterSelected = () => {\n        return textFilter.length > 0 || flatMap(\n            Object.values(selectedTags),\n            (value) => Object.values(value).filter(Boolean)\n        ).filter(Boolean).length > 0 ||\n        (staleFilter?.length > 0) ||\n        (registeredWithFilter?.length > 0) ||\n        (activeFiltersConfig?.filters?.length > 0);\n    };\n\n    const inventoryFilters = [\n        ...!hasItems ? [\n            ...enabledFilters.name ? [nameFilter] : [],\n            ...enabledFilters.stale ? [stalenessFilter] : [],\n            ...enabledFilters.registeredWith ? [registeredFilter] : [],\n            ...showTags && enabledFilters.tags ? [tagsFilter] : []\n        ] : [],\n        ...filterConfig?.items || []\n    ];\n\n    return <Fragment>\n        <PrimaryToolbar\n            {...props}\n            {...bulkSelect && {\n                bulkSelect: {\n                    ...bulkSelect,\n                    isDisabled: bulkSelect?.isDisabled || !hasAccess\n                }\n            }}\n            className={`ins-c-inventory__table--toolbar ${\n                hasItems || !inventoryFilters.length ? 'ins-c-inventory__table--toolbar-has-items' : ''\n            }`}\n            {...inventoryFilters?.length > 0 && {\n                filterConfig: {\n                    ...filterConfig || {},\n                    isDisabled: !hasAccess,\n                    items: inventoryFilters?.map(filter => ({\n                        ...filter,\n                        filterValues: {\n                            placeholder: filter?.filterValues?.placeholder || `Filter by ${filter?.label?.toLowerCase()}`,\n                            ...filter?.filterValues,\n                            isDisabled: !hasAccess\n                        }\n                    }))\n                }\n            }}\n            { ...isFilterSelected() && hasAccess && { activeFiltersConfig: constructFilters() } }\n            actionsConfig={ loaded ? actionsConfig : null }\n            pagination={loaded ? {\n                page,\n                itemCount: !hasAccess ? 0 : total,\n                isDisabled: !hasAccess,\n                perPage,\n                onSetPage: (_e, newPage) => onRefreshData({ page: newPage }),\n                onPerPageSelect: (_e, newPerPage) => onRefreshData({ page: 1, per_page: newPerPage }),\n                ...paginationProps\n            } : <Skeleton size={SkeletonSize.lg} />}\n        >\n            { children }\n        </PrimaryToolbar>\n        {\n            (showTags || enabledFilters.tags || showTagModal) && <TagsModal\n                customFilters={customFilters}\n                filterTagsBy={filterTagsBy}\n                onApply={(selected) => setSelectedTags(arrayToSelection(selected))}\n                onToggleModal={() => seFilterTagsBy('')}\n            />\n        }\n    </Fragment>;\n};\n\nEntityTableToolbar.propTypes = {\n    showTags: PropTypes.bool,\n    hasAccess: PropTypes.bool,\n    filterConfig: PrimaryToolbar.propTypes.filterConfig,\n    total: PropTypes.number,\n    filters: PropTypes.array,\n    hasItems: PropTypes.bool,\n    page: PropTypes.number,\n    onClearFilters: PropTypes.func,\n    toggleTagModal: PropTypes.func,\n    perPage: PropTypes.number,\n    children: PropTypes.node,\n    pagination: PrimaryToolbar.propTypes.pagination,\n    actionsConfig: PrimaryToolbar.propTypes.actionsConfig,\n    activeFiltersConfig: PrimaryToolbar.propTypes.activeFiltersConfig,\n    onRefreshData: PropTypes.func,\n    customFilters: PropTypes.shape({\n        tags: PropTypes.oneOfType([\n            PropTypes.object,\n            PropTypes.arrayOf(PropTypes.string)\n        ])\n    }),\n    hideFilters: PropTypes.shape({\n        tags: PropTypes.bool,\n        name: PropTypes.bool,\n        registeredWith: PropTypes.bool,\n        stale: PropTypes.bool,\n        all: PropTypes.bool\n    }),\n    paginationProps: PropTypes.object,\n    loaded: PropTypes.bool,\n    onRefresh: PropTypes.func,\n    hasCheckbox: PropTypes.bool,\n    isLoaded: PropTypes.bool,\n    items: PropTypes.array,\n    sortBy: PropTypes.object,\n    bulkSelect: PropTypes.object,\n    showTagModal: PropTypes.bool,\n    disableDefaultColumns: PropTypes.any\n};\n\nEntityTableToolbar.defaultProps = {\n    showTags: false,\n    hasAccess: true,\n    activeFiltersConfig: {},\n    filters: [],\n    hideFilters: {}\n};\n\nexport default EntityTableToolbar;\n","/* eslint-disable react/display-name */\nimport React, { useEffect, useRef } from 'react';\nimport { useSelector } from 'react-redux';\nimport InventoryEntityTable from './EntityTable';\nimport { Grid, GridItem } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport './InventoryList.scss';\nimport isEqual from 'lodash/isEqual';\nimport AccessDenied from '../../Utilities/AccessDenied';\n\nconst convertItem = ({ children, isOpen, ...item }) => item;\n\n/**\n * Component that works as a side channel for consumers to notify inventory of new data changes.\n */\nconst ContextInventoryList = ({ showHealth, onRefreshData, ignoreRefresh, ...props }) => {\n    const prevItems = useRef(props.items);\n    const prevSortBy = useRef(props.sortBy);\n\n    useEffect(() => {\n        if (props.hasItems) {\n            onRefreshData({}, ignoreRefresh);\n        }\n    }, []);\n\n    /**\n     * Function to calculate for new changes, this function limits re-renders by checking if previous items are\n     * same as new items.\n     * If items are not passed, it only checks for props sortBy.\n     * @param {*} prevProps previous props - items, hasItems, sortBy.\n     */\n    useEffect(() => {\n        if (props.hasItems && !isEqual(prevItems.current.map(convertItem), props.items.map(convertItem))) {\n            prevItems.current = props.items;\n            onRefreshData({}, ignoreRefresh);\n        }\n\n        if (!props.hasItems && !isEqual(prevSortBy.current, props.sortBy)) {\n            prevSortBy.current = props.sortBy;\n            onRefreshData({}, ignoreRefresh);\n        }\n    });\n\n    return (<Grid gutter=\"sm\" className=\"ins-inventory-list\">\n        <GridItem span={ 12 }>\n            <InventoryEntityTable { ...props } onRefreshData={onRefreshData} />\n        </GridItem>\n    </Grid>);\n};\n\n/**\n * Component that consumes active filters and passes them down to component.\n */\nconst InventoryList = React.forwardRef(({ hasAccess, onRefreshData, ...props }, ref) => {\n    const activeFilters = useSelector(({ entities: { activeFilters } }) => activeFilters);\n\n    if (ref) {\n        ref.current = {\n            onRefreshData: (params, disableRefresh = true) => onRefreshData(params, disableRefresh)\n        };\n    }\n\n    return !hasAccess ?\n        <div className=\"ins-c-inventory__no-access\">\n            <AccessDenied showReturnButton={false} />\n        </div>\n        : (\n            <ContextInventoryList\n                { ...props }\n                activeFilters={ activeFilters }\n                onRefreshData={ onRefreshData }\n            />\n        );\n});\n\nContextInventoryList.propTypes = {\n    ...InventoryList.propTypes,\n    setRefresh: PropTypes.func,\n    onRefreshData: PropTypes.func,\n    ignoreRefresh: PropTypes.bool\n};\nContextInventoryList.defaultProps = {\n    perPage: 50,\n    page: 1,\n    ignoreRefresh: true\n};\nInventoryList.propTypes = {\n    showTags: PropTypes.bool,\n    filterEntities: PropTypes.func,\n    loadEntities: PropTypes.func,\n    showHealth: PropTypes.bool,\n    page: PropTypes.number,\n    perPage: PropTypes.number,\n    sortBy: PropTypes.shape({\n        key: PropTypes.string,\n        direction: PropTypes.string\n    }),\n    items: PropTypes.arrayOf(PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.shape({\n            id: PropTypes.string.isRequired\n        }),\n        PropTypes.shape({\n            account: PropTypes.any,\n            isOpen: PropTypes.bool,\n            title: PropTypes.node\n        })\n    ])),\n    entities: PropTypes.arrayOf(PropTypes.any),\n    customFilters: PropTypes.shape({\n        tags: PropTypes.oneOfType([\n            PropTypes.object,\n            PropTypes.arrayOf(PropTypes.string)\n        ])\n    }),\n    getEntities: PropTypes.func,\n    hideFilters: PropTypes.shape({\n        tags: PropTypes.bool,\n        name: PropTypes.bool,\n        registeredWith: PropTypes.bool,\n        stale: PropTypes.bool\n    }),\n    onRefreshData: PropTypes.func\n};\n\nInventoryList.defaultProps = {\n    hasAccess: true\n};\n\nexport default InventoryList;\n","/* eslint-disable camelcase */\nimport React, { Fragment, forwardRef, useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector, shallowEqual, useStore, useDispatch } from 'react-redux';\nimport EntityTableToolbar from './EntityTableToolbar';\nimport { TableToolbar } from '@redhat-cloud-services/frontend-components/TableToolbar';\nimport { ErrorState } from '@redhat-cloud-services/frontend-components/ErrorState';\nimport InventoryList from './InventoryList';\nimport Pagination from './Pagination';\nimport AccessDenied from '../../Utilities/AccessDenied';\nimport { loadSystems } from '../../Utilities/index';\nimport isEqual from 'lodash/isEqual';\nimport { entitiesLoading } from '../../store/actions';\n\n/**\n * A helper function to store props and to always return the latest state.\n * For example, EntityTableToolbar wraps OnRefreshData in a callback, so we need this\n * to get the latest props and not the props at the time of when the function is\n * being wrapped in callback.\n */\nconst propsCache = () => {\n    let cache = {};\n\n    const updateProps = (props) => { cache = props; };\n\n    const getProps = () => cache;\n\n    return { updateProps, getProps };\n};\n\n/**\n * This component is used to combine all essential components together:\n *   * EntityTableToolbar - to control top toolbar.\n *   * InventoryList - to allow consumers to change data from outside and contains actual inventory table.\n *   * Pagination - bottom pagination.\n * It also calculates pagination and sortBy from props or from store if consumer passed items or not.\n */\n\nconst InventoryTable = forwardRef(({ // eslint-disable-line react/display-name\n    onRefresh,\n    children,\n    inventoryRef,\n    items,\n    total: propsTotal,\n    page: propsPage,\n    perPage: propsPerPage,\n    filters,\n    showTags,\n    sortBy: propsSortBy,\n    customFilters,\n    hasAccess = true,\n    isFullView = false,\n    getEntities,\n    hideFilters,\n    paginationProps,\n    errorState = <ErrorState />,\n    autoRefresh,\n    isLoaded,\n    initialLoading,\n    ignoreRefresh,\n    showTagModal,\n    ...props\n}, ref) => {\n    const hasItems = Boolean(items);\n    const error = useSelector(({ entities }) => (\n        entities?.error\n    ));\n    const page = useSelector(({ entities: { page: invPage } }) => (\n        hasItems ? propsPage : (invPage || 1)\n    )\n    , shallowEqual);\n    const perPage = useSelector(({ entities: { perPage: invPerPage } }) => (\n        hasItems ? propsPerPage : (invPerPage || 50)\n    )\n    , shallowEqual);\n    const total = useSelector(({ entities: { total: invTotal } }) => {\n        if (hasItems) {\n            return propsTotal !== undefined ? propsTotal : items?.length;\n        }\n\n        return invTotal;\n    }, shallowEqual);\n    const pagination = {\n        page,\n        perPage,\n        total\n    };\n    const sortBy = useSelector(({ entities: { sortBy: invSortBy } }) => (\n        hasItems ? propsSortBy : invSortBy\n    ), shallowEqual);\n\n    const reduxLoaded = useSelector(({ entities }) => (\n        hasItems && isLoaded !== undefined ? (isLoaded && entities?.loaded) : entities?.loaded\n    ));\n\n    /**\n     * If initialLoading is set to true, then the component should be in loading state until\n     * entities.loaded is false (and then we can use the redux loading state and forget this one)\n     */\n    const [initialLoadingActive, disableInitialLoading] = useState(initialLoading);\n    useEffect(() => {\n        if (!reduxLoaded) {\n            disableInitialLoading();\n        }\n    }, [reduxLoaded]);\n    const loaded = reduxLoaded && !initialLoadingActive;\n\n    const dispatch = useDispatch();\n    const store = useStore();\n\n    const cache = useRef(propsCache());\n    cache.current.updateProps({\n        page,\n        perPage,\n        items,\n        sortBy,\n        hideFilters,\n        showTags,\n        getEntities,\n        customFilters,\n        hasItems\n    });\n\n    /**\n     * If consumer wants to change data they can call this function via component ref.\n     * @param {*} options new options to be applied, like pagination, filters, etc.\n     */\n    const onRefreshData = (options = {}, disableOnRefresh) => {\n        const { activeFilters } = store.getState().entities;\n        const cachedProps = cache.current?.getProps() || {};\n\n        // eslint-disable-next-line camelcase\n        const currPerPage = options?.per_page || options?.perPage || cachedProps.perPage;\n\n        const params = {\n            page: cachedProps.page,\n            per_page: currPerPage,\n            items: cachedProps.items,\n            sortBy: cachedProps.sortBy,\n            hideFilters: cachedProps.hideFilters,\n            filters: activeFilters,\n            hasItems: cachedProps.hasItems,\n            ...cachedProps.customFilters,\n            ...options\n        };\n\n        if (onRefresh && !disableOnRefresh) {\n            dispatch(entitiesLoading());\n            onRefresh(params, (options) => {\n                dispatch(\n                    loadSystems(\n                        { ...params, ...options },\n                        cachedProps.showTags,\n                        cachedProps.getEntities\n                    )\n                );\n            });\n        } else {\n            dispatch(\n                loadSystems(\n                    params,\n                    cachedProps.showTags,\n                    cachedProps.getEntities\n                )\n            );\n        }\n    };\n\n    const prevFilters = useRef(customFilters);\n    useEffect(() => {\n        if (autoRefresh && !isEqual(prevFilters.current, customFilters)) {\n            onRefreshData({ page: 1 });\n            prevFilters.current = customFilters;\n        }\n    });\n\n    return (\n        (hasAccess === false && isFullView) ?\n            <AccessDenied\n                title=\"This application requires Inventory permissions\"\n                description={<div>\n                    To view the content of this page, you must be granted\n                    a minimum of inventory permissions from your Organization Administrator.\n                </div>}\n            /> :\n            !error ? <Fragment>\n                <EntityTableToolbar\n                    { ...props }\n                    customFilters={customFilters}\n                    hasAccess={hasAccess}\n                    items={ items }\n                    filters={ filters }\n                    hasItems={ hasItems }\n                    total={ pagination.total }\n                    page={ pagination.page }\n                    perPage={ pagination.perPage }\n                    showTags={ showTags }\n                    onRefreshData={onRefreshData}\n                    sortBy={ sortBy }\n                    hideFilters={hideFilters}\n                    paginationProps={paginationProps}\n                    loaded={loaded}\n                    showTagModal={showTagModal}\n                >\n                    { children }\n                </EntityTableToolbar>\n                <InventoryList\n                    { ...props }\n                    customFilters={customFilters}\n                    hasAccess={hasAccess}\n                    ref={ref}\n                    hasItems={ hasItems }\n                    items={ items }\n                    page={ pagination.page }\n                    sortBy={ sortBy }\n                    perPage={ pagination.perPage }\n                    showTags={ showTags }\n                    onRefreshData={onRefreshData}\n                    loaded={loaded}\n                    ignoreRefresh={ignoreRefresh}\n                />\n                <TableToolbar isFooter className=\"ins-c-inventory__table--toolbar\">\n                    <Pagination\n                        hasAccess={hasAccess}\n                        isFull\n                        total={ pagination.total }\n                        page={ pagination.page }\n                        perPage={ pagination.perPage }\n                        hasItems={ hasItems }\n                        onRefreshData={onRefreshData}\n                        paginationProps={paginationProps}\n                        loaded={loaded}\n                    />\n                </TableToolbar>\n            </Fragment> : errorState\n    );\n});\n\nInventoryTable.propTypes = {\n    autoRefresh: PropTypes.bool,\n    onRefresh: PropTypes.func,\n    children: PropTypes.node,\n    inventoryRef: PropTypes.object,\n    items: PropTypes.array,\n    total: PropTypes.number,\n    page: PropTypes.number,\n    perPage: PropTypes.number,\n    filters: PropTypes.any,\n    showTags: PropTypes.bool,\n    sortBy: PropTypes.object,\n    customFilters: PropTypes.any,\n    hasAccess: PropTypes.bool,\n    isFullView: PropTypes.bool,\n    getEntities: PropTypes.func,\n    hideFilters: PropTypes.object,\n    paginationProps: PropTypes.object,\n    errorState: PropTypes.node,\n    isLoaded: PropTypes.bool,\n    initialLoading: PropTypes.bool,\n    ignoreRefresh: PropTypes.bool,\n    showTagModal: PropTypes.bool\n};\n\nexport default InventoryTable;\n","import React from 'react';\nimport { EmptyTable } from '@redhat-cloud-services/frontend-components/EmptyTable';\nimport { EmptyStateBody, EmptyState, EmptyStateVariant, Title, Bullseye } from '@patternfly/react-core';\n\n/**\n * Empty state stable when no systems are found.\n */\nconst NoSystemsTable = () => (\n    <EmptyTable>\n        <Bullseye>\n            <EmptyState variant={ EmptyStateVariant.full }>\n                <Title headingLevel=\"h5\" size=\"lg\">\n                    No matching systems found\n                </Title>\n                <EmptyStateBody>\n                    This filter criteria matches no systems. <br /> Try changing your filter settings.\n                </EmptyStateBody>\n            </EmptyState>\n        </Bullseye>\n    </EmptyTable>\n);\n\nexport default NoSystemsTable;\n","/* eslint-disable camelcase */\nimport React from 'react';\nimport { Pagination, PaginationVariant } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\n\n/**\n * Bottom pagination used in table. It can remember what page user is on if user entered the page number in input.\n */\nconst FooterPagination = ({\n    total,\n    page,\n    perPage,\n    direction,\n    isFull,\n    hasAccess,\n    paginationProps,\n    onRefreshData,\n    loaded\n}) => {\n    /**\n     * Thi method sets new page and combines previous props to apply sort, filters etc.\n     * @param {*} event html event to figure if target was input.\n     * @param {*} page current page to change to.\n     */\n    const onSetPage = (_event, pageArg) => onRefreshData({ page: pageArg });\n\n    /**\n     * This method changes per page, it automatically sets page to first one.\n     * It also applies previous sort, filters, etc.\n     * @param {*} _event event is now not used.\n     * @param {*} perPage new perPage set by user.\n     */\n    const onPerPageSelect = (_event, perPageArg) => onRefreshData({ page: 1, per_page: perPageArg });\n\n    return (loaded || !hasAccess) ? (\n        <Pagination\n            { ...isFull && {\n                variant: PaginationVariant.bottom\n            } }\n            isDisabled={!hasAccess}\n            itemCount={ total }\n            page={ page }\n            perPage={ perPage }\n            dropDirection={ direction }\n            onSetPage={ onSetPage }\n            onPerPageSelect={ onPerPageSelect }\n            {...paginationProps}\n        />\n    ) : null;\n};\n\nFooterPagination.propTypes = {\n    perPage: PropTypes.number,\n    total: PropTypes.number,\n    page: PropTypes.number,\n    isFull: PropTypes.bool,\n    hasAccess: PropTypes.bool,\n    direction: PropTypes.string,\n    paginationProps: PropTypes.object,\n    loaded: PropTypes.bool,\n    onRefreshData: PropTypes.func.isRequired\n};\n\nFooterPagination.defaultProps = {\n    total: 0,\n    isFull: false,\n    direction: 'up',\n    hasAccess: true\n};\n\nexport default FooterPagination;\n","import React from 'react';\nimport { cellWidth, sortable, expandable } from '@patternfly/react-table';\nimport get from 'lodash/get';\nimport flatten from 'lodash/flatten';\nimport TitleColumn from './TitleColumn';\nimport { Fragment } from 'react';\n\nexport const buildCells = (item, columns, extra) => {\n    return columns.map(({ key, composed, renderFunc }) => {\n        // eslint-disable-next-line new-cap\n        const data = composed ? <Fragment>{TitleColumn(\n            composed.map(key => get(item, key, ' ')),\n            item.id,\n            item,\n            extra\n        )}</Fragment> : get(item, key, ' ');\n        return renderFunc ? <Fragment>{ renderFunc(data, item.id, item, extra) }</Fragment> : data;\n    });\n};\n\nexport const createRows = (rows = [], columns = [], { actions, expandable, noSystemsTable, ...extra } = {}) => {\n    if (rows.length === 0) {\n        return [{\n            cells: [{\n                title: noSystemsTable,\n                props: {\n                    colSpan: columns.length + Boolean(actions)\n                }\n            }]\n        }];\n    }\n\n    return flatten(rows.map((oneItem, key) => ([{\n        ...oneItem,\n        ...oneItem.children && expandable && { isOpen: !!oneItem.isOpen },\n        cells: buildCells(oneItem, columns, extra),\n        actionProps: {\n            'data-ouia-component-id': `${oneItem.id}-actions-kebab`\n        }\n    }, oneItem.children && expandable && {\n        cells: [\n            {\n                title: typeof oneItem.children === 'function' ? oneItem.children() : oneItem.children\n            }\n        ],\n        parent: key * 2,\n        fullWidth: true\n    }]))).filter(Boolean);\n};\n\nexport const onDeleteFilter = (deleted, currFilter) => {\n    const { value: deletedItem } = deleted?.chips?.[0] || {};\n    const newFilter = currFilter.filter((item) => item !== deletedItem);\n    return newFilter;\n};\n\nexport const onDeleteTag = (deleted, selectedTags, onApplyTags) => {\n    const deletedItem = deleted?.chips?.[0];\n    if (selectedTags?.[deleted?.key]?.[deletedItem?.key] !== undefined) {\n        selectedTags[deleted?.key][deletedItem?.key] = false;\n    }\n\n    onApplyTags && onApplyTags(selectedTags, false);\n    return selectedTags;\n};\n\nconst includesSortable = (transforms) => transforms?.reduce((acc, fn) => acc || fn.toString().includes('onSort:'), false);\n\nexport const createColumns = (columns, hasItems, rows, isExpandable) => (\n    columns?.map(({ props, transforms, cellFormatters, ...oneCell }) => ({\n        ...oneCell,\n        transforms: [\n            ...transforms || [],\n            ...props?.width ? [cellWidth(props.width)] : [],\n            ...hasItems ||\n            rows.length <= 0 ||\n            (props && props.isStatic) ||\n            transforms?.includes(sortable) ||\n            includesSortable(transforms) ? [] : [sortable]\n        ],\n        cellFormatters: [\n            ...cellFormatters || [],\n            ...isExpandable ? [expandable] : []\n        ]\n    }))\n);\n","export * from './useTextFilter';\nexport * from './useStalenessFilter';\nexport * from './useRegisteredWithFilter';\nexport * from './useTagsFilter';\nexport const filtersReducer = (reducersList) => (state, action) => reducersList.reduce((acc, curr) => ({\n    ...acc,\n    ...curr?.(state, action)\n}), state);\n","import { useState } from 'react';\nimport { REGISTERED_CHIP, registered } from '../../Utilities/index';\n\nexport const registeredWithFilterState = { registeredWithFilter: [] };\nexport const REGISTERED_WITH_FILTER = 'REGISTERED_WITH_FILTER';\nexport const registeredWithFilterReducer = (_state, { type, payload }) => ({\n    ...type === REGISTERED_WITH_FILTER && {\n        registeredWithFilter: payload\n    }\n});\n\nexport const useRegisteredWithFilter = ([state, dispatch] = [registeredWithFilterState]) => {\n    let [registeredWithStateValue, setStateValue] = useState([]);\n    const registeredWithValue = dispatch ? state.registeredWithFilter : registeredWithStateValue;\n    const setValue = dispatch ? (newValue) => dispatch({ type: REGISTERED_WITH_FILTER, payload: newValue }) : setStateValue;\n\n    const filter = {\n        label: 'Source',\n        value: 'source-registered-with',\n        type: 'checkbox',\n        filterValues: {\n            value: registeredWithValue,\n            onChange: (_e, value) => setValue(value),\n            items: registered\n        }\n    };\n    const chip = registeredWithValue?.length > 0 ? [{\n        category: 'Source',\n        type: REGISTERED_CHIP,\n        chips: registered.filter(({ value }) => registeredWithValue.includes(value))\n        .map(({ label, ...props }) => ({ name: label, ...props }))\n    }] : [];\n    return [filter, chip, registeredWithValue, setValue];\n};\n","import { useState } from 'react';\nimport { STALE_CHIP, staleness } from '../../Utilities/index';\n\nexport const stalenessFilterState = { stalenessFilter: [] };\nexport const STALENESS_FILTER = 'STALENESS_FILTER';\nexport const stalenessFilterReducer = (_state, { type, payload }) => ({\n    ...type === STALENESS_FILTER && {\n        stalenessFilter: payload\n    }\n});\n\nexport const useStalenessFilter = ([state, dispatch] = [stalenessFilterState]) => {\n    let [stalenessStateValue, setStateValue] = useState([]);\n    const stalenessValue = dispatch ? state.stalenessFilter : stalenessStateValue;\n    const setValue = dispatch ? (newValue) => dispatch({ type: STALENESS_FILTER, payload: newValue }) : setStateValue;\n\n    const filter = {\n        label: 'Status',\n        value: 'stale-status',\n        type: 'checkbox',\n        filterValues: {\n            value: stalenessValue,\n            onChange: (_e, value) => setValue(value),\n            items: staleness\n        }\n    };\n    const chip = stalenessValue?.length > 0 ? [{\n        category: 'Status',\n        type: STALE_CHIP,\n        chips: staleness.filter(({ value }) => stalenessValue.includes(value))\n        .map(({ label, ...props }) => ({ name: label, ...props }))\n    }] : [];\n    return [filter, chip, stalenessValue, setValue];\n};\n","import { useTagsFilter as tagsFilter } from '@redhat-cloud-services/frontend-components/FilterHooks';\n\nexport const useTagsFilter = (\n    allTags = [],\n    loaded = false,\n    additionalTagsCount = 0,\n    onShowMoreClick,\n    stateMapper\n) => {\n    const {\n        filter,\n        chips,\n        selectedTags,\n        setValue,\n        filterTagsBy,\n        seFilterTagsBy\n    } = tagsFilter(\n        allTags,\n        loaded,\n        additionalTagsCount,\n        onShowMoreClick,\n        stateMapper,\n        'system'\n    );\n\n    return {\n        tagsFilter: {\n            label: 'Tags',\n            value: 'tags',\n            type: 'group',\n            placeholder: 'Filter system by tag',\n            filterValues: {\n                ...filter\n            }\n        },\n        tagsChip: chips,\n        selectedTags,\n        setSelectedTags: setValue,\n        filterTagsBy,\n        seFilterTagsBy\n    };\n};\n","import { useState } from 'react';\nimport { TEXTUAL_CHIP } from '../../Utilities/index';\n\nexport const textFilterState = { textFilter: '' };\nexport const TEXT_FILTER = 'TEXT_FILTER';\nexport const textFilterReducer = (_state, { type, payload }) => ({\n    ...type === TEXT_FILTER && {\n        textFilter: payload\n    }\n});\n\nexport const useTextFilter = ([state, dispatch] = [textFilterState]) => {\n    const [stateValue, setStateValue] = useState('');\n    const value = dispatch ? state.textFilter : stateValue;\n    const setValue = dispatch ? (newValue) => dispatch({ type: TEXT_FILTER, payload: newValue }) : setStateValue;\n\n    const filter = {\n        label: 'Name',\n        value: 'name-filter',\n        filterValues: {\n            placeholder: 'Filter by name',\n            value,\n            onChange: (_e, value) => setValue(value)\n        }\n    };\n    const chip = value.length > 0 ? [{\n        category: 'Display name',\n        type: TEXTUAL_CHIP,\n        chips: [\n            { name: value }\n        ]\n    }] : [];\n    return [filter, chip, value, setValue];\n};\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".inventory :root{--ins-color--orange: #ec7a08}.inventory .ins-c-inventory__detail--edit{min-width:500px;min-width:31.25rem}.inventory .ins-inventory-detail.pf-c-page-header.pf-c-page__main-section{padding-bottom:0}.inventory .ins-c-inventory__detail--header .pf-l-split__item:last-child{min-width:100px;min-width:6.25rem}.inventory .ins-c-inventory__detail--action{padding-left:var(--pf-global--spacer--sm)}.inventory .ins-c-inventory-detail__app-tabs ul:after{content:'';width:100%}.inventory .ins-c-inventory-detail__app-tabs ul li button:before{border-bottom:none}.inventory .ins-entity-detail .ins-entity-tags svg{position:relative;top:3px}.inventory .ins-entity-detail .ins-entity-tags>div>span{margin:5px}.inventory .ins-entity-detail .ins-entity-facts div{margin:5px;margin:.3125rem;margin-left:0}.inventory .ins-entity-detail .ins-entity-facts div span:first-child{margin-right:5px;margin-right:.3125rem}.inventory .ins-entity-detail .ins-entity-facts div .ins-c-skeleton{display:inline-block}.inventory .ins-entity-detail .ins-tab-layout{margin-top:20px}.inventory .ins-c-inventory__drawer .pf-c-drawer__head{padding:var(--pf-global--spacer--lg)}.inventory .ins-c-inventory__drawer .pf-c-drawer__panel{overflow-x:hidden;flex-basis:var(--pf-c-drawer__panel--FlexBasis)}.inventory .ins-c-inventory__drawer .pf-c-drawer__panel .pf-c-drawer__body{padding:0}.inventory .ins-c-inventory__drawer .ins-c-inventory__drawer--content .ins-c-inventory__drawer--facts .ins-entity-facts .pf-m-6-col-on-md{--pf-l-grid__item--GridColumnEnd: span 12}.inventory .ins-c-inventory__drawer .ins-c-inventory__drawer--content .ins-c-inventory__drawer--facts .ins-entity-facts div span:first-child{padding-right:var(--pf-global--spacer--sm)}.inventory .ins-c-inventory__drawer .ins-c-inventory__drawer--content .ins-c-inventory__drawer--facts .pf-l-grid:not(.ins-entity-facts) a.ins-c-inventory__detail--action{display:none}.inventory .ins-c-inventory__drawer .ins-c-inventory__drawer--content .ins-c-inventory__drawer--facts .pf-l-grid:not(.ins-entity-facts) .pf-l-grid__item:first-of-type dd{grid-column:1}.inventory .ins-c-inventory__drawer .ins-c-inventory__drawer--content>*>*{padding-left:var(--pf-global--spacer--lg)}.inventory .ins-c-inventory__drawer .ins-c-inventory__drawer--content>*:nth-child(odd):after{content:\\\" \\\";display:block;position:relative;height:100%;background:var(--pf-global--palette--black-200);top:-100%;width:107%;left:0;z-index:-1}.inventory .ins-c-inventory__drawer .ins-c-inventory__drawer--content>.pf-l-stack__item:not(:last-child):before{content:\\\" \\\";display:block;position:absolute;height:1px;background:var(--pf-global--palette--black-300);width:100%;left:0}.inventory .ins-c-inventory__drawer .ins-c-inventory__drawer--content>.pf-l-stack__item>*{padding-bottom:var(--pf-global--spacer--lg);padding-top:var(--pf-global--spacer--lg)}.inventory .ins-c-inventory__drawer .ins-c-inventory__drawer-system-issues .ins-c-inventory__drawer--title{--pf-l-stack--m-gutter--MarginBottom: var(--pf-global--spacer--sm)}.inventory .ins-c-inventory__drawer .ins-c-inventory__drawer-system-issues .ins-c-inventory__drawer-patch a{padding:var(--pf-global--spacer--sm);background:transparent;text-decoration:none}.inventory .ins-c-inventory__drawer .ins-c-inventory__drawer-system-issues .ins-c-inventory__drawer-patch .ins-m-moderate a{color:var(--pf-global--palette--gold-400)}.inventory .ins-c-inventory__drawer .ins-c-inventory__drawer-system-issues .ins-c-inventory__drawer-cve div:after{content:\\\" \\\";display:block;height:2px}.inventory .ins-c-inventory__drawer .ins-c-inventory__drawer-system-issues .ins-c-inventory__drawer-cve div.ins-m-critical:after{background:var(--pf-global--palette--red-100)}.inventory .ins-c-inventory__drawer .ins-c-inventory__drawer-system-issues .ins-c-inventory__drawer-cve div.ins-m-important:after{background:var(--pf-global--palette--orange-300)}.inventory .ins-c-inventory__drawer .ins-c-inventory__drawer-system-issues .ins-c-inventory__drawer-cve div.ins-m-moderate:after{background:var(--pf-global--palette--gold-400)}.inventory .ins-c-inventory__drawer .ins-c-inventory__drawer-system-issues .ins-c-inventory__drawer-cve div.ins-m-low:after{background:var(--pf-global--palette--gold-100)}@media screen and (min-width: 768px){.inventory .ins-entity-detail .ins-entity-facts div.pf-l-grid__item:nth-child(even),.inventory .ins-entity-detail .ins-entity-header div.pf-l-grid__item:nth-child(even){text-align:right}.inventory .ins-c-inventory__drawer .pf-c-drawer__panel{flex-basis:calc(var(--pf-c-drawer__panel--FlexBasis) * 1.5)}}.inventory .ins-c-inventory__tags-modal .ins-c-primary-toolbar .pf-c-toolbar__content{padding:0}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/InventoryDetail/InventoryDetail.scss\"],\"names\":[],\"mappings\":\"AAAA,iBACM,4BAAoB,CAD1B,0CACkE,eAAe,CAAC,kBAAkB,CADpG,0EACoK,gBAAgB,CADpL,yEACmP,eAAe,CAAC,iBAAiB,CADpR,4CACsT,yCAAyC,CAD/V,sDAC2Y,UAAU,CAAC,UAAU,CADha,iEACud,kBAAkB,CADze,mDACkhB,iBAAiB,CAAC,OAAO,CAD3iB,wDACylB,UAAU,CADnmB,oDAC6oB,UAAU,CAAC,eAAe,CAAC,aAAa,CADrrB,qEACgvB,gBAAgB,CAAC,qBAAqB,CADtxB,oEACg1B,oBAAoB,CADp2B,8CACw4B,eAAe,CADv5B,uDACo8B,oCAAoC,CADx+B,wDACshC,iBAAiB,CAAC,+CAA+C,CADvlC,2EACwpC,SAAS,CADjqC,0IACiyC,yCAAiC,CADl0C,6IAC68C,0CAA0C,CADv/C,0KACupD,YAAY,CADnqD,0KACm0D,aAAa,CADh1D,0EACg5D,yCAAyC,CADz7D,6FAC4gE,WAAW,CAAC,aAAa,CAAC,iBAAiB,CAAC,WAAW,CAAC,+CAA+C,CAAC,SAAS,CAAC,UAAU,CAAC,MAAM,CAAC,UAAU,CAD1pE,gHACgwE,WAAW,CAAC,aAAa,CAAC,iBAAiB,CAAC,UAAU,CAAC,+CAA+C,CAAC,UAAU,CAAC,MAAM,CADx3E,0FACw8E,2CAA2C,CAAC,wCAAwC,CAD5hF,2GAC6nF,kEAAqC,CADlqF,4GACiyF,oCAAoC,CAAC,sBAAsB,CAAC,oBAAoB,CADj3F,4HACm+F,yCAAyC,CAD5gG,kHAConG,WAAW,CAAC,aAAa,CAAC,UAAU,CADxpG,iIAC+wG,6CAA6C,CAD5zG,kIACo7G,gDAAgD,CADp+G,iIAC2lH,8CAA8C,CADzoH,4HAC2vH,8CAA8C,CAAC,qCAD1yH,yKACk+H,gBAAgB,CADl/H,wDACgiI,2DAA2D,CAAE,CAD7lI,sFACwqI,SAAS\",\"sourcesContent\":[\".inventory{\\n:root{--ins-color--orange: #ec7a08}.ins-c-inventory__detail--edit{min-width:500px;min-width:31.25rem}.ins-inventory-detail.pf-c-page-header.pf-c-page__main-section{padding-bottom:0}.ins-c-inventory__detail--header .pf-l-split__item:last-child{min-width:100px;min-width:6.25rem}.ins-c-inventory__detail--action{padding-left:var(--pf-global--spacer--sm)}.ins-c-inventory-detail__app-tabs ul:after{content:'';width:100%}.ins-c-inventory-detail__app-tabs ul li button:before{border-bottom:none}.ins-entity-detail .ins-entity-tags svg{position:relative;top:3px}.ins-entity-detail .ins-entity-tags>div>span{margin:5px}.ins-entity-detail .ins-entity-facts div{margin:5px;margin:.3125rem;margin-left:0}.ins-entity-detail .ins-entity-facts div span:first-child{margin-right:5px;margin-right:.3125rem}.ins-entity-detail .ins-entity-facts div .ins-c-skeleton{display:inline-block}.ins-entity-detail .ins-tab-layout{margin-top:20px}.ins-c-inventory__drawer .pf-c-drawer__head{padding:var(--pf-global--spacer--lg)}.ins-c-inventory__drawer .pf-c-drawer__panel{overflow-x:hidden;flex-basis:var(--pf-c-drawer__panel--FlexBasis)}.ins-c-inventory__drawer .pf-c-drawer__panel .pf-c-drawer__body{padding:0}.ins-c-inventory__drawer .ins-c-inventory__drawer--content .ins-c-inventory__drawer--facts .ins-entity-facts .pf-m-6-col-on-md{--pf-l-grid__item--GridColumnEnd: span 12}.ins-c-inventory__drawer .ins-c-inventory__drawer--content .ins-c-inventory__drawer--facts .ins-entity-facts div span:first-child{padding-right:var(--pf-global--spacer--sm)}.ins-c-inventory__drawer .ins-c-inventory__drawer--content .ins-c-inventory__drawer--facts .pf-l-grid:not(.ins-entity-facts) a.ins-c-inventory__detail--action{display:none}.ins-c-inventory__drawer .ins-c-inventory__drawer--content .ins-c-inventory__drawer--facts .pf-l-grid:not(.ins-entity-facts) .pf-l-grid__item:first-of-type dd{grid-column:1}.ins-c-inventory__drawer .ins-c-inventory__drawer--content>*>*{padding-left:var(--pf-global--spacer--lg)}.ins-c-inventory__drawer .ins-c-inventory__drawer--content>*:nth-child(odd):after{content:\\\" \\\";display:block;position:relative;height:100%;background:var(--pf-global--palette--black-200);top:-100%;width:107%;left:0;z-index:-1}.ins-c-inventory__drawer .ins-c-inventory__drawer--content>.pf-l-stack__item:not(:last-child):before{content:\\\" \\\";display:block;position:absolute;height:1px;background:var(--pf-global--palette--black-300);width:100%;left:0}.ins-c-inventory__drawer .ins-c-inventory__drawer--content>.pf-l-stack__item>*{padding-bottom:var(--pf-global--spacer--lg);padding-top:var(--pf-global--spacer--lg)}.ins-c-inventory__drawer .ins-c-inventory__drawer-system-issues .ins-c-inventory__drawer--title{--pf-l-stack--m-gutter--MarginBottom: var(--pf-global--spacer--sm)}.ins-c-inventory__drawer .ins-c-inventory__drawer-system-issues .ins-c-inventory__drawer-patch a{padding:var(--pf-global--spacer--sm);background:transparent;text-decoration:none}.ins-c-inventory__drawer .ins-c-inventory__drawer-system-issues .ins-c-inventory__drawer-patch .ins-m-moderate a{color:var(--pf-global--palette--gold-400)}.ins-c-inventory__drawer .ins-c-inventory__drawer-system-issues .ins-c-inventory__drawer-cve div:after{content:\\\" \\\";display:block;height:2px}.ins-c-inventory__drawer .ins-c-inventory__drawer-system-issues .ins-c-inventory__drawer-cve div.ins-m-critical:after{background:var(--pf-global--palette--red-100)}.ins-c-inventory__drawer .ins-c-inventory__drawer-system-issues .ins-c-inventory__drawer-cve div.ins-m-important:after{background:var(--pf-global--palette--orange-300)}.ins-c-inventory__drawer .ins-c-inventory__drawer-system-issues .ins-c-inventory__drawer-cve div.ins-m-moderate:after{background:var(--pf-global--palette--gold-400)}.ins-c-inventory__drawer .ins-c-inventory__drawer-system-issues .ins-c-inventory__drawer-cve div.ins-m-low:after{background:var(--pf-global--palette--gold-100)}@media screen and (min-width: 768px){.ins-entity-detail .ins-entity-facts div.pf-l-grid__item:nth-child(even),.ins-entity-detail .ins-entity-header div.pf-l-grid__item:nth-child(even){text-align:right}.ins-c-inventory__drawer .pf-c-drawer__panel{flex-basis:calc(var(--pf-c-drawer__panel--FlexBasis) * 1.5)}}.ins-c-inventory__tags-modal .ins-c-primary-toolbar .pf-c-toolbar__content{padding:0}\\n\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".inventory .ins-c-inventory__no--access .pf-c-empty-state__body>div{max-width:500px;margin:auto}@media screen and (max-width: 768px){.inventory .ins-c-inventory__no--access .pf-c-empty-state__body>div{max-width:200px}}.inventory .ins-c-inventory__table--toolbar.ins-m-footer{margin:0;padding:0}.inventory .ins-c-inventory__table--toolbar:not(.ins-c-inventory__table--toolbar-has-items) .pf-c-toolbar__content .pf-c-toolbar__item:last-child{min-width:12.5rem}.inventory .ins-c-inventory__table--toolbar:not(.ins-c-inventory__table--toolbar-has-items) .pf-c-pagination__nav-page-select input{min-width:4.68755rem}.inventory .ins-c-inventory__table--toolbar .ins-c-chip-filters .pf-c-chip-group:not(:last-of-type){margin-right:var(--pf-global--spacer--xs)}.inventory .ins-c-inventory__table--toolbar .ins-c-tagfilter{width:initial}.inventory .ins-c-table__empty{margin:4.68755rem;border-bottom:none}.inventory .ins-c-table__empty .pf-c-content{text-align:center}.inventory .ins-c-inventory__tags-filter ul label.pf-c-check__label{display:flex;width:100%}.inventory .ins-c-inventory__tags-filter ul label.pf-c-check__label .ins-c-inventory__tags-filter--tag-name{margin-right:var(--pf-global--spacer--xs)}.inventory .ins-c-inventory__tags-filter ul label.pf-c-check__label .pf-c-badge{margin-left:auto}.inventory .ins-c-inventory__tags-filter ul .ins-c-inventory__tags-tail{display:flex}.inventory .ins-c-inventory__tags-filter ul .ins-c-inventory__tags-tail .ins-c-inventory__tags-no-tags{margin:auto}.inventory .ins-c-inventory__tags-filter ul .ins-c-inventory__tags-tail .pf-c-spinner{margin-left:auto}.inventory .ins-simple-table .ins-health-status div{display:inline-block;padding-right:20px}.inventory .ins-simple-table .ins-health-status div svg{position:relative;top:2px;left:-2px}.inventory .ins-c-entity-table.pf-c-table .pf-c-table__check input{cursor:pointer}.inventory .ins-c-entity-table.pf-c-table .ins-health-status div{display:inline-block;padding-right:20px}.inventory .ins-c-entity-table.pf-c-table .ins-health-status div svg{position:relative;top:2px;left:-2px}.inventory .ins-c-entity-table.pf-c-table .ins-health-status div span:nth-child(2){color:var(--pf-global--info-color--100);cursor:pointer}.inventory .ins-c-entity-table.pf-c-table .ins-composed-col>:first-child{color:var(--pf-c-button--m-disabled--Color);font-size:var(--pf-global--FontSize--sm)}.inventory .ins-c-entity-table.pf-c-table .ins-composed-col *{font-size:var(--pf-global--FontSize--lg)}.inventory .ins-c-entity-table.pf-c-table .ins-composed-col .ins-composed-col{cursor:pointer}.inventory .ins-c-entity-table.pf-c-table .ins-c-inventory__list-tags{display:inline-block}.inventory .ins-c-entity-table.pf-c-table .pf-c-table__action .pf-c-dropdown{position:relative;left:10px;top:3px}.inventory .ins-c-entity-table.pf-c-table .ins-composed-col div{word-wrap:break-word;word-break:break-all}.inventory .ins-c-entity-table.pf-c-table .ins-composed-col div:nth-child(2):not(.ins-m-nodetail){color:var(--pf-global--link--Color);cursor:pointer}.inventory .ins-c-entity-table.pf-c-table .ins-composed-col div:nth-child(2):not(.ins-m-nodetail):hover{color:var(--pf-global--link--Color--hover)}.inventory .ins-c-inventory__tags-modal .ins-c-primary-toolbar .pf-c-toolbar__content{padding:0}.inventory .ins-c-inventory__no-access{background-color:var(--pf-global--BackgroundColor--100)}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/InventoryTable/InventoryList.scss\"],\"names\":[],\"mappings\":\"AAAA,oEACyD,eAAe,CAAC,WAAW,CAAC,qCADrF,oEACmL,eAAe,CAAE,CADpM,yDACkP,QAAQ,CAAC,SAAS,CADpQ,kJAC4Y,iBAAiB,CAD7Z,oIACuhB,oBAAoB,CAD3iB,oGACqoB,yCAAyC,CAD9qB,6DACiuB,aAAa,CAD9uB,+BACmwB,iBAAiB,CAAC,kBAAkB,CADvyB,6CAC00B,iBAAiB,CAD31B,oEACq5B,YAAY,CAAC,UAAU,CAD56B,4GAC8gC,yCAAyC,CADvjC,gFAC6nC,gBAAgB,CAD7oC,wEAC2sC,YAAY,CADvtC,uGACozC,WAAW,CAD/zC,sFAC24C,gBAAgB,CAD35C,oDACq8C,oBAAoB,CAAC,kBAAkB,CAD5+C,wDAC0hD,iBAAiB,CAAC,OAAO,CAAC,SAAS,CAD7jD,mEACsnD,cAAc,CADpoD,iEAC2rD,oBAAoB,CAAC,kBAAkB,CADluD,qEAC6xD,iBAAiB,CAAC,OAAO,CAAC,SAAS,CADh0D,mFACy4D,uCAAuC,CAAC,cAAc,CAD/7D,yEAC8/D,2CAA2C,CAAC,wCAAwC,CADllE,8DACsoE,wCAAwC,CAD9qE,8EACkvE,cAAc,CADhwE,sEAC4zE,oBAAoB,CADh1E,6EACm5E,iBAAiB,CAAC,SAAS,CAAC,OAAO,CADt7E,gEAC4+E,oBAAoB,CAAC,oBAAoB,CADrhF,kGAC6mF,mCAAmC,CAAC,cAAc,CAD/pF,wGAC6vF,0CAA0C,CADvyF,sFACm3F,SAAS,CAD53F,uCACy5F,uDAAuD\",\"sourcesContent\":[\".inventory{\\n.ins-c-inventory__no--access .pf-c-empty-state__body>div{max-width:500px;margin:auto}@media screen and (max-width: 768px){.ins-c-inventory__no--access .pf-c-empty-state__body>div{max-width:200px}}.ins-c-inventory__table--toolbar.ins-m-footer{margin:0;padding:0}.ins-c-inventory__table--toolbar:not(.ins-c-inventory__table--toolbar-has-items) .pf-c-toolbar__content .pf-c-toolbar__item:last-child{min-width:12.5rem}.ins-c-inventory__table--toolbar:not(.ins-c-inventory__table--toolbar-has-items) .pf-c-pagination__nav-page-select input{min-width:4.68755rem}.ins-c-inventory__table--toolbar .ins-c-chip-filters .pf-c-chip-group:not(:last-of-type){margin-right:var(--pf-global--spacer--xs)}.ins-c-inventory__table--toolbar .ins-c-tagfilter{width:initial}.ins-c-table__empty{margin:4.68755rem;border-bottom:none}.ins-c-table__empty .pf-c-content{text-align:center}.ins-c-inventory__tags-filter ul label.pf-c-check__label{display:flex;width:100%}.ins-c-inventory__tags-filter ul label.pf-c-check__label .ins-c-inventory__tags-filter--tag-name{margin-right:var(--pf-global--spacer--xs)}.ins-c-inventory__tags-filter ul label.pf-c-check__label .pf-c-badge{margin-left:auto}.ins-c-inventory__tags-filter ul .ins-c-inventory__tags-tail{display:flex}.ins-c-inventory__tags-filter ul .ins-c-inventory__tags-tail .ins-c-inventory__tags-no-tags{margin:auto}.ins-c-inventory__tags-filter ul .ins-c-inventory__tags-tail .pf-c-spinner{margin-left:auto}.ins-simple-table .ins-health-status div{display:inline-block;padding-right:20px}.ins-simple-table .ins-health-status div svg{position:relative;top:2px;left:-2px}.ins-c-entity-table.pf-c-table .pf-c-table__check input{cursor:pointer}.ins-c-entity-table.pf-c-table .ins-health-status div{display:inline-block;padding-right:20px}.ins-c-entity-table.pf-c-table .ins-health-status div svg{position:relative;top:2px;left:-2px}.ins-c-entity-table.pf-c-table .ins-health-status div span:nth-child(2){color:var(--pf-global--info-color--100);cursor:pointer}.ins-c-entity-table.pf-c-table .ins-composed-col>:first-child{color:var(--pf-c-button--m-disabled--Color);font-size:var(--pf-global--FontSize--sm)}.ins-c-entity-table.pf-c-table .ins-composed-col *{font-size:var(--pf-global--FontSize--lg)}.ins-c-entity-table.pf-c-table .ins-composed-col .ins-composed-col{cursor:pointer}.ins-c-entity-table.pf-c-table .ins-c-inventory__list-tags{display:inline-block}.ins-c-entity-table.pf-c-table .pf-c-table__action .pf-c-dropdown{position:relative;left:10px;top:3px}.ins-c-entity-table.pf-c-table .ins-composed-col div{word-wrap:break-word;word-break:break-all}.ins-c-entity-table.pf-c-table .ins-composed-col div:nth-child(2):not(.ins-m-nodetail){color:var(--pf-global--link--Color);cursor:pointer}.ins-c-entity-table.pf-c-table .ins-composed-col div:nth-child(2):not(.ins-m-nodetail):hover{color:var(--pf-global--link--Color--hover)}.ins-c-inventory__tags-modal .ins-c-primary-toolbar .pf-c-toolbar__content{padding:0}.ins-c-inventory__no-access{background-color:var(--pf-global--BackgroundColor--100)}\\n\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import api from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./InventoryDetail.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./InventoryDetail.scss\",\n      function () {\n        if (!isEqualLocals(oldLocals, content.locals, undefined)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nexport default content.locals || {};","import api from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./InventoryList.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./InventoryList.scss\",\n      function () {\n        if (!isEqualLocals(oldLocals, content.locals, undefined)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nexport default content.locals || {};"],"sourceRoot":""}