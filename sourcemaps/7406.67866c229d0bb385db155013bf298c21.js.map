{"version":3,"file":"js/7406.1666256024941.adb6434c24a8902ae963.js","mappings":"8OAmCA,QA3BY,WACR,IAAMA,GAAUC,EAAAA,EAAAA,cAgBhB,OAfAC,EAAAA,EAAAA,YAAU,WAGN,OAFAC,SAASC,OAAOC,OAChBF,SAASC,OAAOE,YAAYC,EAAAA,GACrBJ,SAASC,OAAOI,GACnB,kBACA,SAAAC,GACwB,cAAhBA,EAAMC,MACNV,EAAQW,KAAR,WAAiBC,SAASC,QAA1B,OAAmCD,SAASE,OAE5Cd,EAAQW,KAAR,WAAiBF,EAAMC,OAAvB,OAA+BE,SAASC,QAAxC,OAAiDD,SAASE,YAIvE,IAGC,yBAAKC,UAAU,aACX,kBAAC,EAAAC,oBAAD,MACA,kBAAC,IAAD,CAAcC,QAAQ,aAClB,kBAAC,IAAD,U,8JCKhB,QAzBqB,WACjB,OAAgCC,EAAAA,EAAAA,YAAhC,eAAOC,EAAP,KAAiBC,EAAjB,KACMC,EAAQF,MAAAA,OAAH,EAAGA,EAAUG,WAUxB,OARApB,EAAAA,EAAAA,YAAU,WAGN,OAFAkB,GAAoCf,EAAAA,EAAAA,OAE7B,WACHe,OAAYG,MAEjB,IAEKJ,EACJ,kBAAC,cAAD,CAA0BK,MAAO,CAC7BC,YAAa,kBAAMN,KAEnB,kBAAC,EAAAO,SAAD,CAAUL,MAAOA,GACb,kBAAC,gBAAD,CAAQM,UAAUC,EAAAA,EAAAA,IAAYC,OAAOjB,SAASkB,WAC1C,kBAAC,IAAD,SAIZ,kBAAC,IAAD,Q,iCC9BD,IACMvB,EAAiB","sources":["webpack:///./src/App.js","webpack:///./src/AppEntry.js","webpack:///./src/config.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Routes } from './Routes';\nimport './App.scss';\nimport { INVENTORY_ROOT } from './config';\nimport { NotificationsPortal } from '@redhat-cloud-services/frontend-components-notifications/';\nimport { RBACProvider } from '@redhat-cloud-services/frontend-components/RBACProvider';\n\nconst App = () => {\n    const history = useHistory();\n    useEffect(() => {\n        insights.chrome.init();\n        insights.chrome.identifyApp(INVENTORY_ROOT);\n        return insights.chrome.on(\n            'APP_NAVIGATION',\n            event => {\n                if (event.navId === 'inventory') {\n                    history.push(`/${location.search}${location.hash}`);\n                } else {\n                    history.push(`/${event.navId}${location.search}${location.hash}`);\n                }\n            }\n        );\n    }, []);\n\n    return (\n        <div className=\"inventory\">\n            <NotificationsPortal />\n            <RBACProvider appName=\"inventory\">\n                <Routes />\n            </RBACProvider>\n        </div>\n    );\n};\n\nexport default App;\n","import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { init, RegistryContext } from './store';\nimport App from './App';\nimport { getBaseName } from '@redhat-cloud-services/frontend-components-utilities/helpers';\nimport logger from 'redux-logger';\nimport Fallback from './components/SpinnerFallback';\n\nconst InventoryApp = () => {\n    const [registry, setRegistry] = useState();\n    const store = registry?.getStore();\n\n    useEffect(() => {\n        setRegistry(IS_DEV ? init(logger) : init());\n\n        return () => {\n            setRegistry(undefined);\n        };\n    }, []);\n\n    return (registry ? (\n        <RegistryContext.Provider value={{\n            getRegistry: () => registry\n        }}>\n            <Provider store={store}>\n                <Router basename={getBaseName(window.location.pathname)}>\n                    <App />\n                </Router>\n            </Provider>\n        </RegistryContext.Provider>\n    ) : <Fallback />);\n};\n\nexport default InventoryApp;\n","\nexport const INVENTORY_API_BASE = '/api/inventory/v1';\nexport const INVENTORY_ROOT = 'inventory';\n"],"names":["history","useHistory","useEffect","insights","chrome","init","identifyApp","INVENTORY_ROOT","on","event","navId","push","location","search","hash","className","NotificationsPortal","appName","useState","registry","setRegistry","store","getStore","undefined","value","getRegistry","Provider","basename","getBaseName","window","pathname"],"sourceRoot":""}