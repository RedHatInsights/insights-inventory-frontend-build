{"version":3,"file":"js/9911.1116b68bd42b0732a828.js","mappings":"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","sources":["webpack:///./src/Utilities/InsightsDisconnected.js","webpack:///./src/Utilities/OperatingSystemFormatter.js","webpack:///./src/components/InventoryTable/TitleColumn.js","webpack:///./src/store/entities.js","webpack:///./src/store/systemIssues.js","webpack:///./src/store/entityDetails.js","webpack:///./src/store/reducers.js"],"sourcesContent":["import React from 'react';\n\nimport { Tooltip, Grid, GridItem } from '@patternfly/react-core';\nimport { DisconnectedIcon } from '@patternfly/react-icons';\n\nimport './InsightsDisconnected.scss';\n\nconst InsightsDisconnected = () => (\n    <Tooltip\n        maxWidth='14rem'\n        content={(\n            <Grid hasGutter>\n                <GridItem>\n                    Insights client not reporting\n                </GridItem>\n                <GridItem>\n                    From the main navigation, open\n                    &quot;Registration Assitant&quot; to learn\n                    how to set up Insights.\n                </GridItem>\n            </Grid>\n        )}>\n        <span className=\"pf-u-ml-sm ins-c-inventor__disconnected-icon\">\n            <DisconnectedIcon />\n        </span>\n    </Tooltip>\n);\n\nexport default InsightsDisconnected;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst OperatingSystemFormatter = ({ operatingSystem }) => {\n    if (operatingSystem?.name === 'RHEL') {\n        const version = (operatingSystem.major && operatingSystem.minor !== null)\n        && `${operatingSystem.major}.${operatingSystem?.minor}` || null;\n\n        return <span>\n            RHEL {version}\n        </span>;\n    }\n\n    return <span>\n        {operatingSystem?.name || 'Not available'}\n    </span>;\n};\n\nOperatingSystemFormatter.propTypes = {\n    operatingSystem: PropTypes.shape({\n        name: PropTypes.string,\n        major: PropTypes.number,\n        minor: PropTypes.number\n    })\n};\n\nexport default OperatingSystemFormatter;\n","/* eslint-disable camelcase */\n/* eslint-disable react/prop-types */\nimport React from 'react';\n\n/**\n * Helper function to proprly calculate what to do when user clicks on first cell.\n * Either full redirect if used with ctrl button or `onRowClick` from props is used.\n * @param {*} event html event, to find out if meta key was clicked.\n * @param {*} key inventory UUID.\n * @param {*} props additional props from `EntityTable` - loaded, onRowClick and noDetail.\n */\nconst onRowClick = (event, key, { loaded, onRowClick: rowClick, noDetail }) => {\n    if (loaded && !noDetail) {\n        const isMetaKey = (event.ctrlKey || event.metaKey || event.which === 2);\n        if (isMetaKey) {\n            return;\n        } else if (rowClick) {\n            rowClick(event, key, isMetaKey);\n        }\n    }\n\n    event.preventDefault();\n    event.stopPropagation();\n};\n\n/**\n * Helper function to generate first cell in plain inventory either with clickable detail or just data from attribut.\n * This is later on used in redux in `renderFunc`.\n * @param {React.node} data React node with information that will be shown to user as column title.\n * @param {string} id inventory UUID, used to navigate to correct URL.\n * @param {*} item row data, holds every information from redux store for currecnt row.\n * @param {*} props additional props passed from `EntityTable` - holds any props passed to inventory table.\n */\nconst TitleColumn = (data, id, item, props) => (\n    <div className=\"ins-composed-col\">\n        <div key=\"os_release\">{item?.os_release}</div>\n        <div key=\"data\" className={props?.noDetail ? 'ins-m-nodetail' : ''}>\n            { props?.noDetail ?\n                data :\n                <a\n                    widget=\"col\"\n                    href={ `${location.pathname}${location.pathname.substr(-1) === '/' ? '' : '/'}${id}` }\n                    onClick={ event => {\n                        onRowClick(event, id, props);\n                    }}\n                >\n                    { data }\n                </a> }\n        </div>\n    </div>\n);\n\nexport default TitleColumn;\n","import React from 'react';\nimport {\n    ACTION_TYPES,\n    SELECT_ENTITY,\n    CHANGE_SORT,\n    SHOW_ENTITIES,\n    FILTER_SELECT,\n    UPDATE_ENTITIES,\n    ENTITIES_LOADING,\n    CLEAR_FILTERS,\n    TOGGLE_TAG_MODAL,\n    CONFIG_CHANGED\n} from './action-types';\nimport { mergeArraysByKey } from '@redhat-cloud-services/frontend-components-utilities/helpers';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport { CullingInformation } from '@redhat-cloud-services/frontend-components/CullingInfo';\nimport { TagWithDialog } from '../Utilities/index';\nimport groupBy from 'lodash/groupBy';\nimport TitleColumn from '../components/InventoryTable/TitleColumn';\nimport InsightsDisconnected from '../Utilities/InsightsDisconnected';\nimport OperatingSystemFormatter from '../Utilities/OperatingSystemFormatter';\nimport { Tooltip } from '@patternfly/react-core';\nimport { verifyCulledInsightsClient } from '../Utilities/sharedFunctions';\n\nexport const defaultState = {\n    loaded: false,\n    tagsLoaded: false,\n    allTagsLoaded: false,\n    operatingSystems: [],\n    operatingSystemsLoaded: false,\n    invConfig: {},\n    sortBy: {\n        key: 'updated',\n        direction: 'desc'\n    }\n};\n\nexport const defaultColumns = () => ([\n    {\n        key: 'display_name',\n        sortKey: 'display_name',\n        title: 'Name',\n        renderFunc: TitleColumn\n    },\n    {\n        key: 'tags',\n        title: 'Tags',\n        props: { width: 10, isStatic: true },\n        // eslint-disable-next-line react/display-name\n        renderFunc: (value, systemId) => <TagWithDialog count={value.length} systemId={systemId} />\n    },\n    {\n        key: 'system_profile',\n        sortKey: 'operating_system',\n        dataLabel: 'OS',\n        title: <Tooltip content={<span>Operating system</span>}><span>OS</span></Tooltip>,\n        // eslint-disable-next-line react/display-name\n        renderFunc: (systemProfile) => <OperatingSystemFormatter operatingSystem={systemProfile?.operating_system} />,\n        props: { width: 10 }\n    },\n    {\n        key: 'updated',\n        sortKey: 'updated',\n        title: 'Last seen',\n        // eslint-disable-next-line react/display-name\n        renderFunc: (\n            value,\n            _id,\n            {\n                culled_timestamp: culled, stale_warning_timestamp: staleWarn, stale_timestamp: stale,\n                per_reporter_staleness: perReporterStaleness\n            }) => {\n            return CullingInformation ? <CullingInformation\n                culled={culled}\n                staleWarning={staleWarn}\n                stale={stale}\n                render={({ msg }) => <React.Fragment>\n                    <DateFormat date={ value } extraTitle={ (\n                        <React.Fragment>\n                            <div>{ msg }</div>\n                        Last seen:{` `}\n                        </React.Fragment>\n                    ) }/>\n                    {verifyCulledInsightsClient(perReporterStaleness) && <InsightsDisconnected />}\n                </React.Fragment>\n                }\n            > <DateFormat date={ value } /> </CullingInformation> : new Date(value).toLocaleString();\n        },\n        props: { width: 10 }\n    }\n]);\n\nfunction entitiesPending(state, { meta }) {\n    return {\n        ...state,\n        ...state.columns && { columns: mergeArraysByKey([\n            defaultColumns().filter(({ key }) => key !== 'tags' || meta?.showTags),\n            state.columns\n        ], 'key') } || {},\n        rows: [],\n        loaded: false,\n        lastDateRequest: meta.lastDateRequest\n    };\n}\n\nfunction clearFilters(state) {\n    return {\n        ...state,\n        activeFilters: []\n    };\n}\n\n// eslint-disable-next-line camelcase\nfunction entitiesLoaded(state, { payload: { results, per_page: perPage, page, count, total, loaded, filters }, meta }) {\n    // Older requests should not rewrite the state\n    if (meta.lastDateRequest < state.lastDateRequest) {\n        return state;\n    }\n\n    // Data are loaded and APi returned malicious data\n    if (loaded === undefined && (page === undefined || perPage === undefined)) {\n        return state;\n    }\n\n    return {\n        ...state,\n        activeFilters: filters || [],\n        loaded: loaded === undefined || loaded,\n        // filter data only if we are loaded\n        rows: mergeArraysByKey([state.rows, results]).filter(item => !loaded ? true : item.created),\n        perPage: perPage !== undefined ? perPage : state.perPage,\n        page: page !== undefined ? page : state.page,\n        count: count !== undefined ? count : state.count,\n        total: total !== undefined ? total : state.total\n    };\n}\n\nfunction loadingRejected(state, { payload }) {\n    return {\n        ...state,\n        error: payload\n    };\n}\n\nfunction selectEntity(state, { payload }) {\n    const rows = [...state.rows];\n    const toSelect = [].concat(payload);\n    toSelect.forEach(({ id, selected }) => {\n        const entity = rows.find(entity => entity.id === id);\n        if (entity) {\n            entity.selected = selected;\n        } else {\n            rows.forEach(item => item.selected = selected);\n        }\n    });\n    return {\n        ...state,\n        rows\n    };\n}\n\nfunction versionsLoaded(state, { payload: { results } }) {\n    return {\n        ...state,\n        operatingSystems: results.map(entry => {\n            const { name, major, minor } = entry.value;\n            const versionStringified = `${major}.${minor}`;\n            return { label: `${name} ${versionStringified}`, value: versionStringified };\n        }),\n        operatingSystemsLoaded: true\n    };\n}\n\nfunction changeSort(state, { payload: { key, direction } }) {\n    return {\n        ...state,\n        sortBy: {\n            key,\n            direction\n        }\n    };\n}\n\nfunction selectFilter(state, { payload: { item: { items, ...item }, selected } }) {\n    let { activeFilters = [] } = state;\n    if (selected) {\n        activeFilters = [\n            ...activeFilters,\n            item,\n            ...items ? items : []\n        ];\n        const values = activeFilters.map(active => active.value);\n        activeFilters = activeFilters.filter((filter, key) => values.lastIndexOf(filter.value) === key);\n    } else {\n        activeFilters.splice(activeFilters.map(active => active.value).indexOf(item.value), 1);\n        if (items) {\n            items.forEach(subItem => {\n                activeFilters.splice(activeFilters.map(active => active.value).indexOf(subItem.value), 1);\n            });\n        }\n    }\n\n    return {\n        ...state,\n        activeFilters\n    };\n}\n\nexport function showTags(state, { payload, meta }) {\n    const { tags, ...activeSystemTag } = state.rows ? state.rows.find(({ id }) => meta.systemId === id) : state.entity || {};\n    return {\n        ...state,\n        tagModalLoaded: true,\n        activeSystemTag: {\n            ...activeSystemTag,\n            tags: Object.values(payload.results)[0],\n            tagsCount: meta.tagsCount,\n            page: payload.page,\n            perPage: payload.per_page,\n            tagsLoaded: true\n        }\n    };\n}\n\nexport function showTagsPending(state, { meta }) {\n    const { tags, ...activeSystemTag } = state.rows ? state.rows.find(({ id }) => meta.systemId === id) : state.entity || {};\n    return {\n        ...state,\n        tagModalLoaded: false,\n        activeSystemTag: {\n            ...activeSystemTag,\n            tagsCount: meta.tagsCount,\n            tagsLoaded: false\n        }\n    };\n}\n\nexport function toggleTagModalReducer(state, { payload: { isOpen } }) {\n    return {\n        ...state,\n        showTagDialog: isOpen,\n        activeSystemTag: undefined\n    };\n}\n\nexport function allTags(state, { payload: { results, total, page, per_page: perPage }, meta: { lastDateRequestTags } }) {\n    // only the latest request can change state\n    if (lastDateRequestTags < state.lastDateRequestTags) {\n        return state;\n    }\n\n    return {\n        ...state,\n        allTags: Object.entries(groupBy(results, ({ tag: { namespace } }) => namespace)).map(([key, value]) => ({\n            name: key,\n            tags: value\n        })),\n        allTagsPagination: {\n            perPage,\n            page\n        },\n        additionalTagsCount: total > perPage ? total - perPage : 0,\n        allTagsTotal: total,\n        allTagsLoaded: true,\n        tagModalLoaded: true\n    };\n}\n\nexport default {\n    [ACTION_TYPES.ALL_TAGS_FULFILLED]: allTags,\n    [ACTION_TYPES.ALL_TAGS_PENDING]: (state, { meta }) => (\n        { ...state, allTagsLoaded: false, tagModalLoaded: false, lastDateRequestTags: meta.lastDateRequestTags }\n    ),\n    [ACTION_TYPES.LOAD_ENTITIES_PENDING]: entitiesPending,\n    [ACTION_TYPES.LOAD_ENTITIES_FULFILLED]: entitiesLoaded,\n    [ACTION_TYPES.LOAD_ENTITIES_REJECTED]: loadingRejected,\n    [ACTION_TYPES.LOAD_TAGS_PENDING]: showTagsPending,\n    [ACTION_TYPES.LOAD_TAGS_FULFILLED]: showTags,\n    [ACTION_TYPES.ALL_TAGS_REJECTED]: loadingRejected,\n    [ACTION_TYPES.OPERATING_SYSTEMS_PENDING]: (state) => ({ ...state, operatingSystemsLoaded: false }),\n    [ACTION_TYPES.OPERATING_SYSTEMS_FULFILLED]: versionsLoaded,\n    [UPDATE_ENTITIES]: entitiesLoaded,\n    [SHOW_ENTITIES]: (state, action) => entitiesLoaded(state, {\n        payload: {\n            ...action.payload,\n            loaded: false\n        }\n    }),\n    [FILTER_SELECT]: selectFilter,\n    [SELECT_ENTITY]: selectEntity,\n    [CHANGE_SORT]: changeSort,\n    [CLEAR_FILTERS]: clearFilters,\n    [ENTITIES_LOADING]: (state, { payload: { isLoading } }) => ({ ...state, loaded: !isLoading }),\n    [TOGGLE_TAG_MODAL]: toggleTagModalReducer,\n    [CONFIG_CHANGED]: (state, { payload }) => ({ ...state, invConfig: payload })\n};\n","/* eslint-disable camelcase */\nimport { SYSTEM_ISSUE_TYPES } from './action-types';\n\nexport function advisor(state, { payload }) {\n    return {\n        ...state,\n        systemIssues: {\n            ...state?.systemIssues,\n            advisor: {\n                isLoaded: true,\n                criticalCount: payload?.filter(item => item?.total_risk >= 4)\n            }\n        }\n    };\n}\n\nexport function cve(state, { payload }) {\n    return {\n        ...state,\n        systemIssues: {\n            ...state?.systemIssues,\n            cve: {\n                isLoaded: true,\n                critical: {\n                    count: payload?.critical?.meta?.total_items || 0\n                },\n                moderate: {\n                    count: payload?.moderate?.meta?.total_items || 0\n                },\n                important: {\n                    count: payload?.important?.meta?.total_items || 0\n                },\n                low: {\n                    count: payload?.low?.meta?.total_items || 0\n                }\n            }\n        }\n    };\n}\n\nexport function patch(state, { payload }) {\n    return {\n        ...state,\n        systemIssues: {\n            ...state?.systemIssues,\n            patch: {\n                isLoaded: true,\n                bug: {\n                    count: payload?.data?.attributes?.rhba_count || 0\n                },\n                enhancement: {\n                    count: payload?.data?.attributes?.rhea_count || 0\n                },\n                security: {\n                    count: payload?.data?.attributes?.rhsa_count || 0\n                }\n            }\n        }\n    };\n}\n\nexport function compliance(state, { payload }) {\n    return {\n        ...state,\n        systemIssues: {\n            ...state?.systemIssues,\n            compliance: {\n                isLoaded: true,\n                profiles: payload?.data?.system?.profiles\n            }\n        }\n    };\n}\n\nexport function isPending(state, type) {\n    return {\n        ...state,\n        systemIssues: {\n            ...state?.systemIssues,\n            ...type && { [type]: { isLoaded: false } }\n        }\n    };\n}\n\nexport default {\n    [SYSTEM_ISSUE_TYPES.LOAD_ADVISOR_RECOMMENDATIONS_PENDING]: (state) => isPending(state, 'advisor'),\n    [SYSTEM_ISSUE_TYPES.LOAD_APPLICABLE_CVES_PENDING]: (state) => isPending(state, 'cve'),\n    [SYSTEM_ISSUE_TYPES.LOAD_APPLICABLE_ADVISORIES_PENDING]: (state) => isPending(state, 'patch'),\n    [SYSTEM_ISSUE_TYPES.LOAD_COMPLIANCE_POLICIES_PENDING]: (state) => isPending(state, 'compliance'),\n    [SYSTEM_ISSUE_TYPES.LOAD_ADVISOR_RECOMMENDATIONS_FULFILLED]: advisor,\n    [SYSTEM_ISSUE_TYPES.LOAD_APPLICABLE_CVES_FULFILLED]: cve,\n    [SYSTEM_ISSUE_TYPES.LOAD_APPLICABLE_ADVISORIES_FULFILLED]: patch,\n    [SYSTEM_ISSUE_TYPES.LOAD_COMPLIANCE_POLICIES_FULFILLED]: compliance\n};\n","import { ACTION_TYPES, APPLICATION_SELECTED, TOGGLE_TAG_MODAL, TOGGLE_DRAWER } from './action-types';\nimport { showTags, toggleTagModalReducer } from './entities';\nimport systemIssuesReducer from './systemIssues';\nexport const entityDefaultState = { loaded: false };\n\nfunction entityDetailPending(state) {\n    return {\n        ...state,\n        loaded: false\n    };\n}\n\nfunction entityDetailLoaded(state, { payload }) {\n    return {\n        ...state,\n        loaded: true,\n        entity: payload.results[0]\n    };\n}\n\nfunction onApplicationSelected(state, { payload }) {\n    return {\n        ...state,\n        activeApp: payload\n    };\n}\n\nfunction toggleDrawer(state, { payload }) {\n    return  {\n        ...state,\n        isToggleOpened: payload?.isOpened\n    };\n}\n\nfunction showTagsPending(state) {\n    return {\n        ...state,\n        tagModalLoaded: false\n    };\n}\n\nfunction updateAnsibleName(state, { meta }, useOrigValue) {\n    const value = useOrigValue ? meta?.origValue : meta?.value;\n    return {\n        ...state,\n        ...state.rows && {\n            rows: state.rows.map((row) => row.id === meta?.id ? ({\n                ...row,\n                // eslint-disable-next-line camelcase\n                ansible_host: value\n            }) : row)\n        },\n        ...state.entity && {\n            entity: {\n                ...state.entity,\n                // eslint-disable-next-line camelcase\n                ansible_host: value\n            }\n        }\n    };\n}\n\nexport function updateEntity(state, { meta }, useOrigValue) {\n    const value = useOrigValue ? meta?.origValue : meta?.value;\n    return {\n        ...state,\n        ...state.rows && {\n            rows: state.rows.map((row) => row.id === meta?.id ? ({\n                ...row,\n                // eslint-disable-next-line camelcase\n                display_name: value\n            }) : row)\n        },\n        ...state.entity && {\n            entity: {\n                ...state.entity,\n                // eslint-disable-next-line camelcase\n                display_name: value\n            }\n        }\n    };\n}\n\nexport default {\n    [ACTION_TYPES.LOAD_ENTITIES_PENDING]: () => entityDefaultState,\n    [ACTION_TYPES.LOAD_ENTITY_PENDING]: entityDetailPending,\n    [ACTION_TYPES.LOAD_ENTITY_FULFILLED]: entityDetailLoaded,\n    [APPLICATION_SELECTED]: onApplicationSelected,\n    [ACTION_TYPES.LOAD_TAGS]: showTags,\n    [ACTION_TYPES.LOAD_TAGS_PENDING]: showTagsPending,\n    [ACTION_TYPES.LOAD_TAGS_FULFILLED]: showTags,\n    [TOGGLE_TAG_MODAL]: toggleTagModalReducer,\n    [TOGGLE_DRAWER]: toggleDrawer,\n    [ACTION_TYPES.UPDATE_DISPLAY_NAME_PENDING]: updateEntity,\n    [ACTION_TYPES.SET_ANSIBLE_HOST_PENDING]: updateAnsibleName,\n    [ACTION_TYPES.UPDATE_DISPLAY_NAME_ERROR]: (state, payload) => updateEntity(state, payload, true),\n    [ACTION_TYPES.SET_ANSIBLE_HOST_ERROR]: (state, payload) => updateAnsibleName(state, payload, true),\n    ...systemIssuesReducer\n};\n","import {\n    INVENTORY_ACTION_TYPES,\n    ACTION_TYPES,\n    SELECT_ENTITY,\n    SET_INVENTORY_FILTER,\n    SET_PAGINATION\n} from './action-types';\nimport systemProfileStore from './systemProfileStore';\nimport { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport { mergeArraysByKey } from '@redhat-cloud-services/frontend-components-utilities/helpers';\nimport { notificationsReducer } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport entitiesReducer, { defaultState as entitiesDefault } from './entities';\nimport entityDetailsReducer, { entityDefaultState as entityDefault, updateEntity } from './entityDetails';\n\nexport { entitiesReducer, entityDetailsReducer };\n\nconst defaultState = { loaded: false, selected: new Map() };\n\nfunction entitiesLoaded(state, { payload }) {\n    return {\n        ...state,\n        rows: mergeArraysByKey([state.rows, payload.results]),\n        entities: mergeArraysByKey([state.entities, payload.results])\n    };\n}\n\nfunction entityLoaded(state) {\n    return {\n        ...state,\n        loaded: true\n    };\n}\n\nfunction entitySelected(state, { payload }) {\n    const selected = state.selected || (new Map());\n    if (payload.selected) {\n        if (payload.id === 0) {\n            state.rows.forEach(row => selected.set(row.id, row));\n        } else {\n            const selectedRow = state.rows && state.rows.find(({ id }) => id === payload.id);\n            selected.set(payload.id, { ...selectedRow || {}, id: payload.id });\n        }\n    } else {\n        if (payload.id === 0) {\n            state.rows.forEach(row => selected.delete(row.id));\n        } else if (payload.id === -1) {\n            selected.clear();\n        } else {\n            selected.delete(payload.id);\n        }\n    }\n\n    return {\n        ...state,\n        selected: new Map(selected)\n    };\n}\n\nfunction resourceOptTabVisibility(state, { payload }) {\n    return {\n        ...state,\n        activeApps: state.activeApps?.map((entity) => entity.name === 'ros' ? ({\n            ...entity,\n            isVisible: payload\n        }) : entity\n        )\n    };\n}\n\nfunction entityDeleted(state, { meta }) {\n    const selected = state.selected || (new Map());\n    meta.systems.forEach(id => selected.delete(id));\n\n    return {\n        ...state,\n        selected: new Map(selected)\n    };\n}\n\nfunction onEntitiesLoaded(state, { payload, meta }) {\n    if (meta?.lastDateRequest < state?.lastDateRequest) {\n        return state;\n    }\n\n    return {\n        ...state,\n        rows: mergeArraysByKey([state.rows, payload.results.map(result => {\n            return {\n                ...result,\n                selected: state.selected && state.selected.has(result.id)\n            };\n        })])\n    };\n}\n\nfunction onSetFilter(state, { payload }) {\n    return {\n        ...state,\n        activeFilters: payload.filtersList\n    };\n}\n\nfunction onSetPagination(state, { payload }) {\n    const perPage = parseInt(payload.perPage, 10);\n    const page = parseInt(payload.page, 10);\n    return {\n        ...state,\n        perPage: isNaN(perPage) ? 50 : perPage,\n        page: isNaN(page) ? 1 : page\n    };\n}\n\nlet reducers = {\n    notifications: notificationsReducer,\n    systemProfileStore\n};\n\nexport const tableReducer = applyReducerHash(\n    {\n        [ACTION_TYPES.GET_ENTITIES_FULFILLED]: entitiesLoaded,\n        [INVENTORY_ACTION_TYPES.LOAD_ENTITIES_FULFILLED]: onEntitiesLoaded,\n        [`${ACTION_TYPES.REMOVE_ENTITY}_FULFILLED`]: entityDeleted,\n        [SELECT_ENTITY]: entitySelected,\n        FILTER_SELECT: (state) => ({ ...state, selected: {} }),\n        [SET_INVENTORY_FILTER]: onSetFilter,\n        [SET_PAGINATION]: onSetPagination,\n        [ACTION_TYPES.UPDATE_DISPLAY_NAME_FULFILLED]: updateEntity\n    },\n    defaultState\n);\n\nexport const entitesDetailReducer = () => applyReducerHash(\n    {\n        [INVENTORY_ACTION_TYPES.LOAD_ENTITY_FULFILLED]: entityLoaded,\n        [INVENTORY_ACTION_TYPES.LOAD_SYSTEM_PROFILE_FULFILLED]: resourceOptTabVisibility\n    },\n    defaultState\n);\n\nexport function mergeWithEntities(additionalReducers = (state) => state, defaultState = {}) {\n    return ({\n        entities: (state, payload) => ({\n            ...additionalReducers({\n                ...applyReducerHash({\n                    ...entitiesReducer\n                }, { ...entitiesDefault, ...defaultState })(state, payload)\n            }, payload)\n        })\n    });\n}\n\nexport function mergeWithDetail(additionalReducers = (state) => state, defaultState = {}) {\n    return ({\n        entityDetails: (state, payload) => ({\n            ...additionalReducers({\n                ...applyReducerHash({\n                    ...entityDetailsReducer\n                }, { ...entityDefault, ...defaultState })(state, payload)\n            }, payload)\n        })\n    });\n}\n\nexport default reducers;\n"],"names":["maxWidth","content","hasGutter","className","OperatingSystemFormatter","operatingSystem","name","version","major","minor","propTypes","PropTypes","data","id","item","props","key","os_release","noDetail","widget","href","location","pathname","substr","onClick","event","loaded","rowClick","onRowClick","isMetaKey","ctrlKey","metaKey","which","preventDefault","stopPropagation","defaultState","tagsLoaded","allTagsLoaded","operatingSystems","operatingSystemsLoaded","invConfig","sortBy","direction","defaultColumns","sortKey","title","renderFunc","TitleColumn","width","isStatic","value","systemId","TagWithDialog","count","length","dataLabel","systemProfile","operating_system","_id","culled","culled_timestamp","staleWarn","stale_warning_timestamp","stale","stale_timestamp","perReporterStaleness","per_reporter_staleness","CullingInformation","staleWarning","render","msg","date","extraTitle","verifyCulledInsightsClient","Date","toLocaleString","entitiesLoaded","state","payload","results","perPage","per_page","page","total","filters","meta","lastDateRequest","undefined","activeFilters","rows","mergeArraysByKey","filter","created","loadingRejected","error","showTags","find","entity","activeSystemTag","tags","tagModalLoaded","Object","values","tagsCount","toggleTagModalReducer","isOpen","showTagDialog","ACTION_TYPES","lastDateRequestTags","allTags","entries","groupBy","tag","namespace","map","allTagsPagination","additionalTagsCount","allTagsTotal","columns","entry","versionStringified","label","UPDATE_ENTITIES","SHOW_ENTITIES","action","FILTER_SELECT","items","selected","active","lastIndexOf","splice","indexOf","forEach","subItem","SELECT_ENTITY","concat","CHANGE_SORT","CLEAR_FILTERS","ENTITIES_LOADING","isLoading","TOGGLE_TAG_MODAL","CONFIG_CHANGED","isPending","type","systemIssues","isLoaded","SYSTEM_ISSUE_TYPES","advisor","criticalCount","total_risk","cve","critical","total_items","moderate","important","low","patch","bug","attributes","rhba_count","enhancement","rhea_count","security","rhsa_count","compliance","profiles","system","entityDefaultState","updateAnsibleName","useOrigValue","origValue","row","ansible_host","updateEntity","display_name","APPLICATION_SELECTED","activeApp","TOGGLE_DRAWER","isToggleOpened","isOpened","systemIssuesReducer","Map","entityLoaded","resourceOptTabVisibility","activeApps","isVisible","reducers","notifications","notificationsReducer","systemProfileStore","tableReducer","applyReducerHash","entities","INVENTORY_ACTION_TYPES","result","has","systems","delete","set","selectedRow","clear","SET_INVENTORY_FILTER","filtersList","SET_PAGINATION","parseInt","isNaN","entitesDetailReducer","mergeWithEntities","additionalReducers","entitiesReducer","entitiesDefault","mergeWithDetail","entityDetails","entityDetailsReducer","entityDefault"],"sourceRoot":""}