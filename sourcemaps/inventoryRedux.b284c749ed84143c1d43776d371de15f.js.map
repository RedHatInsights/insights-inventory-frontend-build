{"version":3,"file":"js/inventoryRedux.a4d0a100ece39f084fb7.js","mappings":"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","sources":["webpack:///./src/components/GeneralInfo/BiosCard/BiosCard.js","webpack:///./src/components/SystemDetails/Advisor.js","webpack:///./src/components/SystemDetails/Compliance.js","webpack:///./src/components/SystemDetails/GeneralInfo.js","webpack:///./src/components/SystemDetails/Patch.js","webpack:///./src/components/SystemDetails/Ros.js","webpack:///./src/components/SystemDetails/Vulnerability.js","webpack:///./src/store/entityDetails.js","webpack:///./src/store/index.js","webpack:///./src/store/permissions/reducer.js","webpack:///./src/store/reducers.js","webpack:///./src/store/systemIssues.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport LoadingCard from '../LoadingCard';\nimport { biosSelector } from '../selectors';\nimport DateFormat from '@redhat-cloud-services/frontend-components/DateFormat';\nimport { extraShape, isDate } from '../../../constants';\n\nconst BiosCard = ({ bios, detailLoaded, hasVendor, hasVersion, handleClick, hasReleaseDate, extra }) => (<LoadingCard\n    title=\"BIOS\"\n    isLoading={ !detailLoaded }\n    items={ [\n        ...hasVendor ? [{ title: 'Vendor', value: bios.vendor }] : [],\n        ...hasVersion ? [{ title: 'Version', value: bios.version }] : [],\n        ...hasReleaseDate ? [{ title: 'Release date', value: (isDate(bios.releaseDate) ?\n            <DateFormat date={ new Date(bios.releaseDate) } type=\"onlyDate\" /> :\n            'Not available'\n        ) }] : [],\n        ...extra.map(({ onClick, ...item }) => ({\n            ...item,\n            ...onClick && { onClick: (e) => onClick(e, handleClick) }\n        }))\n    ] }\n/>);\n\nBiosCard.propTypes = {\n    detailLoaded: PropTypes.bool,\n    handleClick: PropTypes.func,\n    bios: PropTypes.shape({\n        vendor: PropTypes.string,\n        version: PropTypes.string,\n        releaseDate: PropTypes.string,\n        csm: PropTypes.arrayOf(PropTypes.string)\n    }),\n    hasVendor: PropTypes.bool,\n    hasVersion: PropTypes.bool,\n    hasReleaseDate: PropTypes.bool,\n    extra: PropTypes.arrayOf(extraShape)\n};\nBiosCard.defaultProps = {\n    detailLoaded: false,\n    handleClick: () => undefined,\n    extra: [],\n    hasVendor: true,\n    hasVersion: true,\n    hasReleaseDate: true\n};\n\nexport default connect(({\n    systemProfileStore: {\n        systemProfile\n    }\n}) => ({\n    detailLoaded: systemProfile && systemProfile.loaded,\n    bios: biosSelector(systemProfile)\n}))(BiosCard);\n","import React from 'react';\nimport { useStore } from 'react-redux';\nimport AsyncComponent from '@redhat-cloud-services/frontend-components/AsyncComponent';\n\nconst AdvisorTab = () => {\n    return <AsyncComponent\n        appName=\"advisor\"\n        module=\"./SystemDetail\"\n        store={useStore()}\n        customItnl\n        intlProps={{\n            locale: navigator.language\n        }}\n    />;\n};\n\nexport default AdvisorTab;\n","import React from 'react';\nimport { useStore } from 'react-redux';\nimport { useRouteMatch } from 'react-router-dom';\nimport AsyncComponent from '@redhat-cloud-services/frontend-components/AsyncComponent';\n\nconst ComplianceTab = () => {\n    const { params } = useRouteMatch('/:inventoryId');\n    return <AsyncComponent\n        appName=\"compliance\"\n        module=\"./SystemDetail\"\n        store={useStore()}\n        customItnl\n        intlProps={{\n            locale: navigator.language\n        }}\n        inventoryId={ params.inventoryId }\n        remediationsEnabled\n    />;\n};\n\nexport default ComplianceTab;\n","import React, { useEffect, useState, Fragment } from 'react';\nimport { Provider } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport GeneralInformation from '../GeneralInfo/GeneralInformation';\nexport { default as TextInputModal } from '../GeneralInfo/TextInputModal';\nimport fallback from '../SpinnerFallback';\nimport systemProfileStore from '../../store/systemProfileStore';\n\nconst GeneralInfoTab = ({ getRegistry, ...props }) => {\n    const [Wrapper, setWrapper] = useState();\n    useEffect(() => {\n        if (getRegistry) {\n            getRegistry()?.register?.({ systemProfileStore });\n        }\n\n        setWrapper(() => getRegistry ? Provider : Fragment);\n    }, []);\n    return Wrapper ? <Wrapper\n        {...getRegistry && {\n            store: getRegistry().getStore()\n        }}\n    >\n        <GeneralInformation {...props} />\n    </Wrapper> : fallback;\n};\n\nGeneralInfoTab.propTypes = {\n    getRegistry: PropTypes.func\n};\n\nexport default GeneralInfoTab;\n","import React, { useContext } from 'react';\nimport { RegistryContext } from '../../store';\nimport AsyncComponent from '@redhat-cloud-services/frontend-components/AsyncComponent';\n\nconst PatchTab = () => {\n    const { getRegistry } = useContext(RegistryContext);\n\n    return <AsyncComponent\n        appName=\"patch\"\n        module=\"./SystemDetail\"\n        getRegistry={getRegistry}\n    />;\n};\n\nexport default PatchTab;\n","import React, { useContext } from 'react';\nimport { useRouteMatch } from 'react-router-dom';\nimport { RegistryContext } from '../../store';\nimport AsyncComponent from '@redhat-cloud-services/frontend-components/AsyncComponent';\n\nconst RosTab = () => {\n    const { params } = useRouteMatch('/:inventoryId');\n    const { getRegistry } = useContext(RegistryContext);\n\n    return <AsyncComponent\n        appName=\"ros\"\n        module=\"./SystemDetail\"\n        getRegistry={ getRegistry }\n        inventoryId={ params.inventoryId }\n    />;\n};\n\nexport default RosTab;\n","import React, { useContext } from 'react';\nimport { useRouteMatch } from 'react-router-dom';\nimport { RegistryContext } from '../../store';\nimport AsyncComponent from '@redhat-cloud-services/frontend-components/AsyncComponent';\n\nconst VulnerabilityTab = () => {\n    const { params } = useRouteMatch('/:inventoryId');\n    const { getRegistry } = useContext(RegistryContext);\n\n    return <AsyncComponent\n        appName=\"vulnerability\"\n        module=\"./SystemDetail\"\n        getRegistry={getRegistry}\n        customItnlProvider\n        entity={ { id: params.inventoryId } }\n    />;\n};\n\nexport default VulnerabilityTab;\n","import { ACTION_TYPES, APPLICATION_SELECTED, TOGGLE_TAG_MODAL, TOGGLE_DRAWER } from './action-types';\nimport { showTags, toggleTagModalReducer } from './entities';\nimport systemIssuesReducer from './systemIssues';\nexport const entityDefaultState = { loaded: false };\n\nfunction entityDetailPending(state) {\n    return {\n        ...state,\n        loaded: false\n    };\n}\n\nfunction entityDetailLoaded(state, { payload }) {\n    return {\n        ...state,\n        loaded: true,\n        entity: payload.results[0]\n    };\n}\n\nfunction onApplicationSelected(state, { payload }) {\n    return {\n        ...state,\n        activeApp: payload\n    };\n}\n\nfunction toggleDrawer(state, { payload }) {\n    return  {\n        ...state,\n        isToggleOpened: payload?.isOpened\n    };\n}\n\nfunction showTagsPending(state) {\n    return {\n        ...state,\n        tagModalLoaded: false\n    };\n}\n\nexport default {\n    [ACTION_TYPES.LOAD_ENTITIES_PENDING]: () => entityDefaultState,\n    [ACTION_TYPES.LOAD_ENTITY_PENDING]: entityDetailPending,\n    [ACTION_TYPES.LOAD_ENTITY_FULFILLED]: entityDetailLoaded,\n    [APPLICATION_SELECTED]: onApplicationSelected,\n    [ACTION_TYPES.LOAD_TAGS]: showTags,\n    [ACTION_TYPES.LOAD_TAGS_PENDING]: showTagsPending,\n    [ACTION_TYPES.LOAD_TAGS_FULFILLED]: showTags,\n    [TOGGLE_TAG_MODAL]: toggleTagModalReducer,\n    [TOGGLE_DRAWER]: toggleDrawer,\n    ...systemIssuesReducer\n};\n","\nimport { createContext } from 'react';\nimport MiddlewareListener from '@redhat-cloud-services/frontend-components-utilities/MiddlewareListener';\nimport { ReducerRegistry } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport notificationsMiddleware from '@redhat-cloud-services/frontend-components-notifications/notificationsMiddleware';\nimport promise  from 'redux-promise-middleware';\nexport { default as reducers, tableReducer, entitesDetailReducer } from './reducers';\n\nexport const RegistryContext = createContext({\n    getRegistry: () => {}\n});\n\nlet middlewareListener;\n\nexport function init (...middleware) {\n    middlewareListener = new MiddlewareListener();\n    return new ReducerRegistry(\n        {},\n        [\n            middlewareListener.getMiddleware(),\n            promise,\n            notificationsMiddleware({\n                errorDescriptionKey: ['detail', 'stack']\n            }),\n            ...middleware\n        ]\n    );\n}\n\nexport function addNewListener ({ actionType, callback }) {\n    return middlewareListener.addNew({\n        on: actionType,\n        callback\n    });\n}\n","import { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport { ACTION_TYPES } from '../action-types';\n\nconst loadWritePermissionsPending = (state) => ({\n    ...state,\n    loadingFailed: false,\n    loading: true,\n    writePermissions: undefined\n});\n\nconst loadWritePermissionsFulfilled = (state, { payload }) => ({\n    ...state,\n    loading: false,\n    loadingFailed: false,\n    writePermissions: payload.writePermissions\n});\n\nconst loadWritePermissionsFailed = (state) => ({\n    ...state,\n    loading: false,\n    loadingFailed: true\n});\n\nconst defaultPermissionState = {\n    loading: true,\n    writePermissions: false,\n    loadingFailed: false\n};\n\nconst permissionsReducer = applyReducerHash(\n    {\n        [`${ACTION_TYPES.LOAD_WRITE_PERMISSIONS}_PENDING`]: loadWritePermissionsPending,\n        [`${ACTION_TYPES.LOAD_WRITE_PERMISSIONS}_FULFILLED`]: loadWritePermissionsFulfilled,\n        [`${ACTION_TYPES.LOAD_WRITE_PERMISSIONS}_FAILED`]: loadWritePermissionsFailed\n    },\n    defaultPermissionState\n);\n\nexport default permissionsReducer;\n","import {\n    INVENTORY_ACTION_TYPES,\n    ACTION_TYPES,\n    SELECT_ENTITY,\n    SET_INVENTORY_FILTER,\n    SET_PAGINATION\n} from './action-types';\nimport systemProfileStore from './systemProfileStore';\nimport {\n    ComplianceTab,\n    VulnerabilityTab,\n    AdvisorTab,\n    GeneralInformationTab,\n    PatchTab,\n    RosTab\n} from '../components/SystemDetails';\nimport { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport { mergeArraysByKey } from '@redhat-cloud-services/frontend-components-utilities/helpers';\nimport { notificationsReducer } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport entitiesReducer, { defaultState as entitiesDefault } from './entities';\nimport entityDetailsReducer, { entityDefaultState as entityDefault } from './entityDetails';\n\nexport { entitiesReducer, entityDetailsReducer };\n\nimport permissionsReducer from './permissions/reducer';\n\nconst defaultState = { loaded: false, selected: new Map() };\n\nfunction entitiesLoaded(state, { payload }) {\n    return {\n        ...state,\n        rows: mergeArraysByKey([state.rows, payload.results]),\n        entities: mergeArraysByKey([state.entities, payload.results])\n    };\n}\n\nfunction updateEntity(state, { meta }) {\n    return {\n        ...state,\n        rows: state.rows.map((row) => row.id === meta?.id ? ({\n            ...row,\n            // eslint-disable-next-line camelcase\n            display_name: meta?.value\n        }) : row)\n    };\n}\n\nfunction entityLoaded(state) {\n    return {\n        ...state,\n        loaded: true,\n        activeApps: [\n            { title: 'General information', name: 'general_information', component: GeneralInformationTab },\n            { title: 'Advisor', name: 'advisor', component: AdvisorTab },\n            {\n                title: 'Vulnerability',\n                name: 'vulnerabilities',\n                component: VulnerabilityTab\n            },\n            {\n                title: 'Compliance',\n                name: 'compliance',\n                component: ComplianceTab\n            },\n            {\n                title: 'Patch',\n                name: 'patch',\n                component: PatchTab\n            },\n            (!insights.chrome.isProd || (insights.chrome.isProd && insights?.chrome?.isBeta())) && {\n                title: 'Resource Optimization',\n                name: 'ros',\n                isVisible: false,\n                component: RosTab\n            }\n        ].filter(Boolean)\n    };\n}\n\nfunction entitySelected(state, { payload }) {\n    const selected = state.selected || (new Map());\n    if (payload.selected) {\n        if (payload.id === 0) {\n            state.rows.forEach(row => selected.set(row.id, row));\n        } else {\n            const selectedRow = state.rows && state.rows.find(({ id }) => id === payload.id);\n            selected.set(payload.id, { ...selectedRow || {}, id: payload.id });\n        }\n    } else {\n        if (payload.id === 0) {\n            state.rows.forEach(row => selected.delete(row.id));\n        } else if (payload.id === -1) {\n            selected.clear();\n        } else {\n            selected.delete(payload.id);\n        }\n    }\n\n    return {\n        ...state,\n        selected: new Map(selected)\n    };\n}\n\nfunction resourceOptTabVisibility(state, { payload }) {\n    return {\n        ...state,\n        activeApps: state.activeApps?.map((entity) => entity.name === 'ros' ? ({\n            ...entity,\n            isVisible: payload\n        }) : entity\n        )\n    };\n}\n\nfunction entityDeleted(state, { meta }) {\n    const selected = state.selected || (new Map());\n    meta.systems.forEach(id => selected.delete(id));\n\n    return {\n        ...state,\n        selected: new Map(selected)\n    };\n}\n\nfunction onEntitiesLoaded(state, { payload, meta }) {\n    if (meta?.lastDateRequest < state?.lastDateRequest) {\n        return state;\n    }\n\n    return {\n        ...state,\n        rows: mergeArraysByKey([state.rows, payload.results.map(result => {\n            return {\n                ...result,\n                selected: state.selected && state.selected.has(result.id)\n            };\n        })])\n    };\n}\n\nfunction onSetFilter(state, { payload }) {\n    return {\n        ...state,\n        activeFilters: payload.filtersList\n    };\n}\n\nfunction onSetPagination(state, { payload }) {\n    const perPage = parseInt(payload.perPage, 10);\n    const page = parseInt(payload.page, 10);\n    return {\n        ...state,\n        perPage: isNaN(perPage) ? 50 : perPage,\n        page: isNaN(page) ? 1 : page\n    };\n}\n\nlet reducers = {\n    notifications: notificationsReducer,\n    systemProfileStore,\n    permissionsReducer\n};\n\nexport const tableReducer = applyReducerHash(\n    {\n        [ACTION_TYPES.GET_ENTITIES_FULFILLED]: entitiesLoaded,\n        [INVENTORY_ACTION_TYPES.LOAD_ENTITIES_FULFILLED]: onEntitiesLoaded,\n        [`${ACTION_TYPES.REMOVE_ENTITY}_FULFILLED`]: entityDeleted,\n        [SELECT_ENTITY]: entitySelected,\n        FILTER_SELECT: (state) => ({ ...state, selected: {} }),\n        [SET_INVENTORY_FILTER]: onSetFilter,\n        [SET_PAGINATION]: onSetPagination,\n        [ACTION_TYPES.UPDATE_DISPLAY_NAME_FULFILLED]: updateEntity\n    },\n    defaultState\n);\n\nexport const entitesDetailReducer = () => applyReducerHash(\n    {\n        [INVENTORY_ACTION_TYPES.LOAD_ENTITY_FULFILLED]: entityLoaded,\n        [INVENTORY_ACTION_TYPES.LOAD_SYSTEM_PROFILE_FULFILLED]: resourceOptTabVisibility\n    },\n    defaultState\n);\n\nexport function mergeWithEntities(additionalReducers = (state) => state, defaultState = {}) {\n    return ({\n        entities: (state, payload) => ({\n            ...additionalReducers({\n                ...applyReducerHash({\n                    ...entitiesReducer\n                }, { ...entitiesDefault, ...defaultState })(state, payload)\n            }, payload)\n        })\n    });\n}\n\nexport function mergeWithDetail(additionalReducers = (state) => state, defaultState = {}) {\n    return ({\n        entityDetails: (state, payload) => ({\n            ...additionalReducers({\n                ...applyReducerHash({\n                    ...entityDetailsReducer\n                }, { ...entityDefault, ...defaultState })(state, payload)\n            }, payload)\n        })\n    });\n}\n\nexport default reducers;\n","/* eslint-disable camelcase */\nimport { SYSTEM_ISSUE_TYPES } from './action-types';\n\nexport function advisor(state, { payload }) {\n    return {\n        ...state,\n        systemIssues: {\n            ...state?.systemIssues,\n            advisor: {\n                isLoaded: true,\n                criticalCount: payload?.filter(item => item?.total_risk >= 4)\n            }\n        }\n    };\n}\n\nexport function cve(state, { payload }) {\n    return {\n        ...state,\n        systemIssues: {\n            ...state?.systemIssues,\n            cve: {\n                isLoaded: true,\n                critical: {\n                    count: payload?.critical?.meta?.total_items || 0\n                },\n                moderate: {\n                    count: payload?.moderate?.meta?.total_items || 0\n                },\n                important: {\n                    count: payload?.important?.meta?.total_items || 0\n                },\n                low: {\n                    count: payload?.low?.meta?.total_items || 0\n                }\n            }\n        }\n    };\n}\n\nexport function patch(state, { payload }) {\n    return {\n        ...state,\n        systemIssues: {\n            ...state?.systemIssues,\n            patch: {\n                isLoaded: true,\n                bug: {\n                    count: payload?.data?.attributes?.rhba_count || 0\n                },\n                enhancement: {\n                    count: payload?.data?.attributes?.rhea_count || 0\n                },\n                security: {\n                    count: payload?.data?.attributes?.rhsa_count || 0\n                }\n            }\n        }\n    };\n}\n\nexport function compliance(state, { payload }) {\n    return {\n        ...state,\n        systemIssues: {\n            ...state?.systemIssues,\n            compliance: {\n                isLoaded: true,\n                profiles: payload?.data?.system?.profiles\n            }\n        }\n    };\n}\n\nexport function isPending(state, type) {\n    return {\n        ...state,\n        systemIssues: {\n            ...state?.systemIssues,\n            ...type && { [type]: { isLoaded: false } }\n        }\n    };\n}\n\nexport default {\n    [SYSTEM_ISSUE_TYPES.LOAD_ADVISOR_RECOMMENDATIONS_PENDING]: (state) => isPending(state, 'advisor'),\n    [SYSTEM_ISSUE_TYPES.LOAD_APPLICABLE_CVES_PENDING]: (state) => isPending(state, 'cve'),\n    [SYSTEM_ISSUE_TYPES.LOAD_APPLICABLE_ADVISORIES_PENDING]: (state) => isPending(state, 'patch'),\n    [SYSTEM_ISSUE_TYPES.LOAD_COMPLIANCE_POLICIES_PENDING]: (state) => isPending(state, 'compliance'),\n    [SYSTEM_ISSUE_TYPES.LOAD_ADVISOR_RECOMMENDATIONS_FULFILLED]: advisor,\n    [SYSTEM_ISSUE_TYPES.LOAD_APPLICABLE_CVES_FULFILLED]: cve,\n    [SYSTEM_ISSUE_TYPES.LOAD_APPLICABLE_ADVISORIES_FULFILLED]: patch,\n    [SYSTEM_ISSUE_TYPES.LOAD_COMPLIANCE_POLICIES_FULFILLED]: compliance\n};\n"],"names":["BiosCard","bios","detailLoaded","hasVendor","hasVersion","handleClick","hasReleaseDate","extra","title","isLoading","items","value","vendor","version","isDate","releaseDate","date","Date","type","map","onClick","e","propTypes","PropTypes","csm","extraShape","defaultProps","connect","systemProfile","systemProfileStore","loaded","biosSelector","appName","module","store","useStore","customItnl","intlProps","locale","navigator","language","params","useRouteMatch","inventoryId","remediationsEnabled","GeneralInfoTab","getRegistry","props","useState","Wrapper","setWrapper","useEffect","register","Provider","Fragment","getStore","fallback","useContext","RegistryContext","customItnlProvider","entity","id","entityDefaultState","ACTION_TYPES","state","payload","results","APPLICATION_SELECTED","activeApp","showTags","tagModalLoaded","TOGGLE_TAG_MODAL","toggleTagModalReducer","TOGGLE_DRAWER","isToggleOpened","isOpened","systemIssuesReducer","middlewareListener","createContext","init","MiddlewareListener","middleware","ReducerRegistry","getMiddleware","promise","notificationsMiddleware","errorDescriptionKey","applyReducerHash","loadingFailed","loading","writePermissions","undefined","defaultState","selected","Map","entityLoaded","activeApps","name","component","GeneralInformationTab","AdvisorTab","VulnerabilityTab","ComplianceTab","PatchTab","insights","chrome","isProd","isBeta","isVisible","RosTab","filter","Boolean","resourceOptTabVisibility","reducers","notifications","notificationsReducer","permissionsReducer","tableReducer","rows","mergeArraysByKey","entities","INVENTORY_ACTION_TYPES","meta","lastDateRequest","result","has","systems","forEach","delete","SELECT_ENTITY","row","set","selectedRow","find","clear","SET_INVENTORY_FILTER","activeFilters","filtersList","SET_PAGINATION","perPage","parseInt","page","isNaN","display_name","entitesDetailReducer","mergeWithEntities","additionalReducers","entitiesReducer","entitiesDefault","mergeWithDetail","entityDetails","entityDetailsReducer","entityDefault","isPending","systemIssues","isLoaded","SYSTEM_ISSUE_TYPES","advisor","criticalCount","item","total_risk","cve","critical","count","total_items","moderate","important","low","patch","bug","data","attributes","rhba_count","enhancement","rhea_count","security","rhsa_count","compliance","profiles","system"],"sourceRoot":""}