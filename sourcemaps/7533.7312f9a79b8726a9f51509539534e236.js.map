{"version":3,"file":"js/7533.1657895801344.65eea078dc3873448104.js","mappings":"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","sources":["webpack:///./src/components/GeneralInfo/LoadingCard/LoadingCard.js","webpack:///./src/components/GeneralInfo/EditButton/EditButton.js","webpack:///./src/components/GeneralInfo/SystemCard/SystemCard.js","webpack:///./src/components/GeneralInfo/TextInputModal/TextInputModal.js","webpack:///./src/components/GeneralInfo/dataMapper/dataMapper.js","webpack:///./src/components/GeneralInfo/selectors/selectors.js","webpack:///./src/constants.js","webpack:///./src/store/actions.js","webpack:///./node_modules/react-redux/es/connect/mapDispatchToProps.js","webpack:///./node_modules/react-redux/es/connect/mapStateToProps.js","webpack:///./node_modules/react-redux/es/connect/mergeProps.js","webpack:///./node_modules/react-redux/es/connect/connect.js"],"sourcesContent":["import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    Stack,\n    StackItem,\n    TextContent,\n    Text,\n    TextList,\n    TextVariants,\n    TextListItemVariants,\n    TextListVariants,\n    TextListItem\n} from '@patternfly/react-core';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components/Skeleton';\n\nconst valueToText = (value, singular, plural) => {\n    if ((value || value === 0) && singular) {\n        return value === 1 ? `1 ${singular}` : `${value} ${plural || `${singular}s`}`;\n    }\n\n    if (value === 0) {\n        return 'None';\n    }\n\n    return value || 'Not available';\n};\n\nexport const Clickable = ({ item: { onClick, value, target, plural, singular } }) => (\n    <a\n        onClick={ event => {\n            event.preventDefault();\n            onClick(event, { value, target });\n        } }\n        href={ `${window.location.href}/${target}` }\n    >\n        { valueToText(value, singular, plural) }\n    </a>\n);\n\nClickable.propTypes = {\n    item: PropTypes.shape({\n        value: PropTypes.node,\n        target: PropTypes.string,\n        onClick: PropTypes.func,\n        plural: PropTypes.string,\n        singular: PropTypes.string\n    })\n};\n\nClickable.defaultProps = {\n    item: {}\n};\n\nconst LoadingCard = ({ title, isLoading, items, children }) => {\n    return (\n        <Stack hasGutter>\n            <StackItem>\n                <TextContent>\n                    <Text component={ TextVariants.h1 }>\n                        { title }\n                    </Text>\n                </TextContent>\n            </StackItem>\n            <StackItem isFilled>\n                {items.length ?\n                    (<TextContent>\n                        <TextList component={ TextListVariants.dl }>\n                            { items.map((item, key) => (\n                                <Fragment key={ key }>\n                                    <TextListItem component={ TextListItemVariants.dt }>\n                                        { item.title }\n                                    </TextListItem>\n                                    <TextListItem component={ TextListItemVariants.dd }>\n                                        { isLoading && <Skeleton size={ item.size || SkeletonSize.sm } /> }\n                                        { !isLoading && (\n                                            item.onClick && item.value ?\n                                                <Clickable item={ item }/> :\n                                                valueToText(item.value, item.singular, item.plural)\n                                        ) }\n                                    </TextListItem>\n                                </Fragment>\n                            )) }\n                        </TextList>\n                    </TextContent>) : null}\n                {children}\n            </StackItem>\n        </Stack>\n    );\n};\n\nLoadingCard.propTypes = {\n    title: PropTypes.node.isRequired,\n    isLoading: PropTypes.bool,\n    items: PropTypes.arrayOf(PropTypes.shape({\n        title: PropTypes.node,\n        value: PropTypes.node,\n        onClick: PropTypes.func,\n        size: PropTypes.oneOf(Object.values(SkeletonSize)),\n        plural: PropTypes.string,\n        singular: PropTypes.string\n    })),\n    children: PropTypes.node\n};\n\nLoadingCard.defaultProps = {\n    isLoading: true,\n    items: []\n};\n\nexport default LoadingCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { usePermissions } from '@redhat-cloud-services/frontend-components-utilities/RBACHook';\n\nimport { PencilAltIcon } from '@patternfly/react-icons';\n\nconst InnerButton = ({ link, onClick }) => (\n    <a\n        className=\"ins-c-inventory__detail--action\"\n        href={ `${window.location.href}/${link}` }\n        onClick={ onClick }\n    >\n        <PencilAltIcon />\n    </a>\n);\n\nInnerButton.propTypes = {\n    link: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired\n};\n\nlet permissionsCache = undefined;\n\nconst EditButtonUnknownPermissions = (props) => {\n    const { hasAccess } = usePermissions('inventory', [\n        'inventory:*:*',\n        'inventory:hosts:write',\n        'inventory:*:write'\n    ]);\n\n    if (hasAccess) {\n        permissionsCache = hasAccess;\n    }\n\n    if (!hasAccess) {\n        return null;\n    }\n\n    return <InnerButton {...props}/>;\n};\n\nEditButtonUnknownPermissions.propTypes = {\n    link: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired\n};\n\nconst EditButtonWrapper = ({ writePermissions, ...props }) => {\n    if (insights.chrome.isProd || writePermissions || permissionsCache) {\n        return <InnerButton {...props} />;\n    }\n\n    if (typeof writePermissions !== 'boolean') {\n        return <EditButtonUnknownPermissions {...props} />;\n    }\n\n    return null;\n};\n\nEditButtonWrapper.propTypes = {\n    writePermissions: PropTypes.bool\n};\n\nexport default EditButtonWrapper;\n","import React, { Fragment, Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport LoadingCard from '../LoadingCard';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport { propertiesSelector } from '../selectors';\nimport { editDisplayName, editAnsibleHost, systemProfile } from '../../../store/actions';\nimport TextInputModal from '../TextInputModal';\nimport { loadEntity } from '../../../store/actions';\nimport { Popover, Button } from '@patternfly/react-core';\nimport EditButton from '../EditButton';\nimport { generalMapper } from '../dataMapper';\nimport { extraShape } from '../../../constants';\n\nconst TitleWithPopover = ({ title, content }) => (\n    <React.Fragment>\n        <span>{ title }</span>\n        <Popover\n            headerContent={<div>{ title }</div>}\n            bodyContent={<div>{ content }</div>}>\n            <Button\n                variant=\"plain\"\n                aria-label={`Action for ${title}`}\n                className='ins-active-general_information__popover-icon'>\n                <OutlinedQuestionCircleIcon />\n            </Button>\n        </Popover>\n    </React.Fragment>\n);\n\nclass SystemCard extends Component {\n    state = {\n        isDisplayNameModalOpen: false,\n        isAnsibleHostModalOpen: false\n    };\n\n    onCancel = () => {\n        this.setState({\n            isDisplayNameModalOpen: false,\n            isAnsibleHostModalOpen: false\n        });\n    };\n\n    onSubmit = (fn) => (value) => {\n        const { entity } = this.props;\n        fn(entity.id, value);\n        this.onCancel();\n    }\n\n    onShowDisplayModal = (event) => {\n        event.preventDefault();\n        this.setState({\n            isDisplayNameModalOpen: true\n        });\n    };\n\n    onShowAnsibleModal = (event) => {\n        event.preventDefault();\n        this.setState({\n            isAnsibleHostModalOpen: true\n        });\n    };\n\n    getAnsibleHost = () => {\n        const { entity } = this.props;\n        return entity.ansible_host || entity.fqdn || entity.id;\n    };\n\n    render() {\n        const {\n            detailLoaded,\n            entity,\n            properties,\n            setDisplayName,\n            setAnsibleHost,\n            writePermissions,\n            handleClick,\n            hasHostName,\n            hasDisplayName,\n            hasAnsibleHostname,\n            hasSAP,\n            hasCPUs,\n            hasSockets,\n            hasCores,\n            hasCPUFlags,\n            hasRAM,\n            extra\n        } = this.props;\n        const { isDisplayNameModalOpen, isAnsibleHostModalOpen } = this.state;\n        return (\n            <Fragment>\n                <LoadingCard\n                    title=\"System properties\"\n                    isLoading={ !detailLoaded }\n                    items={ [\n                        ...hasHostName ? [{\n                            title: <TitleWithPopover\n                                title='Host name'\n                                content='Name imported from the system.'/>,\n                            value: entity.fqdn, size: 'md'\n                        }] : [],\n                        ...hasDisplayName ? [{\n                            title: <TitleWithPopover\n                                title='Display name'\n                                content='System name displayed in an inventory list.'/>,\n                            value: (\n                                <Fragment>\n                                    { entity.display_name }\n                                    <EditButton\n                                        writePermissions={writePermissions}\n                                        link=\"display_name\"\n                                        onClick={this.onShowDisplayModal}\n                                    />\n                                </Fragment>\n                            ), size: 'md'\n                        }] : [],\n                        ...hasAnsibleHostname ? [{\n                            title: <TitleWithPopover\n                                title='Ansible hostname'\n                                content='Hostname that is used in playbooks by Remediations.'/>,\n                            value: (\n                                <Fragment>\n                                    { this.getAnsibleHost() }\n                                    <EditButton\n                                        writePermissions={writePermissions}\n                                        link=\"ansible_name\"\n                                        onClick={this.onShowAnsibleModal}\n                                    />\n                                </Fragment>\n                            ), size: 'md'\n                        }] : [],\n                        ...hasSAP ? [{\n                            title: 'SAP',\n                            value: properties.sapIds?.length,\n                            singular: 'identifier',\n                            target: 'sap_sids',\n                            onClick: () => {\n                                handleClick(\n                                    'SAP IDs (SID)',\n                                    generalMapper(properties.sapIds, 'SID')\n                                );\n                            }\n                        }] : [],\n                        ...hasCPUs ? [{ title: 'Number of CPUs', value: properties.cpuNumber }] : [],\n                        ...hasSockets ? [{ title: 'Sockets', value: properties.sockets }] : [],\n                        ...hasCores ? [{ title: 'Cores per socket', value: properties.coresPerSocket }] : [],\n                        ...hasCPUFlags ? [{\n                            title: 'CPU flags',\n                            value: properties?.cpuFlags?.length,\n                            singular: 'flag',\n                            target: 'flag',\n                            onClick: () => handleClick('CPU flags', generalMapper(properties.cpuFlags, 'flag name'))\n                        }] : [],\n                        ...hasRAM ? [{ title: 'RAM', value: properties.ramSize }] : [],\n                        ...extra.map(({ onClick, ...item }) => ({\n                            ...item,\n                            ...onClick && { onClick: (e) => onClick(e, handleClick) }\n                        }))\n                    ] }\n                />\n                <TextInputModal\n                    isOpen={ isDisplayNameModalOpen }\n                    title='Edit display name'\n                    value={ entity && entity.display_name }\n                    ariaLabel='Host inventory display name'\n                    modalOuiaId=\"edit-display-name-modal\"\n                    cancelOuiaId=\"cancel-edit-display-name\"\n                    confirmOuiaId=\"confirm-edit-display-name\"\n                    inputOuiaId=\"input-edit-display-name\"\n                    onCancel={ this.onCancel }\n                    onSubmit={ this.onSubmit(setDisplayName) }\n                />\n                <TextInputModal\n                    isOpen={ isAnsibleHostModalOpen }\n                    title='Edit Ansible host'\n                    value={ entity && this.getAnsibleHost() }\n                    ariaLabel='Ansible host'\n                    modalOuiaId=\"edit-ansible-name-modal\"\n                    cancelOuiaId=\"cancel-edit-ansible-name\"\n                    confirmOuiaId=\"confirm-edit-ansible-name\"\n                    inputOuiaId=\"input-edit-ansible-name\"\n                    onCancel={ this.onCancel }\n                    onSubmit={ this.onSubmit(setAnsibleHost) }\n                />\n            </Fragment>\n        );\n    }\n}\n\nSystemCard.propTypes = {\n    detailLoaded: PropTypes.bool,\n    entity: PropTypes.shape({\n        // eslint-disable-next-line camelcase\n        display_name: PropTypes.string,\n        // eslint-disable-next-line camelcase\n        ansible_host: PropTypes.string,\n        fqdn: PropTypes.string,\n        id: PropTypes.string\n    }),\n    properties: PropTypes.shape({\n        cpuNumber: PropTypes.number,\n        sockets: PropTypes.number,\n        coresPerSocket: PropTypes.number,\n        ramSize: PropTypes.string,\n        storage: PropTypes.arrayOf(PropTypes.shape({\n            device: PropTypes.string,\n            // eslint-disable-next-line camelcase\n            mount_point: PropTypes.string,\n            options: PropTypes.shape({}),\n            type: PropTypes.string\n        })),\n        sapIds: PropTypes.arrayOf(PropTypes.string),\n        cpuFlags: PropTypes.array\n    }),\n    setDisplayName: PropTypes.func,\n    setAnsibleHost: PropTypes.func,\n    writePermissions: PropTypes.bool,\n    handleClick: PropTypes.func,\n    hasHostName: PropTypes.bool,\n    hasDisplayName: PropTypes.bool,\n    hasAnsibleHostname: PropTypes.bool,\n    hasSAP: PropTypes.bool,\n    hasCPUs: PropTypes.bool,\n    hasSockets: PropTypes.bool,\n    hasCores: PropTypes.bool,\n    hasCPUFlags: PropTypes.bool,\n    hasRAM: PropTypes.bool,\n    extra: PropTypes.arrayOf(extraShape)\n};\nSystemCard.defaultProps = {\n    detailLoaded: false,\n    entity: {},\n    properties: {},\n    hasHostName: true,\n    hasDisplayName: true,\n    hasAnsibleHostname: true,\n    hasSAP: true,\n    hasCPUs: true,\n    hasSockets: true,\n    hasCores: true,\n    hasCPUFlags: true,\n    hasRAM: true,\n    extra: []\n};\n\nTitleWithPopover.propTypes = {\n    title: PropTypes.string.isRequired,\n    content: PropTypes.string.isRequired\n};\n\nfunction mapDispatchToProps(dispatch) {\n    const reloadWrapper = (id, event) => {\n        event.payload.then(data => {\n            dispatch(systemProfile(id, { hasItems: true }));\n            dispatch(loadEntity(id, { hasItems: true }, { showTags: true }));\n            return data;\n        });\n\n        return event;\n    };\n\n    return {\n        setDisplayName: (id, value) => {\n            dispatch(reloadWrapper(id, editDisplayName(id, value)));\n        },\n\n        setAnsibleHost: (id, value) => {\n            dispatch(reloadWrapper(id, editAnsibleHost(id, value)));\n        }\n    };\n}\n\nexport default connect(({\n    entityDetails: {\n        entity\n    },\n    systemProfileStore: {\n        systemProfile\n    }\n}) => ({\n    entity,\n    detailLoaded: systemProfile && systemProfile.loaded,\n    properties: propertiesSelector(systemProfile, entity)\n}), mapDispatchToProps)(SystemCard);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n    Button,\n    Modal,\n    TextInput\n} from '@patternfly/react-core';\n\nexport default class TextInputModal extends Component {\n    constructor (props) {\n        super(props);\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps (props, state) {\n        if (!props.isOpen) {\n            return { value: undefined };\n        }\n\n        if (state.value !== undefined) {\n            return null;\n        }\n\n        return {\n            value: props.value || ''\n        };\n    };\n\n    render () {\n        const {\n            title, isOpen, onCancel, onSubmit, ariaLabel, modalOuiaId, cancelOuiaId, confirmOuiaId, inputOuiaId\n        } = this.props;\n        const { value } = this.state;\n\n        return (\n            <Modal\n                variant=\"small\"\n                title={ title }\n                className=\"ins-c-inventory__detail--edit\"\n                aria-label={ ariaLabel ? `${ariaLabel} - modal` : 'input modal' }\n                ouiaId={ modalOuiaId }\n                isOpen={ isOpen }\n                onClose={ event => onCancel(event) }\n                actions={ [\n                    <Button key=\"cancel\" data-action=\"cancel\" variant=\"secondary\" onClick={ onCancel } ouiaId={ cancelOuiaId }>\n                        Cancel\n                    </Button>,\n                    <Button\n                        key=\"confirm\"\n                        data-action=\"confirm\"\n                        variant=\"primary\"\n                        onClick={ () => onSubmit(this.state.value) }\n                        ouiaId={ confirmOuiaId }\n                    >\n                        Save\n                    </Button>\n                ] }\n            >\n                <TextInput\n                    value={ value }\n                    type=\"text\"\n                    ouiaId={ inputOuiaId }\n                    onChange={ value => this.setState({ value }) }\n                    aria-label={ ariaLabel  }\n                />\n            </Modal>\n        );\n    }\n}\n\nTextInputModal.propTypes = {\n    title: PropTypes.string,\n    isOpen: PropTypes.bool,\n    onCancel: PropTypes.func,\n    onSubmit: PropTypes.func,\n    ariaLabel: PropTypes.string,\n    modalOuiaId: PropTypes.string,\n    cancelOuiaId: PropTypes.string,\n    confirmOuiaId: PropTypes.string,\n    inputOuiaId: PropTypes.string,\n    value: PropTypes.string\n};\n\nTextInputModal.defaultProps = {\n    onCancel: () => undefined,\n    onSubmit: () => undefined,\n    isOpen: false,\n    title: '',\n    ariaLabel: 'input text'\n};\n","/* eslint-disable camelcase */\n\nimport React from 'react';\nimport {\n    CheckCircleIcon,\n    TimesIcon,\n    OutlinedQuestionCircleIcon,\n    OutlinedArrowAltCircleUpIcon,\n    OutlinedArrowAltCircleDownIcon\n} from '@patternfly/react-icons';\nimport { sortable } from '@patternfly/react-table';\nimport { Tooltip } from '@patternfly/react-core';\n\nexport const statusHelper = {\n    UP: <Tooltip content=\"Service is running\">\n        <OutlinedArrowAltCircleUpIcon className=\"ins-c-inventory__detail--up\" />\n    </Tooltip>,\n    DOWN: <Tooltip content=\"Service has stopped\">\n        <OutlinedArrowAltCircleDownIcon className=\"ins-c-inventory__detail--down\" />\n    </Tooltip>\n};\n\nexport const enabledHelper = {\n    true: <Tooltip content=\"Source enabled\">\n        <CheckCircleIcon className=\"ins-c-inventory__detail--enabled\" />\n    </Tooltip>,\n    false: <Tooltip content=\"Source disabled\">\n        <TimesIcon className=\"ins-c-inventory__detail--disabled\" />\n    </Tooltip>\n};\n\nexport const diskMapper = (devices = []) => ({\n    cells: [\n        {\n            title: 'Device',\n            transforms: [sortable]\n        },\n        {\n            title: 'Label',\n            transforms: [sortable]\n        },\n        {\n            title: 'Mount point',\n            transforms: [sortable]\n        },\n        {\n            title: 'Type',\n            transforms: [sortable]\n        }\n    ],\n    rows: devices.map(({\n        device,\n        label,\n        mountpoint,\n        options,\n        mounttype\n    }) => {\n        const calculatedOptions = (options && options.options) || options;\n        return ({\n            isOpen: false,\n            child: <div>\n                {\n                    calculatedOptions &&\n                    Object.entries(calculatedOptions.value || calculatedOptions)\n                    .map(([oneKey, option]) => `${oneKey}=${option.value || option}`).join(',  ')\n                }\n            </div>,\n            cells: [\n                (device && device.value) || device,\n                label,\n                (mountpoint && mountpoint.value) || mountpoint,\n                (mounttype && mounttype.value) || mounttype\n            ]\n        });\n    }),\n    expandable: true\n});\n\nexport const productsMapper = (products = []) => ({\n    cells: [\n        {\n            title: 'Name',\n            transforms: [sortable]\n        },\n        'Status'\n    ],\n    rows: products.map(product => ([\n        product.name,\n        {\n            title: statusHelper[product.status] ||\n            <Tooltip content=\"Unknown service status\">\n                <OutlinedQuestionCircleIcon className=\"ins-c-inventory__detail--unknown\" />\n            </Tooltip>\n        }\n    ]))\n});\n\nexport const interfaceMapper = (data = []) => ({\n    cells: [\n        {\n            title: 'MAC address',\n            transforms: [sortable]\n        },\n        {\n            title: 'MTU',\n            transforms: [sortable]\n        },\n        {\n            title: 'Name',\n            transforms: [sortable]\n        },\n        'State',\n        {\n            title: 'Type',\n            transforms: [sortable]\n        }\n    ],\n    rows: data.map(item => ([\n        item.mac_address,\n        item.mtu,\n        item.name,\n        {\n            title: statusHelper[item.state] ||\n            <Tooltip content=\"Unknown service status\">\n                <OutlinedQuestionCircleIcon className=\"ins-c-inventory__detail--unknown\" />\n            </Tooltip>\n        },\n        item.type\n    ]))\n});\n\nexport const repositoriesMapper = ({ enabled, disabled } = { enabled: [], disabled: [] }) => ({\n    cells: [\n        {\n            title: 'Name',\n            transforms: [sortable]\n        },\n        {\n            title: 'Enabled',\n            transforms: [sortable]\n        },\n        {\n            title: 'GPG check',\n            transforms: [sortable]\n        }\n    ],\n    rows: [...enabled, ...disabled].map(repository => ([\n        {\n            title: repository.name,\n            sortValue: repository.name\n        },\n        {\n            title: enabledHelper[Boolean(repository.enabled)],\n            sortValue: `${repository.enabled}`\n        },\n        {\n            title: enabledHelper[Boolean(repository.gpgcheck)],\n            sortValue: `${repository.gpgcheck}`\n        }\n    ])),\n    filters: [\n        { type: 'textual' },\n        {\n            type: 'checkbox',\n            options: [\n                { label: 'Is enabled', value: 'true' },\n                { label: 'Not enabled', value: 'false' }\n            ]\n        },\n        {\n            type: 'checkbox',\n            options: [\n                { label: 'Is enabled', value: 'true' },\n                { label: 'Not enabled', value: 'false' }\n            ]\n        }\n    ]\n});\n\nexport const generalMapper = (data = [], title = '') => ({\n    cells: [{\n        title,\n        transforms: [sortable]\n    }],\n    rows: data.map(item => ([item])),\n    filters: [{ type: 'textual' }]\n});\n","/* eslint-disable camelcase */\nimport { registered } from '../../../Utilities/index';\n\nfunction safeParser(toParse, key) {\n    try {\n        return JSON.parse(toParse);\n    } catch {\n        return { [key]: toParse };\n    }\n}\n\nexport const propertiesSelector = ({\n    number_of_cpus,\n    number_of_sockets,\n    cores_per_socket,\n    ramSize,\n    disk_devices,\n    sap_sids,\n    cpu_flags\n} = {}, { facts } = { }) => ({\n    cpuNumber: number_of_cpus || facts?.rhsm?.CPU_CORES,\n    sockets: number_of_sockets || facts?.rhsm?.CPU_SOCKETS,\n    coresPerSocket: cores_per_socket || (\n        facts?.rhsm?.CPU_CORES\n            && facts?.rhsm?.CPU_CORES\n            && Number(facts?.rhsm?.CPU_CORES, 10) / Number(facts?.rhsm?.CPU_SOCKETS, 10)\n    ),\n    ramSize: ramSize || (facts?.rhsm?.MEMORY && `${facts?.rhsm?.MEMORY} GB`),\n    storage: disk_devices && disk_devices.map(({ device, label, mount_point, options, type }) => ({\n        ...device && safeParser(device, 'device'),\n        label,\n        ...mount_point && safeParser(mount_point, 'mountpoint'),\n        ...options && safeParser(options, 'options'),\n        ...type && safeParser(type, 'mounttype')\n    })\n    ),\n    sapIds: sap_sids,\n    cpuFlags: cpu_flags\n});\n\nexport const operatingSystem = ({\n    arch,\n    operating_system,\n    os_kernel_version,\n    last_boot_time,\n    kernel_modules\n} = {}, { facts } = {}) => ({\n    release: operating_system,\n    kernelRelease: os_kernel_version,\n    architecture: arch || facts?.rhsm?.ARCHITECTURE,\n    bootTime: last_boot_time,\n    kernelModules: kernel_modules\n});\n\nexport const biosSelector = ({\n    bios_vendor,\n    bios_version,\n    bios_release_date\n} = {}) => ({\n    vendor: bios_vendor,\n    version: bios_version,\n    releaseDate: bios_release_date\n});\n\nexport const infrastructureSelector = ({\n    infrastructure_type,\n    infrastructure_vendor,\n    network = {}\n} = {}, { facts } = {}) => ({\n    type: infrastructure_type || (\n        facts?.rhsm?.IS_VIRTUAL !== undefined && (facts?.rhsm?.IS_VIRTUAL ? 'virtual' : 'physical')\n    ) || undefined,\n    vendor: infrastructure_vendor,\n    ipv4: network.ipv4,\n    ipv6: network.ipv6,\n    nics: network.interfaces\n});\n\nexport const configurationSelector = ({\n    installed_packages,\n    enabled_services,\n    running_processes,\n    repositories\n} = {}) => ({\n    packages: installed_packages,\n    services: enabled_services,\n    processes: running_processes,\n    repositories\n});\n\nexport const collectionInformationSelector = ({\n    insights_client_version,\n    insights_egg_version\n} = {}) => ({\n    client: insights_client_version,\n    egg: insights_egg_version\n});\n\nexport const getDefaultCollectors = (entity) =>\n    registered?.filter(reporter => reporter.label !== 'insights-client not connected')\n    .map(reporter => ({\n        name: reporter.label,\n        status: entity?.per_reporter_staleness[reporter.value]?.check_in_succeeded,\n        updated: entity?.per_reporter_staleness[reporter.value]?.last_check_in,\n        details: {\n            name: reporter.idName,\n            id: entity?.[reporter.idValue]\n        }\n    }));\n\nexport const systemStatus = ({\n    stale_timestamp\n} = {}) => ({\n    stale: new Date() > new Date(stale_timestamp)\n});\n","import PropTypes from 'prop-types';\n\nexport const tagsMapper = (acc, curr) => {\n    let [namespace, keyValue] = curr.split('/');\n    if (!keyValue) {\n        keyValue = namespace;\n        namespace = null;\n    }\n\n    const [key, value = null] = keyValue.split('=');\n    const currTagKey = acc.findIndex(({ category }) => category === namespace);\n    const currTag = acc[currTagKey] || {\n        category: namespace,\n        key: namespace,\n        type: 'tags',\n        values: []\n    };\n    currTag.values.push({\n        name: `${key}${value ? `=${value}` : ''}`,\n        key: `${key}${value ? `=${value}` : ''}`,\n        tagKey: key,\n        value,\n        group: {\n            label: namespace,\n            value: namespace,\n            type: 'checkbox'\n        }\n    });\n    if (!acc[currTagKey]) {\n        acc.push(currTag);\n    }\n\n    return acc;\n};\n\nexport const prepareRows = (rows = [], pagination = {}) => (\n    rows\n    .slice((pagination.page - 1) * pagination.perPage, pagination.page * pagination.perPage)\n);\n\nexport const isDate = (date) => {\n    return !(isNaN(date) && isNaN(Date.parse(date)));\n};\n\nexport const filterRows = (rows = [], activeFilters = {}) => (\n    rows\n    .filter(row => (\n        Object.values(activeFilters).length === 0 ||\n        Object.values(activeFilters)\n        .every(\n            filter => {\n                const rowValue = row[filter.key] && (row[filter.key].sortValue || row[filter.key]);\n                return rowValue && (\n                    Array.isArray(filter.value) ?\n                        filter.value.includes(rowValue) :\n                        rowValue.toLocaleLowerCase().indexOf(filter.value.toLocaleLowerCase()) !== -1\n                );\n            }\n        )\n    ))\n);\n\nexport const generateFilters = (cells = [], filters = [], activeFilters = {}, onChange = () => undefined) => (\n    filters.map((filter, key) => {\n        const activeKey = filter.index || key;\n        const activeLabel = cells[activeKey] && (cells[activeKey].title || cells[activeKey]);\n\n        return ({\n            value: String(activeKey),\n            label: activeLabel,\n            type: filter.type || 'text',\n            filterValues: {\n                id: filter.id || `${activeLabel}-${activeKey}`,\n                onChange: (_e, newFilter) => onChange(activeKey, newFilter, activeLabel),\n                value: activeFilters[activeKey] && activeFilters[activeKey].value,\n                ...filter.options && { items: filter.options }\n            }\n        });\n    })\n);\n\nexport const onDeleteFilter = (deleted = {}, deleteAll = false, activeFilters = {}) => {\n    if (deleteAll) {\n        return {};\n    } else {\n        const { [deleted.key]: workingItem, ...filtersRest } = activeFilters;\n        const newValue = workingItem && Array.isArray(workingItem.value) &&\n            workingItem.value.filter(item => !deleted.chips.find(({ name }) => name === item));\n        const newFilter = workingItem && Array.isArray(workingItem.value) && newValue && newValue.length > 0 ? {\n            [deleted.key]: {\n                ...workingItem,\n                value: newValue\n            }\n        } : {};\n        return {\n            ...filtersRest,\n            ...newFilter\n        };\n    }\n};\n\nexport const extraShape = PropTypes.shape({\n    title: PropTypes.node,\n    value: PropTypes.node,\n    singular: PropTypes.node,\n    plural: PropTypes.node,\n    onClick: PropTypes.func\n});\n","import { ACTION_TYPES, CLEAR_NOTIFICATIONS, SET_INVENTORY_FILTER, SET_PAGINATION } from './action-types';\nimport { hosts, getEntitySystemProfile } from '../api';\nexport * from './system-issues-actions';\nexport * from './inventory-actions';\n\nexport const deleteEntity = (systems, displayName) => ({\n    type: ACTION_TYPES.REMOVE_ENTITY,\n    payload: hosts.apiHostDeleteById(systems),\n    meta: {\n        notifications: {\n            fulfilled: {\n                variant: 'success',\n                title: 'Delete operation finished',\n                description: `${displayName} has been successfully removed.`,\n                dismissable: true\n            }\n        },\n        systems\n    }\n});\n\nexport const setFilter = (filtersList) => ({\n    type: SET_INVENTORY_FILTER,\n    payload: {\n        filtersList\n    }\n});\n\nexport const clearNotifications = () => {\n    return ({\n        type: CLEAR_NOTIFICATIONS\n    });\n};\n\nexport const editDisplayName = (id, value) => ({\n    type: ACTION_TYPES.UPDATE_DISPLAY_NAME,\n    payload: hosts.apiHostPatchById([id], { display_name: value }), // eslint-disable-line camelcase\n    meta: {\n        id,\n        value,\n        notifications: {\n            fulfilled: {\n                variant: 'success',\n                title: `Display name for entity with ID ${id} has been changed to ${value}`,\n                dismissable: true\n            }\n        }\n    }\n});\n\nexport const setPagination = (page, perPage) => ({\n    type: SET_PAGINATION,\n    payload: {\n        page, perPage\n    }\n});\n\nexport const systemProfile = (itemId) => ({\n    type: ACTION_TYPES.LOAD_SYSTEM_PROFILE,\n    payload: getEntitySystemProfile(itemId, {})\n});\n\nexport const editAnsibleHost = (id, value) => ({\n    type: ACTION_TYPES.SET_ANSIBLE_HOST,\n    payload: hosts.apiHostPatchById([id], { ansible_host: value }), // eslint-disable-line camelcase\n    meta: {\n        notifications: {\n            fulfilled: {\n                variant: 'success',\n                title: 'Ansible hostname has been updated',\n                dismissable: true\n            }\n        }\n    }\n});\n","import bindActionCreators from '../utils/bindActionCreators';\nimport { wrapMapToPropsConstant, wrapMapToPropsFunc } from './wrapMapToProps';\nexport function whenMapDispatchToPropsIsFunction(mapDispatchToProps) {\n  return typeof mapDispatchToProps === 'function' ? wrapMapToPropsFunc(mapDispatchToProps, 'mapDispatchToProps') : undefined;\n}\nexport function whenMapDispatchToPropsIsMissing(mapDispatchToProps) {\n  return !mapDispatchToProps ? wrapMapToPropsConstant(function (dispatch) {\n    return {\n      dispatch: dispatch\n    };\n  }) : undefined;\n}\nexport function whenMapDispatchToPropsIsObject(mapDispatchToProps) {\n  return mapDispatchToProps && typeof mapDispatchToProps === 'object' ? wrapMapToPropsConstant(function (dispatch) {\n    return bindActionCreators(mapDispatchToProps, dispatch);\n  }) : undefined;\n}\nexport default [whenMapDispatchToPropsIsFunction, whenMapDispatchToPropsIsMissing, whenMapDispatchToPropsIsObject];","import { wrapMapToPropsConstant, wrapMapToPropsFunc } from './wrapMapToProps';\nexport function whenMapStateToPropsIsFunction(mapStateToProps) {\n  return typeof mapStateToProps === 'function' ? wrapMapToPropsFunc(mapStateToProps, 'mapStateToProps') : undefined;\n}\nexport function whenMapStateToPropsIsMissing(mapStateToProps) {\n  return !mapStateToProps ? wrapMapToPropsConstant(function () {\n    return {};\n  }) : undefined;\n}\nexport default [whenMapStateToPropsIsFunction, whenMapStateToPropsIsMissing];","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport verifyPlainObject from '../utils/verifyPlainObject';\nexport function defaultMergeProps(stateProps, dispatchProps, ownProps) {\n  return _extends({}, ownProps, stateProps, dispatchProps);\n}\nexport function wrapMergePropsFunc(mergeProps) {\n  return function initMergePropsProxy(dispatch, _ref) {\n    var displayName = _ref.displayName,\n        pure = _ref.pure,\n        areMergedPropsEqual = _ref.areMergedPropsEqual;\n    var hasRunOnce = false;\n    var mergedProps;\n    return function mergePropsProxy(stateProps, dispatchProps, ownProps) {\n      var nextMergedProps = mergeProps(stateProps, dispatchProps, ownProps);\n\n      if (hasRunOnce) {\n        if (!pure || !areMergedPropsEqual(nextMergedProps, mergedProps)) mergedProps = nextMergedProps;\n      } else {\n        hasRunOnce = true;\n        mergedProps = nextMergedProps;\n        if (process.env.NODE_ENV !== 'production') verifyPlainObject(mergedProps, displayName, 'mergeProps');\n      }\n\n      return mergedProps;\n    };\n  };\n}\nexport function whenMergePropsIsFunction(mergeProps) {\n  return typeof mergeProps === 'function' ? wrapMergePropsFunc(mergeProps) : undefined;\n}\nexport function whenMergePropsIsOmitted(mergeProps) {\n  return !mergeProps ? function () {\n    return defaultMergeProps;\n  } : undefined;\n}\nexport default [whenMergePropsIsFunction, whenMergePropsIsOmitted];","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"pure\", \"areStatesEqual\", \"areOwnPropsEqual\", \"areStatePropsEqual\", \"areMergedPropsEqual\"];\nimport connectAdvanced from '../components/connectAdvanced';\nimport shallowEqual from '../utils/shallowEqual';\nimport defaultMapDispatchToPropsFactories from './mapDispatchToProps';\nimport defaultMapStateToPropsFactories from './mapStateToProps';\nimport defaultMergePropsFactories from './mergeProps';\nimport defaultSelectorFactory from './selectorFactory';\n/*\n  connect is a facade over connectAdvanced. It turns its args into a compatible\n  selectorFactory, which has the signature:\n\n    (dispatch, options) => (nextState, nextOwnProps) => nextFinalProps\n  \n  connect passes its args to connectAdvanced as options, which will in turn pass them to\n  selectorFactory each time a Connect component instance is instantiated or hot reloaded.\n\n  selectorFactory returns a final props selector from its mapStateToProps,\n  mapStateToPropsFactories, mapDispatchToProps, mapDispatchToPropsFactories, mergeProps,\n  mergePropsFactories, and pure args.\n\n  The resulting final props selector is called by the Connect component instance whenever\n  it receives new props or store state.\n */\n\nfunction match(arg, factories, name) {\n  for (var i = factories.length - 1; i >= 0; i--) {\n    var result = factories[i](arg);\n    if (result) return result;\n  }\n\n  return function (dispatch, options) {\n    throw new Error(\"Invalid value of type \" + typeof arg + \" for \" + name + \" argument when connecting component \" + options.wrappedComponentName + \".\");\n  };\n}\n\nfunction strictEqual(a, b) {\n  return a === b;\n} // createConnect with default args builds the 'official' connect behavior. Calling it with\n// different options opens up some testing and extensibility scenarios\n\n\nexport function createConnect(_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      _ref$connectHOC = _ref.connectHOC,\n      connectHOC = _ref$connectHOC === void 0 ? connectAdvanced : _ref$connectHOC,\n      _ref$mapStateToPropsF = _ref.mapStateToPropsFactories,\n      mapStateToPropsFactories = _ref$mapStateToPropsF === void 0 ? defaultMapStateToPropsFactories : _ref$mapStateToPropsF,\n      _ref$mapDispatchToPro = _ref.mapDispatchToPropsFactories,\n      mapDispatchToPropsFactories = _ref$mapDispatchToPro === void 0 ? defaultMapDispatchToPropsFactories : _ref$mapDispatchToPro,\n      _ref$mergePropsFactor = _ref.mergePropsFactories,\n      mergePropsFactories = _ref$mergePropsFactor === void 0 ? defaultMergePropsFactories : _ref$mergePropsFactor,\n      _ref$selectorFactory = _ref.selectorFactory,\n      selectorFactory = _ref$selectorFactory === void 0 ? defaultSelectorFactory : _ref$selectorFactory;\n\n  return function connect(mapStateToProps, mapDispatchToProps, mergeProps, _ref2) {\n    if (_ref2 === void 0) {\n      _ref2 = {};\n    }\n\n    var _ref3 = _ref2,\n        _ref3$pure = _ref3.pure,\n        pure = _ref3$pure === void 0 ? true : _ref3$pure,\n        _ref3$areStatesEqual = _ref3.areStatesEqual,\n        areStatesEqual = _ref3$areStatesEqual === void 0 ? strictEqual : _ref3$areStatesEqual,\n        _ref3$areOwnPropsEqua = _ref3.areOwnPropsEqual,\n        areOwnPropsEqual = _ref3$areOwnPropsEqua === void 0 ? shallowEqual : _ref3$areOwnPropsEqua,\n        _ref3$areStatePropsEq = _ref3.areStatePropsEqual,\n        areStatePropsEqual = _ref3$areStatePropsEq === void 0 ? shallowEqual : _ref3$areStatePropsEq,\n        _ref3$areMergedPropsE = _ref3.areMergedPropsEqual,\n        areMergedPropsEqual = _ref3$areMergedPropsE === void 0 ? shallowEqual : _ref3$areMergedPropsE,\n        extraOptions = _objectWithoutPropertiesLoose(_ref3, _excluded);\n\n    var initMapStateToProps = match(mapStateToProps, mapStateToPropsFactories, 'mapStateToProps');\n    var initMapDispatchToProps = match(mapDispatchToProps, mapDispatchToPropsFactories, 'mapDispatchToProps');\n    var initMergeProps = match(mergeProps, mergePropsFactories, 'mergeProps');\n    return connectHOC(selectorFactory, _extends({\n      // used in error messages\n      methodName: 'connect',\n      // used to compute Connect's displayName from the wrapped component's displayName.\n      getDisplayName: function getDisplayName(name) {\n        return \"Connect(\" + name + \")\";\n      },\n      // if mapStateToProps is falsy, the Connect component doesn't subscribe to store state changes\n      shouldHandleStateChanges: Boolean(mapStateToProps),\n      // passed through to selectorFactory\n      initMapStateToProps: initMapStateToProps,\n      initMapDispatchToProps: initMapDispatchToProps,\n      initMergeProps: initMergeProps,\n      pure: pure,\n      areStatesEqual: areStatesEqual,\n      areOwnPropsEqual: areOwnPropsEqual,\n      areStatePropsEqual: areStatePropsEqual,\n      areMergedPropsEqual: areMergedPropsEqual\n    }, extraOptions));\n  };\n}\nexport default /*#__PURE__*/createConnect();"],"names":["valueToText","value","singular","plural","Clickable","item","onClick","target","event","preventDefault","href","window","location","propTypes","PropTypes","defaultProps","LoadingCard","title","isLoading","items","children","Stack","hasGutter","StackItem","TextContent","Text","component","TextVariants","isFilled","length","TextList","TextListVariants","map","key","Fragment","TextListItem","T","TextListItemVariants","Skeleton","size","SkeletonSize","Object","values","InnerButton","link","className","permissionsCache","undefined","EditButtonUnknownPermissions","props","hasAccess","usePermissions","EditButtonWrapper","writePermissions","insights","chrome","isProd","TitleWithPopover","content","Popover","headerContent","bodyContent","Button","variant","SystemCard","isDisplayNameModalOpen","isAnsibleHostModalOpen","setState","fn","entity","id","onCancel","ansible_host","fqdn","this","detailLoaded","properties","setDisplayName","setAnsibleHost","handleClick","hasHostName","hasDisplayName","hasAnsibleHostname","hasSAP","hasCPUs","hasSockets","hasCores","hasCPUFlags","hasRAM","extra","state","display_name","EditButton","onShowDisplayModal","getAnsibleHost","onShowAnsibleModal","sapIds","generalMapper","cpuNumber","sockets","coresPerSocket","cpuFlags","ramSize","e","TextInputModal","isOpen","ariaLabel","modalOuiaId","cancelOuiaId","confirmOuiaId","inputOuiaId","onSubmit","Component","storage","device","mount_point","options","type","extraShape","connect","entityDetails","systemProfile","systemProfileStore","loaded","propertiesSelector","dispatch","reloadWrapper","payload","then","data","hasItems","loadEntity","showTags","editDisplayName","editAnsibleHost","Modal","ouiaId","onClose","actions","TextInput","onChange","statusHelper","UP","Tooltip","DOWN","enabledHelper","true","false","diskMapper","devices","cells","transforms","sortable","rows","label","mountpoint","mounttype","calculatedOptions","child","entries","oneKey","option","join","expandable","productsMapper","products","product","name","status","interfaceMapper","mac_address","mtu","repositoriesMapper","enabled","disabled","repository","sortValue","Boolean","gpgcheck","filters","safeParser","toParse","JSON","parse","number_of_cpus","number_of_sockets","cores_per_socket","disk_devices","sap_sids","cpu_flags","facts","rhsm","CPU_CORES","CPU_SOCKETS","Number","MEMORY","operatingSystem","arch","operating_system","os_kernel_version","last_boot_time","kernel_modules","release","kernelRelease","architecture","ARCHITECTURE","bootTime","kernelModules","biosSelector","bios_vendor","bios_version","bios_release_date","vendor","version","releaseDate","infrastructureSelector","infrastructure_type","infrastructure_vendor","network","IS_VIRTUAL","ipv4","ipv6","nics","interfaces","configurationSelector","installed_packages","enabled_services","running_processes","repositories","packages","services","processes","collectionInformationSelector","insights_client_version","insights_egg_version","client","egg","getDefaultCollectors","registered","reporter","per_reporter_staleness","check_in_succeeded","updated","last_check_in","details","idName","idValue","systemStatus","stale_timestamp","stale","Date","tagsMapper","acc","curr","split","namespace","keyValue","currTagKey","findIndex","category","currTag","push","tagKey","group","prepareRows","pagination","slice","page","perPage","isDate","date","isNaN","filterRows","activeFilters","filter","row","every","rowValue","Array","isArray","includes","toLocaleLowerCase","indexOf","generateFilters","activeKey","index","activeLabel","String","filterValues","_e","newFilter","onDeleteFilter","deleted","deleteAll","workingItem","filtersRest","newValue","chips","find","deleteEntity","systems","displayName","ACTION_TYPES","hosts","meta","notifications","fulfilled","description","dismissable","setFilter","filtersList","SET_INVENTORY_FILTER","clearNotifications","CLEAR_NOTIFICATIONS","setPagination","SET_PAGINATION","itemId","getEntitySystemProfile","mapDispatchToProps","wrapMapToProps","bindActionCreators","mapStateToProps","defaultMergeProps","stateProps","dispatchProps","ownProps","mergeProps","_ref","mergedProps","pure","areMergedPropsEqual","hasRunOnce","nextMergedProps","wrapMergePropsFunc","_excluded","match","arg","factories","i","result","Error","wrappedComponentName","strictEqual","a","b","createConnect","_temp","_ref$connectHOC","connectHOC","connectAdvanced","_ref$mapStateToPropsF","mapStateToPropsFactories","_ref$mapDispatchToPro","mapDispatchToPropsFactories","_ref$mergePropsFactor","mergePropsFactories","_ref$selectorFactory","selectorFactory","_ref2","_ref3","_ref3$pure","_ref3$areStatesEqual","areStatesEqual","_ref3$areOwnPropsEqua","areOwnPropsEqual","shallowEqual","_ref3$areStatePropsEq","areStatePropsEqual","_ref3$areMergedPropsE","extraOptions","initMapStateToProps","initMapDispatchToProps","initMergeProps","methodName","getDisplayName","shouldHandleStateChanges"],"sourceRoot":""}