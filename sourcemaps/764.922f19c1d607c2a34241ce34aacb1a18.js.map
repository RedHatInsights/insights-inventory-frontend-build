{"version":3,"file":"js/764.12e107c9453d700aeaa5.js","mappings":"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","sources":["webpack:///./src/components/InventoryGroups/Modals/CreateGroupModal.js","webpack:///./src/components/InventoryGroups/Modals/RemoveHostsFromGroupModal.js","webpack:///./src/components/SystemDetails/GeneralInfo.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/Main/Main.js","webpack:///./src/components/InventoryGroups/SmallComponents/CreateGroupButton.js","webpack:///./src/components/InventoryGroups/Modals/AddSelectedHostsToGroupModal.js","webpack:///./src/Utilities/hooks/useBulkSelectConfig.js","webpack:///./src/Utilities/path.js","webpack:///./src/routes/InventoryTable.js","webpack:///./src/Utilities/edge.js","webpack:///./node_modules/lodash/uniq.js"],"sourcesContent":["import React, { useCallback, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { createGroupSchema } from './ModalSchemas/schemes';\nimport Modal from './Modal';\nimport apiWithToast from '../utils/apiWithToast';\nimport { createGroup, validateGroupName } from '../utils/api';\nimport { useDispatch } from 'react-redux';\nimport awesomeDebouncePromise from 'awesome-debounce-promise';\n\nconst CreateGroupModal = ({\n  isModalOpen,\n  setIsModalOpen,\n  reloadData,\n  modalBefore = false,\n  setterOfModalBefore,\n}) => {\n  const dispatch = useDispatch();\n\n  const handleCreateGroup = useCallback(\n    (values) => {\n      const statusMessages = {\n        onSuccess: {\n          title: 'Success',\n          description: `${values.name} has been created successfully`,\n        },\n        onError: { title: 'Error', description: 'Failed to create group' },\n      };\n      return apiWithToast(dispatch, () => createGroup(values), statusMessages);\n    },\n    [isModalOpen]\n  );\n\n  const schema = useMemo(() => {\n    const check = async (value) => {\n      const results = await validateGroupName(value);\n      if (results === true) {\n        throw 'Group name already exists';\n      }\n\n      return undefined;\n    };\n\n    // eslint-disable-next-line new-cap\n    const d = awesomeDebouncePromise(check, 500, { onlyResolvesLast: false });\n    return createGroupSchema(d);\n  }, []);\n\n  const onClose = () => {\n    if (modalBefore) {\n      setIsModalOpen(false);\n      setterOfModalBefore(true);\n    } else {\n      setIsModalOpen(false);\n    }\n  };\n\n  return (\n    <Modal\n      isModalOpen={isModalOpen}\n      closeModal={onClose}\n      title=\"Create group\"\n      submitLabel=\"Create\"\n      schema={schema}\n      reloadData={reloadData}\n      onSubmit={handleCreateGroup}\n    />\n  );\n};\n\nexport default CreateGroupModal;\n\nCreateGroupModal.propTypes = {\n  isModalOpen: PropTypes.bool,\n  setIsModalOpen: PropTypes.func,\n  reloadData: PropTypes.func,\n  modalBefore: PropTypes.bool,\n  setterOfModalBefore: PropTypes.func,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Modal from './Modal';\nimport apiWithToast from '../utils/apiWithToast';\nimport { useDispatch } from 'react-redux';\nimport { removeHostsFromGroup } from '../utils/api';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport { Text } from '@patternfly/react-core';\n\nconst schema = (hosts) => {\n  const hostsInGroup = hosts.filter(({ groups }) => groups.length > 0); // selection can contain ungroupped hosts\n  const groupName = hostsInGroup[0].groups[0].name;\n\n  return {\n    fields: [\n      {\n        component: componentTypes.PLAIN_TEXT,\n        name: 'warning-message',\n        label:\n          hostsInGroup.length === 1 ? (\n            <Text>\n              <strong>{hostsInGroup[0].display_name}</strong> will no longer be\n              part of <strong>{groupName}</strong> and its configuration will be\n              impacted.\n            </Text>\n          ) : (\n            <Text>\n              <strong>{hostsInGroup.length}</strong> systems will no longer be\n              part of <strong>{groupName}</strong> and their configuration will\n              be impacted.\n            </Text>\n          ),\n      },\n    ],\n  };\n};\n\nconst statusMessages = (hosts) => {\n  const hostsInGroup = hosts.filter(({ groups }) => groups.length > 0);\n  const groupName = hostsInGroup[0].groups[0].name;\n\n  return hostsInGroup.length === 1\n    ? {\n        onSuccess: {\n          title: `1 system removed from ${groupName}`,\n        },\n        onError: {\n          title: `Failed to remove 1 system from ${groupName}`,\n        },\n      }\n    : {\n        onSuccess: {\n          title: `${hostsInGroup.length} systems removed from ${groupName}`,\n        },\n        onError: {\n          title: `Failed to remove ${hostsInGroup.length} systems from ${groupName}`,\n        },\n      };\n};\n\nconst RemoveHostsFromGroupModal = ({\n  isModalOpen,\n  setIsModalOpen,\n  modalState: hosts,\n  reloadData,\n  reloadTimeout,\n}) => {\n  const dispatch = useDispatch();\n  const groupId = hosts.find(({ groups }) => groups.length > 0).groups[0].id;\n\n  const handleRemoveHosts = () =>\n    apiWithToast(\n      dispatch,\n      async () =>\n        await removeHostsFromGroup(\n          groupId,\n          hosts.map(({ id }) => id)\n        ),\n      statusMessages(hosts)\n    );\n\n  return (\n    <Modal\n      isModalOpen={isModalOpen}\n      closeModal={() => setIsModalOpen(false)}\n      title=\"Remove from group\"\n      variant=\"danger\"\n      submitLabel=\"Remove\"\n      schema={schema(hosts)}\n      onSubmit={handleRemoveHosts}\n      reloadData={reloadData}\n      reloadTimeout={reloadTimeout}\n    />\n  );\n};\n\nRemoveHostsFromGroupModal.propTypes = {\n  modalState: PropTypes.arrayOf(\n    PropTypes.shape({\n      // eslint-disable-next-line camelcase\n      display_name: PropTypes.string,\n      id: PropTypes.string,\n      groups: PropTypes.arrayOf(\n        PropTypes.shape({\n          id: PropTypes.string,\n          name: PropTypes.string,\n        })\n      ),\n    })\n  ).isRequired,\n  isModalOpen: PropTypes.bool.isRequired,\n  setIsModalOpen: PropTypes.func.isRequired,\n  reloadData: PropTypes.func,\n  reloadTimeout: PropTypes.number,\n};\n\nexport default RemoveHostsFromGroupModal;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport GeneralInformation from '../GeneralInfo/GeneralInformation';\nimport useFeatureFlag from '../../Utilities/useFeatureFlag';\nexport { default as TextInputModal } from '../GeneralInfo/TextInputModal';\n\nconst GeneralInfoTab = (props) => {\n  const systemProfile = useSelector(\n    ({ systemProfileStore }) => systemProfileStore?.systemProfile\n  );\n  const isEdgeHost = systemProfile?.host_type === 'edge';\n  const enableEdgeImageDetails = useFeatureFlag(\n    'edgeParity.inventory-system-detail'\n  );\n  const enableEdgeInventoryListDetails = useFeatureFlag(\n    'edgeParity.inventory-list'\n  );\n\n  return (\n    <GeneralInformation\n      {...props}\n      showImageDetails={\n        enableEdgeImageDetails && enableEdgeInventoryListDetails && isEdgeHost\n      }\n    />\n  );\n};\n\nexport default GeneralInfoTab;\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useEffect } from 'react';\nimport classNames from 'classnames';\nimport '../Main/main.css';\nexport var Main = function (_a) {\n    var children = _a.children, className = _a.className, props = __rest(_a, [\"children\", \"className\"]);\n    useEffect(function () {\n        console.error(\"Using deprecated \\\"Main\\\" component. Do not use it. Either remove it from your JSX or replace it by \\\"section\\\" HTML element.\");\n    }, []);\n    return (_jsx(\"section\", __assign({}, props, { className: \"\".concat(classNames(className, 'pf-l-page__main-section pf-c-page__main-section')) }, { children: children })));\n};\nexport var InternalMain = Main;\nexport default Main;\n//# sourceMappingURL=Main.js.map","import React from 'react';\nimport { Button, Text } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport { usePermissionsWithContext } from '@redhat-cloud-services/frontend-components-utilities/RBACHook';\nimport { GENERAL_GROUPS_WRITE_PERMISSION } from '../../../constants';\n\nexport const CreateGroupButton = ({ closeModal }) => {\n  const { hasAccess: canModifyGroups } = usePermissionsWithContext([\n    GENERAL_GROUPS_WRITE_PERMISSION,\n  ]);\n\n  return canModifyGroups ? (\n    <>\n      <Text>Or</Text>\n      <Button variant=\"secondary\" className=\"pf-u-w-50\" onClick={closeModal}>\n        Create a new group\n      </Button>\n    </>\n  ) : (\n    <></>\n  );\n};\n\nCreateGroupButton.propTypes = {\n  closeModal: PropTypes.func,\n};\n","import './AddSelectedHostsToGroupModal.scss';\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Modal from './Modal';\nimport { addHostsToGroupById } from '../utils/api';\nimport apiWithToast from '../utils/apiWithToast';\nimport { useDispatch } from 'react-redux';\nimport { CreateGroupButton } from '../SmallComponents/CreateGroupButton';\nimport { addHostSchema } from './ModalSchemas/schemes';\nimport CreateGroupModal from './CreateGroupModal';\n\nconst AddSelectedHostsToGroupModal = ({\n  isModalOpen,\n  setIsModalOpen,\n  modalState: hosts,\n  reloadData,\n}) => {\n  const dispatch = useDispatch();\n\n  const [isCreateGroupModalOpen, setIsCreateGroupModalOpen] = useState(false);\n  const handleAddDevices = (values) => {\n    const group = JSON.parse(values.group); // parse is a workaround for https://github.com/data-driven-forms/react-forms/issues/1401\n    const statusMessages = {\n      onSuccess: {\n        title: 'Success',\n        description: `System(s) have been added to ${group.name} successfully`,\n      },\n      onError: {\n        title: 'Error',\n        description: `Failed to add ${\n          hosts.length > 1 ? `${hosts.length} systems` : hosts[0].display_name\n        } to ${group.name}`,\n      },\n    };\n\n    apiWithToast(\n      dispatch,\n      () =>\n        addHostsToGroupById(\n          group.id,\n          hosts.map(({ id }) => id)\n        ),\n      statusMessages\n    );\n  };\n\n  return (\n    <>\n      {!isCreateGroupModalOpen && (\n        <Modal\n          isModalOpen={isModalOpen}\n          closeModal={() => setIsModalOpen(false)}\n          title=\"Add to group\"\n          submitLabel=\"Add\"\n          schema={addHostSchema(hosts)}\n          additionalMappers={{\n            'create-group-btn': {\n              component: CreateGroupButton,\n              closeModal: () => setIsCreateGroupModalOpen(true),\n            },\n          }}\n          onSubmit={handleAddDevices}\n          reloadData={reloadData}\n          modalClassName=\"add-selected-to-group-modal\"\n        />\n      )}\n      {isCreateGroupModalOpen && (\n        <CreateGroupModal\n          isModalOpen={isCreateGroupModalOpen}\n          setIsModalOpen={setIsCreateGroupModalOpen}\n          //modal before prop tells create group modal that it should\n          //reopen add host modal when user closes create group modal\n          modalBefore={true}\n          setterOfModalBefore={setIsModalOpen}\n        />\n      )}\n    </>\n  );\n};\n\nAddSelectedHostsToGroupModal.propTypes = {\n  modalState: PropTypes.arrayOf(\n    PropTypes.shape({\n      // eslint-disable-next-line camelcase\n      display_name: PropTypes.string,\n      id: PropTypes.string,\n    })\n  ).isRequired,\n  isModalOpen: PropTypes.bool,\n  setIsModalOpen: PropTypes.func,\n  reloadData: PropTypes.func,\n};\n\nexport default AddSelectedHostsToGroupModal;\n","/* eslint-disable camelcase */\nimport { Spinner } from '@patternfly/react-core';\nimport { flatten, map } from 'lodash';\nimport React, { Fragment, useCallback, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as actions from '../../store/actions';\nimport { loadSystems } from '../sharedFunctions';\nimport useFetchBatched from './useFetchBatched';\n\nexport const useBulkSelectConfig = (\n  selected,\n  globalFilter,\n  total,\n  rows,\n  loaded\n) => {\n  const [isBulkLoading, setBulkLoading] = useState(false);\n  const { fetchBatched } = useFetchBatched();\n  const dispatch = useDispatch();\n  const onSelectRows = (id, isSelected) =>\n    dispatch(actions.selectEntity(id, isSelected));\n  const calculateSelected = () => (selected ? selected.size : 0);\n  const { activeFilters } = useSelector(({ entities }) => entities);\n\n  const getEntitiesWrapper = async (filters, { page, per_page }) => {\n    const resp = loadSystems({ page, per_page, ...filters });\n\n    const data = await resp.payload;\n    return data;\n  };\n\n  const calculateChecked = (rows = [], selected) =>\n    rows.every(({ id }) => selected && selected.has(id))\n      ? rows.length > 0\n      : rows.some(({ id }) => selected && selected.has(id)) && null;\n\n  const fetchAllSystemIds = useCallback((filters, total) => {\n    return fetchBatched(getEntitiesWrapper, total, filters);\n  }, []);\n\n  const selectAllIds = async (selected = true) => {\n    setBulkLoading(true);\n    const data = await fetchAllSystemIds(\n      { filters: activeFilters, globalFilter },\n      total\n    );\n    const results = flatten(map(data, 'results'));\n    dispatch(actions.selectEntity(results, selected));\n    setBulkLoading(false);\n  };\n\n  return {\n    id: 'bulk-select-systems',\n    items: [\n      {\n        title: 'Select none (0)',\n        onClick: () => {\n          onSelectRows(-1, false);\n        },\n        props: { isDisabled: !selected },\n      },\n      {\n        ...(loaded && rows && rows.length > 0\n          ? {\n              title: `Select page (${rows.length})`,\n              onClick: () => {\n                onSelectRows(0, true);\n              },\n            }\n          : {}),\n      },\n      {\n        ...(loaded && rows && rows.length > 0\n          ? {\n              title: `Select all (${total})`,\n              onClick: async () => {\n                await selectAllIds();\n              },\n            }\n          : {}),\n      },\n    ],\n    checked: calculateChecked(rows, selected),\n    onSelect: (value) => {\n      onSelectRows(0, value);\n    },\n    toggleProps: {\n      'data-ouia-component-type': 'bulk-select-toggle-button',\n      children: isBulkLoading\n        ? [\n            <Fragment key=\"sd\">\n              <Spinner size=\"sm\" />\n              {`${calculateSelected()} selected`}\n            </Fragment>,\n          ]\n        : `${calculateSelected()} selected`,\n    },\n  };\n};\n","function getBaseName(pathname) {\n  let release = '/';\n  const pathName = pathname.split('/');\n\n  pathName.shift();\n\n  if (pathName[0] === 'preview') {\n    pathName.shift();\n    release = `/preview/`;\n  }\n\n  return `${release}`;\n}\n\nfunction resolveRelPath(path = '') {\n  return `${path.length > 0 ? `/${path}` : ''}`;\n}\n\nexport { getBaseName, resolveRelPath };\n","/* eslint-disable camelcase */\nimport React, { useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport './inventory.scss';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport * as actions from '../store/actions';\nimport {\n  Grid,\n  GridItem,\n  Tab,\n  TabTitleText,\n  Tabs,\n} from '@patternfly/react-core';\nimport { addNotification as addNotificationAction } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport DeleteModal from '../Utilities/DeleteModal';\nimport { TextInputModal } from '../components/SystemDetails/GeneralInfo';\nimport flatMap from 'lodash/flatMap';\nimport {\n  HOST_GROUP_CHIP,\n  RHCD_FILTER_KEY,\n  UPDATE_METHOD_KEY,\n  generateFilter,\n} from '../Utilities/constants';\nimport { InventoryTable as InventoryTableCmp } from '../components/InventoryTable';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\nimport AddSelectedHostsToGroupModal from '../components/InventoryGroups/Modals/AddSelectedHostsToGroupModal';\nimport useFeatureFlag from '../Utilities/useFeatureFlag';\n//TODO: re-enable when edge app migrates away from useHistory (THEEDGE-3488)\n// import AsyncComponent from '@redhat-cloud-services/frontend-components/AsyncComponent';\nimport { useBulkSelectConfig } from '../Utilities/hooks/useBulkSelectConfig';\nimport RemoveHostsFromGroupModal from '../components/InventoryGroups/Modals/RemoveHostsFromGroupModal';\nimport { manageEdgeInventoryUrlName } from '../Utilities/edge';\nimport { resolveRelPath } from '../Utilities/path';\nimport {\n  GENERAL_GROUPS_WRITE_PERMISSION,\n  NO_MODIFY_GROUPS_TOOLTIP_MESSAGE,\n  NO_MODIFY_GROUP_TOOLTIP_MESSAGE,\n  NO_MODIFY_HOSTS_TOOLTIP_MESSAGE,\n  NO_MODIFY_HOST_TOOLTIP_MESSAGE,\n  REQUIRED_PERMISSIONS_TO_MODIFY_GROUP,\n  REQUIRED_PERMISSION_TO_MODIFY_HOST_IN_GROUP,\n} from '../constants';\nimport {\n  ActionButton,\n  ActionDropdownItem,\n} from '../components/InventoryTable/ActionWithRBAC';\nimport uniq from 'lodash/uniq';\nimport useInsightsNavigate from '@redhat-cloud-services/frontend-components-utilities/useInsightsNavigate/useInsightsNavigate';\n\nconst mapTags = ({ category, values }) =>\n  values.map(\n    ({ tagKey, value }) =>\n      `${category ? `${category}/` : ''}${tagKey}${value ? `=${value}` : ''}`\n  );\n\nconst filterMapper = {\n  staleFilter: ({ staleFilter }, searchParams) =>\n    staleFilter.forEach((item) => searchParams.append('status', item)),\n  osFilter: ({ osFilter }, searchParams) =>\n    osFilter?.forEach((item) => searchParams.append('operating_system', item)),\n  registeredWithFilter: ({ registeredWithFilter }, searchParams) =>\n    registeredWithFilter?.forEach((item) =>\n      searchParams.append('source', item)\n    ),\n  value: ({ value, filter }, searchParams) =>\n    value === 'hostname_or_id' &&\n    Boolean(filter) &&\n    searchParams.append('hostname_or_id', filter),\n  tagFilters: ({ tagFilters }, searchParams) =>\n    tagFilters?.length > 0 &&\n    searchParams.append('tags', flatMap(tagFilters, mapTags)),\n  rhcdFilter: ({ rhcdFilter }, searchParams) =>\n    rhcdFilter?.forEach((item) => searchParams.append(RHCD_FILTER_KEY, item)),\n  lastSeenFilter: ({ lastSeenFilter }, searchParams) =>\n    Object.keys(lastSeenFilter || {})?.forEach(\n      (item) =>\n        item === 'mark' &&\n        searchParams.append('last_seen', lastSeenFilter[item])\n    ),\n  updateMethodFilter: ({ updateMethodFilter }, searchParams) =>\n    updateMethodFilter?.forEach((item) =>\n      searchParams.append(UPDATE_METHOD_KEY, item)\n    ),\n  hostGroupFilter: ({ hostGroupFilter }, searchParams) =>\n    hostGroupFilter?.forEach((item) =>\n      searchParams.append(HOST_GROUP_CHIP, item)\n    ),\n};\n\nconst calculateFilters = (searchParams, filters = []) => {\n  filters.forEach((filter) => {\n    Object.keys(filter).forEach((key) => {\n      filterMapper?.[key]?.(filter, searchParams);\n    });\n  });\n  return searchParams;\n};\n\nexport const calculatePagination = (searchParams, page, perPage) => {\n  const currSearch = new URLSearchParams(location.search);\n  const newPage = page !== undefined ? page : currSearch.get('page');\n  const newPerPage =\n    perPage !== undefined ? perPage : currSearch.get('per_page');\n  !isNaN(parseInt(newPage)) && searchParams.append('page', newPage);\n  !isNaN(parseInt(newPerPage)) && searchParams.append('per_page', newPerPage);\n};\n\nconst BulkDeleteButton = ({ selectedSystems, ...props }) => {\n  const requiredPermissions = selectedSystems.map(({ groups }) =>\n    REQUIRED_PERMISSION_TO_MODIFY_HOST_IN_GROUP(groups?.[0]?.id ?? null)\n  );\n\n  return (\n    <ActionButton\n      requiredPermissions={requiredPermissions}\n      noAccessTooltip={NO_MODIFY_HOSTS_TOOLTIP_MESSAGE}\n      checkAll\n      ouiaId=\"bulk-delete-button\"\n      {...props}\n    >\n      Delete\n    </ActionButton>\n  );\n};\n\nBulkDeleteButton.propTypes = {\n  selectedSystems: PropTypes.array,\n};\n\nconst Inventory = ({\n  status,\n  source,\n  filterbyName,\n  tagsFilter,\n  operatingSystem,\n  rhcdFilter,\n  updateMethodFilter,\n  lastSeenFilter,\n  page,\n  perPage,\n  initialLoading,\n  hasAccess,\n  hostGroupFilter,\n}) => {\n  const navigate = useInsightsNavigate();\n  const chrome = useChrome();\n  const inventory = useRef(null);\n  const [isModalOpen, handleModalToggle] = useState(false);\n  const [currentSystem, setCurrentSystem] = useState({});\n  const [filters, onSetfilters] = useState(\n    generateFilter(\n      status,\n      source,\n      tagsFilter,\n      filterbyName,\n      operatingSystem,\n      rhcdFilter,\n      updateMethodFilter,\n      hostGroupFilter,\n      lastSeenFilter\n    )\n  );\n  const { pathname } = useLocation();\n  const tabsPath = [\n    resolveRelPath(''),\n    resolveRelPath(manageEdgeInventoryUrlName),\n  ];\n  const initialActiveTabKey =\n    tabsPath.indexOf(pathname) >= 0 ? tabsPath.indexOf(pathname) : 0;\n  const [activeTabKey, setActiveTabKey] = useState(initialActiveTabKey);\n  useEffect(() => {\n    setActiveTabKey(initialActiveTabKey);\n  }, [pathname]);\n  const handleTabClick = (_event, tabIndex) => {\n    const tabPath = tabsPath[tabIndex];\n    if (tabPath !== undefined) {\n      navigate(`${tabPath}`);\n    }\n    setActiveTabKey(tabIndex);\n  };\n  const [ediOpen, onEditOpen] = useState(false);\n  const [addHostGroupModalOpen, setAddHostGroupModalOpen] = useState(false);\n  const [removeHostsFromGroupModalOpen, setRemoveHostsFromGroupModalOpen] =\n    useState(false);\n  const [globalFilter, setGlobalFilter] = useState();\n  const rows = useSelector(({ entities }) => entities?.rows, shallowEqual);\n  const loaded = useSelector(({ entities }) => entities?.loaded);\n  const selected = useSelector(({ entities }) => entities?.selected);\n  const total = useSelector(({ entities }) => entities?.total);\n  const dispatch = useDispatch();\n  const groupsEnabled = useFeatureFlag('hbi.ui.inventory-groups');\n  const bulkSelectConfig = useBulkSelectConfig(\n    selected,\n    globalFilter,\n    total,\n    rows,\n    loaded\n  );\n\n  const onRefresh = (options, callback) => {\n    onSetfilters(options?.filters);\n    const searchParams = new URLSearchParams();\n    calculateFilters(searchParams, options?.filters);\n    // eslint-disable-next-line camelcase\n    calculatePagination(searchParams, options?.page, options?.per_page);\n    const search = searchParams.toString();\n    navigate({\n      search,\n      hash: location.hash,\n    });\n\n    if (callback) {\n      callback(options);\n    }\n  };\n\n  const EdgeParityEnabled = useFeatureFlag('edgeParity.inventory-list');\n  const EdgeParityFilterDeviceEnabled = useFeatureFlag(\n    'edgeParity.inventory-list-filter'\n  );\n\n  useEffect(() => {\n    chrome.updateDocumentTitle('Systems | Red Hat Insights');\n    chrome?.hideGlobalFilter?.(false);\n    chrome.appAction('system-list');\n    chrome.appObjectId();\n    chrome.on('GLOBAL_FILTER_UPDATE', ({ data }) => {\n      const [workloads, SID, tags] = chrome.mapGlobalFilter(data, false, true);\n      setGlobalFilter({\n        tags,\n        filter: {\n          ...globalFilter?.filter,\n          system_profile: {\n            ...globalFilter?.filter?.system_profile,\n            ...(workloads?.SAP?.isSelected && { sap_system: true }),\n            ...(workloads &&\n              workloads['Ansible Automation Platform']?.isSelected && {\n                ansible: 'not_nil',\n              }),\n            ...(workloads?.['Microsoft SQL']?.isSelected && {\n              mssql: 'not_nil',\n            }),\n            ...(EdgeParityFilterDeviceEnabled && { host_type: 'nil' }),\n            ...(SID?.length > 0 && { sap_sids: SID }),\n          },\n        },\n      });\n    });\n    dispatch(actions.clearNotifications());\n\n    if (perPage || page) {\n      dispatch(\n        actions.setPagination(\n          Array.isArray(page) ? page[0] : page,\n          Array.isArray(perPage) ? perPage[0] : perPage\n        )\n      );\n    }\n\n    return () => {\n      dispatch(actions.clearEntitiesAction());\n    };\n  }, []);\n\n  const calculateSelected = () => (selected ? selected.size : 0);\n\n  const isBulkRemoveFromGroupsEnabled = () => {\n    return (\n      calculateSelected() > 0 &&\n      Array.from(selected.values()).some(({ groups }) => groups.length > 0) &&\n      uniq(\n        // can remove from at maximum one group at a time\n        Array.from(selected.values())\n          .filter(({ groups }) => groups.length > 0)\n          .map(({ groups }) => groups[0].name)\n      ).length === 1\n    );\n  };\n\n  const isBulkAddHostsToGroupsEnabled = () => {\n    if (calculateSelected() > 0) {\n      const selectedHosts = Array.from(selected.values());\n\n      return selectedHosts.every(({ groups }) => groups.length === 0);\n    }\n\n    return false;\n  };\n\n  // some actions are hidden under feature flag\n  const tableActions = (row) => {\n    const hostActions = [\n      {\n        title: (\n          <ActionDropdownItem\n            key={`${row.id}-edit`}\n            onClick={() => {\n              setCurrentSystem(row);\n              onEditOpen(() => true);\n            }}\n            requiredPermissions={[\n              REQUIRED_PERMISSION_TO_MODIFY_HOST_IN_GROUP(\n                row.groups?.[0]?.id ?? null\n              ),\n            ]}\n            noAccessTooltip={NO_MODIFY_HOST_TOOLTIP_MESSAGE}\n          >\n            Edit\n          </ActionDropdownItem>\n        ),\n        style: {\n          padding: 0, // custom component creates extra padding space\n        },\n      },\n      {\n        title: (\n          <ActionDropdownItem\n            key={`${row.id}-delete`}\n            onClick={() => {\n              setCurrentSystem(row);\n              handleModalToggle(() => true);\n            }}\n            requiredPermissions={[\n              REQUIRED_PERMISSION_TO_MODIFY_HOST_IN_GROUP(\n                row.groups?.[0]?.id ?? null\n              ),\n            ]}\n            noAccessTooltip={NO_MODIFY_HOST_TOOLTIP_MESSAGE}\n          >\n            Delete\n          </ActionDropdownItem>\n        ),\n        style: {\n          padding: 0,\n        },\n      },\n    ];\n\n    const groupActions = [\n      {\n        title: (\n          <ActionDropdownItem\n            key={`${row.id}-add-to-group`}\n            onClick={() => {\n              setCurrentSystem([row]);\n              setAddHostGroupModalOpen(true);\n            }}\n            requiredPermissions={[GENERAL_GROUPS_WRITE_PERMISSION]}\n            noAccessTooltip={NO_MODIFY_GROUPS_TOOLTIP_MESSAGE}\n            isAriaDisabled={row.groups.length > 0} // additional condition for enabling the button\n            ignoreResourceDefinitions // to check if there is any groups:write permission (disregarding RD)\n          >\n            Add to group\n          </ActionDropdownItem>\n        ),\n        style: {\n          padding: 0,\n        },\n      },\n      {\n        title: (\n          <ActionDropdownItem\n            key={`${row.id}-remove-from-group`}\n            onClick={() => {\n              setCurrentSystem([row]);\n              setRemoveHostsFromGroupModalOpen(true);\n            }}\n            requiredPermissions={\n              row?.groups?.[0]?.id !== undefined\n                ? REQUIRED_PERMISSIONS_TO_MODIFY_GROUP(row.groups[0].id)\n                : []\n            }\n            noAccessTooltip={NO_MODIFY_GROUP_TOOLTIP_MESSAGE}\n            isAriaDisabled={row.groups.length === 0}\n            override={row?.groups?.[0]?.id === undefined ? true : undefined} // has access if no group\n          >\n            Remove from group\n          </ActionDropdownItem>\n        ),\n        style: {\n          padding: 0,\n        },\n      },\n    ];\n\n    return [...(groupsEnabled ? groupActions : []), ...hostActions];\n  };\n\n  const traditionalDevices = (\n    <Grid gutter=\"md\">\n      <GridItem span={12}>\n        <InventoryTableCmp\n          hasAccess={hasAccess}\n          isRbacEnabled\n          customFilters={{ filters, globalFilter }}\n          isFullView\n          showTags\n          onRefresh={onRefresh}\n          hasCheckbox\n          autoRefresh\n          ignoreRefresh\n          initialLoading={initialLoading}\n          ref={inventory}\n          tableProps={{\n            actionResolver: tableActions,\n            canSelectAll: false,\n          }}\n          actionsConfig={{\n            actions: [\n              <BulkDeleteButton\n                key=\"bulk-systems-delete\"\n                selectedSystems={Array.from(selected?.values?.() || [])}\n                onClick={() => {\n                  setCurrentSystem(Array.from(selected.values()));\n                  handleModalToggle(true);\n                }}\n                variant=\"secondary\"\n                isAriaDisabled={calculateSelected() === 0}\n              />,\n              ...(groupsEnabled\n                ? [\n                    {\n                      label: (\n                        <ActionDropdownItem\n                          key=\"bulk-add-to-group\"\n                          requiredPermissions={[\n                            GENERAL_GROUPS_WRITE_PERMISSION,\n                          ]}\n                          isAriaDisabled={!isBulkAddHostsToGroupsEnabled()}\n                          noAccessTooltip={NO_MODIFY_GROUPS_TOOLTIP_MESSAGE}\n                          onClick={() => {\n                            setCurrentSystem(Array.from(selected.values()));\n                            setAddHostGroupModalOpen(true);\n                          }}\n                          ignoreResourceDefinitions\n                        >\n                          Add to group\n                        </ActionDropdownItem>\n                      ),\n                      props: {\n                        style: {\n                          padding: 0, // custom component creates extra padding space\n                        },\n                      },\n                    },\n                    {\n                      label: (\n                        <ActionDropdownItem\n                          key=\"bulk-remove-from-group\"\n                          requiredPermissions={\n                            selected !== undefined\n                              ? Array.from(selected.values())\n                                  .flatMap(({ groups }) =>\n                                    groups?.[0]?.id !== undefined\n                                      ? REQUIRED_PERMISSIONS_TO_MODIFY_GROUP(\n                                          groups[0].id\n                                        )\n                                      : null\n                                  )\n                                  .filter(Boolean) // don't check ungroupped hosts\n                              : []\n                          }\n                          isAriaDisabled={!isBulkRemoveFromGroupsEnabled()}\n                          noAccessTooltip={NO_MODIFY_GROUPS_TOOLTIP_MESSAGE}\n                          onClick={() => {\n                            setCurrentSystem(Array.from(selected.values()));\n                            setRemoveHostsFromGroupModalOpen(true);\n                          }}\n                          {...(selected === undefined // when nothing is selected, no access must be checked\n                            ? { override: true }\n                            : {})}\n                          checkAll\n                        >\n                          Remove from group\n                        </ActionDropdownItem>\n                      ),\n                      props: {\n                        style: {\n                          padding: 0,\n                        },\n                      },\n                    },\n                  ]\n                : []),\n            ],\n          }}\n          bulkSelect={bulkSelectConfig}\n          onRowClick={(_e, id, app) =>\n            navigate(`/${id}${app ? `/${app}` : ''}`)\n          }\n        />\n      </GridItem>\n    </Grid>\n  );\n\n  return (\n    <React.Fragment>\n      <PageHeader className=\"pf-m-light\">\n        <PageHeaderTitle title=\"Systems\" />\n      </PageHeader>\n      <Main>\n        {EdgeParityEnabled ? (\n          <Tabs\n            className=\"pf-m-light pf-c-table\"\n            activeKey={activeTabKey}\n            onSelect={handleTabClick}\n          >\n            <Tab\n              eventKey={0}\n              title={<TabTitleText>Conventional (RPM-DNF)</TabTitleText>}\n            >\n              {traditionalDevices}\n            </Tab>\n            <Tab\n              eventKey={1}\n              title={<TabTitleText>Immutable (OSTree)</TabTitleText>}\n            >\n              {/* \n                //TODO: re-enable when edge app migrates away from useHistory (THEEDGE-3488)\n                <AsyncComponent\n                appName=\"edge\"\n                module=\"./Inventory\"\n                historyProp={useHistory}\n                locationProp={useLocation}\n                showHeaderProp={false}\n                pathPrefix={resolveRelPath('')}\n                urlName={manageEdgeInventoryUrlName}\n              /> */}\n            </Tab>\n          </Tabs>\n        ) : (\n          traditionalDevices\n        )}\n      </Main>\n      <DeleteModal\n        className=\"sentry-mask data-hj-suppress\"\n        handleModalToggle={handleModalToggle}\n        isModalOpen={isModalOpen}\n        currentSytems={currentSystem}\n        onConfirm={() => {\n          let displayName;\n          let removeSystems;\n          if (Array.isArray(currentSystem)) {\n            removeSystems = currentSystem.map(({ id }) => id);\n            displayName =\n              currentSystem.length > 1\n                ? `${currentSystem.length} systems`\n                : currentSystem[0].display_name;\n          } else {\n            displayName = currentSystem.display_name;\n            removeSystems = [currentSystem.id];\n          }\n\n          dispatch(\n            addNotificationAction({\n              id: 'remove-initiated',\n              variant: 'warning',\n              title: 'Delete operation initiated',\n              description: `Removal of ${displayName} started.`,\n              dismissable: false,\n            })\n          );\n          dispatch(actions.deleteEntity(removeSystems, displayName));\n          handleModalToggle(false);\n        }}\n      />\n      <TextInputModal\n        title=\"Edit display name\"\n        isOpen={ediOpen}\n        value={currentSystem.display_name}\n        onCancel={() => onEditOpen(false)}\n        onSubmit={(value) => {\n          dispatch(actions.editDisplayName(currentSystem.id, value));\n          onEditOpen(false);\n        }}\n      />\n      {groupsEnabled === true && (\n        <>\n          {addHostGroupModalOpen && (\n            <AddSelectedHostsToGroupModal\n              isModalOpen={addHostGroupModalOpen}\n              setIsModalOpen={setAddHostGroupModalOpen}\n              modalState={currentSystem}\n              reloadData={() => {\n                if (calculateSelected() > 0) {\n                  dispatch(actions.selectEntity(-1, false));\n                }\n\n                inventory.current.onRefreshData(filters, false, true);\n              }}\n            />\n          )}\n          {removeHostsFromGroupModalOpen && (\n            <RemoveHostsFromGroupModal\n              isModalOpen={removeHostsFromGroupModalOpen}\n              setIsModalOpen={setRemoveHostsFromGroupModalOpen}\n              modalState={currentSystem}\n              reloadData={() => {\n                if (calculateSelected() > 0) {\n                  dispatch(actions.selectEntity(-1, false));\n                }\n\n                inventory.current.onRefreshData(filters, false, true);\n              }}\n            />\n          )}\n        </>\n      )}\n    </React.Fragment>\n  );\n};\n\nInventory.propTypes = {\n  status: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.string),\n    PropTypes.string,\n  ]),\n  source: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.string),\n    PropTypes.string,\n  ]),\n  operatingSystem: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.string),\n    PropTypes.string,\n  ]),\n  filterbyName: PropTypes.arrayOf(PropTypes.string),\n  tagsFilter: PropTypes.any,\n  page: PropTypes.arrayOf(\n    PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n  ),\n  perPage: PropTypes.arrayOf(\n    PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n  ),\n  initialLoading: PropTypes.bool,\n  rhcdFilter: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.string),\n    PropTypes.string,\n  ]),\n  updateMethodFilter: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.string),\n    PropTypes.string,\n  ]),\n  hasAccess: PropTypes.bool,\n  hostGroupFilter: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.string),\n    PropTypes.string,\n  ]),\n  lastSeenFilter: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.string),\n    PropTypes.string,\n  ]),\n};\n\nInventory.defaultProps = {\n  initialLoading: true,\n};\n\nexport default Inventory;\n","import { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\n\nconst manageEdgeInventoryUrlName = 'manage-edge-inventory';\n\nconst getNotificationProp = (dispatch) => {\n  return {\n    hasInfo: (hasInfoMessage) => {\n      dispatch({\n        ...addNotification({\n          variant: 'info',\n          ...hasInfoMessage,\n        }),\n      });\n    },\n    hasSuccess: (hasSuccessMessage) => {\n      dispatch({\n        ...addNotification({\n          variant: 'success',\n          ...hasSuccessMessage,\n        }),\n      });\n    },\n    err: (errMessage, err) => {\n      dispatch({\n        ...addNotification({\n          variant: 'danger',\n          ...errMessage,\n          // Add error message from API, if present\n          description: err?.Title\n            ? `${errMessage.description}: ${err.Title}`\n            : errMessage.description,\n        }),\n      });\n    },\n  };\n};\n\nexport { getNotificationProp, manageEdgeInventoryUrlName };\n","var baseUniq = require('./_baseUniq');\n\n/**\n * Creates a duplicate-free version of an array, using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons, in which only the first occurrence of each element\n * is kept. The order of result values is determined by the order they occur\n * in the array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniq([2, 1, 2]);\n * // => [2, 1]\n */\nfunction uniq(array) {\n  return (array && array.length) ? baseUniq(array) : [];\n}\n\nmodule.exports = uniq;\n"],"names":["i","CreateGroupModal","isModalOpen","setIsModalOpen","reloadData","modalBefore","setterOfModalBefore","dispatch","useDispatch","handleCreateGroup","useCallback","values","statusMessages","onSuccess","title","description","name","onError","apiWithToast","createGroup","schema","useMemo","check","value","validateGroupName","undefined","d","awesomeDebouncePromise","onlyResolvesLast","createGroupSchema","closeModal","submitLabel","onSubmit","propTypes","PropTypes","hosts","hostsInGroup","filter","groups","length","groupName","fields","component","componentTypes","PLAIN_TEXT","label","display_name","RemoveHostsFromGroupModal","modalState","reloadTimeout","groupId","find","id","variant","removeHostsFromGroup","map","isRequired","props","systemProfile","useSelector","systemProfileStore","isEdgeHost","host_type","enableEdgeImageDetails","useFeatureFlag","enableEdgeInventoryListDetails","GeneralInformation","showImageDetails","__assign","Object","assign","t","s","n","arguments","p","prototype","hasOwnProperty","call","apply","this","_a","children","className","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__rest","useEffect","console","error","concat","CreateGroupButton","usePermissionsWithContext","GENERAL_GROUPS_WRITE_PERMISSION","hasAccess","Text","Button","onClick","AddSelectedHostsToGroupModal","useState","isCreateGroupModalOpen","setIsCreateGroupModalOpen","Modal","addHostSchema","additionalMappers","group","JSON","parse","addHostsToGroupById","modalClassName","resolveRelPath","path","mapTags","category","tagKey","filterMapper","staleFilter","searchParams","forEach","item","append","osFilter","registeredWithFilter","Boolean","tagFilters","flatMap","rhcdFilter","RHCD_FILTER_KEY","lastSeenFilter","keys","updateMethodFilter","UPDATE_METHOD_KEY","hostGroupFilter","HOST_GROUP_CHIP","calculatePagination","page","perPage","currSearch","URLSearchParams","location","search","newPage","get","newPerPage","isNaN","parseInt","BulkDeleteButton","selectedSystems","requiredPermissions","REQUIRED_PERMISSION_TO_MODIFY_HOST_IN_GROUP","noAccessTooltip","NO_MODIFY_HOSTS_TOOLTIP_MESSAGE","checkAll","ouiaId","Inventory","status","source","filterbyName","tagsFilter","operatingSystem","initialLoading","navigate","useInsightsNavigate","chrome","useChrome","inventory","useRef","handleModalToggle","currentSystem","setCurrentSystem","generateFilter","filters","onSetfilters","pathname","useLocation","tabsPath","initialActiveTabKey","activeTabKey","setActiveTabKey","ediOpen","onEditOpen","addHostGroupModalOpen","setAddHostGroupModalOpen","removeHostsFromGroupModalOpen","setRemoveHostsFromGroupModalOpen","globalFilter","setGlobalFilter","rows","entities","shallowEqual","loaded","selected","total","groupsEnabled","bulkSelectConfig","isBulkLoading","setBulkLoading","fetchBatched","useFetchBatched","onSelectRows","isSelected","actions","calculateSelected","size","activeFilters","getEntitiesWrapper","per_page","resp","loadSystems","payload","data","fetchAllSystemIds","selectAllIds","results","flatten","items","isDisabled","checked","every","has","some","calculateChecked","onSelect","toggleProps","Fragment","key","Spinner","useBulkSelectConfig","EdgeParityEnabled","EdgeParityFilterDeviceEnabled","updateDocumentTitle","hideGlobalFilter","appAction","appObjectId","on","mapGlobalFilter","workloads","SID","tags","system_profile","SAP","sap_system","ansible","mssql","sap_sids","Array","isArray","traditionalDevices","Grid","gutter","GridItem","span","InventoryTable","isRbacEnabled","customFilters","isFullView","showTags","onRefresh","options","callback","calculateFilters","toString","hash","hasCheckbox","autoRefresh","ignoreRefresh","ref","tableProps","actionResolver","row","hostActions","NO_MODIFY_HOST_TOOLTIP_MESSAGE","style","padding","groupActions","NO_MODIFY_GROUPS_TOOLTIP_MESSAGE","isAriaDisabled","ignoreResourceDefinitions","REQUIRED_PERMISSIONS_TO_MODIFY_GROUP","NO_MODIFY_GROUP_TOOLTIP_MESSAGE","override","canSelectAll","actionsConfig","from","uniq","bulkSelect","onRowClick","_e","app","PageHeader","PageHeaderTitle","Tabs","activeKey","_event","tabIndex","tabPath","Tab","eventKey","TabTitleText","T","DeleteModal","currentSytems","onConfirm","displayName","removeSystems","addNotificationAction","dismissable","TextInputModal","isOpen","onCancel","current","onRefreshData","defaultProps","baseUniq","module","exports","array"],"sourceRoot":""}