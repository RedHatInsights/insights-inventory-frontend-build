{"version":3,"file":"js/5857.1a599b9437dea10e3459.js","mappings":";qOACA,snGAAAA,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,0fAAAA,EAAA,EAAAA,EAAA,iBAAAA,IAAA,uBAAAA,GAAA,UAAAA,GAAA,GAAAA,EAAA,0QAMA,IAAMC,EAA6B,wBAE7BC,EAAsB,SAACC,GAC3B,MAAO,CACLC,QAAS,SAACC,GACRF,EAAS,EAAD,IACHG,EAAAA,EAAAA,IAAgB,EAAD,CAChBC,QAAS,QACNF,KAGT,EACAG,WAAY,SAACC,GACXN,EAAS,EAAD,IACHG,EAAAA,EAAAA,IAAgB,EAAD,CAChBC,QAAS,WACNE,KAGT,EACAC,WAAY,SAACD,GACXN,EAAS,EAAD,IACHG,EAAAA,EAAAA,IAAgB,EAAD,CAChBC,QAAS,WACNE,KAGT,EACAE,IAAK,SAACC,EAAYD,GAChBR,EAAS,EAAD,IACHG,EAAAA,EAAAA,IAAgB,EAAD,GAChBC,QAAS,UACNK,GAAU,IAEbC,YAAaF,SAAAA,EAAKG,MAAK,UAChBF,EAAWC,YAAW,aAAKF,EAAIG,OAClCF,EAAWC,gBAGrB,EAEJ,EAEME,EAAuB,mCAAG,sGACTC,IAAAA,IAAU,GAAD,OACzBC,EAAAA,IAAgC,OAAGC,EAAAA,KACvC,OAFW,OAANC,EAAS,EAAH,wBAGLA,SAAY,QAAN,EAANA,EAAQC,YAAI,WAAN,EAAN,EAAcC,OAAQ,GAAC,2CAC/B,kBAL4B,iKCjB7B,QAzBqB,WACnB,IAAMC,GAASC,EAAAA,EAAAA,KACTpB,GAAWqB,EAAAA,EAAAA,eACXC,GAAmBvB,EAAAA,EAAAA,IAAoBC,IAE7CuB,EAAAA,EAAAA,YAAU,WAAM,MACdJ,SAA2B,QAArB,EAANA,EAAQK,2BAAmB,OAA3B,OAAAL,EAA8B,sCAChC,GAAG,CAACA,IACJ,IAAQM,GAAgBC,EAAAA,EAAAA,aAAhBD,YAER,OAAuB,OAAhBA,EACL,kBAAC,IAAc,CACbE,QAAQ,OACRC,OAAO,iBACPC,aAAcC,EAAAA,YACdC,aAAcC,EAAAA,YACdV,iBAAkBA,EAClBW,WAAYP,EAAAA,UACZD,YAAaA,IAGf,oCAEJ","sources":["webpack:///./src/Utilities/edge.js","webpack:///./src/routes/SystemUpdate.js"],"sourcesContent":["import { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport axios from 'axios';\nimport {\n  INVENTORY_TOTAL_FETCH_EDGE_PARAMS,\n  INVENTORY_TOTAL_FETCH_URL_SERVER,\n} from './constants';\n\nconst manageEdgeInventoryUrlName = 'manage-edge-inventory';\n\nconst getNotificationProp = (dispatch) => {\n  return {\n    hasInfo: (hasInfoMessage) => {\n      dispatch({\n        ...addNotification({\n          variant: 'info',\n          ...hasInfoMessage,\n        }),\n      });\n    },\n    hasSuccess: (hasSuccessMessage) => {\n      dispatch({\n        ...addNotification({\n          variant: 'success',\n          ...hasSuccessMessage,\n        }),\n      });\n    },\n    hasWarning: (hasSuccessMessage) => {\n      dispatch({\n        ...addNotification({\n          variant: 'warning',\n          ...hasSuccessMessage,\n        }),\n      });\n    },\n    err: (errMessage, err) => {\n      dispatch({\n        ...addNotification({\n          variant: 'danger',\n          ...errMessage,\n          // Add error message from API, if present\n          description: err?.Title\n            ? `${errMessage.description}: ${err.Title}`\n            : errMessage.description,\n        }),\n      });\n    },\n  };\n};\n\nconst inventoryHasEdgeSystems = async () => {\n  const result = await axios.get(\n    `${INVENTORY_TOTAL_FETCH_URL_SERVER}${INVENTORY_TOTAL_FETCH_EDGE_PARAMS}`\n  );\n  return result?.data?.total > 0;\n};\n\nexport {\n  getNotificationProp,\n  manageEdgeInventoryUrlName,\n  inventoryHasEdgeSystems,\n};\n","/* eslint-disable no-unused-vars */\nimport React, { useEffect } from 'react';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\nimport AsyncComponent from '@redhat-cloud-services/frontend-components/AsyncComponent';\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\nimport { getNotificationProp } from '../Utilities/edge';\nimport { useDispatch } from 'react-redux';\n\nconst SystemUpdate = () => {\n  const chrome = useChrome();\n  const dispatch = useDispatch();\n  const notificationProp = getNotificationProp(dispatch);\n\n  useEffect(() => {\n    chrome?.updateDocumentTitle?.('Inventory Groups | Red Hat Insights');\n  }, [chrome]);\n  const { inventoryId } = useParams();\n\n  return inventoryId !== null ? (\n    <AsyncComponent\n      appName=\"edge\"\n      module=\"./UpdateSystem\"\n      navigateProp={useNavigate}\n      locationProp={useLocation}\n      notificationProp={notificationProp}\n      paramsProp={useParams}\n      inventoryId={inventoryId}\n    />\n  ) : (\n    <></>\n  );\n};\n\nexport default SystemUpdate;\n"],"names":["i","manageEdgeInventoryUrlName","getNotificationProp","dispatch","hasInfo","hasInfoMessage","addNotification","variant","hasSuccess","hasSuccessMessage","hasWarning","err","errMessage","description","Title","inventoryHasEdgeSystems","axios","INVENTORY_TOTAL_FETCH_URL_SERVER","INVENTORY_TOTAL_FETCH_EDGE_PARAMS","result","data","total","chrome","useChrome","useDispatch","notificationProp","useEffect","updateDocumentTitle","inventoryId","useParams","appName","module","navigateProp","useNavigate","locationProp","useLocation","paramsProp"],"sourceRoot":""}