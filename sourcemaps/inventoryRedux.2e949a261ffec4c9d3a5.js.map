{"version":3,"sources":["webpack:///./src/components/SystemDetails/Advisor.js","webpack:///./src/components/SystemDetails/Compliance.js","webpack:///./src/components/SystemDetails/Patch.js","webpack:///./src/components/SystemDetails/Ros.js","webpack:///./src/components/SystemDetails/Vulnerability.js","webpack:///./src/store/entityDetails.js","webpack:///./src/store/index.js","webpack:///./src/store/permissions/reducer.js","webpack:///./src/store/reducers.js","webpack:///./src/store/systemIssues.js","webpack:///./src/store/systemProfileStore.js"],"names":["appName","module","fallback","store","useStore","customItnl","intlProps","locale","navigator","language","Compliance","lazy","params","useRouteMatch","Suspense","inventoryId","getRegistry","useContext","RegistryContext","customItnlProvider","entity","id","entityDefaultState","loaded","ACTION_TYPES","state","payload","results","APPLICATION_SELECTED","activeApp","showTags","tagModalLoaded","TOGGLE_TAG_MODAL","toggleTagModalReducer","TOGGLE_DRAWER","isToggleOpened","isOpened","systemIssuesReducer","middlewareListener","createContext","init","MiddlewareListener","middleware","ReducerRegistry","getMiddleware","promise","notificationsMiddleware","errorDescriptionKey","applyReducerHash","loadingFailed","loading","writePermissions","undefined","defaultState","selected","Map","entityLoaded","hasRosCookie","insights","chrome","visibilityFunctions","isProd","hasCookie","activeApps","title","name","component","GeneralInformationTab","AdvisorTab","VulnerabilityTab","ComplianceTab","PatchTab","RosTab","filter","Boolean","reducers","notifications","notificationsReducer","systemProfileStore","permissionsReducer","tableReducer","rows","mergeArraysByKey","entities","INVENTORY_ACTION_TYPES","map","result","has","meta","systems","forEach","delete","SELECT_ENTITY","row","set","selectedRow","find","clear","SET_INVENTORY_FILTER","activeFilters","filtersList","SET_PAGINATION","perPage","parseInt","page","isNaN","entitesDetailReducer","mergeWithEntities","additionalReducers","entitiesReducer","entitiesDefault","mergeWithDetail","entityDetails","entityDetailsReducer","entityDefault","isPending","type","systemIssues","isLoaded","SYSTEM_ISSUE_TYPES","advisor","criticalCount","item","total_risk","cve","critical","count","total_items","moderate","important","low","patch","bug","data","attributes","rhba_count","enhancement","rhea_count","security","rhsa_count","compliance","profiles","system","sizes","formatBytes","bytes","Number","index","Math","floor","log","parseFloat","pow","toFixed","interfaces","repos","systemProfile","system_profile","ramSize","system_memory_bytes","repositories","yum_repos","reduce","acc","curr","enabled","disabled","network","network_interfaces","ipv4","ipv4_addresses","ipv6","ipv6_addresses"],"mappings":"mNAkBA,QAbmB,WACf,OAAO,kBAAC,IAAD,CACHA,QAAQ,UACRC,OAAO,iBACPC,SAAUA,IACVC,OAAOC,gBACPC,YAAU,EACVC,UAAW,CACPC,OAAQC,UAAUC,c,iFCVxBC,GAAaC,WAAK,kBAAM,uHAc9B,QAZsB,WAClB,IAAQC,GAAWC,mBAAc,iBAAzBD,OAER,OACI,kBAAC,EAAAE,SAAD,CAAUZ,SAAS,IACf,kBAACQ,EAAD,CAAYL,YAAU,EAACC,UAAW,CAC9BC,OAAQC,UAAUC,UACnBM,YAAcH,EAAOG,iB,uGCIpC,QAXiB,WACb,IAAQC,GAAgBC,gBAAWC,MAA3BF,YAER,OAAO,kBAAC,IAAD,CACHhB,QAAQ,QACRC,OAAO,iBACPe,YAAaA,EACbd,SAAUA,Q,kHCOlB,QAbe,WACX,IAAQU,GAAWC,mBAAc,iBAAzBD,OACAI,GAAgBC,gBAAWC,MAA3BF,YAER,OAAO,kBAAC,IAAD,CACHhB,QAAQ,MACRC,OAAO,iBACPe,YAAcA,EACdd,SAAUA,IACVa,YAAcH,EAAOG,gB,kHCK7B,QAdyB,WACrB,IAAQH,GAAWC,mBAAc,iBAAzBD,OACAI,GAAgBC,gBAAWC,MAA3BF,YAER,OAAO,kBAAC,IAAD,CACHhB,QAAQ,gBACRC,OAAO,iBACPe,YAAaA,EACbd,SAAUA,IACViB,oBAAkB,EAClBC,OAAS,CAAEC,GAAIT,EAAOG,iB,y1BCbvB,IAAMO,EAAqB,CAAEC,QAAQ,GAsC5C,QAAe,kBACVC,4BAAqC,kBAAMF,MADhD,SAEKE,0BAtCL,SAA6BC,GACzB,cACOA,GADP,IAEIF,QAAQ,QAiChB,SAGKC,4BAhCL,SAA4BC,EAA5B,GAAgD,IAAXC,EAAW,EAAXA,QACjC,cACOD,GADP,IAEIF,QAAQ,EACRH,OAAQM,EAAQC,QAAQ,SAyBhC,SAIKC,MAzBL,SAA+BH,EAA/B,GAAmD,IAAXC,EAAW,EAAXA,QACpC,cACOD,GADP,IAEII,UAAWH,QAkBnB,SAKKF,eAAyBM,OAL9B,SAMKN,wBAbL,SAAyBC,GACrB,cACOA,GADP,IAEIM,gBAAgB,QAIxB,SAOKP,yBAAmCM,OAPxC,SAQKE,KAAmBC,OARxB,SASKC,MAvBL,SAAsBT,EAAtB,GAA0C,IAAXC,EAAW,EAAXA,QAC3B,cACOD,GADP,IAEIU,eAAgBT,aAAF,EAAEA,EAASU,cAWjC,GAUOC,O,8FCvCHC,E,2EAJSpB,GAAkBqB,mBAAc,CACzCvB,YAAa,eAKV,SAASwB,IACZF,EAAqB,IAAIG,IADQ,2BAAZC,EAAY,yBAAZA,EAAY,gBAEjC,OAAO,IAAIC,KACP,GADG,CAGCL,EAAmBM,gBACnBC,KACAC,aAAwB,CACpBC,oBAAqB,CAAC,SAAU,YANrC,OAQIL,M,0pBCcf,SAT2BM,SAAgB,yBAE/BxB,4BAF+B,aA1BP,SAACC,GAAD,cAC7BA,GAD6B,IAEhCwB,eAAe,EACfC,SAAS,EACTC,sBAAkBC,QAsBqB,mBAG/B5B,4BAH+B,eAnBL,SAACC,EAAD,OAAUC,EAAV,EAAUA,QAAV,cAC/BD,GAD+B,IAElCyB,SAAS,EACTD,eAAe,EACfE,iBAAkBzB,EAAQyB,uBAea,mBAI/B3B,4BAJ+B,YAZR,SAACC,GAAD,cAC5BA,GAD4B,IAE/ByB,SAAS,EACTD,eAAe,OASwB,GANZ,CAC3BC,SAAS,EACTC,kBAAkB,EAClBF,eAAe,K,iyBCNnB,IAAMI,EAAe,CAAE9B,QAAQ,EAAO+B,SAAU,IAAIC,KAUpD,SAASC,EAAa/B,GAElB,IAAMgC,GAAeC,SAASC,OAAOC,oBAAoBC,UACrDH,SAASC,OAAOC,oBAAoBE,UAAU,qBAAsB,KAExE,cACOrC,GADP,IAEIF,QAAQ,EACRwC,WAAY,CACR,CAAEC,MAAO,sBAAuBC,KAAM,sBAAuBC,UAAWC,MACxE,CAAEH,MAAO,UAAWC,KAAM,UAAWC,UAAWE,MAChD,CACIJ,MAAO,gBACPC,KAAM,kBACNC,UAAWG,MAEf,CACIL,MAAO,aACPC,KAAM,aACNC,UAAWI,MAEf,CACIN,MAAO,QACPC,KAAM,QACNC,UAAWK,MAEfd,GAAgB,CACZO,MAAO,wBACPC,KAAM,MACNC,UAAWM,OAEjBC,OAAOC,WAoEjB,IAAIC,EAAW,CACXC,cAAeC,KACfC,wBACAC,wBAGSC,GAAehC,SAAgB,eAEnCxB,6BAnHT,SAAwBC,EAAxB,GAA4C,IAAXC,EAAW,EAAXA,QAC7B,cACOD,GADP,IAEIwD,MAAMC,QAAiB,CAACzD,EAAMwD,KAAMvD,EAAQC,UAC5CwD,UAAUD,QAAiB,CAACzD,EAAM0D,SAAUzD,EAAQC,gBA6GhB,SAGnCyD,8BAtCT,SAA0B3D,EAA1B,GAA8C,IAAXC,EAAW,EAAXA,QAC/B,cACOD,GADP,IAEIwD,MAAMC,QAAiB,CAACzD,EAAMwD,KAAMvD,EAAQC,QAAQ0D,KAAI,SAAAC,GACpD,cACOA,GADP,IAEIhC,SAAU7B,EAAM6B,UAAY7B,EAAM6B,SAASiC,IAAID,EAAOjE,iBA6B1B,mBAIhCG,mBAJgC,eA7C5C,SAAuBC,EAAvB,GAAwC,IAAR+D,EAAQ,EAARA,KACtBlC,EAAW7B,EAAM6B,UAAa,IAAIC,IAGxC,OAFAiC,EAAKC,QAAQC,SAAQ,SAAArE,GAAE,OAAIiC,EAASqC,OAAOtE,MAE3C,OACOI,GADP,IAEI6B,SAAU,IAAIC,IAAID,SAuCkB,SAKnCsC,MA3ET,SAAwBnE,EAAxB,GAA4C,IAAXC,EAAW,EAAXA,QACvB4B,EAAW7B,EAAM6B,UAAa,IAAIC,IACxC,GAAI7B,EAAQ4B,SACR,GAAmB,IAAf5B,EAAQL,GACRI,EAAMwD,KAAKS,SAAQ,SAAAG,GAAG,OAAIvC,EAASwC,IAAID,EAAIxE,GAAIwE,UAC5C,CACH,IAAME,EAActE,EAAMwD,MAAQxD,EAAMwD,KAAKe,MAAK,qBAAG3E,KAAgBK,EAAQL,MAC7EiC,EAASwC,IAAIpE,EAAQL,GAArB,OAA8B0E,GAAe,IAA7C,IAAiD1E,GAAIK,EAAQL,WAG9C,IAAfK,EAAQL,GACRI,EAAMwD,KAAKS,SAAQ,SAAAG,GAAG,OAAIvC,EAASqC,OAAOE,EAAIxE,QACvB,IAAhBK,EAAQL,GACfiC,EAAS2C,QAET3C,EAASqC,OAAOjE,EAAQL,IAIhC,cACOI,GADP,IAEI6B,SAAU,IAAIC,IAAID,SAiDkB,0BAMrB,SAAC7B,GAAD,cAAiBA,GAAjB,IAAwB6B,SAAU,SANb,SAOnC4C,MA9BT,SAAqBzE,EAArB,GAAyC,IAAXC,EAAW,EAAXA,QAC1B,cACOD,GADP,IAEI0E,cAAezE,EAAQ0E,kBAoBa,SAQnCC,MAxBT,SAAyB5E,EAAzB,GAA6C,IAAXC,EAAW,EAAXA,QACxB4E,EAAUC,SAAS7E,EAAQ4E,QAAS,IACpCE,EAAOD,SAAS7E,EAAQ8E,KAAM,IACpC,cACO/E,GADP,IAEI6E,QAASG,MAAMH,GAAW,GAAKA,EAC/BE,KAAMC,MAAMD,GAAQ,EAAIA,OAUY,GAUxCnD,GAGSqD,EAAuB,kBAAM1D,SAAiB,UAElDoC,2BAA+C5B,GAEpDH,IAGG,SAASsD,IAA4E,IAA1DC,EAA0D,uDAArC,SAACnF,GAAD,OAAWA,GAAO4B,EAAmB,uDAAJ,GACpF,MAAQ,CACJ8B,SAAU,SAAC1D,EAAOC,GAAR,YACHkF,EAAmB,EAAD,IACd5D,QAAiB,EAAD,GACZ6D,MADY,OAEXC,MAAoBzD,GAFzBL,CAEyCvB,EAAOC,IACpDA,MAKR,SAASqF,IAA0E,IAA1DH,EAA0D,uDAArC,SAACnF,GAAD,OAAWA,GAAO4B,EAAmB,uDAAJ,GAClF,MAAQ,CACJ2D,cAAe,SAACvF,EAAOC,GAAR,YACRkF,EAAmB,EAAD,IACd5D,QAAiB,EAAD,GACZiE,KADY,OAEXC,gBAAkB7D,GAFvBL,CAEuCvB,EAAOC,IAClDA,MAKf,W,8gECzGO,SAASyF,EAAU1F,EAAO2F,GAC7B,cACO3F,GADP,IAEI4F,aAAc,EAAF,KACL5F,aADK,EACLA,EAAO4F,cACPD,IAAQ,UAAGA,EAAO,CAAEE,UAAU,OAK7C,wBACKC,2CAA0D,SAAC9F,GAAD,OAAW0F,EAAU1F,EAAO,eAD3F,SAEK8F,mCAAkD,SAAC9F,GAAD,OAAW0F,EAAU1F,EAAO,WAFnF,SAGK8F,yCAAwD,SAAC9F,GAAD,OAAW0F,EAAU1F,EAAO,aAHzF,SAIK8F,uCAAsD,SAAC9F,GAAD,OAAW0F,EAAU1F,EAAO,kBAJvF,SAKK8F,6CAtFE,SAAiB9F,EAAjB,GAAqC,IAAXC,EAAW,EAAXA,QAC7B,cACOD,GADP,IAEI4F,aAAc,EAAF,KACL5F,aADK,EACLA,EAAO4F,cADF,IAERG,QAAS,CACLF,UAAU,EACVG,cAAe/F,aAAF,EAAEA,EAAS+C,QAAO,SAAAiD,GAAI,OAAIA,aAAA,EAAAA,EAAMC,aAAc,cA0E3E,SAMKJ,qCA1EE,SAAa9F,EAAb,GAAiC,oBAAXC,EAAW,EAAXA,QACzB,cACOD,GADP,IAEI4F,aAAc,EAAF,KACL5F,aADK,EACLA,EAAO4F,cADF,IAERO,IAAK,CACDN,UAAU,EACVO,SAAU,CACNC,OAAOpG,SAAA,UAAAA,EAASmG,gBAAT,mBAAmBrC,YAAnB,eAAyBuC,cAAe,GAEnDC,SAAU,CACNF,OAAOpG,SAAA,UAAAA,EAASsG,gBAAT,mBAAmBxC,YAAnB,eAAyBuC,cAAe,GAEnDE,UAAW,CACPH,OAAOpG,SAAA,UAAAA,EAASuG,iBAAT,mBAAoBzC,YAApB,eAA0BuC,cAAe,GAEpDG,IAAK,CACDJ,OAAOpG,SAAA,UAAAA,EAASwG,WAAT,mBAAc1C,YAAd,eAAoBuC,cAAe,YAmD9D,SAOKR,2CAnDE,SAAe9F,EAAf,GAAmC,gBAAXC,EAAW,EAAXA,QAC3B,cACOD,GADP,IAEI4F,aAAc,EAAF,KACL5F,aADK,EACLA,EAAO4F,cADF,IAERc,MAAO,CACHb,UAAU,EACVc,IAAK,CACDN,OAAOpG,SAAA,UAAAA,EAAS2G,YAAT,mBAAeC,kBAAf,eAA2BC,aAAc,GAEpDC,YAAa,CACTV,OAAOpG,SAAA,UAAAA,EAAS2G,YAAT,mBAAeC,kBAAf,eAA2BG,aAAc,GAEpDC,SAAU,CACNZ,OAAOpG,SAAA,UAAAA,EAAS2G,YAAT,mBAAeC,kBAAf,eAA2BK,aAAc,YA8BpE,SAQKpB,yCA/BE,SAAoB9F,EAApB,GAAwC,QAAXC,EAAW,EAAXA,QAChC,cACOD,GADP,IAEI4F,aAAc,EAAF,KACL5F,aADK,EACLA,EAAO4F,cADF,IAERuB,WAAY,CACRtB,UAAU,EACVuB,SAAUnH,SAAF,UAAEA,EAAS2G,YAAX,iBAAE,EAAeS,cAAjB,aAAE,EAAuBD,iBAgBjD,I,sqBCjFO,IAEME,EAAQ,CAAC,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAGxDC,EAAc,SAACC,GACxB,GAAc,IAAVA,GAAexC,MAAMyC,OAAOD,IAC5B,MAAO,MAGX,IAAME,EAAQC,KAAKC,MAAMD,KAAKE,IAAIL,GAASG,KAAKE,IAAI,OACpD,gBAAUC,YAAYN,EAAQG,KAAKI,IAAI,KAAML,IAAQM,QAAQ,IAA7D,YAAoEV,EAAMI,KA6C9E,SAAenG,SAAgB,eAEtBxB,oCAhBF,SAAyBC,EAAzB,GAA0D,IAR7BiI,EAXLC,EAmBqBhI,EAAa,EAAxBD,QAAWC,QAC1CiI,EAAiBjI,GAAWA,EAAQ,IAAMA,EAAQ,GAAGkI,gBAAmB,GAC9E,cACOpI,GADP,IAEImI,cAAe,EAAF,GACTrI,QAAQ,GACLqI,GAFM,IAGTE,QAASF,EAAcG,qBAAuBf,EAAYY,EAAcG,qBACxEC,cA3BmBL,EA2BUC,EAAcK,UA1B5CN,GAASA,EAAMO,QAAO,SAACC,EAAKC,GAAN,cACtBD,GACAC,EAAKC,QAAU,CACdA,QAAS,GAAF,eAAMF,EAAIE,SAAV,CAAmBD,KAC1B,CACAE,SAAU,GAAF,eAAMH,EAAIG,UAAV,CAAoBF,QAEhC,CAAEC,QAAS,GAAIC,SAAU,MAoBrBC,SAjBwBb,EAiBKE,EAAcY,mBAhB5Cd,GAAcA,EAAWQ,QAAO,SAACC,EAAKC,GAAN,MAAgB,CACnDV,WAAY,GAAF,eAAMS,EAAIT,YAAV,CAAsBU,IAChCK,KAAM,kBAAIN,EAAIM,OAAR,OAAiBL,EAAKM,gBAAkB,KAAIjG,OAAOC,SACzDiG,KAAM,kBAAIR,EAAIQ,OAAR,OAAiBP,EAAKQ,gBAAkB,KAAInG,OAAOC,YACzD,CAAEgF,WAAY,GAAIe,KAAM,GAAIE,KAAM,cAiBX,SAGtBnJ,kCA7CF,SAA8BC,GACjC,cACOA,GADP,IAEImI,cAAe,CACXrI,QAAQ,QAsCW,GAK3B,CACIqI,cA9DoB,CAAErI,QAAQ","file":"js/inventoryRedux.e4e1a7379fadb83233af.js","sourcesContent":["import React from 'react';\nimport { useStore } from 'react-redux';\nimport AsyncComponent from '@redhat-cloud-services/frontend-components/AsyncComponent';\nimport fallback from '../SpinnerFallback';\n\nconst AdvisorTab = () => {\n    return <AsyncComponent\n        appName=\"advisor\"\n        module=\"./SystemDetail\"\n        fallback={fallback}\n        store={useStore()}\n        customItnl\n        intlProps={{\n            locale: navigator.language\n        }}\n    />;\n};\n\nexport default AdvisorTab;\n","import React, { lazy, Suspense } from 'react';\nimport { useRouteMatch } from 'react-router-dom';\n\nconst Compliance = lazy(() => import('@redhat-cloud-services/frontend-components-inventory-compliance/Compliance'));\n\nconst ComplianceTab = () => {\n    const { params } = useRouteMatch('/:inventoryId');\n\n    return (\n        <Suspense fallback=\"\">\n            <Compliance customItnl intlProps={{\n                locale: navigator.language\n            }} inventoryId={ params.inventoryId } />\n        </Suspense>\n    );\n};\n\nexport default ComplianceTab;\n","import React, { useContext } from 'react';\nimport { RegistryContext } from '../../store';\nimport AsyncComponent from '@redhat-cloud-services/frontend-components/AsyncComponent';\nimport fallback from '../SpinnerFallback';\n\nconst PatchTab = () => {\n    const { getRegistry } = useContext(RegistryContext);\n\n    return <AsyncComponent\n        appName=\"patch\"\n        module=\"./SystemDetail\"\n        getRegistry={getRegistry}\n        fallback={fallback}\n    />;\n};\n\nexport default PatchTab;\n","import React, { useContext } from 'react';\nimport { useRouteMatch } from 'react-router-dom';\nimport { RegistryContext } from '../../store';\nimport AsyncComponent from '@redhat-cloud-services/frontend-components/AsyncComponent';\nimport fallback from '../SpinnerFallback';\n\nconst RosTab = () => {\n    const { params } = useRouteMatch('/:inventoryId');\n    const { getRegistry } = useContext(RegistryContext);\n\n    return <AsyncComponent\n        appName=\"ros\"\n        module=\"./SystemDetail\"\n        getRegistry={ getRegistry }\n        fallback={fallback}\n        inventoryId={ params.inventoryId }\n    />;\n};\n\nexport default RosTab;\n","import React, { useContext } from 'react';\nimport { useRouteMatch } from 'react-router-dom';\nimport { RegistryContext } from '../../store';\nimport AsyncComponent from '@redhat-cloud-services/frontend-components/AsyncComponent';\nimport fallback from '../SpinnerFallback';\n\nconst VulnerabilityTab = () => {\n    const { params } = useRouteMatch('/:inventoryId');\n    const { getRegistry } = useContext(RegistryContext);\n\n    return <AsyncComponent\n        appName=\"vulnerability\"\n        module=\"./SystemDetail\"\n        getRegistry={getRegistry}\n        fallback={fallback}\n        customItnlProvider\n        entity={ { id: params.inventoryId } }\n    />;\n};\n\nexport default VulnerabilityTab;\n","import { ACTION_TYPES, APPLICATION_SELECTED, TOGGLE_TAG_MODAL, TOGGLE_DRAWER } from './action-types';\nimport { showTags, toggleTagModalReducer } from './entities';\nimport systemIssuesReducer from './systemIssues';\nexport const entityDefaultState = { loaded: false };\n\nfunction entityDetailPending(state) {\n    return {\n        ...state,\n        loaded: false\n    };\n}\n\nfunction entityDetailLoaded(state, { payload }) {\n    return {\n        ...state,\n        loaded: true,\n        entity: payload.results[0]\n    };\n}\n\nfunction onApplicationSelected(state, { payload }) {\n    return {\n        ...state,\n        activeApp: payload\n    };\n}\n\nfunction toggleDrawer(state, { payload }) {\n    return  {\n        ...state,\n        isToggleOpened: payload?.isOpened\n    };\n}\n\nfunction showTagsPending(state) {\n    return {\n        ...state,\n        tagModalLoaded: false\n    };\n}\n\nexport default {\n    [ACTION_TYPES.LOAD_ENTITIES_PENDING]: () => entityDefaultState,\n    [ACTION_TYPES.LOAD_ENTITY_PENDING]: entityDetailPending,\n    [ACTION_TYPES.LOAD_ENTITY_FULFILLED]: entityDetailLoaded,\n    [APPLICATION_SELECTED]: onApplicationSelected,\n    [ACTION_TYPES.LOAD_TAGS]: showTags,\n    [ACTION_TYPES.LOAD_TAGS_PENDING]: showTagsPending,\n    [ACTION_TYPES.LOAD_TAGS_FULFILLED]: showTags,\n    [TOGGLE_TAG_MODAL]: toggleTagModalReducer,\n    [TOGGLE_DRAWER]: toggleDrawer,\n    ...systemIssuesReducer\n};\n","\nimport { createContext } from 'react';\nimport MiddlewareListener from '@redhat-cloud-services/frontend-components-utilities/MiddlewareListener';\nimport { ReducerRegistry } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport notificationsMiddleware from '@redhat-cloud-services/frontend-components-notifications/notificationsMiddleware';\nimport promise  from 'redux-promise-middleware';\nexport { default as reducers, tableReducer, entitesDetailReducer } from './reducers';\n\nexport const RegistryContext = createContext({\n    getRegistry: () => {}\n});\n\nlet middlewareListener;\n\nexport function init (...middleware) {\n    middlewareListener = new MiddlewareListener();\n    return new ReducerRegistry(\n        {},\n        [\n            middlewareListener.getMiddleware(),\n            promise,\n            notificationsMiddleware({\n                errorDescriptionKey: ['detail', 'stack']\n            }),\n            ...middleware\n        ]\n    );\n}\n\nexport function addNewListener ({ actionType, callback }) {\n    return middlewareListener.addNew({\n        on: actionType,\n        callback\n    });\n}\n","import { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport { ACTION_TYPES } from '../action-types';\n\nconst loadWritePermissionsPending = (state) => ({\n    ...state,\n    loadingFailed: false,\n    loading: true,\n    writePermissions: undefined\n});\n\nconst loadWritePermissionsFulfilled = (state, { payload }) => ({\n    ...state,\n    loading: false,\n    loadingFailed: false,\n    writePermissions: payload.writePermissions\n});\n\nconst loadWritePermissionsFailed = (state) => ({\n    ...state,\n    loading: false,\n    loadingFailed: true\n});\n\nconst defaultPermissionState = {\n    loading: true,\n    writePermissions: false,\n    loadingFailed: false\n};\n\nconst permissionsReducer = applyReducerHash(\n    {\n        [`${ACTION_TYPES.LOAD_WRITE_PERMISSIONS}_PENDING`]: loadWritePermissionsPending,\n        [`${ACTION_TYPES.LOAD_WRITE_PERMISSIONS}_FULFILLED`]: loadWritePermissionsFulfilled,\n        [`${ACTION_TYPES.LOAD_WRITE_PERMISSIONS}_FAILED`]: loadWritePermissionsFailed\n    },\n    defaultPermissionState\n);\n\nexport default permissionsReducer;\n","import { INVENTORY_ACTION_TYPES, ACTION_TYPES, SELECT_ENTITY, SET_INVENTORY_FILTER, SET_PAGINATION } from './action-types';\nimport systemProfileStore from './systemProfileStore';\nimport {\n    ComplianceTab,\n    VulnerabilityTab,\n    AdvisorTab,\n    GeneralInformationTab,\n    PatchTab,\n    RosTab\n} from '../components/SystemDetails';\nimport { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport { mergeArraysByKey } from '@redhat-cloud-services/frontend-components-utilities/helpers';\nimport { notificationsReducer } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport entitiesReducer, { defaultState as entitiesDefault } from './entities';\nimport entityDetailsReducer, { defaultState as entityDefault } from './entityDetails';\n\nexport { entitiesReducer, entityDetailsReducer };\n\nimport permissionsReducer from './permissions/reducer';\n\nconst defaultState = { loaded: false, selected: new Map() };\n\nfunction entitiesLoaded(state, { payload }) {\n    return {\n        ...state,\n        rows: mergeArraysByKey([state.rows, payload.results]),\n        entities: mergeArraysByKey([state.entities, payload.results])\n    };\n}\n\nfunction entityLoaded(state) {\n\n    const hasRosCookie = insights.chrome.visibilityFunctions.isProd() ?\n        insights.chrome.visibilityFunctions.hasCookie('cs_ros_beta_enable', '1') : true;\n\n    return {\n        ...state,\n        loaded: true,\n        activeApps: [\n            { title: 'General information', name: 'general_information', component: GeneralInformationTab },\n            { title: 'Advisor', name: 'advisor', component: AdvisorTab },\n            {\n                title: 'Vulnerability',\n                name: 'vulnerabilities',\n                component: VulnerabilityTab\n            },\n            {\n                title: 'Compliance',\n                name: 'compliance',\n                component: ComplianceTab\n            },\n            {\n                title: 'Patch',\n                name: 'patch',\n                component: PatchTab\n            },\n            hasRosCookie && {\n                title: 'Resource Optimization',\n                name: 'ros',\n                component: RosTab\n            }\n        ].filter(Boolean)\n    };\n}\n\nfunction entitySelected(state, { payload }) {\n    const selected = state.selected || (new Map());\n    if (payload.selected) {\n        if (payload.id === 0) {\n            state.rows.forEach(row => selected.set(row.id, row));\n        } else {\n            const selectedRow = state.rows && state.rows.find(({ id }) => id === payload.id);\n            selected.set(payload.id, { ...selectedRow || {}, id: payload.id });\n        }\n    } else {\n        if (payload.id === 0) {\n            state.rows.forEach(row => selected.delete(row.id));\n        } else if (payload.id === -1) {\n            selected.clear();\n        } else {\n            selected.delete(payload.id);\n        }\n    }\n\n    return {\n        ...state,\n        selected: new Map(selected)\n    };\n}\n\nfunction entityDeleted(state, { meta }) {\n    const selected = state.selected || (new Map());\n    meta.systems.forEach(id => selected.delete(id));\n\n    return {\n        ...state,\n        selected: new Map(selected)\n    };\n}\n\nfunction onEntitiesLoaded(state, { payload }) {\n    return {\n        ...state,\n        rows: mergeArraysByKey([state.rows, payload.results.map(result => {\n            return {\n                ...result,\n                selected: state.selected && state.selected.has(result.id)\n            };\n        })])\n    };\n}\n\nfunction onSetFilter(state, { payload }) {\n    return {\n        ...state,\n        activeFilters: payload.filtersList\n    };\n}\n\nfunction onSetPagination(state, { payload }) {\n    const perPage = parseInt(payload.perPage, 10);\n    const page = parseInt(payload.page, 10);\n    return {\n        ...state,\n        perPage: isNaN(perPage) ? 50 : perPage,\n        page: isNaN(page) ? 1 : page\n    };\n}\n\nlet reducers = {\n    notifications: notificationsReducer,\n    systemProfileStore,\n    permissionsReducer\n};\n\nexport const tableReducer = applyReducerHash(\n    {\n        [ACTION_TYPES.GET_ENTITIES_FULFILLED]: entitiesLoaded,\n        [INVENTORY_ACTION_TYPES.LOAD_ENTITIES_FULFILLED]: onEntitiesLoaded,\n        [`${ACTION_TYPES.REMOVE_ENTITY}_FULFILLED`]: entityDeleted,\n        [SELECT_ENTITY]: entitySelected,\n        FILTER_SELECT: (state) => ({ ...state, selected: {} }),\n        [SET_INVENTORY_FILTER]: onSetFilter,\n        [SET_PAGINATION]: onSetPagination\n    },\n    defaultState\n);\n\nexport const entitesDetailReducer = () => applyReducerHash(\n    {\n        [INVENTORY_ACTION_TYPES.LOAD_ENTITY_FULFILLED]: entityLoaded\n    },\n    defaultState\n);\n\nexport function mergeWithEntities(additionalReducers = (state) => state, defaultState = {}) {\n    return ({\n        entities: (state, payload) => ({\n            ...additionalReducers({\n                ...applyReducerHash({\n                    ...entitiesReducer\n                }, { ...entitiesDefault, ...defaultState })(state, payload)\n            }, payload)\n        })\n    });\n}\n\nexport function mergeWithDetail(additionalReducers = (state) => state, defaultState = {}) {\n    return ({\n        entityDetails: (state, payload) => ({\n            ...additionalReducers({\n                ...applyReducerHash({\n                    ...entityDetailsReducer\n                }, { ...entityDefault, ...defaultState })(state, payload)\n            }, payload)\n        })\n    });\n}\n\nexport default reducers;\n","/* eslint-disable camelcase */\nimport { SYSTEM_ISSUE_TYPES } from './action-types';\n\nexport function advisor(state, { payload }) {\n    return {\n        ...state,\n        systemIssues: {\n            ...state?.systemIssues,\n            advisor: {\n                isLoaded: true,\n                criticalCount: payload?.filter(item => item?.total_risk >= 4)\n            }\n        }\n    };\n}\n\nexport function cve(state, { payload }) {\n    return {\n        ...state,\n        systemIssues: {\n            ...state?.systemIssues,\n            cve: {\n                isLoaded: true,\n                critical: {\n                    count: payload?.critical?.meta?.total_items || 0\n                },\n                moderate: {\n                    count: payload?.moderate?.meta?.total_items || 0\n                },\n                important: {\n                    count: payload?.important?.meta?.total_items || 0\n                },\n                low: {\n                    count: payload?.low?.meta?.total_items || 0\n                }\n            }\n        }\n    };\n}\n\nexport function patch(state, { payload }) {\n    return {\n        ...state,\n        systemIssues: {\n            ...state?.systemIssues,\n            patch: {\n                isLoaded: true,\n                bug: {\n                    count: payload?.data?.attributes?.rhba_count || 0\n                },\n                enhancement: {\n                    count: payload?.data?.attributes?.rhea_count || 0\n                },\n                security: {\n                    count: payload?.data?.attributes?.rhsa_count || 0\n                }\n            }\n        }\n    };\n}\n\nexport function compliance(state, { payload }) {\n    return {\n        ...state,\n        systemIssues: {\n            ...state?.systemIssues,\n            compliance: {\n                isLoaded: true,\n                profiles: payload?.data?.system?.profiles\n            }\n        }\n    };\n}\n\nexport function isPending(state, type) {\n    return {\n        ...state,\n        systemIssues: {\n            ...state?.systemIssues,\n            ...type && { [type]: { isLoaded: false } }\n        }\n    };\n}\n\nexport default {\n    [SYSTEM_ISSUE_TYPES.LOAD_ADVISOR_RECOMMENDATIONS_PENDING]: (state) => isPending(state, 'advisor'),\n    [SYSTEM_ISSUE_TYPES.LOAD_APPLICABLE_CVES_PENDING]: (state) => isPending(state, 'cve'),\n    [SYSTEM_ISSUE_TYPES.LOAD_APPLICABLE_ADVISORIES_PENDING]: (state) => isPending(state, 'patch'),\n    [SYSTEM_ISSUE_TYPES.LOAD_COMPLIANCE_POLICIES_PENDING]: (state) => isPending(state, 'compliance'),\n    [SYSTEM_ISSUE_TYPES.LOAD_ADVISOR_RECOMMENDATIONS_FULFILLED]: advisor,\n    [SYSTEM_ISSUE_TYPES.LOAD_APPLICABLE_CVES_FULFILLED]: cve,\n    [SYSTEM_ISSUE_TYPES.LOAD_APPLICABLE_ADVISORIES_FULFILLED]: patch,\n    [SYSTEM_ISSUE_TYPES.LOAD_COMPLIANCE_POLICIES_FULFILLED]: compliance\n};\n","import { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport { ACTION_TYPES } from './action-types';\n\nexport const defaultState = { loaded: false };\n\nexport const sizes = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n\n// Kudos to https://stackoverflow.com/a/18650828/2560321\nexport const formatBytes = (bytes) => {\n    if (bytes === 0 || isNaN(Number(bytes))) {\n        return '0 B';\n    }\n\n    const index = Math.floor(Math.log(bytes) / Math.log(1024));\n    return `${parseFloat((bytes / Math.pow(1024, index)).toFixed(2))} ${sizes[index]}`;\n};\n\nexport function systemProfilePending(state) {\n    return {\n        ...state,\n        systemProfile: {\n            loaded: false\n        }\n    };\n}\n\nexport function calculateRepos(repos) {\n    return repos && repos.reduce((acc, curr) => ({\n        ...acc,\n        ...curr.enabled ? {\n            enabled: [...acc.enabled, curr]\n        } : {\n            disabled: [...acc.disabled, curr]\n        }\n    }), { enabled: [], disabled: [] });\n}\n\nexport function calculateInterfaces(interfaces) {\n    return interfaces && interfaces.reduce((acc, curr) => ({\n        interfaces: [...acc.interfaces, curr],\n        ipv4: [...acc.ipv4, ...curr.ipv4_addresses || []].filter(Boolean),\n        ipv6: [...acc.ipv6, ...curr.ipv6_addresses || []].filter(Boolean)\n    }), { interfaces: [], ipv4: [], ipv6: [] });\n}\n\nexport function onSystemProfile(state, { payload: { results } }) {\n    const systemProfile = (results && results[0] && results[0].system_profile) || {};\n    return {\n        ...state,\n        systemProfile: {\n            loaded: true,\n            ...systemProfile,\n            ramSize: systemProfile.system_memory_bytes && formatBytes(systemProfile.system_memory_bytes),\n            repositories: calculateRepos(systemProfile.yum_repos),\n            network: calculateInterfaces(systemProfile.network_interfaces)\n        }\n    };\n}\n\nexport default applyReducerHash(\n    {\n        [ACTION_TYPES.LOAD_SYSTEM_PROFILE_FULFILLED]: onSystemProfile,\n        [ACTION_TYPES.LOAD_SYSTEM_PROFILE_PENDING]: systemProfilePending\n    },\n    {\n        systemProfile: defaultState\n    }\n);\n"],"sourceRoot":""}