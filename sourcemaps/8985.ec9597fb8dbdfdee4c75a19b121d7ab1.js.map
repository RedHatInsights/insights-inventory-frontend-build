{"version":3,"file":"js/8985.4e634701f859ea861dd9.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-core/dist/esm/components/EmptyState/EmptyState.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/EmptyState/EmptyStateBody.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/EmptyState/EmptyStateIcon.js","webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/cubes-icon.js","webpack:///./node_modules/@patternfly/react-styles/css/components/EmptyState/empty-state.mjs","webpack:///./src/components/InventoryDetail/SystemNotFound.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/NotConnected/NotConnected.js","webpack:///./src/components/InventoryDetail/ApplicationDetails.js","webpack:///./src/components/InventoryDetail/InventoryDetail.js"],"sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/EmptyState/empty-state';\nexport var EmptyStateVariant;\n(function (EmptyStateVariant) {\n    EmptyStateVariant[\"xs\"] = \"xs\";\n    EmptyStateVariant[\"small\"] = \"small\";\n    EmptyStateVariant[\"large\"] = \"large\";\n    EmptyStateVariant[\"xl\"] = \"xl\";\n    EmptyStateVariant[\"full\"] = \"full\";\n})(EmptyStateVariant || (EmptyStateVariant = {}));\nexport const EmptyState = (_a) => {\n    var { children, className = '', variant = EmptyStateVariant.full, isFullHeight } = _a, props = __rest(_a, [\"children\", \"className\", \"variant\", \"isFullHeight\"]);\n    return (React.createElement(\"div\", Object.assign({ className: css(styles.emptyState, variant === 'xs' && styles.modifiers.xs, variant === 'small' && styles.modifiers.sm, variant === 'large' && styles.modifiers.lg, variant === 'xl' && styles.modifiers.xl, isFullHeight && styles.modifiers.fullHeight, className) }, props),\n        React.createElement(\"div\", { className: css(styles.emptyStateContent) }, children)));\n};\nEmptyState.displayName = 'EmptyState';\n//# sourceMappingURL=EmptyState.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/EmptyState/empty-state';\nexport const EmptyStateBody = (_a) => {\n    var { children, className = '' } = _a, props = __rest(_a, [\"children\", \"className\"]);\n    return (React.createElement(\"div\", Object.assign({ className: css(styles.emptyStateBody, className) }, props), children));\n};\nEmptyStateBody.displayName = 'EmptyStateBody';\n//# sourceMappingURL=EmptyStateBody.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/EmptyState/empty-state';\nexport const EmptyStateIcon = (_a) => {\n    var { className = '', icon: IconComponent, component: AnyComponent, variant = 'icon' } = _a, props = __rest(_a, [\"className\", \"icon\", \"component\", \"variant\"]);\n    const classNames = css(styles.emptyStateIcon, className);\n    return variant === 'icon' ? (React.createElement(IconComponent, Object.assign({ className: classNames }, props, { \"aria-hidden\": \"true\" }))) : (React.createElement(\"div\", { className: classNames },\n        React.createElement(AnyComponent, null)));\n};\nEmptyStateIcon.displayName = 'EmptyStateIcon';\n//# sourceMappingURL=EmptyStateIcon.js.map","\"use strict\"\nexports.__esModule = true;\nexports.CubesIconConfig = {\n  name: 'CubesIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M488.6 250.2L392 214V105.5c0-15-9.3-28.4-23.4-33.7l-100-37.5c-8.1-3.1-17.1-3.1-25.3 0l-100 37.5c-14.1 5.3-23.4 18.7-23.4 33.7V214l-96.6 36.2C9.3 255.5 0 268.9 0 283.9V394c0 13.6 7.7 26.1 19.9 32.2l100 50c10.1 5.1 22.1 5.1 32.2 0l103.9-52 103.9 52c10.1 5.1 22.1 5.1 32.2 0l100-50c12.2-6.1 19.9-18.6 19.9-32.2V283.9c0-15-9.3-28.4-23.4-33.7zM358 214.8l-85 31.9v-68.2l85-37v73.3zM154 104.1l102-38.2 102 38.2v.6l-102 41.4-102-41.4v-.6zm84 291.1l-85 42.5v-79.1l85-38.8v75.4zm0-112l-102 41.4-102-41.4v-.6l102-38.2 102 38.2v.6zm240 112l-85 42.5v-79.1l85-38.8v75.4zm0-112l-102 41.4-102-41.4v-.6l102-38.2 102 38.2v.6z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.CubesIcon = require('../createIcon').createIcon(exports.CubesIconConfig);\nexports[\"default\"] = exports.CubesIcon;","import './empty-state.css';\nexport default {\n  \"button\": \"pf-c-button\",\n  \"emptyState\": \"pf-c-empty-state\",\n  \"emptyStateBody\": \"pf-c-empty-state__body\",\n  \"emptyStateContent\": \"pf-c-empty-state__content\",\n  \"emptyStateIcon\": \"pf-c-empty-state__icon\",\n  \"emptyStatePrimary\": \"pf-c-empty-state__primary\",\n  \"emptyStateSecondary\": \"pf-c-empty-state__secondary\",\n  \"modifiers\": {\n    \"xs\": \"pf-m-xs\",\n    \"sm\": \"pf-m-sm\",\n    \"lg\": \"pf-m-lg\",\n    \"xl\": \"pf-m-xl\",\n    \"fullHeight\": \"pf-m-full-height\",\n    \"primary\": \"pf-m-primary\",\n    \"overpassFont\": \"pf-m-overpass-font\"\n  },\n  \"title\": \"pf-c-title\"\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n} from '@patternfly/react-core';\nimport CubesIcon from '@patternfly/react-icons/dist/js/icons/cubes-icon';\nimport { redirectToInventoryList } from './helpers';\nimport useInsightsNavigate from '@redhat-cloud-services/frontend-components-utilities/useInsightsNavigate/useInsightsNavigate';\n\n/**\n * Empty state when system was not found in inventory.\n * @param {*} params - inventoryId and onBackToListClick.\n */\nconst SystemNotFound = ({ inventoryId, onBackToListClick }) => {\n  const navigate = useInsightsNavigate();\n  return (\n    <EmptyState variant={EmptyStateVariant.full}>\n      <EmptyStateIcon icon={CubesIcon} />\n      <Title headingLevel=\"h5\" size=\"lg\">\n        System not found\n      </Title>\n      <EmptyStateBody>\n        System with ID {inventoryId} does not exist\n      </EmptyStateBody>\n      <Button\n        variant=\"primary\"\n        onClick={() =>\n          redirectToInventoryList(inventoryId, onBackToListClick, navigate)\n        }\n      >\n        Back to previous page\n      </Button>\n    </EmptyState>\n  );\n};\n\nSystemNotFound.propTypes = {\n  inventoryId: PropTypes.string,\n  onBackToListClick: PropTypes.func,\n};\n\nexport default SystemNotFound;\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Button, EmptyState, EmptyStateBody, EmptyStateIcon, Title } from '@patternfly/react-core';\nimport { DisconnectedIcon } from '@patternfly/react-icons';\nvar NotConnected = function (_a) {\n    var _b = _a.titleText, titleText = _b === void 0 ? 'This system isn’t connected to Insights yet' : _b, _c = _a.bodyText, bodyText = _c === void 0 ? 'To get started, activate the Insights client for this system.' : _c, _d = _a.buttonText, buttonText = _d === void 0 ? 'Learn how to activate the Insights client' : _d;\n    return (_jsxs(EmptyState, { children: [_jsx(EmptyStateIcon, { icon: DisconnectedIcon }), _jsx(Title, __assign({ headingLevel: \"h5\", size: \"lg\" }, { children: titleText })), _jsx(EmptyStateBody, { children: bodyText }), _jsx(Button, __assign({ variant: \"primary\", component: \"a\", href: \"https://access.redhat.com/products/red-hat-insights/\", target: \"_blank\", rel: \"noopener noreferrer\", className: \"pf-u-mt-lg\" }, { children: buttonText }))] }));\n};\nexport default NotConnected;\n//# sourceMappingURL=NotConnected.js.map","import React, { Suspense, useEffect, useMemo, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector, useStore } from 'react-redux';\nimport { Spinner, Tab, TabContent, Tabs } from '@patternfly/react-core';\nimport { verifyCulledReporter } from '../../Utilities/sharedFunctions';\nimport { getFact } from './helpers';\nimport { NotConnected } from '@redhat-cloud-services/frontend-components/NotConnected';\nimport {\n  APP_NAME_ADVISOR,\n  APP_NAME_PATCH,\n  APP_NAME_VULNERABILITY,\n  REPORTER_PUPTOO,\n  REPORTER_RHSM_CONDUIT,\n  REPORTER_RHSM_PROFILE_BRIDGE,\n} from '../../Utilities/constants';\n\n/**\n * Component that renders tabs for each application detail and handles clicking on each item.\n * @param {*} props onTabSelect can be used to notify parent component that detail has been selected.\n */\nconst ApplicationDetails = ({\n  onTabSelect,\n  appList,\n  activeApp,\n  inventoryId,\n  entity,\n  ...props\n}) => {\n  const store = useStore();\n  const items = useSelector(({ entityDetails }) => {\n    return (entityDetails?.activeApps || appList || [])\n      .filter(({ isVisible }) => isVisible !== false)\n      .map((app) => ({\n        ...app,\n        tabRef: React.createRef(),\n      }));\n  });\n  const disabledApps = useSelector(\n    ({ systemProfileStore }) => systemProfileStore?.disabledApps\n  );\n  const [activeTabs, setActiveTabs] = useState(items);\n  const [currentApp, setCurrentApp] = useState(activeApp || items?.[0]?.name);\n\n  const perReporterStaleness = getFact('per_reporter_staleness', entity);\n\n  useEffect(() => {\n    const filteredResult = items.filter(\n      (app) => !disabledApps?.includes(app.name)\n    );\n    if (filteredResult !== 0 && typeof filteredResult !== 'undefined') {\n      setActiveTabs(filteredResult);\n    } else {\n      setActiveTabs(items);\n    }\n    setCurrentApp(activeApp || items?.[0]?.name);\n  }, [disabledApps, appList]);\n\n  const isDisconnected = useMemo(\n    () => verifyCulledReporter(perReporterStaleness, REPORTER_PUPTOO),\n    [currentApp]\n  );\n\n  const isRHSMSystem = useMemo(() => {\n    const rhsmConduit =\n      !!perReporterStaleness?.[REPORTER_RHSM_CONDUIT] &&\n      !verifyCulledReporter(perReporterStaleness, REPORTER_RHSM_CONDUIT);\n    const rhsmBridge = !!perReporterStaleness?.[REPORTER_RHSM_PROFILE_BRIDGE];\n    return rhsmBridge && rhsmConduit;\n  }, [currentApp]);\n\n  const isEmptyState = (currentApp) =>\n    (currentApp === APP_NAME_ADVISOR && isDisconnected) ||\n    (currentApp === APP_NAME_VULNERABILITY &&\n      !isRHSMSystem &&\n      isDisconnected) ||\n    (currentApp === APP_NAME_PATCH && !isRHSMSystem && isDisconnected);\n\n  return (\n    <React.Fragment>\n      {activeTabs.length > 0 ? (\n        <React.Fragment>\n          <section className=\"pf-u-pr-lg pf-u-pl-lg pf-u-background-color-100-on-md\">\n            <Tabs\n              {...props}\n              activeKey={currentApp}\n              onSelect={(event, item) => {\n                const activeItem = activeTabs.find(\n                  (oneApp) => oneApp.name === item\n                );\n                if (onTabSelect) {\n                  onTabSelect(event, item, activeItem.name || item);\n                }\n\n                setCurrentApp(activeItem.name);\n              }}\n              className=\"ins-c-inventory-detail__app-tabs\"\n              inset={'insetMd'}\n            >\n              {activeTabs?.map((item, key) => (\n                <Tab\n                  key={key}\n                  eventKey={item.name}\n                  title={item.title}\n                  tabContentRef={item.tabRef}\n                  {...item}\n                />\n              ))}\n            </Tabs>\n          </section>\n          <section>\n            {activeTabs?.map((item) => {\n              const Cmp = item.component;\n              return (\n                <TabContent\n                  eventKey={item.name}\n                  id={item.name}\n                  ref={item.tabRef}\n                  aria-label={item.title}\n                  key={item.name}\n                >\n                  {item.name === currentApp && (\n                    <Suspense fallback={Spinner}>\n                      <section className=\"pf-c-page__main-section\">\n                        {isEmptyState(currentApp) ? (\n                          <NotConnected />\n                        ) : (\n                          <Cmp\n                            inventoryId={inventoryId}\n                            store={store}\n                            {...item}\n                          />\n                        )}\n                      </section>\n                    </Suspense>\n                  )}\n                </TabContent>\n              );\n            })}\n          </section>\n        </React.Fragment>\n      ) : (\n        <Spinner />\n      )}\n    </React.Fragment>\n  );\n};\n\nApplicationDetails.propTypes = {\n  appList: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.node,\n      name: PropTypes.string.isRequired,\n      pageId: PropTypes.string,\n    })\n  ),\n  onTabSelect: PropTypes.func,\n  activeApp: PropTypes.string.isRequired,\n  inventoryId: PropTypes.string.isRequired,\n  entity: PropTypes.object,\n};\n\nexport default ApplicationDetails;\n","import React, { Fragment, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {\n  deleteEntity as deleteEntityAction,\n  loadEntity,\n} from '../../store/actions';\nimport './InventoryDetail.scss';\nimport SystemNotFound from './SystemNotFound';\nimport { reloadWrapper } from '../../Utilities/index';\nimport { addNotification as addNotificationAction } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport ApplicationDetails from './ApplicationDetails';\nimport './InventoryDetail.scss';\nimport DetailHeader from './DetailHeader';\n/**\n * Composit component which tangles together Topbar, facts, tags, app details and if system is found or not.\n * This component is connected to redux and reads `loaded` and `entity`.\n * @param {*} props additional features from parent component.\n */\nconst InventoryDetail = ({\n  showTags,\n  onTabSelect,\n  onBackToListClick,\n  inventoryId,\n  additionalClasses,\n  activeApp,\n  appList,\n  showMainSection,\n  ...headerProps\n}) => {\n  const dispatch = useDispatch();\n  const loaded = useSelector(\n    ({ entityDetails }) => entityDetails?.loaded || false\n  );\n  const entity = useSelector(({ entityDetails }) => entityDetails?.entity);\n  //TODO: one all apps migrate to away from AppAinfo, remove this\n  useEffect(() => {\n    if (!entity || !(entity?.id === inventoryId) || !loaded) {\n      dispatch(loadEntity(inventoryId, { hasItems: true }, { showTags }));\n    }\n  }, []);\n  const deleteEntity = (systems, displayName, callback) => {\n    const action = deleteEntityAction(systems, displayName);\n    dispatch(reloadWrapper(action, callback));\n  };\n\n  const addNotification = (payload) => dispatch(addNotificationAction(payload));\n\n  return (\n    <div className=\"ins-entity-detail\">\n      {loaded && !entity ? (\n        <SystemNotFound\n          onBackToListClick={onBackToListClick}\n          inventoryId={inventoryId}\n        />\n      ) : (\n        <>\n          <DetailHeader\n            entity={entity}\n            loaded={loaded}\n            onBackToListClick={onBackToListClick}\n            deleteEntity={deleteEntity}\n            addNotification={addNotification}\n            showTags={showTags}\n            {...headerProps}\n          />\n          {showMainSection && (\n            <ApplicationDetails\n              onTabSelect={onTabSelect}\n              activeApp={activeApp}\n              appList={appList}\n              inventoryId={inventoryId}\n              entity={entity}\n            />\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nInventoryDetail.propTypes = {\n  showTags: PropTypes.bool,\n  onTabSelect: PropTypes.func,\n  onBackToListClick: PropTypes.func,\n  inventoryId: PropTypes.string,\n  additionalClasses: PropTypes.object,\n  activeApp: PropTypes.string,\n  appList: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.node,\n      name: PropTypes.string.isRequired,\n      pageId: PropTypes.string,\n    })\n  ),\n};\nInventoryDetail.defaultProps = {\n  actions: [],\n  hideInvLink: false,\n  showTags: false,\n  UUIDWrapper: Fragment,\n  LastSeenWrapper: Fragment,\n  TitleWrapper: Fragment,\n  TagsWrapper: Fragment,\n  DeleteWrapper: Fragment,\n  ActionsWrapper: Fragment,\n  appList: [],\n};\n\nconst InventoryDetailWrapper = ({ inventoryId, ...props }) => {\n  const { inventoryId: entityId } = useParams();\n  /*eslint-disable no-console*/\n  if (!inventoryId) {\n    console.warn('~~~~~~~~~~');\n    console.warn('~~~~~~~~~~');\n    console.warn(\n      'Missing inventoryId! Please provide one, we will remove the fallback from URL soon.'\n    );\n    console.warn(`Please use DetailHead component in the fed-mod to render \n            only Inventory header. Migrate away InventoryDetailHead`);\n    console.warn('~~~~~~~~~~');\n    console.warn('~~~~~~~~~~');\n  }\n  /*eslint-enable no-console*/\n\n  return (\n    <InventoryDetail\n      inventoryId={\n        inventoryId ||\n        entityId ||\n        location.pathname.replace(/\\/$/, '').split('/').pop()\n      }\n      {...props}\n    />\n  );\n};\n\nInventoryDetailWrapper.propTypes = InventoryDetail.propTypes;\n\n// TODO: Remove once all apps send `inventoryId` and use directly InventoryDetail\nconst InventoryDetailCmp = (props) =>\n  props.inventoryId ? (\n    <InventoryDetail {...props} />\n  ) : (\n    <InventoryDetailWrapper {...props} />\n  );\n\nInventoryDetailCmp.propTypes = InventoryDetail.propTypes;\n\nexport default InventoryDetailWrapper;\n"],"names":["EmptyStateVariant","EmptyState","_a","children","className","variant","full","isFullHeight","props","__rest","Object","assign","emptyState","modifiers","xs","sm","lg","xl","fullHeight","emptyStateContent","displayName","EmptyStateBody","emptyStateBody","EmptyStateIcon","icon","IconComponent","component","AnyComponent","classNames","emptyStateIcon","exports","name","height","width","svgPath","yOffset","xOffset","SystemNotFound","_ref","inventoryId","onBackToListClick","navigate","useInsightsNavigate","React","CubesIcon","Title","headingLevel","size","Button","onClick","redirectToInventoryList","propTypes","PropTypes","__assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","_b","titleText","_c","bodyText","_d","buttonText","DisconnectedIcon","href","target","rel","ApplicationDetails","_items$","onTabSelect","appList","activeApp","entity","_objectWithoutProperties","_excluded","store","useStore","items","useSelector","_ref2","entityDetails","activeApps","filter","_ref3","isVisible","map","app","_objectSpread","tabRef","disabledApps","_ref4","systemProfileStore","_useState","useState","_useState2","_slicedToArray","activeTabs","setActiveTabs","_useState3","_useState4","currentApp","setCurrentApp","perReporterStaleness","getFact","useEffect","_items$2","filteredResult","includes","isDisconnected","useMemo","verifyCulledReporter","REPORTER_PUPTOO","isRHSMSystem","rhsmConduit","REPORTER_RHSM_CONDUIT","REPORTER_RHSM_PROFILE_BRIDGE","Tabs","_extends","activeKey","onSelect","event","item","activeItem","find","oneApp","inset","key","Tab","eventKey","title","tabContentRef","Cmp","TabContent","id","ref","Suspense","fallback","Spinner","APP_NAME_ADVISOR","APP_NAME_VULNERABILITY","APP_NAME_PATCH","isEmptyState","NotConnected","isRequired","pageId","InventoryDetail","showTags","additionalClasses","showMainSection","headerProps","dispatch","useDispatch","loaded","loadEntity","hasItems","DetailHeader","deleteEntity","systems","callback","action","deleteEntityAction","reloadWrapper","addNotification","payload","addNotificationAction","defaultProps","actions","hideInvLink","UUIDWrapper","Fragment","LastSeenWrapper","TitleWrapper","TagsWrapper","DeleteWrapper","ActionsWrapper","InventoryDetailWrapper","_excluded2","entityId","useParams","console","warn","location","pathname","replace","split","pop"],"sourceRoot":""}