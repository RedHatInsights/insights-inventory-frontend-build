{"version":3,"file":"js/1304.6e9e2099e0f29c81cf8a.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Card/Card.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Card/CardBody.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Text/TextList.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Text/TextListItem.js","webpack:///./node_modules/@patternfly/react-styles/css/components/Card/card.mjs","webpack:///./src/Utilities/edge.js","webpack:///./src/components/InventoryGroups/Modals/CreateGroupModal.js","webpack:///./src/components/SystemDetails/GeneralInfo.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/Main/Main.js","webpack:///./src/components/InventoryGroups/SmallComponents/CreateGroupButton.js","webpack:///./src/components/InventoryGroups/Modals/AddSelectedHostsToGroupModal.js","webpack:///./src/components/InventoryTabs/ConventionalSystems/Utilities.js","webpack:///./src/components/InventoryTabs/ConventionalSystems/ConventionalSystemsTab.js","webpack:///./src/components/InventoryTabs/ConventionalSystems/useTableActions.js","webpack:///./src/Utilities/path.js","webpack:///./src/components/InventoryTabs/ImmutableDevices/EdgeDevicesTab.js","webpack:///./src/components/InventoryTabs/HybridInventoryTabs.js","webpack:///./src/routes/InventoryTable.js","webpack:///./node_modules/lodash/uniq.js"],"sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Card/card';\nimport { css } from '@patternfly/react-styles';\nimport { useOUIAProps } from '../../helpers';\nexport const CardContext = React.createContext({\n    cardId: '',\n    registerTitleId: () => { },\n    isExpanded: false\n});\nexport const Card = (_a) => {\n    var { children = null, id = '', className = '', component = 'article', isHoverable = false, isCompact = false, isSelectable = false, isSelectableRaised = false, isSelected = false, isDisabledRaised = false, isFlat = false, isExpanded = false, isRounded = false, isLarge = false, isFullHeight = false, isPlain = false, ouiaId, ouiaSafe = true, hasSelectableInput = false, selectableInputAriaLabel, onSelectableInputChange = () => { } } = _a, props = __rest(_a, [\"children\", \"id\", \"className\", \"component\", \"isHoverable\", \"isCompact\", \"isSelectable\", \"isSelectableRaised\", \"isSelected\", \"isDisabledRaised\", \"isFlat\", \"isExpanded\", \"isRounded\", \"isLarge\", \"isFullHeight\", \"isPlain\", \"ouiaId\", \"ouiaSafe\", \"hasSelectableInput\", \"selectableInputAriaLabel\", \"onSelectableInputChange\"]);\n    const Component = component;\n    const ouiaProps = useOUIAProps(Card.displayName, ouiaId, ouiaSafe);\n    const [titleId, setTitleId] = React.useState('');\n    const [ariaProps, setAriaProps] = React.useState();\n    if (isCompact && isLarge) {\n        // eslint-disable-next-line no-console\n        console.warn('Card: Cannot use isCompact with isLarge. Defaulting to isCompact');\n        isLarge = false;\n    }\n    const getSelectableModifiers = () => {\n        if (isDisabledRaised) {\n            return css(styles.modifiers.nonSelectableRaised);\n        }\n        if (isSelectableRaised) {\n            return css(styles.modifiers.selectableRaised, isSelected && styles.modifiers.selectedRaised);\n        }\n        if (isSelectable || isHoverable) {\n            return css(styles.modifiers.selectable, isSelected && styles.modifiers.selected);\n        }\n        return '';\n    };\n    const containsCardTitleChildRef = React.useRef(false);\n    const registerTitleId = (id) => {\n        setTitleId(id);\n        containsCardTitleChildRef.current = !!id;\n    };\n    React.useEffect(() => {\n        if (selectableInputAriaLabel) {\n            setAriaProps({ 'aria-label': selectableInputAriaLabel });\n        }\n        else if (titleId) {\n            setAriaProps({ 'aria-labelledby': titleId });\n        }\n        else if (hasSelectableInput && !containsCardTitleChildRef.current) {\n            setAriaProps({});\n            // eslint-disable-next-line no-console\n            console.warn('If no CardTitle component is passed as a child of Card the selectableInputAriaLabel prop must be passed');\n        }\n    }, [hasSelectableInput, selectableInputAriaLabel, titleId]);\n    return (React.createElement(CardContext.Provider, { value: {\n            cardId: id,\n            registerTitleId,\n            isExpanded\n        } },\n        hasSelectableInput && (React.createElement(\"input\", Object.assign({ className: \"pf-screen-reader\", id: `${id}-input` }, ariaProps, { type: \"checkbox\", checked: isSelected, onChange: event => onSelectableInputChange(id, event), disabled: isDisabledRaised, tabIndex: -1 }))),\n        React.createElement(Component, Object.assign({ id: id, className: css(styles.card, isCompact && styles.modifiers.compact, isExpanded && styles.modifiers.expanded, isFlat && styles.modifiers.flat, isRounded && styles.modifiers.rounded, isLarge && styles.modifiers.displayLg, isFullHeight && styles.modifiers.fullHeight, isPlain && styles.modifiers.plain, getSelectableModifiers(), className), tabIndex: isSelectable || isSelectableRaised ? '0' : undefined }, props, ouiaProps), children)));\n};\nCard.displayName = 'Card';\n//# sourceMappingURL=Card.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Card/card';\nimport { css } from '@patternfly/react-styles';\nexport const CardBody = (_a) => {\n    var { children = null, className = '', component = 'div', isFilled = true } = _a, props = __rest(_a, [\"children\", \"className\", \"component\", \"isFilled\"]);\n    const Component = component;\n    return (React.createElement(Component, Object.assign({ className: css(styles.cardBody, !isFilled && styles.modifiers.noFill, className) }, props), children));\n};\nCardBody.displayName = 'CardBody';\n//# sourceMappingURL=CardBody.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Content/content';\nimport { css } from '@patternfly/react-styles';\nexport var TextListVariants;\n(function (TextListVariants) {\n    TextListVariants[\"ul\"] = \"ul\";\n    TextListVariants[\"ol\"] = \"ol\";\n    TextListVariants[\"dl\"] = \"dl\";\n})(TextListVariants || (TextListVariants = {}));\nexport const TextList = (_a) => {\n    var { children = null, className = '', component = TextListVariants.ul, isPlain = false } = _a, props = __rest(_a, [\"children\", \"className\", \"component\", \"isPlain\"]);\n    const Component = component;\n    return (React.createElement(Component, Object.assign({}, props, { className: css(isPlain && styles.modifiers.plain, className) }), children));\n};\nTextList.displayName = 'TextList';\n//# sourceMappingURL=TextList.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nexport var TextListItemVariants;\n(function (TextListItemVariants) {\n    TextListItemVariants[\"li\"] = \"li\";\n    TextListItemVariants[\"dt\"] = \"dt\";\n    TextListItemVariants[\"dd\"] = \"dd\";\n})(TextListItemVariants || (TextListItemVariants = {}));\nexport const TextListItem = (_a) => {\n    var { children = null, className = '', component = TextListItemVariants.li } = _a, props = __rest(_a, [\"children\", \"className\", \"component\"]);\n    const Component = component;\n    return (React.createElement(Component, Object.assign({}, props, { className: css(className) }), children));\n};\nTextListItem.displayName = 'TextListItem';\n//# sourceMappingURL=TextListItem.js.map","import './card.css';\nexport default {\n  \"card\": \"pf-c-card\",\n  \"cardActions\": \"pf-c-card__actions\",\n  \"cardBody\": \"pf-c-card__body\",\n  \"cardExpandableContent\": \"pf-c-card__expandable-content\",\n  \"cardFooter\": \"pf-c-card__footer\",\n  \"cardHeader\": \"pf-c-card__header\",\n  \"cardHeaderToggle\": \"pf-c-card__header-toggle\",\n  \"cardHeaderToggleIcon\": \"pf-c-card__header-toggle-icon\",\n  \"cardSrInput\": \"pf-c-card__sr-input\",\n  \"cardTitle\": \"pf-c-card__title\",\n  \"divider\": \"pf-c-divider\",\n  \"modifiers\": {\n    \"hoverable\": \"pf-m-hoverable\",\n    \"selectable\": \"pf-m-selectable\",\n    \"selected\": \"pf-m-selected\",\n    \"hoverableRaised\": \"pf-m-hoverable-raised\",\n    \"selectableRaised\": \"pf-m-selectable-raised\",\n    \"nonSelectableRaised\": \"pf-m-non-selectable-raised\",\n    \"selectedRaised\": \"pf-m-selected-raised\",\n    \"compact\": \"pf-m-compact\",\n    \"displayLg\": \"pf-m-display-lg\",\n    \"flat\": \"pf-m-flat\",\n    \"plain\": \"pf-m-plain\",\n    \"rounded\": \"pf-m-rounded\",\n    \"expanded\": \"pf-m-expanded\",\n    \"fullHeight\": \"pf-m-full-height\",\n    \"toggleRight\": \"pf-m-toggle-right\",\n    \"noOffset\": \"pf-m-no-offset\",\n    \"noFill\": \"pf-m-no-fill\",\n    \"overpassFont\": \"pf-m-overpass-font\"\n  },\n  \"themeDark\": \"pf-theme-dark\"\n};","import { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\n\nconst manageEdgeInventoryUrlName = 'manage-edge-inventory';\n\nconst getNotificationProp = (dispatch) => {\n  return {\n    hasInfo: (hasInfoMessage) => {\n      dispatch({\n        ...addNotification({\n          variant: 'info',\n          ...hasInfoMessage,\n        }),\n      });\n    },\n    hasSuccess: (hasSuccessMessage) => {\n      dispatch({\n        ...addNotification({\n          variant: 'success',\n          ...hasSuccessMessage,\n        }),\n      });\n    },\n    hasWarning: (hasSuccessMessage) => {\n      dispatch({\n        ...addNotification({\n          variant: 'warning',\n          ...hasSuccessMessage,\n        }),\n      });\n    },\n    err: (errMessage, err) => {\n      dispatch({\n        ...addNotification({\n          variant: 'danger',\n          ...errMessage,\n          // Add error message from API, if present\n          description: err?.Title\n            ? `${errMessage.description}: ${err.Title}`\n            : errMessage.description,\n        }),\n      });\n    },\n  };\n};\n\nexport { getNotificationProp, manageEdgeInventoryUrlName };\n","import React, { useCallback, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { createGroupSchema } from './ModalSchemas/schemes';\nimport Modal from './Modal';\nimport apiWithToast from '../utils/apiWithToast';\nimport { createGroup, validateGroupName } from '../utils/api';\nimport { useDispatch } from 'react-redux';\nimport awesomeDebouncePromise from 'awesome-debounce-promise';\n\nconst CreateGroupModal = ({\n  isModalOpen,\n  setIsModalOpen,\n  reloadData,\n  modalBefore = false,\n  setterOfModalBefore,\n}) => {\n  const dispatch = useDispatch();\n\n  const handleCreateGroup = useCallback(\n    (values) => {\n      const statusMessages = {\n        onSuccess: {\n          title: 'Success',\n          description: `${values.name} has been created successfully`,\n        },\n        onError: { title: 'Error', description: 'Failed to create group' },\n      };\n      return apiWithToast(dispatch, () => createGroup(values), statusMessages);\n    },\n    [isModalOpen]\n  );\n\n  const schema = useMemo(() => {\n    const check = async (value) => {\n      const results = await validateGroupName(value);\n      if (results === true) {\n        throw 'Group name already exists';\n      }\n\n      return undefined;\n    };\n\n    // eslint-disable-next-line new-cap\n    const d = awesomeDebouncePromise(check, 500, { onlyResolvesLast: false });\n    return createGroupSchema(d);\n  }, []);\n\n  const onClose = () => {\n    if (modalBefore) {\n      setIsModalOpen(false);\n      setterOfModalBefore(true);\n    } else {\n      setIsModalOpen(false);\n    }\n  };\n\n  return (\n    <Modal\n      isModalOpen={isModalOpen}\n      closeModal={onClose}\n      title=\"Create group\"\n      submitLabel=\"Create\"\n      schema={schema}\n      reloadData={reloadData}\n      onSubmit={handleCreateGroup}\n    />\n  );\n};\n\nexport default CreateGroupModal;\n\nCreateGroupModal.propTypes = {\n  isModalOpen: PropTypes.bool,\n  setIsModalOpen: PropTypes.func,\n  reloadData: PropTypes.func,\n  modalBefore: PropTypes.bool,\n  setterOfModalBefore: PropTypes.func,\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport GeneralInformation from '../GeneralInfo/GeneralInformation';\nimport useFeatureFlag from '../../Utilities/useFeatureFlag';\nexport { default as TextInputModal } from '../GeneralInfo/TextInputModal';\n\nconst GeneralInfoTab = (props) => {\n  const systemProfile = useSelector(\n    ({ systemProfileStore }) => systemProfileStore?.systemProfile\n  );\n  const isEdgeHost = systemProfile?.host_type === 'edge';\n  const enableEdgeImageDetails = useFeatureFlag(\n    'edgeParity.inventory-system-detail'\n  );\n  const enableEdgeInventoryListDetails = useFeatureFlag(\n    'edgeParity.inventory-list'\n  );\n\n  return (\n    <GeneralInformation\n      {...props}\n      showImageDetails={\n        enableEdgeImageDetails && enableEdgeInventoryListDetails && isEdgeHost\n      }\n    />\n  );\n};\n\nexport default GeneralInfoTab;\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useEffect } from 'react';\nimport classNames from 'classnames';\nimport '../Main/main.css';\nexport var Main = function (_a) {\n    var children = _a.children, className = _a.className, props = __rest(_a, [\"children\", \"className\"]);\n    useEffect(function () {\n        console.error(\"Using deprecated \\\"Main\\\" component. Do not use it. Either remove it from your JSX or replace it by \\\"section\\\" HTML element.\");\n    }, []);\n    return (_jsx(\"section\", __assign({}, props, { className: \"\".concat(classNames(className, 'pf-l-page__main-section pf-c-page__main-section')) }, { children: children })));\n};\nexport var InternalMain = Main;\nexport default Main;\n//# sourceMappingURL=Main.js.map","import React from 'react';\nimport { Button, Text } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport { usePermissionsWithContext } from '@redhat-cloud-services/frontend-components-utilities/RBACHook';\nimport { GENERAL_GROUPS_WRITE_PERMISSION } from '../../../constants';\n\nexport const CreateGroupButton = ({ closeModal }) => {\n  const { hasAccess: canModifyGroups } = usePermissionsWithContext([\n    GENERAL_GROUPS_WRITE_PERMISSION,\n  ]);\n\n  return canModifyGroups ? (\n    <>\n      <Text>Or</Text>\n      <Button variant=\"secondary\" className=\"pf-u-w-50\" onClick={closeModal}>\n        Create a new group\n      </Button>\n    </>\n  ) : (\n    <></>\n  );\n};\n\nCreateGroupButton.propTypes = {\n  closeModal: PropTypes.func,\n};\n","import './AddSelectedHostsToGroupModal.scss';\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Modal from './Modal';\nimport { addHostsToGroupById } from '../utils/api';\nimport apiWithToast from '../utils/apiWithToast';\nimport { useDispatch } from 'react-redux';\nimport { CreateGroupButton } from '../SmallComponents/CreateGroupButton';\nimport { addHostSchema } from './ModalSchemas/schemes';\nimport CreateGroupModal from './CreateGroupModal';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\n\nconst AddSelectedHostsToGroupModal = ({\n  isModalOpen,\n  setIsModalOpen,\n  modalState: hosts,\n  reloadData,\n}) => {\n  const dispatch = useDispatch();\n  const chrome = useChrome();\n  const [isCreateGroupModalOpen, setIsCreateGroupModalOpen] = useState(false);\n  const handleAddDevices = (values) => {\n    const group = JSON.parse(values.group); // parse is a workaround for https://github.com/data-driven-forms/react-forms/issues/1401\n    const statusMessages = {\n      onSuccess: {\n        title: 'Success',\n        description: `System(s) have been added to ${group.name} successfully`,\n      },\n      onError: {\n        title: 'Error',\n        description: `Failed to add ${\n          hosts.length > 1 ? `${hosts.length} systems` : hosts[0].display_name\n        } to ${group.name}`,\n      },\n    };\n\n    apiWithToast(\n      dispatch,\n      () =>\n        addHostsToGroupById(\n          group.id,\n          hosts.map(({ id }) => id)\n        ),\n      statusMessages\n    );\n  };\n\n  return (\n    <>\n      {!isCreateGroupModalOpen && (\n        <Modal\n          isModalOpen={isModalOpen}\n          closeModal={() => setIsModalOpen(false)}\n          title=\"Add to group\"\n          submitLabel=\"Add\"\n          schema={addHostSchema(hosts, chrome)}\n          additionalMappers={{\n            'create-group-btn': {\n              component: CreateGroupButton,\n              closeModal: () => setIsCreateGroupModalOpen(true),\n            },\n          }}\n          onSubmit={handleAddDevices}\n          reloadData={reloadData}\n          modalClassName=\"add-selected-to-group-modal\"\n        />\n      )}\n      {isCreateGroupModalOpen && (\n        <CreateGroupModal\n          isModalOpen={isCreateGroupModalOpen}\n          setIsModalOpen={setIsCreateGroupModalOpen}\n          //modal before prop tells create group modal that it should\n          //reopen add host modal when user closes create group modal\n          modalBefore={true}\n          setterOfModalBefore={setIsModalOpen}\n        />\n      )}\n    </>\n  );\n};\n\nAddSelectedHostsToGroupModal.propTypes = {\n  modalState: PropTypes.arrayOf(\n    PropTypes.shape({\n      // eslint-disable-next-line camelcase\n      display_name: PropTypes.string,\n      id: PropTypes.string,\n    })\n  ).isRequired,\n  isModalOpen: PropTypes.bool,\n  setIsModalOpen: PropTypes.func,\n  reloadData: PropTypes.func,\n};\n\nexport default AddSelectedHostsToGroupModal;\n","import flatMap from 'lodash/flatMap';\nimport {\n  HOST_GROUP_CHIP,\n  RHCD_FILTER_KEY,\n  UPDATE_METHOD_KEY,\n} from '../../../Utilities/constants';\n\nconst mapTags = ({ category, values }) =>\n  values.map(\n    ({ tagKey, value }) =>\n      `${category ? `${category}/` : ''}${tagKey}${value ? `=${value}` : ''}`\n  );\n\nconst filterMapper = {\n  staleFilter: ({ staleFilter }, searchParams) =>\n    staleFilter.forEach((item) => searchParams.append('status', item)),\n  osFilter: ({ osFilter }, searchParams) =>\n    osFilter?.forEach((item) => searchParams.append('operating_system', item)),\n  registeredWithFilter: ({ registeredWithFilter }, searchParams) =>\n    registeredWithFilter?.forEach((item) =>\n      searchParams.append('source', item)\n    ),\n  value: ({ value, filter }, searchParams) =>\n    value === 'hostname_or_id' &&\n    Boolean(filter) &&\n    searchParams.append('hostname_or_id', filter),\n  tagFilters: ({ tagFilters }, searchParams) =>\n    tagFilters?.length > 0 &&\n    searchParams.append('tags', flatMap(tagFilters, mapTags)),\n  rhcdFilter: ({ rhcdFilter }, searchParams) =>\n    rhcdFilter?.forEach((item) => searchParams.append(RHCD_FILTER_KEY, item)),\n  lastSeenFilter: ({ lastSeenFilter }, searchParams) =>\n    Object.keys(lastSeenFilter || {})?.forEach(\n      (item) =>\n        item === 'mark' &&\n        searchParams.append('last_seen', lastSeenFilter[item])\n    ),\n  updateMethodFilter: ({ updateMethodFilter }, searchParams) =>\n    updateMethodFilter?.forEach((item) =>\n      searchParams.append(UPDATE_METHOD_KEY, item)\n    ),\n  hostGroupFilter: ({ hostGroupFilter }, searchParams) =>\n    hostGroupFilter?.forEach((item) =>\n      searchParams.append(HOST_GROUP_CHIP, item)\n    ),\n};\n\nexport const calculateFilters = (searchParams, filters = []) => {\n  filters.forEach((filter) => {\n    Object.keys(filter).forEach((key) => {\n      filterMapper?.[key]?.(filter, searchParams);\n    });\n  });\n  return searchParams;\n};\n\nexport const calculatePagination = (searchParams, page, perPage) => {\n  const currSearch = new URLSearchParams(location.search);\n  const newPage = page !== undefined ? page : currSearch.get('page');\n  const newPerPage =\n    perPage !== undefined ? perPage : currSearch.get('per_page');\n  !isNaN(parseInt(newPage)) && searchParams.append('page', newPage);\n  !isNaN(parseInt(newPerPage)) && searchParams.append('per_page', newPerPage);\n};\n","import React, { Fragment, useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport * as actions from '../../../store/actions';\nimport { addNotification as addNotificationAction } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport DeleteModal from '../../../Utilities/DeleteModal';\nimport { TextInputModal } from '../../SystemDetails/GeneralInfo';\nimport { generateFilter } from '../../../Utilities/constants';\nimport { InventoryTable as InventoryTableCmp } from '../../InventoryTable';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\nimport AddSelectedHostsToGroupModal from '../../InventoryGroups/Modals/AddSelectedHostsToGroupModal';\nimport useFeatureFlag from '../../../Utilities/useFeatureFlag';\nimport { useBulkSelectConfig } from '../../../Utilities/hooks/useBulkSelectConfig';\nimport RemoveHostsFromGroupModal from '../../InventoryGroups/Modals/RemoveHostsFromGroupModal';\nimport {\n  GENERAL_GROUPS_WRITE_PERMISSION,\n  NO_MODIFY_GROUPS_TOOLTIP_MESSAGE,\n  NO_MODIFY_HOSTS_TOOLTIP_MESSAGE,\n  REQUIRED_PERMISSIONS_TO_MODIFY_GROUP,\n  REQUIRED_PERMISSION_TO_MODIFY_HOST_IN_GROUP,\n} from '../../../constants';\nimport {\n  ActionButton,\n  ActionDropdownItem,\n} from '../../InventoryTable/ActionWithRBAC';\nimport uniq from 'lodash/uniq';\nimport useInsightsNavigate from '@redhat-cloud-services/frontend-components-utilities/useInsightsNavigate/useInsightsNavigate';\nimport useTableActions from './useTableActions';\nimport { calculateFilters, calculatePagination } from './Utilities';\n\nconst BulkDeleteButton = ({ selectedSystems, ...props }) => {\n  const requiredPermissions = selectedSystems.map(({ groups }) =>\n    REQUIRED_PERMISSION_TO_MODIFY_HOST_IN_GROUP(groups?.[0]?.id ?? null)\n  );\n\n  return (\n    <ActionButton\n      requiredPermissions={requiredPermissions}\n      noAccessTooltip={NO_MODIFY_HOSTS_TOOLTIP_MESSAGE}\n      checkAll\n      ouiaId=\"bulk-delete-button\"\n      {...props}\n    >\n      Delete\n    </ActionButton>\n  );\n};\n\nBulkDeleteButton.propTypes = {\n  selectedSystems: PropTypes.array,\n};\n\nconst ConventionalSystemsTab = ({\n  status,\n  source,\n  filterbyName,\n  tagsFilter,\n  operatingSystem,\n  rhcdFilter,\n  updateMethodFilter,\n  lastSeenFilter,\n  page,\n  perPage,\n  initialLoading,\n  hasAccess,\n  hostGroupFilter,\n}) => {\n  const navigate = useInsightsNavigate();\n  const chrome = useChrome();\n  const inventory = useRef(null);\n  const [isModalOpen, handleModalToggle] = useState(false);\n  const [currentSystem, setCurrentSystem] = useState({});\n  const [filters, onSetfilters] = useState(\n    generateFilter(\n      status,\n      source,\n      tagsFilter,\n      filterbyName,\n      operatingSystem,\n      rhcdFilter,\n      updateMethodFilter,\n      hostGroupFilter,\n      lastSeenFilter\n    )\n  );\n  const [ediOpen, onEditOpen] = useState(false);\n  const [addHostGroupModalOpen, setAddHostGroupModalOpen] = useState(false);\n  const [removeHostsFromGroupModalOpen, setRemoveHostsFromGroupModalOpen] =\n    useState(false);\n  const [globalFilter, setGlobalFilter] = useState();\n  const rows = useSelector(({ entities }) => entities?.rows, shallowEqual);\n  const loaded = useSelector(({ entities }) => entities?.loaded);\n  const selected = useSelector(({ entities }) => entities?.selected);\n  const total = useSelector(({ entities }) => entities?.total);\n  const dispatch = useDispatch();\n  const groupsEnabled = useFeatureFlag('hbi.ui.inventory-groups');\n  const bulkSelectConfig = useBulkSelectConfig(\n    selected,\n    globalFilter,\n    total,\n    rows,\n    loaded\n  );\n\n  const onRefresh = (options, callback) => {\n    onSetfilters(options?.filters);\n    const searchParams = new URLSearchParams();\n    calculateFilters(searchParams, options?.filters);\n    // eslint-disable-next-line camelcase\n    calculatePagination(searchParams, options?.page, options?.per_page);\n    const search = searchParams.toString();\n    navigate({\n      search,\n      hash: location.hash,\n    });\n\n    if (callback) {\n      callback(options);\n    }\n  };\n\n  const EdgeParityFilterDeviceEnabled = useFeatureFlag(\n    'edgeParity.inventory-list-filter'\n  );\n\n  useEffect(() => {\n    chrome.updateDocumentTitle('Systems | Red Hat Insights');\n    chrome?.hideGlobalFilter?.(false);\n    chrome.appAction('system-list');\n    chrome.appObjectId();\n    chrome.on('GLOBAL_FILTER_UPDATE', ({ data }) => {\n      const [workloads, SID, tags] = chrome.mapGlobalFilter(data, false, true);\n      setGlobalFilter({\n        tags,\n        filter: {\n          ...globalFilter?.filter,\n          system_profile: {\n            ...globalFilter?.filter?.system_profile,\n            ...(workloads?.SAP?.isSelected && { sap_system: true }),\n            ...(workloads &&\n              workloads['Ansible Automation Platform']?.isSelected && {\n                ansible: 'not_nil',\n              }),\n            ...(workloads?.['Microsoft SQL']?.isSelected && {\n              mssql: 'not_nil',\n            }),\n            ...(EdgeParityFilterDeviceEnabled && { host_type: 'nil' }),\n            ...(SID?.length > 0 && { sap_sids: SID }),\n          },\n        },\n      });\n    });\n    dispatch(actions.clearNotifications());\n\n    if (perPage || page) {\n      dispatch(\n        actions.setPagination(\n          Array.isArray(page) ? page[0] : page,\n          Array.isArray(perPage) ? perPage[0] : perPage\n        )\n      );\n    }\n\n    return () => {\n      dispatch(actions.clearEntitiesAction());\n    };\n  }, []);\n\n  const calculateSelected = () => (selected ? selected.size : 0);\n\n  const isBulkRemoveFromGroupsEnabled = () => {\n    return (\n      calculateSelected() > 0 &&\n      Array.from(selected.values()).some(({ groups }) => groups.length > 0) &&\n      uniq(\n        // can remove from at maximum one group at a time\n        Array.from(selected.values())\n          .filter(({ groups }) => groups.length > 0)\n          .map(({ groups }) => groups[0].name)\n      ).length === 1\n    );\n  };\n\n  const isBulkAddHostsToGroupsEnabled = () => {\n    if (calculateSelected() > 0) {\n      const selectedHosts = Array.from(selected.values());\n\n      return selectedHosts.every(({ groups }) => groups.length === 0);\n    }\n\n    return false;\n  };\n\n  const tableActions = useTableActions(\n    setCurrentSystem,\n    onEditOpen,\n    handleModalToggle,\n    setRemoveHostsFromGroupModalOpen,\n    setAddHostGroupModalOpen\n  );\n\n  return (\n    <Fragment>\n      <InventoryTableCmp\n        hasAccess={hasAccess}\n        isRbacEnabled\n        customFilters={{ filters, globalFilter }}\n        isFullView\n        showTags\n        onRefresh={onRefresh}\n        hasCheckbox\n        autoRefresh\n        ignoreRefresh\n        initialLoading={initialLoading}\n        ref={inventory}\n        tableProps={{\n          actionResolver: tableActions,\n          canSelectAll: false,\n        }}\n        actionsConfig={{\n          actions: [\n            <BulkDeleteButton\n              key=\"bulk-systems-delete\"\n              selectedSystems={Array.from(selected?.values?.() || [])}\n              onClick={() => {\n                setCurrentSystem(Array.from(selected.values()));\n                handleModalToggle(true);\n              }}\n              variant=\"secondary\"\n              isAriaDisabled={calculateSelected() === 0}\n            />,\n            ...(groupsEnabled\n              ? [\n                  {\n                    label: (\n                      <ActionDropdownItem\n                        key=\"bulk-add-to-group\"\n                        requiredPermissions={[GENERAL_GROUPS_WRITE_PERMISSION]}\n                        isAriaDisabled={!isBulkAddHostsToGroupsEnabled()}\n                        noAccessTooltip={NO_MODIFY_GROUPS_TOOLTIP_MESSAGE}\n                        onClick={() => {\n                          setCurrentSystem(Array.from(selected.values()));\n                          setAddHostGroupModalOpen(true);\n                        }}\n                        ignoreResourceDefinitions\n                      >\n                        Add to group\n                      </ActionDropdownItem>\n                    ),\n                    props: {\n                      style: {\n                        padding: 0, // custom component creates extra padding space\n                      },\n                    },\n                  },\n                  {\n                    label: (\n                      <ActionDropdownItem\n                        key=\"bulk-remove-from-group\"\n                        requiredPermissions={\n                          selected !== undefined\n                            ? Array.from(selected.values())\n                                .flatMap(({ groups }) =>\n                                  groups?.[0]?.id !== undefined\n                                    ? REQUIRED_PERMISSIONS_TO_MODIFY_GROUP(\n                                        groups[0].id\n                                      )\n                                    : null\n                                )\n                                .filter(Boolean) // don't check ungroupped hosts\n                            : []\n                        }\n                        isAriaDisabled={!isBulkRemoveFromGroupsEnabled()}\n                        noAccessTooltip={NO_MODIFY_GROUPS_TOOLTIP_MESSAGE}\n                        onClick={() => {\n                          setCurrentSystem(Array.from(selected.values()));\n                          setRemoveHostsFromGroupModalOpen(true);\n                        }}\n                        {...(selected === undefined // when nothing is selected, no access must be checked\n                          ? { override: true }\n                          : {})}\n                        checkAll\n                      >\n                        Remove from group\n                      </ActionDropdownItem>\n                    ),\n                    props: {\n                      style: {\n                        padding: 0,\n                      },\n                    },\n                  },\n                ]\n              : []),\n          ],\n        }}\n        bulkSelect={bulkSelectConfig}\n        onRowClick={(_e, id, app) => navigate(`/${id}${app ? `/${app}` : ''}`)}\n      />\n\n      <DeleteModal\n        className=\"sentry-mask data-hj-suppress\"\n        handleModalToggle={handleModalToggle}\n        isModalOpen={isModalOpen}\n        currentSytems={currentSystem}\n        onConfirm={() => {\n          let displayName;\n          let removeSystems;\n          if (Array.isArray(currentSystem)) {\n            removeSystems = currentSystem.map(({ id }) => id);\n            displayName =\n              currentSystem.length > 1\n                ? `${currentSystem.length} systems`\n                : currentSystem[0].display_name;\n          } else {\n            displayName = currentSystem.display_name;\n            removeSystems = [currentSystem.id];\n          }\n\n          dispatch(\n            addNotificationAction({\n              id: 'remove-initiated',\n              variant: 'warning',\n              title: 'Delete operation initiated',\n              description: `Removal of ${displayName} started.`,\n              dismissable: false,\n            })\n          );\n          dispatch(actions.deleteEntity(removeSystems, displayName));\n          handleModalToggle(false);\n        }}\n      />\n      <TextInputModal\n        title=\"Edit display name\"\n        isOpen={ediOpen}\n        value={currentSystem.display_name}\n        onCancel={() => onEditOpen(false)}\n        onSubmit={(value) => {\n          dispatch(actions.editDisplayName(currentSystem.id, value));\n          onEditOpen(false);\n        }}\n      />\n      {groupsEnabled === true && (\n        <>\n          {addHostGroupModalOpen && (\n            <AddSelectedHostsToGroupModal\n              isModalOpen={addHostGroupModalOpen}\n              setIsModalOpen={setAddHostGroupModalOpen}\n              modalState={currentSystem}\n              reloadData={() => {\n                if (calculateSelected() > 0) {\n                  dispatch(actions.selectEntity(-1, false));\n                }\n\n                setTimeout(\n                  () => inventory.current.onRefreshData(filters, false, true),\n                  500\n                );\n              }}\n            />\n          )}\n          {removeHostsFromGroupModalOpen && (\n            <RemoveHostsFromGroupModal\n              isModalOpen={removeHostsFromGroupModalOpen}\n              setIsModalOpen={setRemoveHostsFromGroupModalOpen}\n              modalState={currentSystem}\n              reloadData={() => {\n                if (calculateSelected() > 0) {\n                  dispatch(actions.selectEntity(-1, false));\n                }\n\n                setTimeout(\n                  () => inventory.current.onRefreshData(filters, false, true),\n                  500\n                );\n              }}\n            />\n          )}\n        </>\n      )}\n    </Fragment>\n  );\n};\n\nConventionalSystemsTab.propTypes = {\n  status: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.string),\n    PropTypes.string,\n  ]),\n  source: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.string),\n    PropTypes.string,\n  ]),\n  operatingSystem: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.string),\n    PropTypes.string,\n  ]),\n  filterbyName: PropTypes.arrayOf(PropTypes.string),\n  tagsFilter: PropTypes.any,\n  page: PropTypes.arrayOf(\n    PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n  ),\n  perPage: PropTypes.arrayOf(\n    PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n  ),\n  initialLoading: PropTypes.bool,\n  rhcdFilter: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.string),\n    PropTypes.string,\n  ]),\n  updateMethodFilter: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.string),\n    PropTypes.string,\n  ]),\n  hasAccess: PropTypes.bool,\n  hostGroupFilter: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.string),\n    PropTypes.string,\n  ]),\n  lastSeenFilter: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.string),\n    PropTypes.string,\n  ]),\n};\n\nConventionalSystemsTab.defaultProps = {\n  initialLoading: true,\n};\n\nexport default ConventionalSystemsTab;\n","import React, { useCallback } from 'react';\nimport {\n  GENERAL_GROUPS_WRITE_PERMISSION,\n  NO_MODIFY_GROUPS_TOOLTIP_MESSAGE,\n  NO_MODIFY_GROUP_TOOLTIP_MESSAGE,\n  NO_MODIFY_HOST_TOOLTIP_MESSAGE,\n  REQUIRED_PERMISSIONS_TO_MODIFY_GROUP,\n  REQUIRED_PERMISSION_TO_MODIFY_HOST_IN_GROUP,\n} from '../../../constants';\nimport { ActionDropdownItem } from '../../InventoryTable/ActionWithRBAC';\nimport useFeatureFlag from '../../../Utilities/useFeatureFlag';\n\n// some actions are hidden under feature flag\nconst useTableActions = (\n  setCurrentSystem,\n  onEditOpen,\n  handleModalToggle,\n  setRemoveHostsFromGroupModalOpen,\n  setAddHostGroupModalOpen\n) => {\n  const groupsEnabled = useFeatureFlag('hbi.ui.inventory-groups');\n\n  const tableActionsCallback = useCallback(\n    (row) => {\n      const hostActions = [\n        {\n          title: (\n            <ActionDropdownItem\n              key={`${row.id}-edit`}\n              onClick={() => {\n                setCurrentSystem(row);\n                onEditOpen(() => true);\n              }}\n              requiredPermissions={[\n                REQUIRED_PERMISSION_TO_MODIFY_HOST_IN_GROUP(\n                  row.groups?.[0]?.id ?? null\n                ),\n              ]}\n              noAccessTooltip={NO_MODIFY_HOST_TOOLTIP_MESSAGE}\n            >\n              Edit\n            </ActionDropdownItem>\n          ),\n          style: {\n            padding: 0, // custom component creates extra padding space\n          },\n        },\n        {\n          title: (\n            <ActionDropdownItem\n              key={`${row.id}-delete`}\n              onClick={() => {\n                setCurrentSystem(row);\n                handleModalToggle(() => true);\n              }}\n              requiredPermissions={[\n                REQUIRED_PERMISSION_TO_MODIFY_HOST_IN_GROUP(\n                  row.groups?.[0]?.id ?? null\n                ),\n              ]}\n              noAccessTooltip={NO_MODIFY_HOST_TOOLTIP_MESSAGE}\n            >\n              Delete\n            </ActionDropdownItem>\n          ),\n          style: {\n            padding: 0,\n          },\n        },\n      ];\n\n      const groupActions = [\n        {\n          title: (\n            <ActionDropdownItem\n              key={`${row.id}-add-to-group`}\n              onClick={() => {\n                setCurrentSystem([row]);\n                setAddHostGroupModalOpen(true);\n              }}\n              requiredPermissions={[GENERAL_GROUPS_WRITE_PERMISSION]}\n              noAccessTooltip={NO_MODIFY_GROUPS_TOOLTIP_MESSAGE}\n              isAriaDisabled={row.groups.length > 0} // additional condition for enabling the button\n              ignoreResourceDefinitions // to check if there is any groups:write permission (disregarding RD)\n            >\n              Add to group\n            </ActionDropdownItem>\n          ),\n          style: {\n            padding: 0,\n          },\n        },\n        {\n          title: (\n            <ActionDropdownItem\n              key={`${row.id}-remove-from-group`}\n              onClick={() => {\n                setCurrentSystem([row]);\n                setRemoveHostsFromGroupModalOpen(true);\n              }}\n              requiredPermissions={\n                row?.groups?.[0]?.id !== undefined\n                  ? REQUIRED_PERMISSIONS_TO_MODIFY_GROUP(row.groups[0].id)\n                  : []\n              }\n              noAccessTooltip={NO_MODIFY_GROUP_TOOLTIP_MESSAGE}\n              isAriaDisabled={row.groups.length === 0}\n              override={row?.groups?.[0]?.id === undefined ? true : undefined} // has access if no group\n            >\n              Remove from group\n            </ActionDropdownItem>\n          ),\n          style: {\n            padding: 0,\n          },\n        },\n      ];\n\n      return [...(groupsEnabled ? groupActions : []), ...hostActions];\n    },\n\n    [groupsEnabled]\n  );\n\n  return tableActionsCallback;\n};\n\nexport default useTableActions;\n","function getBaseName(pathname) {\n  let release = '/';\n  const pathName = pathname.split('/');\n\n  pathName.shift();\n\n  if (pathName[0] === 'preview') {\n    pathName.shift();\n    release = `/preview/`;\n  }\n\n  return `${release}`;\n}\n\nfunction resolveRelPath(path = '') {\n  return `${path.length > 0 ? `/${path}` : ''}`;\n}\n\nexport { getBaseName, resolveRelPath };\n","import React from 'react';\nimport AsyncComponent from '@redhat-cloud-services/frontend-components/AsyncComponent';\nimport { resolveRelPath } from '../../../Utilities/path';\nimport {\n  getNotificationProp,\n  manageEdgeInventoryUrlName,\n} from '../../../Utilities/edge';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\n\nconst ImmutableDevicesTab = () => {\n  const dispatch = useDispatch();\n  const notificationProp = getNotificationProp(dispatch);\n  return (\n    <AsyncComponent\n      appName=\"edge\"\n      module=\"./Inventory\"\n      navigateProp={useNavigate}\n      locationProp={useLocation}\n      showHeaderProp={false}\n      pathPrefix={resolveRelPath('')}\n      urlName={manageEdgeInventoryUrlName}\n      notificationProp={notificationProp}\n    />\n  );\n};\n\nImmutableDevicesTab.defaultProps = {\n  initialLoading: true,\n};\nexport default ImmutableDevicesTab;\n","import React, { useState } from 'react';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport { Tab, TabTitleText, Tabs } from '@patternfly/react-core';\nimport useFeatureFlag from '../../Utilities/useFeatureFlag';\nimport useInsightsNavigate from '@redhat-cloud-services/frontend-components-utilities/useInsightsNavigate/useInsightsNavigate';\nimport {\n  INVENTORY_TOTAL_FETCH_CONVENTIONAL_PARAMS,\n  INVENTORY_TOTAL_FETCH_EDGE_PARAMS,\n  INVENTORY_TOTAL_FETCH_URL_SERVER,\n  hybridInventoryTabKeys,\n} from '../../Utilities/constants';\nimport { manageEdgeInventoryUrlName } from '../../Utilities/edge';\n\nconst HybridInventoryTabs = ({\n  ConventionalSystemsTab,\n  ImmutableDevicesTab,\n  isImmutableTabOpen,\n}) => {\n  const navigate = useInsightsNavigate();\n  const activeTab = isImmutableTabOpen\n    ? hybridInventoryTabKeys.immutable.key\n    : hybridInventoryTabKeys.conventional.key;\n\n  const handleTabClick = (_event, tabIndex) => {\n    navigate(hybridInventoryTabKeys[tabIndex].url);\n  };\n\n  const [hasEdgeImages, setHasEdgeImages] = useState(false);\n  const [isOstreeTabFocusPriority, setIsOstreeTabFocusPriority] =\n    useState(false);\n  const EdgeParityEnabled = useFeatureFlag('edgeParity.inventory-list');\n  if (EdgeParityEnabled) {\n    try {\n      axios\n        .get(\n          `${INVENTORY_TOTAL_FETCH_URL_SERVER}${INVENTORY_TOTAL_FETCH_EDGE_PARAMS}`\n        )\n        .then((result) => {\n          const accountHasEdgeImages = result?.data?.total > 0;\n          setHasEdgeImages(accountHasEdgeImages);\n          axios\n            .get(\n              `${INVENTORY_TOTAL_FETCH_URL_SERVER}${INVENTORY_TOTAL_FETCH_CONVENTIONAL_PARAMS}`\n            )\n            .then((conventionalImages) => {\n              const accountHasConventionalImages =\n                conventionalImages?.data?.total > 0;\n              if (accountHasEdgeImages && !accountHasConventionalImages) {\n                handleTabClick(undefined, manageEdgeInventoryUrlName);\n                setIsOstreeTabFocusPriority(true);\n              }\n            });\n        });\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  return EdgeParityEnabled && hasEdgeImages ? (\n    <Tabs\n      className=\"pf-m-light pf-c-table\"\n      activeKey={activeTab}\n      onSelect={handleTabClick}\n      defaultActiveKey={\n        isOstreeTabFocusPriority ? manageEdgeInventoryUrlName : 'conventional'\n      }\n      aria-label=\"Hybrid inventory tabs\"\n    >\n      <Tab\n        eventKey={hybridInventoryTabKeys.conventional.key}\n        title={<TabTitleText>Conventional (RPM-DNF)</TabTitleText>}\n      >\n        {ConventionalSystemsTab}\n      </Tab>\n      <Tab\n        eventKey={hybridInventoryTabKeys.immutable.key}\n        title={<TabTitleText>Immutable (OSTree)</TabTitleText>}\n      >\n        {ImmutableDevicesTab}\n      </Tab>\n    </Tabs>\n  ) : (\n    ConventionalSystemsTab\n  );\n};\n\nHybridInventoryTabs.propTypes = {\n  ConventionalSystemsTab: PropTypes.element.isRequired,\n  ImmutableDevicesTab: PropTypes.element.isRequired,\n  isImmutableTabOpen: PropTypes.bool,\n};\nexport default HybridInventoryTabs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './inventory.scss';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport ConventionalSystemsTab from '../components/InventoryTabs/ConventionalSystems/ConventionalSystemsTab';\nimport ImmutableDevicesTab from '../components/InventoryTabs/ImmutableDevices/EdgeDevicesTab';\nimport HybridInventoryTabs from '../components/InventoryTabs/HybridInventoryTabs';\n\nconst Inventory = (props) => {\n  return (\n    <React.Fragment>\n      <PageHeader className=\"pf-m-light\">\n        <PageHeaderTitle title=\"Systems\" />\n      </PageHeader>\n      <Main>\n        <HybridInventoryTabs\n          ConventionalSystemsTab={<ConventionalSystemsTab {...props} />}\n          ImmutableDevicesTab={<ImmutableDevicesTab />}\n          isImmutableTabOpen={props.isImmutableTabOpen}\n        />\n      </Main>\n    </React.Fragment>\n  );\n};\n\nInventory.defaultProps = {\n  initialLoading: true,\n  notificationProp: PropTypes.object,\n};\nInventory.propTypes = {\n  isImmutableTabOpen: PropTypes.bool,\n};\nexport default Inventory;\n","var baseUniq = require('./_baseUniq');\n\n/**\n * Creates a duplicate-free version of an array, using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons, in which only the first occurrence of each element\n * is kept. The order of result values is determined by the order they occur\n * in the array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniq([2, 1, 2]);\n * // => [2, 1]\n */\nfunction uniq(array) {\n  return (array && array.length) ? baseUniq(array) : [];\n}\n\nmodule.exports = uniq;\n"],"names":["CardContext","cardId","registerTitleId","isExpanded","Card","_a","children","id","className","component","isHoverable","isCompact","isSelectable","isSelectableRaised","isSelected","isDisabledRaised","isFlat","isRounded","isLarge","isFullHeight","isPlain","ouiaId","ouiaSafe","hasSelectableInput","selectableInputAriaLabel","onSelectableInputChange","props","__rest","Component","ouiaProps","displayName","titleId","setTitleId","ariaProps","setAriaProps","console","warn","containsCardTitleChildRef","current","Provider","value","Object","assign","type","checked","onChange","event","disabled","tabIndex","card","modifiers","compact","expanded","flat","rounded","displayLg","fullHeight","plain","nonSelectableRaised","selectableRaised","selectedRaised","selectable","selected","undefined","CardBody","isFilled","cardBody","noFill","TextListVariants","TextList","ul","TextListItemVariants","TextListItem","li","manageEdgeInventoryUrlName","getNotificationProp","dispatch","hasInfo","hasInfoMessage","addNotification","variant","hasSuccess","hasSuccessMessage","hasWarning","err","errMessage","description","Title","i","CreateGroupModal","isModalOpen","setIsModalOpen","reloadData","modalBefore","setterOfModalBefore","useDispatch","handleCreateGroup","useCallback","values","statusMessages","onSuccess","title","name","onError","apiWithToast","createGroup","schema","useMemo","check","validateGroupName","d","awesomeDebouncePromise","onlyResolvesLast","createGroupSchema","closeModal","submitLabel","onSubmit","propTypes","PropTypes","systemProfile","useSelector","systemProfileStore","isEdgeHost","host_type","enableEdgeImageDetails","useFeatureFlag","enableEdgeInventoryListDetails","GeneralInformation","showImageDetails","__assign","t","s","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","useEffect","error","concat","CreateGroupButton","usePermissionsWithContext","GENERAL_GROUPS_WRITE_PERMISSION","hasAccess","Text","Button","onClick","AddSelectedHostsToGroupModal","hosts","modalState","chrome","useChrome","useState","isCreateGroupModalOpen","setIsCreateGroupModalOpen","Modal","addHostSchema","additionalMappers","group","JSON","parse","display_name","addHostsToGroupById","map","modalClassName","isRequired","mapTags","category","tagKey","filterMapper","staleFilter","searchParams","forEach","item","append","osFilter","registeredWithFilter","filter","Boolean","tagFilters","flatMap","rhcdFilter","RHCD_FILTER_KEY","lastSeenFilter","keys","updateMethodFilter","UPDATE_METHOD_KEY","hostGroupFilter","HOST_GROUP_CHIP","BulkDeleteButton","selectedSystems","requiredPermissions","groups","REQUIRED_PERMISSION_TO_MODIFY_HOST_IN_GROUP","noAccessTooltip","NO_MODIFY_HOSTS_TOOLTIP_MESSAGE","checkAll","ConventionalSystemsTab","status","source","filterbyName","tagsFilter","operatingSystem","page","perPage","initialLoading","navigate","useInsightsNavigate","inventory","useRef","handleModalToggle","currentSystem","setCurrentSystem","generateFilter","filters","onSetfilters","ediOpen","onEditOpen","addHostGroupModalOpen","setAddHostGroupModalOpen","removeHostsFromGroupModalOpen","setRemoveHostsFromGroupModalOpen","globalFilter","setGlobalFilter","rows","entities","shallowEqual","loaded","total","groupsEnabled","bulkSelectConfig","useBulkSelectConfig","EdgeParityFilterDeviceEnabled","updateDocumentTitle","hideGlobalFilter","appAction","appObjectId","on","data","mapGlobalFilter","workloads","SID","tags","system_profile","SAP","sap_system","ansible","mssql","sap_sids","actions","Array","isArray","calculateSelected","size","tableActions","row","hostActions","key","NO_MODIFY_HOST_TOOLTIP_MESSAGE","style","padding","groupActions","NO_MODIFY_GROUPS_TOOLTIP_MESSAGE","isAriaDisabled","ignoreResourceDefinitions","REQUIRED_PERMISSIONS_TO_MODIFY_GROUP","NO_MODIFY_GROUP_TOOLTIP_MESSAGE","override","useTableActions","Fragment","InventoryTable","isRbacEnabled","customFilters","isFullView","showTags","onRefresh","options","callback","URLSearchParams","calculateFilters","currSearch","location","search","newPage","get","newPerPage","isNaN","parseInt","calculatePagination","per_page","toString","hash","hasCheckbox","autoRefresh","ignoreRefresh","ref","tableProps","actionResolver","canSelectAll","actionsConfig","from","label","every","some","uniq","bulkSelect","onRowClick","_e","app","DeleteModal","currentSytems","onConfirm","removeSystems","addNotificationAction","dismissable","TextInputModal","isOpen","onCancel","setTimeout","onRefreshData","RemoveHostsFromGroupModal","defaultProps","resolveRelPath","path","ImmutableDevicesTab","notificationProp","AsyncComponent","appName","module","navigateProp","useNavigate","locationProp","useLocation","showHeaderProp","pathPrefix","urlName","HybridInventoryTabs","isImmutableTabOpen","activeTab","hybridInventoryTabKeys","immutable","conventional","handleTabClick","_event","url","hasEdgeImages","setHasEdgeImages","isOstreeTabFocusPriority","setIsOstreeTabFocusPriority","EdgeParityEnabled","axios","INVENTORY_TOTAL_FETCH_URL_SERVER","INVENTORY_TOTAL_FETCH_EDGE_PARAMS","then","result","accountHasEdgeImages","INVENTORY_TOTAL_FETCH_CONVENTIONAL_PARAMS","conventionalImages","accountHasConventionalImages","log","Tabs","activeKey","onSelect","defaultActiveKey","Tab","eventKey","TabTitleText","T","Inventory","PageHeader","PageHeaderTitle","baseUniq","exports","array"],"sourceRoot":""}