{"version":3,"file":"js/5878.1669768588289.be7fdf7a5db6ad988d4b.js","mappings":"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","sources":["webpack:///./src/Utilities/DeleteModal.js","webpack:///./src/Utilities/InsightsDisconnected.js","webpack:///./src/Utilities/OperatingSystemFormatter.js","webpack:///./src/Utilities/TagWithDialog.js","webpack:///./src/Utilities/TagsModal.js","webpack:///./src/Utilities/Wrapper.js","webpack:///./src/Utilities/constants.js","webpack:///./src/Utilities/sharedFunctions.js","webpack:///./src/api/api.js","webpack:///./src/api/systemIssues.js","webpack:///./src/components/GeneralInfo/EditButton/EditButton.js","webpack:///./src/components/GeneralInfo/InfoTable/InfoTable.js","webpack:///./src/components/GeneralInfo/SystemStatusCard/SystemStatusCard.js","webpack:///./src/components/GeneralInfo/TextInputModal/TextInputModal.js","webpack:///./src/components/InventoryTable/TitleColumn.js","webpack:///./src/components/SpinnerFallback.js","webpack:///./src/store/action-types.js","webpack:///./src/store/entities.js","webpack:///./src/store/index.js","webpack:///./src/components/SystemDetails/Compliance.js","webpack:///./src/components/SystemDetails/Vulnerability.js","webpack:///./src/components/SystemDetails/Advisor.js","webpack:///./src/components/SystemDetails/Patch.js","webpack:///./src/components/SystemDetails/Ros.js","webpack:///./src/store/systemIssues.js","webpack:///./src/store/entityDetails.js","webpack:///./src/store/reducers.js","webpack:///./src/store/system-issues-actions.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    ClipboardCopy,\n    Modal,\n    Split,\n    SplitItem,\n    Stack,\n    StackItem,\n    Level,\n    LevelItem,\n    Button\n} from '@patternfly/react-core';\n\nimport ExclamationTriangleIcon from  '@patternfly/react-icons/dist/js/icons/exclamation-triangle-icon';\n\nconst DeleteModal = ({ handleModalToggle, isModalOpen, currentSytems, onConfirm }) => {\n    let systemToRemove;\n    let systemLabel = 'system';\n    if (Array.isArray(currentSytems)) {\n        systemToRemove = currentSytems.length === 1 ? currentSytems[0].display_name : `${currentSytems.length} systems`;\n        systemLabel = currentSytems.length === 1 ? systemLabel : 'systems';\n    } else {\n        systemToRemove = currentSytems.display_name;\n    }\n\n    return <Modal\n        variant=\"small\"\n        title=\"Remove from inventory\"\n        className=\"ins-c-inventory__table--remove\"\n        ouiaId=\"inventory-delete-modal\"\n        isOpen={isModalOpen}\n        onClose={() => handleModalToggle(false)}\n        appendTo={document.getElementsByClassName('inventory')[0] || document.body}\n    >\n        <Split hasGutter>\n            <SplitItem><ExclamationTriangleIcon size=\"xl\" className=\"ins-m-alert\" /></SplitItem>\n            <SplitItem isFilled>\n                <Stack hasGutter>\n                    <StackItem>\n                        {systemToRemove} will be removed from\n                                    all {location.host} applications and services. You need to re-register\n                        the {systemLabel} to add it back to your inventory.\n                    </StackItem>\n                    <StackItem>\n                        To disable the daily upload for this {systemLabel}, use the following command:\n                    </StackItem>\n                    <StackItem>\n                        <ClipboardCopy>insights-client --unregister</ClipboardCopy>\n                    </StackItem>\n                </Stack>\n            </SplitItem>\n        </Split>\n        <Level hasGutter>\n            <LevelItem>\n                <Button\n                    variant=\"danger\"\n                    ouiaId=\"confirm-inventory-delete\"\n                    onClick={onConfirm}\n                >\n                    Remove\n                </Button>\n                <Button\n                    variant=\"link\"\n                    ouiaId=\"cancel-inventory-delete\"\n                    onClick={() => handleModalToggle(false)}\n                >\n                    Cancel\n                </Button>\n            </LevelItem>\n        </Level>\n    </Modal>;\n};\n\nconst ActiveSystemProp = PropTypes.shape({\n    id: PropTypes.string,\n    displayName: PropTypes.string\n});\n\nDeleteModal.propTypes = {\n    isModalOpen: PropTypes.bool,\n    currentSytems: PropTypes.oneOfType([ActiveSystemProp, PropTypes.arrayOf(ActiveSystemProp)]),\n    handleModalToggle: PropTypes.func,\n    onConfirm: PropTypes.func\n};\n\nDeleteModal.defaultProps = {\n    isModalOpen: false,\n    currentSytems: {},\n    handleModalToggle: () => undefined,\n    onConfirm: () => undefined\n};\n\nexport default DeleteModal;\n","import React from 'react';\n\nimport { Tooltip, Grid, GridItem } from '@patternfly/react-core';\nimport { DisconnectedIcon } from '@patternfly/react-icons';\n\nimport './InsightsDisconnected.scss';\n\nconst InsightsDisconnected = () => (\n    <Tooltip\n        maxWidth='14rem'\n        content={(\n            <Grid hasGutter>\n                <GridItem>\n                    Insights client not reporting\n                </GridItem>\n                <GridItem>\n                    From the main navigation, open\n                    &quot;Registration Assitant&quot; to learn\n                    how to set up Insights.\n                </GridItem>\n            </Grid>\n        )}>\n        <span className=\"pf-u-ml-sm ins-c-inventor__disconnected-icon\">\n            <DisconnectedIcon />\n        </span>\n    </Tooltip>\n);\n\nexport default InsightsDisconnected;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst OperatingSystemFormatter = ({ operatingSystem }) => {\n    if (operatingSystem?.name === 'RHEL') {\n        const version = (operatingSystem.major && operatingSystem.minor !== null)\n        && `${operatingSystem.major}.${operatingSystem?.minor}` || null;\n\n        return <span>\n            RHEL {version}\n        </span>;\n    }\n\n    return <span>\n        {operatingSystem?.name || 'Not available'}\n    </span>;\n};\n\nOperatingSystemFormatter.propTypes = {\n    operatingSystem: PropTypes.shape({\n        name: PropTypes.string,\n        major: PropTypes.number,\n        minor: PropTypes.number\n    })\n};\n\nexport default OperatingSystemFormatter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { TagCount } from '@redhat-cloud-services/frontend-components/TagCount';\nimport { loadTags, toggleTagModal } from '../store/actions';\n\nconst TagWithDialog = ({ count, loadTags, systemId }) => (\n    <span\n        onClick={(e) => e.stopPropagation()}\n        className=\"ins-c-inventory__list-tags\"\n        data-ouia-component-id={`${systemId}-tag-button`}\n    >\n        <TagCount count={count} onTagClick={ () => loadTags(systemId, count) } />\n    </span>\n);\n\nTagWithDialog.propTypes = {\n    count: PropTypes.number,\n    loadTags: PropTypes.func,\n    systemId: PropTypes.string\n};\n\nconst dispatchToProps = (dispatch) => ({\n    loadTags: (systemId, count) => {\n        if (systemId) {\n            dispatch(toggleTagModal(true));\n            dispatch(loadTags(systemId, undefined, undefined, count));\n        }\n    }\n});\n\nexport default connect(() => ({}), dispatchToProps)(TagWithDialog);\n","import React, { useState, useCallback, useEffect } from 'react';\nimport { useSelector, useDispatch, shallowEqual } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { toggleTagModal, fetchAllTags } from '../store/actions';\nimport { TagModal } from '@redhat-cloud-services/frontend-components/TagModal';\nimport { cellWidth } from '@patternfly/react-table';\nimport debounce from 'lodash/debounce';\nimport flatten from 'lodash/flatten';\n\nconst TagsModal = ({\n    filterTagsBy,\n    onToggleModal,\n    onApply,\n    getTags\n}) => {\n    const dispatch = useDispatch();\n    const [filterBy, setFilterBy] = useState('');\n    const [selected, setSelected] = useState([]);\n    const [statePagination, setStatePagination] = useState({\n        perPage: 10,\n        page: 1\n    });\n\n    const showTagDialog = useSelector(({ entities, entityDetails }) => (entities || entityDetails)?.showTagDialog);\n\n    const pagination = useSelector(({ entities, entityDetails }) => {\n        if (entities?.activeSystemTag || entityDetails?.entity) {\n            return statePagination;\n        }\n\n        return entities?.allTagsPagination || statePagination;\n    }, shallowEqual);\n\n    const loaded = useSelector(({ entities, entityDetails }) => entities?.tagModalLoaded || entityDetails?.tagModalLoaded);\n\n    const activeSystemTag = useSelector(({ entities, entityDetails }) => entities?.activeSystemTag || entityDetails?.entity);\n    const tags = useSelector(({ entities, entityDetails }) => {\n        const activeTags = entities?.activeSystemTag?.tags || entityDetails?.entity?.tags;\n        if (activeTags) {\n            return activeTags?.filter(\n                (tag) => Object.values(tag).some((val) => val?.includes(filterBy))\n            ).slice(statePagination?.perPage * (statePagination?.page - 1), statePagination?.perPage * statePagination?.page);\n        }\n\n        return entities?.allTags?.reduce((acc, { tags }) => ([\n            ...acc,\n            ...flatten(tags.map(({ tag }) => tag))\n        ]), []);\n    });\n\n    const tagsCount = useSelector(({ entities, entityDetails }) => {\n        const activeTags = (entities?.activeSystemTag?.tags || entityDetails?.entity?.tags)?.filter(\n            (tag) => Object.values(tag).some((val) => val?.includes(filterBy))\n        );\n        return activeTags ? activeTags.length : entities?.allTagsTotal;\n    });\n\n    useEffect(() => {\n        setFilterBy(filterTagsBy);\n    }, [filterTagsBy]);\n\n    const fetchTags = (pagination, filterBy) => {\n        if (!activeSystemTag) {\n            dispatch(fetchAllTags(filterBy, pagination, getTags));\n        } else {\n            setStatePagination(() => pagination);\n        }\n    };\n\n    const debouncedFetch = useCallback(debounce(fetchTags, 800), [activeSystemTag]);\n\n    return (\n        <TagModal\n            className=\"ins-c-inventory__tags-modal\"\n            tableProps={{\n                canSelectAll: false\n            }}\n            {...loaded && {\n                loaded,\n                pagination: {\n                    ...pagination,\n                    count: tagsCount\n                },\n                rows: tags?.map(({ key, value, namespace }) => ({\n                    id: `${namespace}/${key}=${value}`,\n                    selected: selected.find(({ id }) => id === `${namespace}/${key}=${value}`),\n                    cells: [key, value, namespace]\n                })) || []\n            }}\n            loaded={ loaded }\n            width=\"auto\"\n            isOpen={ showTagDialog }\n            toggleModal={() => {\n                setSelected([]);\n                setFilterBy('');\n                onToggleModal();\n                dispatch(toggleTagModal(false));\n            }}\n            filters={[\n                {\n                    label: 'Tags filter',\n                    placeholder: 'Filter tags',\n                    value: 'tags-filter',\n                    filterValues: {\n                        value: filterBy,\n                        onChange: (_e, value) => {\n                            debouncedFetch(pagination, value);\n                            setFilterBy(value);\n                        }\n                    }\n                }\n            ]}\n            onUpdateData={ (pagination) => fetchTags(pagination, filterBy) }\n            columns={ [\n                { title: 'Name' },\n                { title: 'Value', transforms: [cellWidth(30)] },\n                { title: 'Tag source', transforms: [cellWidth(30)] }\n            ] }\n            {...!activeSystemTag && {\n                onSelect: (selected) => setSelected(selected),\n                selected,\n                onApply: () => onApply && onApply(selected)\n            }}\n            bulkSelect={{ id: 'bulk-select-tags' }}\n            title={ activeSystemTag ?\n                `${activeSystemTag.display_name} (${tagsCount})` :\n                `All tags in inventory (${tagsCount})`\n            }\n        />\n    );\n};\n\nTagsModal.propTypes = {\n    onApply: PropTypes.func,\n    onToggleModal: PropTypes.func,\n    filterTagsBy: PropTypes.string,\n    customFilters: PropTypes.shape({\n        tags: PropTypes.oneOfType([\n            PropTypes.object,\n            PropTypes.arrayOf(PropTypes.string)\n        ])\n    }),\n    getTags: PropTypes.func\n};\n\nTagsModal.defaultProps = {\n    filterTagsBy: '',\n    onToggleModal: () => undefined\n};\n\nexport default TagsModal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { usePermissionsWithContext } from '@redhat-cloud-services/frontend-components-utilities/RBACHook';\n\nconst RenderWrapper = ({ cmp: Component, isRbacEnabled, inventoryRef, store, ...props }) => {\n    const { hasAccess } = usePermissionsWithContext([\n        'inventory:*:*',\n        'inventory:*:read',\n        'inventory:hosts:read'\n    ]);\n    return (\n        <Component\n            {...props}\n            { ...inventoryRef && {\n                ref: inventoryRef\n            }}\n            hasAccess={isRbacEnabled ? hasAccess : true}\n            store={ store }\n        />\n    );\n};\n\nRenderWrapper.propTypes = {\n    cmp: PropTypes.any,\n    inventoryRef: PropTypes.any,\n    store: PropTypes.object,\n    customRender: PropTypes.bool,\n    isRbacEnabled: PropTypes.bool\n};\n\nexport default RenderWrapper;\n","import { createContext, useContext } from 'react';\nimport { usePermissionsWithContext } from '@redhat-cloud-services/frontend-components-utilities/RBACHook';\nimport { INVENTORY_WRITE_PERMISSIONS } from '../constants';\nimport { RegistryContext } from '../store';\nimport { loadEntities } from '../store/actions';\n\nexport const TEXT_FILTER = 'hostname_or_id';\nexport const TEXTUAL_CHIP = 'textual';\nexport const TAG_CHIP = 'tags';\nexport const STALE_CHIP = 'staleness';\nexport const REGISTERED_CHIP = 'registered_with';\nexport const OS_CHIP = 'operating_system';\nexport const RHCD_FILTER_KEY = 'rhc_client_id';\nexport const staleness = [\n    { label: 'Fresh', value: 'fresh' },\n    { label: 'Stale', value: 'stale' },\n    { label: 'Stale warning', value: 'stale_warning' }\n];\nexport const registered = [\n    { label: 'insights-client', value: 'puptoo', idName: 'Insights id', idValue: 'insights_id' },\n    { label: 'subscription-manager', value: 'rhsm-conduit',\n        idName: 'Subscription manager id', idValue: 'subscription_manager_id' },\n    { label: 'Satellite/Discovery', value: 'yupana' },\n    { label: 'insights-client not connected', value: '!puptoo' }\n];\nexport const InventoryContext = createContext({});\nexport const defaultFilters = {\n    staleFilter: ['fresh', 'stale']\n};\nexport const rhcdOptions = [\n    { label: 'Active', value: 'not_nil' },\n    { label: 'Inactive', value: 'nil' }\n];\n\nexport function filterToGroup(filter = [], valuesKey = 'values') {\n    return filter.reduce((accGroup, group) => ({\n        ...accGroup,\n        [group.key]: group[valuesKey].reduce((acc, curr) => ({ ...acc, [curr.key]: {\n            isSelected: true,\n            group: curr.group,\n            item: {\n                meta: {\n                    tag: {\n                        key: curr.tagKey,\n                        value: curr.value\n                    }\n                }\n            }\n        } }), {})\n    }), {});\n}\n\nexport const arrayToSelection = (selected) => selected.reduce((acc, { cells: [key, value, namespace] }) => ({\n    ...acc,\n    [namespace]: {\n        ...acc[namespace?.title || namespace],\n        [key?.title || key]: {\n            isSelected: true,\n            group: { value: namespace?.title || namespace, label: namespace?.title || namespace },\n            item: {\n                value: key?.title || key,\n                meta: { tag: { key: key?.title || key, value: value?.title || value } }\n            }\n        }\n    }\n}), {});\n\nexport function reduceFilters(filters = []) {\n    return filters.reduce((acc, oneFilter) => {\n        if (oneFilter.value === TEXT_FILTER) {\n            return { ...acc, textFilter: oneFilter.filter };\n        } else if ('tagFilters' in oneFilter) {\n            return {\n                ...acc,\n                tagFilters: filterToGroup(oneFilter.tagFilters)\n            };\n        }\n\n        const foundKey = ['staleFilter', 'registeredWithFilter', 'osFilter', 'rhcdFilter', '']\n        .find(item => Object.keys(oneFilter).includes(item));\n\n        return {\n            ...acc,\n            ...foundKey && { [foundKey]: oneFilter[foundKey] }\n        };\n    }, {\n        textFilter: '',\n        tagFilters: {},\n        ...defaultFilters\n    });\n}\n\nexport const loadSystems = (options, showTags, getEntities) => {\n    const limitedItems = options?.items?.length > options.per_page ? options?.items?.slice(\n        (options?.page - 1) * options.per_page, options?.page * options.per_page\n    ) : options?.items;\n\n    const config = {\n        ...options.hasItems && {\n            sortBy: options?.sortBy?.key,\n            orderDirection: options?.sortBy?.direction?.toUpperCase()\n        },\n        ...options,\n        filters: options?.filters || options?.activeFilters,\n        orderBy: options?.orderBy || options?.sortBy?.key,\n        orderDirection: options?.orderDirection?.toUpperCase() || options?.sortBy?.direction?.toUpperCase(),\n        ...limitedItems?.length > 0 && {\n            itemsPage: options?.page,\n            page: 1\n        }\n    };\n\n    return loadEntities(limitedItems, config, { showTags }, getEntities);\n};\n\nexport const reloadWrapper = (event, callback) => {\n    event.payload.then(data => {\n        callback();\n        return data;\n    });\n\n    return event;\n};\n\nexport const isEmpty = (check) => !check || check?.length === 0;\n\nexport const generateFilter = (status, source, tagsFilter, filterbyName, operatingSystem, rhcdFilter) => ([\n    !isEmpty(status) && {\n        staleFilter: Array.isArray(status) ? status : [status]\n    },\n    !isEmpty(tagsFilter) && {\n        tagFilters: Array.isArray(tagsFilter) ? tagsFilter : [tagsFilter]\n    },\n    !isEmpty(source) && {\n        registeredWithFilter: Array.isArray(source) ? source : [source]\n    },\n    !isEmpty(filterbyName) && {\n        value: 'hostname_or_id',\n        filter: Array.isArray(filterbyName) ? filterbyName[0] : filterbyName\n    },\n    (!isEmpty(status) || !isEmpty(tagsFilter) || !isEmpty(filterbyName)) && isEmpty(source) && {\n        registeredWithFilter: []\n    },\n    (!isEmpty(source) || !isEmpty(tagsFilter) || !isEmpty(filterbyName)) && isEmpty(status) && {\n        staleFilter: []\n    },\n    !isEmpty(operatingSystem) && {\n        osFilter: Array.isArray(operatingSystem) ? operatingSystem : [operatingSystem]\n    },\n    !isEmpty(rhcdFilter) && {\n        rhcdFilter: Array.isArray(rhcdFilter) ? rhcdFilter : [rhcdFilter]\n    }\n].filter(Boolean));\n\nexport const useWritePermissions = () => {\n    const { hasAccess } = usePermissionsWithContext(INVENTORY_WRITE_PERMISSIONS);\n\n    return hasAccess;\n};\n\nexport const useGetRegistry = () => {\n    const { getRegistry } = useContext(RegistryContext);\n\n    return getRegistry;\n};\n\nexport const allStaleFilters = ['fresh', 'stale', 'stale_warning', 'unknown'];\n","export const subtractWeeks = (numOfWeeks, date = new Date()) => {\n    date.setDate(date.getDate() - numOfWeeks * 7);\n\n    return date;\n};\n\nexport const verifyCollectorStaleness = (reporterStaleness) =>{\n    const stalenessDate = new Date(reporterStaleness.stale_timestamp);\n    const currentDateTime = new Date();\n\n    const twoWeeksPeriod = subtractWeeks(2);\n    const oneWeeksPeriod = subtractWeeks(1);\n\n    if (stalenessDate > currentDateTime) {\n        return 'Fresh';\n    } else if (oneWeeksPeriod < stalenessDate && stalenessDate < currentDateTime) {\n        return 'Stale';\n    }\n    else if (twoWeeksPeriod < stalenessDate && stalenessDate < oneWeeksPeriod) {\n        return 'Stale warning';\n    } else {\n        return 'Culled';\n    }\n};\n\nexport const verifyCulledInsightsClient = (perReporterStaleness) => {\n    //TODO: get rid of !perReporterStaleness condition when dependant apps have per_reporter_staleness info\n    if (!perReporterStaleness) {\n        return false;\n    }\n    else if (perReporterStaleness.puptoo) {\n        return verifyCollectorStaleness(perReporterStaleness.puptoo) === 'Culled';\n    } else {\n        return true;\n    }\n};\n","import 'abortcontroller-polyfill/dist/polyfill-patch-fetch';\nexport const INVENTORY_API_BASE = '/api/inventory/v1';\nimport flatMap from 'lodash/flatMap';\n\nimport instance from '@redhat-cloud-services/frontend-components-utilities/interceptors';\nimport { generateFilter, mergeArraysByKey } from '@redhat-cloud-services/frontend-components-utilities/helpers';\nimport { HostsApi, TagsApi, SystemProfileApi } from '@redhat-cloud-services/host-inventory-client';\nimport { allStaleFilters, RHCD_FILTER_KEY } from '../Utilities/constants';\n\nexport { instance };\nexport const hosts = new HostsApi(undefined, INVENTORY_API_BASE, instance);\nexport const tags = new TagsApi(undefined, INVENTORY_API_BASE, instance);\nexport const systemProfile = new SystemProfileApi(undefined, INVENTORY_API_BASE, instance);\n\nexport const getEntitySystemProfile = (item) => hosts.apiHostGetHostSystemProfileById([item]);\n\n/* eslint camelcase: off */\nexport const mapData = ({ facts = {}, ...oneResult }) => ({\n    ...oneResult,\n    rawFacts: facts,\n    facts: {\n        ...facts.reduce?.((acc, curr) => ({ ...acc, [curr.namespace]: curr.facts }), {}),\n        ...flatMap(facts, (oneFact => Object.values(oneFact)))\n        .map(item => typeof item !== 'string' ? ({\n            ...item,\n            // eslint-disable-next-line camelcase\n            os_release: item.os_release || item.release,\n            // eslint-disable-next-line camelcase\n            display_name: item.display_name || item.fqdn || item.id\n        }) : item)\n        .reduce(\n            (acc, curr) => ({ ...acc, ...(typeof curr !== 'string') ? curr : {} }), {}\n        )\n    }\n});\n\nexport const mapTags = (data = { results: [] }, { orderBy, orderDirection } = {}) => {\n    if (data.results.length > 0) {\n        return hosts.apiHostGetHostTags(data.results.map(({ id }) => id), data.per_page, 1, orderBy, orderDirection)\n        .then(({ results: tags }) => ({\n            ...data,\n            results: data.results.map(row => ({ ...row, tags: tags[row.id] || [] }))\n        }))\n        .catch(() => ({\n            ...data,\n            results: data.results.map(row => ({\n                ...row,\n                tags: []\n            }))\n        }));\n    }\n\n    return data;\n};\n\nexport const constructTags = (tagFilters) => {\n    return flatMap(\n        tagFilters,\n        ({ values, category: namespace }) => values.map(({ value: tagValue, tagKey }) => (\n            `${namespace ? `${namespace}/` : ''}${tagKey}${tagValue ? `=${tagValue}` : ''}`\n        ))\n    ) || '';\n};\n\nexport const calculateSystemProfile = ({ osFilter, rhcdFilter }) => {\n    let systemProfile = {};\n    const osFilterValues = Array.isArray(osFilter) ? osFilter : Object.values(osFilter || {})\n    .flatMap((majorOsVersion) => Object.keys(majorOsVersion));\n\n    if (osFilterValues?.length > 0) {\n        systemProfile.operating_system = {\n            RHEL: {\n                version: {\n                    eq: osFilterValues\n                }\n            }\n        };\n    }\n\n    if (rhcdFilter) {\n        systemProfile[RHCD_FILTER_KEY] = rhcdFilter;\n    }\n\n    return generateFilter({ system_profile: systemProfile });\n};\n\nexport const filtersReducer = (acc, filter = {}) => ({\n    ...acc,\n    ...filter.value === 'hostname_or_id' && { hostnameOrId: filter.filter },\n    ...'tagFilters' in filter && { tagFilters: filter.tagFilters },\n    ...'staleFilter' in filter && { staleFilter: filter.staleFilter },\n    ...'registeredWithFilter' in filter && { registeredWithFilter: filter.registeredWithFilter },\n    ...'osFilter' in filter && { osFilter: filter.osFilter },\n    ...'rhcdFilter' in filter && { rhcdFilter: filter.rhcdFilter }\n});\n\nexport async function getEntities(items, {\n    controller,\n    hasItems,\n    filters,\n    per_page: perPage,\n    page,\n    orderBy,\n    orderDirection,\n    fields = { system_profile: ['operating_system'] },\n    ...options\n}, showTags) {\n    if (hasItems && items.length > 0) {\n        let data = await hosts.apiHostGetHostById(\n            items,\n            undefined,\n            undefined,\n            undefined,\n            undefined,\n            undefined,\n            undefined,\n            undefined,\n            { cancelToken: controller && controller.token }\n        );\n\n        if (fields && Object.keys(fields).length) {\n            try {\n                const result = await hosts.apiHostGetHostSystemProfileById(\n                    items,\n                    undefined,\n                    undefined,\n                    undefined,\n                    undefined,\n                    undefined,\n                    undefined,\n                    {\n                        cancelToken: controller && controller.token,\n                        query: generateFilter(fields, 'fields')\n                    }\n                );\n\n                data = {\n                    ...data,\n                    results: mergeArraysByKey([\n                        data?.results,\n                        result?.results || []\n                    ], 'id')\n                };\n            } catch (e) {\n                console.error(e); // eslint-disable-line\n            }\n        }\n\n        data = showTags ? await mapTags(data) : data;\n\n        data = {\n            ...data,\n            filters,\n            results: data.results.map(result => mapData({\n                ...result,\n                display_name: result.display_name || result.fqdn || result.id\n            }))\n        };\n\n        return data;\n    } else if (!hasItems) {\n        return hosts.apiHostGetHostList(\n            undefined,\n            undefined,\n            filters.hostnameOrId,\n            undefined,\n            undefined,\n            undefined,\n            undefined,\n            perPage,\n            page,\n            orderBy,\n            orderDirection,\n            filters.staleFilter,\n            [\n                ...constructTags(filters.tagFilters),\n                ...options.tags || []\n            ],\n            filters?.registeredWithFilter,\n            undefined,\n            undefined,\n            {\n                cancelToken: controller && controller.token,\n                query: {\n                    ...(options.filter && Object.keys(options.filter).length && generateFilter(options.filter)),\n                    ...(calculateSystemProfile(filters)),\n                    ...(fields && Object.keys(fields).length && generateFilter(fields, 'fields'))\n                }\n            }\n        )\n        .then((data) => showTags ? mapTags(data, { orderBy, orderDirection }) : data)\n        .then(({ results = [], ...data } = {}) => ({\n            ...data,\n            filters,\n            results: results.map(result => mapData({\n                ...result,\n                display_name: result.display_name || result.fqdn || result.id\n            }))\n        }));\n    }\n\n    return {\n        page,\n        per_page: perPage,\n        results: []\n    };\n}\n\nexport function getTags(systemId, search, { pagination } = { pagination: {} }) {\n    return hosts.apiHostGetHostTags(\n        systemId,\n        pagination.perPage || 10,\n        pagination.page || 1,\n        undefined,\n        undefined,\n        search\n    );\n}\n\nexport function getAllTags(search, pagination = {}) {\n    return tags.apiTagGetTags(\n        [],\n        'tag',\n        'ASC',\n        pagination.perPage || 10,\n        pagination.page || 1,\n        //TODO: ask the backend to return all tags by default.\n        allStaleFilters,\n        search,\n        undefined,\n        undefined,\n        undefined,\n        undefined,\n        undefined,\n        undefined,\n        undefined,\n        undefined,\n        undefined\n    );\n}\n\nexport function getOperatingSystems(params = []) {\n    return systemProfile.apiSystemProfileGetOperatingSystem(...params);\n}\n","import instance from '@redhat-cloud-services/frontend-components-utilities/interceptors';\nexport const systemIssuesInstance = instance;\n\nexport const cves = async (systemId) => {\n    try {\n        const [low, moderate, important, critical] = await Promise.all([2, 4, 5, 7].map((impact) => (\n            instance.get(\n                `/api/vulnerability//v1/systems/${systemId}/cves?page=1&page_size=1&impact=${impact}`\n            )\n        )));\n        return { low, moderate, important, critical };\n    } catch (_e) {\n        return {};\n    }\n};\n\nexport const patch = async (systemId) => {\n    try {\n        return await instance.get(`/api/patch/v1/systems/${systemId}`);\n    } catch (_e) {\n        return {};\n    }\n};\n\nexport const advisor = async (systemId) => {\n    try {\n        return await instance.get(`/api/insights/v1/system/${systemId}/reports/`);\n    } catch (_e) {\n        return {};\n    }\n};\n\nexport const compliance = async (systemId) => {\n    const query = `query System($systemId: String!) {\n        system(id: $systemId) {\n            id\n            name\n            profiles {\n                id\n                name\n                refId\n                compliant\n                rulesFailed\n                rulesPassed\n                lastScanned\n                score\n                __typename\n            }\n            __typename\n        }\n    }`;\n    try {\n        return await instance.post('/api/compliance/graphql', {\n            operationName: 'System',\n            query,\n            variables: {\n                systemId\n            }\n        });\n    } catch (_e) {\n        return {};\n    }\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { usePermissionsWithContext } from '@redhat-cloud-services/frontend-components-utilities/RBACHook';\n\nimport { PencilAltIcon } from '@patternfly/react-icons';\n\nconst InnerButton = ({ link, onClick }) => (\n    <a\n        className=\"ins-c-inventory__detail--action\"\n        href={ `${window.location.href}/${link}` }\n        onClick={ onClick }\n    >\n        <PencilAltIcon />\n    </a>\n);\n\nInnerButton.propTypes = {\n    link: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired\n};\n\nlet permissionsCache = undefined;\n\nconst EditButtonUnknownPermissions = (props) => {\n    const { hasAccess } = usePermissionsWithContext([\n        'inventory:*:*',\n        'inventory:hosts:write',\n        'inventory:*:write'\n    ]);\n\n    if (hasAccess) {\n        permissionsCache = hasAccess;\n    }\n\n    if (!hasAccess) {\n        return null;\n    }\n\n    return <InnerButton {...props}/>;\n};\n\nEditButtonUnknownPermissions.propTypes = {\n    link: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired\n};\n\nconst EditButtonWrapper = ({ writePermissions, ...props }) => {\n    if (insights.chrome.isProd || writePermissions || permissionsCache) {\n        return <InnerButton {...props} />;\n    }\n\n    if (typeof writePermissions !== 'boolean') {\n        return <EditButtonUnknownPermissions {...props} />;\n    }\n\n    return null;\n};\n\nEditButtonWrapper.propTypes = {\n    writePermissions: PropTypes.bool\n};\n\nexport default EditButtonWrapper;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { TextContent, Text, TextVariants, Pagination } from '@patternfly/react-core';\nimport PrimaryToolbar from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport TableToolbar from '@redhat-cloud-services/frontend-components/TableToolbar';\nimport { Table, TableHeader, TableBody, TableVariant, SortByDirection } from '@patternfly/react-table';\nimport flatMap from 'lodash/flatMap';\nimport { prepareRows, filterRows, generateFilters, onDeleteFilter } from '../../../constants';\nclass InfoTable extends Component {\n    state = {\n        sortBy: { index: 0, direction: SortByDirection.asc },\n        opened: [],\n        pagination: {\n            page: 1,\n            perPage: 10\n        },\n        activeFilters: {}\n    };\n\n    onSort = (event, index, direction) => {\n        const { expandable } = this.props;\n        this.props.onSort(event, expandable ? index - 1 : index, direction);\n        this.setState({\n            sortBy: {\n                index,\n                direction\n            }\n        });\n    }\n\n    onCollapse = (_event, index, isOpen) => {\n        const { opened } = this.state;\n        opened[index] = isOpen;\n        this.setState({\n            opened\n        });\n    }\n\n    onUpdatePagination = ({ page, perPage }) => {\n        this.setState({ pagination: { ...this.state.pagination, page, perPage } });\n    }\n\n    setFilter = (key, value, label) => {\n        const { activeFilters } = this.state;\n        // eslint-disable-next-line no-unused-vars\n        const { [key]: currFilter, ...restFilter } = activeFilters;\n        this.setState({\n            activeFilters: {\n                ...restFilter,\n                ...value.length !== 0 && {\n                    [key]: { key, value, label }\n                }\n            },\n            pagination: { ...this.state.pagination, page: 1 }\n        });\n    }\n\n    onDeleteFilter = (_e, [deleted], deleteAll) => {\n        this.setState({\n            activeFilters: onDeleteFilter(\n                deleted,\n                deleteAll,\n                this.state.activeFilters\n            ),\n            pagination: { ...this.state.pagination, page: 1 }\n        });\n    }\n\n    render() {\n        const { cells, rows, expandable, filters } = this.props;\n        const { sortBy, opened, pagination, activeFilters } = this.state;\n        const collapsibleProps = expandable ? { onCollapse: this.onCollapse } : {};\n        const activeRows = filterRows(rows, activeFilters);\n        const mappedRows = expandable ? flatMap(\n            prepareRows(activeRows, pagination),\n            ({ child, ...row }, key) => [\n                {\n                    ...row,\n                    isOpen: opened[key * 2] || false\n                },\n                {\n                    cells: [{ title: child }],\n                    parent: key * 2\n                }\n            ]) : prepareRows(activeRows, pagination);\n        return (\n            <Fragment>\n                <PrimaryToolbar pagination={{\n                    ...pagination,\n                    itemCount: activeRows.length,\n                    onSetPage: (_e, page) => this.onUpdatePagination({ ...pagination, page }),\n                    onPerPageSelect: (_e, perPage) => this.onUpdatePagination({ ...pagination, page: 1, perPage })\n                }}\n                {...filters && {\n                    filterConfig: {\n                        items: generateFilters(cells, filters, activeFilters, this.setFilter)\n                    }\n                } }\n                activeFiltersConfig={{\n                    filters: Object.values(activeFilters).map(filter => ({\n                        ...filter,\n                        category: filter.label,\n                        chips: Array.isArray(filter.value) ? filter.value.map(item => ({ name: item })) : [{ name: filter.value }]\n                    })),\n                    onDelete: this.onDeleteFilter\n                }}\n                />\n                {\n                    cells.length !== 1 ? <Table\n                        aria-label=\"General information dialog table\"\n                        variant={ TableVariant.compact }\n                        cells={ cells }\n                        rows={ mappedRows }\n                        sortBy={ {\n                            ...sortBy,\n                            index: expandable && sortBy.index === 0 ? 1 : sortBy.index\n                        } }\n                        onSort={ this.onSort }\n                        { ...collapsibleProps }\n                    >\n                        <TableHeader />\n                        <TableBody />\n                    </Table> :\n                        <TextContent>\n                            {\n                                prepareRows(activeRows, pagination)\n                                .map((row, key) => (\n                                    <Text component={ TextVariants.small } key={ key }>\n                                        { row.title || row }\n                                    </Text>\n                                )) }\n                        </TextContent>\n                }\n                <TableToolbar isFooter className=\"ins-c-inventory__table--toolbar\">\n                    <Pagination\n                        {...pagination}\n                        itemCount={activeRows.length}\n                        variant=\"bottom\"\n                        onSetPage={(_e, page) => this.onUpdatePagination({ ...pagination, page })}\n                        onPerPageSelect={(_e, perPage) => this.onUpdatePagination({ ...pagination, page: 1, perPage })}\n                    />\n                </TableToolbar>\n            </Fragment>\n\n        );\n    }\n}\n\nInfoTable.propTypes = {\n    rows: PropTypes.array,\n    cells: PropTypes.array,\n    onSort: PropTypes.func,\n    expandable: PropTypes.bool,\n    filters: PropTypes.arrayOf(PropTypes.shape({\n        index: PropTypes.number,\n        title: PropTypes.string,\n        type: PropTypes.oneOf(['text', 'checkbox', 'radio', 'group']),\n        options: PropTypes.arrayOf(PropTypes.shape({\n            value: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n            label: PropTypes.node\n        }))\n    }))\n};\nInfoTable.defaultProps = {\n    cells: [],\n    rows: [],\n    onSort: () => undefined,\n    sortBy: {},\n    expandable: false\n};\n\nexport default InfoTable;\n","/* eslint-disable camelcase */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport LoadingCard from '../LoadingCard';\nimport DateFormat from '@redhat-cloud-services/frontend-components/DateFormat';\nimport { systemStatus } from '../selectors';\n\nconst SystemStatusCardCore = ({\n    detailLoaded,\n    hasState,\n    hasRegistered,\n    hasLastCheckIn,\n    hasRHC,\n    entity,\n    systemProfile,\n    systemStatus\n}) => (\n    <LoadingCard\n        title=\"System status\"\n        isLoading={ !detailLoaded }\n        items={\n            [\n                ...hasState ? [{\n                    title: 'Current state',\n                    value: systemStatus.stale ? 'Stale' : 'Active'\n                }] : [],\n                ...hasRegistered ? [{ title: 'Registered', value: entity && (\n                    <DateFormat date={entity.created} type=\"exact\" />\n                ) }] : [],\n                ...hasLastCheckIn ? [{ title: 'Last upload', value: entity && (\n                    <DateFormat date={ entity.updated } type=\"exact\" />\n                ) }] : [],\n                ...hasRHC ? [{\n                    title: 'RHC',\n                    value: systemProfile?.rhc_client_id ? 'Connected' : 'Not available'\n                }] : []\n            ]\n        }\n    />);\n\nSystemStatusCardCore.propTypes = {\n    detailLoaded: PropTypes.bool,\n    entity: PropTypes.shape({\n        updated: PropTypes.string,\n        created: PropTypes.string\n    }),\n    systemProfile: PropTypes.shape({\n        rhc_client_id: PropTypes.string\n    }),\n    systemStatus: PropTypes.object,\n    handleClick: PropTypes.func,\n    hasState: PropTypes.bool,\n    hasLastCheckIn: PropTypes.bool,\n    hasRegistered: PropTypes.bool,\n    hasRHC: PropTypes.bool\n};\nSystemStatusCardCore.defaultProps = {\n    detailLoaded: false,\n    systemStatus: {},\n    handleClick: () => undefined,\n    hasState: true,\n    hasLastCheckIn: true,\n    hasRegistered: true,\n    hasRHC: true\n};\n\nexport const SystemStatusCard = connect(({\n    entityDetails: {\n        entity\n    },\n    systemProfileStore: {\n        systemProfile\n    }\n}) => ({\n    entity,\n    systemProfile,\n    detailLoaded: systemProfile?.loaded,\n    systemStatus: systemStatus(entity)\n}))(SystemStatusCardCore);\n\nSystemStatusCard.propTypes = SystemStatusCardCore.propTypes;\nSystemStatusCard.defaultProps = SystemStatusCardCore.defaultProps;\n\nexport default SystemStatusCard;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n    Button,\n    Modal,\n    TextInput\n} from '@patternfly/react-core';\n\nexport default class TextInputModal extends Component {\n    constructor (props) {\n        super(props);\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps (props, state) {\n        if (!props.isOpen) {\n            return { value: undefined };\n        }\n\n        if (state.value !== undefined) {\n            return null;\n        }\n\n        return {\n            value: props.value || ''\n        };\n    };\n\n    render () {\n        const {\n            title, isOpen, onCancel, onSubmit, ariaLabel, modalOuiaId, cancelOuiaId, confirmOuiaId, inputOuiaId\n        } = this.props;\n        const { value } = this.state;\n\n        return (\n            <Modal\n                variant=\"small\"\n                title={ title }\n                className=\"ins-c-inventory__detail--edit\"\n                aria-label={ ariaLabel ? `${ariaLabel} - modal` : 'input modal' }\n                ouiaId={ modalOuiaId }\n                isOpen={ isOpen }\n                onClose={ event => onCancel(event) }\n                actions={ [\n                    <Button key=\"cancel\" data-action=\"cancel\" variant=\"secondary\" onClick={ onCancel } ouiaId={ cancelOuiaId }>\n                        Cancel\n                    </Button>,\n                    <Button\n                        key=\"confirm\"\n                        data-action=\"confirm\"\n                        variant=\"primary\"\n                        onClick={ () => onSubmit(this.state.value) }\n                        ouiaId={ confirmOuiaId }\n                    >\n                        Save\n                    </Button>\n                ] }\n            >\n                <TextInput\n                    value={ value }\n                    type=\"text\"\n                    ouiaId={ inputOuiaId }\n                    onChange={ value => this.setState({ value }) }\n                    aria-label={ ariaLabel  }\n                />\n            </Modal>\n        );\n    }\n}\n\nTextInputModal.propTypes = {\n    title: PropTypes.string,\n    isOpen: PropTypes.bool,\n    onCancel: PropTypes.func,\n    onSubmit: PropTypes.func,\n    ariaLabel: PropTypes.string,\n    modalOuiaId: PropTypes.string,\n    cancelOuiaId: PropTypes.string,\n    confirmOuiaId: PropTypes.string,\n    inputOuiaId: PropTypes.string,\n    value: PropTypes.string\n};\n\nTextInputModal.defaultProps = {\n    onCancel: () => undefined,\n    onSubmit: () => undefined,\n    isOpen: false,\n    title: '',\n    ariaLabel: 'input text'\n};\n","/* eslint-disable camelcase */\n/* eslint-disable react/prop-types */\nimport React from 'react';\n\n/**\n * Helper function to proprly calculate what to do when user clicks on first cell.\n * Either full redirect if used with ctrl button or `onRowClick` from props is used.\n * @param {*} event html event, to find out if meta key was clicked.\n * @param {*} key inventory UUID.\n * @param {*} props additional props from `EntityTable` - loaded, onRowClick and noDetail.\n */\nconst onRowClick = (event, key, { loaded, onRowClick: rowClick, noDetail }) => {\n    if (loaded && !noDetail) {\n        const isMetaKey = (event.ctrlKey || event.metaKey || event.which === 2);\n        if (isMetaKey) {\n            return;\n        } else if (rowClick) {\n            rowClick(event, key, isMetaKey);\n        }\n    }\n\n    event.preventDefault();\n    event.stopPropagation();\n};\n\n/**\n * Helper function to generate first cell in plain inventory either with clickable detail or just data from attribut.\n * This is later on used in redux in `renderFunc`.\n * @param {React.node} data React node with information that will be shown to user as column title.\n * @param {string} id inventory UUID, used to navigate to correct URL.\n * @param {*} item row data, holds every information from redux store for currecnt row.\n * @param {*} props additional props passed from `EntityTable` - holds any props passed to inventory table.\n */\nconst TitleColumn = (data, id, item, props) => (\n    <div className=\"ins-composed-col\">\n        <div key=\"os_release\">{item?.os_release}</div>\n        <div key=\"data\" className={props?.noDetail ? 'ins-m-nodetail' : ''}>\n            { props?.noDetail ?\n                data :\n                <a\n                    widget=\"col\"\n                    href={ `${location.pathname}${location.pathname.substr(-1) === '/' ? '' : '/'}${id}` }\n                    onClick={ event => {\n                        onRowClick(event, id, props);\n                    }}\n                >\n                    { data }\n                </a> }\n        </div>\n    </div>\n);\n\nexport default TitleColumn;\n","import React from 'react';\nimport { Bullseye, Spinner } from '@patternfly/react-core';\n\nconst Fallback = () => (\n    <Bullseye>\n        <Spinner size=\"xl\" />\n    </Bullseye>\n);\n\nexport default Fallback;\n","import keyBy from 'lodash/keyBy';\n\nconst makeActions = (actions) => {\n    return actions?.reduce?.((acc, curr) => ({\n        ...acc,\n        [curr]: curr,\n        [`${curr}_PENDING`]: `${curr}_PENDING`,\n        [`${curr}_FULFILLED`]: `${curr}_FULFILLED`,\n        [`${curr}_REJECTED`]: `${curr}_REJECTED`\n    }), {});\n};\n\nconst actions = [\n    'ALERT_ADD',\n    'ALERT_DISMISS',\n    'REMOVE_ENTITY'\n];\n\nexport const asyncActions = [\n    'GET_ENTITIES',\n    'GET_ENTITY',\n    'UPDATE_DISPLAY_NAME',\n    'LOAD_WRITE_PERMISSIONS',\n    'LOAD_SYSTEM_PROFILE',\n    'SET_ANSIBLE_HOST'\n];\n\nexport const asyncInventory = [\n    'LOAD_ENTITIES',\n    'LOAD_ENTITY',\n    'REMOVE_ENTITY',\n    'LOAD_SYSTEM_PROFILE',\n    'SET_DISPLAY_NAME',\n    'SET_ANSIBLE_HOST',\n    'LOAD_TAGS',\n    'ALL_TAGS',\n    'OPERATING_SYSTEMS'\n];\n\nexport const systemIssues = [\n    'LOAD_ADVISOR_RECOMMENDATIONS',\n    'LOAD_APPLICABLE_CVES',\n    'LOAD_APPLICABLE_ADVISORIES',\n    'LOAD_COMPLIANCE_POLICIES'\n];\n\nexport const ACTION_TYPES = { ...keyBy(actions, k => k), ...makeActions(asyncActions), ...makeActions(asyncInventory) };\nexport const INVENTORY_ACTION_TYPES = makeActions(asyncInventory);\nexport const SYSTEM_ISSUE_TYPES = makeActions(systemIssues);\n\nexport const CLEAR_NOTIFICATIONS = '@@INSIGHTS-CORE/NOTIFICATIONS/CLEAR_NOTIFICATIONS';\nexport const SELECT_ENTITY = 'SELECT_ENTITY';\nexport const SET_INVENTORY_FILTER = 'SET_INVENTORY_FILTER';\nexport const SET_PAGINATION = 'SET_PAGINATION';\nexport const SET_DISPLAY_NAME = 'SET_DISPLAY_NAME';\nexport const SET_ANSIBLE_HOST = 'SET_ANSIBLE_HOST';\n\nexport const UPDATE_ENTITIES = 'UPDATE_ENTITIES';\nexport const CHANGE_SORT = 'CHANGE_SORT';\nexport const FILTER_ENTITIES = 'FILTER_ENTITIES';\nexport const APPLICATION_SELECTED = 'APPLICATION_SELECTED';\nexport const SHOW_ENTITIES = 'SHOW_ENTITIES';\nexport const FILTER_SELECT = 'FILTER_SELECT';\nexport const ENTITIES_LOADING = 'ENTITIES_LOADING';\nexport const CLEAR_FILTERS = 'CLEAR_FILTERS';\nexport const TOGGLE_TAG_MODAL = 'TOGGLE_TAG_MODAL';\nexport const CONFIG_CHANGED = 'CONFIG_CHANGED';\nexport const TOGGLE_DRAWER = 'TOGGLE_INVENTORY_DRAWER';\n","import React from 'react';\nimport {\n    ACTION_TYPES,\n    SELECT_ENTITY,\n    CHANGE_SORT,\n    SHOW_ENTITIES,\n    FILTER_SELECT,\n    UPDATE_ENTITIES,\n    ENTITIES_LOADING,\n    CLEAR_FILTERS,\n    TOGGLE_TAG_MODAL,\n    CONFIG_CHANGED\n} from './action-types';\nimport { mergeArraysByKey } from '@redhat-cloud-services/frontend-components-utilities/helpers';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport { CullingInformation } from '@redhat-cloud-services/frontend-components/CullingInfo';\nimport { TagWithDialog } from '../Utilities/index';\nimport groupBy from 'lodash/groupBy';\nimport TitleColumn from '../components/InventoryTable/TitleColumn';\nimport InsightsDisconnected from '../Utilities/InsightsDisconnected';\nimport OperatingSystemFormatter from '../Utilities/OperatingSystemFormatter';\nimport { Tooltip } from '@patternfly/react-core';\nimport { defaultFilters } from '../Utilities/constants';\nimport { verifyCulledInsightsClient } from '../Utilities/sharedFunctions';\n\nexport const defaultState = {\n    loaded: false,\n    tagsLoaded: false,\n    allTagsLoaded: false,\n    operatingSystems: [],\n    operatingSystemsLoaded: false,\n    invConfig: {},\n    sortBy: {\n        key: 'updated',\n        direction: 'desc'\n    }\n};\n\nexport const defaultColumns = () => ([\n    {\n        key: 'display_name',\n        sortKey: 'display_name',\n        title: 'Name',\n        renderFunc: TitleColumn\n    },\n    {\n        key: 'tags',\n        title: 'Tags',\n        props: { width: 10, isStatic: true },\n        // eslint-disable-next-line react/display-name\n        renderFunc: (value, systemId) => <TagWithDialog count={value.length} systemId={systemId} />\n    },\n    {\n        key: 'system_profile',\n        sortKey: 'operating_system',\n        dataLabel: 'OS',\n        title: <Tooltip content={<span>Operating system</span>}><span>OS</span></Tooltip>,\n        // eslint-disable-next-line react/display-name\n        renderFunc: (systemProfile) => <OperatingSystemFormatter operatingSystem={systemProfile?.operating_system} />,\n        props: { width: 10 }\n    },\n    {\n        key: 'updated',\n        sortKey: 'updated',\n        title: 'Last seen',\n        // eslint-disable-next-line react/display-name\n        renderFunc: (\n            value,\n            _id,\n            {\n                culled_timestamp: culled, stale_warning_timestamp: staleWarn, stale_timestamp: stale,\n                per_reporter_staleness: perReporterStaleness\n            }) => {\n            return CullingInformation ? <CullingInformation\n                culled={culled}\n                staleWarning={staleWarn}\n                stale={stale}\n                render={({ msg }) => <React.Fragment>\n                    <DateFormat date={ value } extraTitle={ (\n                        <React.Fragment>\n                            <div>{ msg }</div>\n                        Last seen:{` `}\n                        </React.Fragment>\n                    ) }/>\n                    {verifyCulledInsightsClient(perReporterStaleness) && <InsightsDisconnected />}\n                </React.Fragment>\n                }\n            > <DateFormat date={ value } /> </CullingInformation> : new Date(value).toLocaleString();\n        },\n        props: { width: 10 }\n    }\n]);\n\nfunction entitiesPending(state, { meta }) {\n    return {\n        ...state,\n        ...state.columns && { columns: mergeArraysByKey([\n            defaultColumns().filter(({ key }) => key !== 'tags' || meta?.showTags),\n            state.columns\n        ], 'key') } || {},\n        rows: [],\n        loaded: false,\n        lastDateRequest: meta.lastDateRequest\n    };\n}\n\nfunction clearFilters(state) {\n    return {\n        ...state,\n        activeFilters: [defaultFilters]\n    };\n}\n\n// eslint-disable-next-line camelcase\nfunction entitiesLoaded(state, { payload: { results, per_page: perPage, page, count, total, loaded, filters }, meta }) {\n    // Older requests should not rewrite the state\n    if (meta.lastDateRequest < state.lastDateRequest) {\n        return state;\n    }\n\n    // Data are loaded and APi returned malicious data\n    if (loaded === undefined && (page === undefined || perPage === undefined)) {\n        return state;\n    }\n\n    return {\n        ...state,\n        activeFilters: filters || [],\n        loaded: loaded === undefined || loaded,\n        // filter data only if we are loaded\n        rows: mergeArraysByKey([state.rows, results]).filter(item => !loaded ? true : item.created),\n        perPage: perPage !== undefined ? perPage : state.perPage,\n        page: page !== undefined ? page : state.page,\n        count: count !== undefined ? count : state.count,\n        total: total !== undefined ? total : state.total\n    };\n}\n\nfunction loadingRejected(state, { payload }) {\n    return {\n        ...state,\n        error: payload\n    };\n}\n\nfunction selectEntity(state, { payload }) {\n    const rows = [...state.rows];\n    const toSelect = [].concat(payload);\n    toSelect.forEach(({ id, selected }) => {\n        const entity = rows.find(entity => entity.id === id);\n        if (entity) {\n            entity.selected = selected;\n        } else {\n            rows.forEach(item => item.selected = selected);\n        }\n    });\n    return {\n        ...state,\n        rows\n    };\n}\n\nfunction versionsLoaded(state, { payload: { results } }) {\n    return {\n        ...state,\n        operatingSystems: results.map(entry => {\n            const { name, major, minor } = entry.value;\n            const versionStringified = `${major}.${minor}`;\n            return { label: `${name} ${versionStringified}`, value: versionStringified };\n        }),\n        operatingSystemsLoaded: true\n    };\n}\n\nfunction changeSort(state, { payload: { key, direction } }) {\n    return {\n        ...state,\n        sortBy: {\n            key,\n            direction\n        }\n    };\n}\n\nfunction selectFilter(state, { payload: { item: { items, ...item }, selected } }) {\n    let { activeFilters = [] } = state;\n    if (selected) {\n        activeFilters = [\n            ...activeFilters,\n            item,\n            ...items ? items : []\n        ];\n        const values = activeFilters.map(active => active.value);\n        activeFilters = activeFilters.filter((filter, key) => values.lastIndexOf(filter.value) === key);\n    } else {\n        activeFilters.splice(activeFilters.map(active => active.value).indexOf(item.value), 1);\n        if (items) {\n            items.forEach(subItem => {\n                activeFilters.splice(activeFilters.map(active => active.value).indexOf(subItem.value), 1);\n            });\n        }\n    }\n\n    return {\n        ...state,\n        activeFilters\n    };\n}\n\nexport function showTags(state, { payload, meta }) {\n    const { tags, ...activeSystemTag } = state.rows ? state.rows.find(({ id }) => meta.systemId === id) : state.entity || {};\n    return {\n        ...state,\n        tagModalLoaded: true,\n        activeSystemTag: {\n            ...activeSystemTag,\n            tags: Object.values(payload.results)[0],\n            tagsCount: meta.tagsCount,\n            page: payload.page,\n            perPage: payload.per_page,\n            tagsLoaded: true\n        }\n    };\n}\n\nexport function showTagsPending(state, { meta }) {\n    const { tags, ...activeSystemTag } = state.rows ? state.rows.find(({ id }) => meta.systemId === id) : state.entity || {};\n    return {\n        ...state,\n        tagModalLoaded: false,\n        activeSystemTag: {\n            ...activeSystemTag,\n            tagsCount: meta.tagsCount,\n            tagsLoaded: false\n        }\n    };\n}\n\nexport function toggleTagModalReducer(state, { payload: { isOpen } }) {\n    return {\n        ...state,\n        showTagDialog: isOpen,\n        activeSystemTag: undefined\n    };\n}\n\nexport function allTags(state, { payload: { results, total, page, per_page: perPage }, meta: { lastDateRequestTags } }) {\n    // only the latest request can change state\n    if (lastDateRequestTags < state.lastDateRequestTags) {\n        return state;\n    }\n\n    return {\n        ...state,\n        allTags: Object.entries(groupBy(results, ({ tag: { namespace } }) => namespace)).map(([key, value]) => ({\n            name: key,\n            tags: value\n        })),\n        allTagsPagination: {\n            perPage,\n            page\n        },\n        additionalTagsCount: total > perPage ? total - perPage : 0,\n        allTagsTotal: total,\n        allTagsLoaded: true,\n        tagModalLoaded: true\n    };\n}\n\nexport default {\n    [ACTION_TYPES.ALL_TAGS_FULFILLED]: allTags,\n    [ACTION_TYPES.ALL_TAGS_PENDING]: (state, { meta }) => (\n        { ...state, allTagsLoaded: false, tagModalLoaded: false, lastDateRequestTags: meta.lastDateRequestTags }\n    ),\n    [ACTION_TYPES.LOAD_ENTITIES_PENDING]: entitiesPending,\n    [ACTION_TYPES.LOAD_ENTITIES_FULFILLED]: entitiesLoaded,\n    [ACTION_TYPES.LOAD_ENTITIES_REJECTED]: loadingRejected,\n    [ACTION_TYPES.LOAD_TAGS_PENDING]: showTagsPending,\n    [ACTION_TYPES.LOAD_TAGS_FULFILLED]: showTags,\n    [ACTION_TYPES.ALL_TAGS_REJECTED]: loadingRejected,\n    [ACTION_TYPES.OPERATING_SYSTEMS_PENDING]: (state) => ({ ...state, operatingSystemsLoaded: false }),\n    [ACTION_TYPES.OPERATING_SYSTEMS_FULFILLED]: versionsLoaded,\n    [UPDATE_ENTITIES]: entitiesLoaded,\n    [SHOW_ENTITIES]: (state, action) => entitiesLoaded(state, {\n        payload: {\n            ...action.payload,\n            loaded: false\n        }\n    }),\n    [FILTER_SELECT]: selectFilter,\n    [SELECT_ENTITY]: selectEntity,\n    [CHANGE_SORT]: changeSort,\n    [CLEAR_FILTERS]: clearFilters,\n    [ENTITIES_LOADING]: (state, { payload: { isLoading } }) => ({ ...state, loaded: !isLoading }),\n    [TOGGLE_TAG_MODAL]: toggleTagModalReducer,\n    [CONFIG_CHANGED]: (state, { payload }) => ({ ...state, invConfig: payload })\n};\n","\nimport { createContext } from 'react';\nimport MiddlewareListener from '@redhat-cloud-services/frontend-components-utilities/MiddlewareListener';\nimport { ReducerRegistry } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport notificationsMiddleware from '@redhat-cloud-services/frontend-components-notifications/notificationsMiddleware';\nimport promise  from 'redux-promise-middleware';\nexport { default as reducers, tableReducer, entitesDetailReducer } from './reducers';\n\nexport const RegistryContext = createContext({\n    getRegistry: () => {}\n});\n\nlet middlewareListener;\n\nexport function init (...middleware) {\n    middlewareListener = new MiddlewareListener();\n    return new ReducerRegistry(\n        {},\n        [\n            middlewareListener.getMiddleware(),\n            promise,\n            notificationsMiddleware({\n                errorDescriptionKey: ['detail', 'stack']\n            }),\n            ...middleware\n        ]\n    );\n}\n\nexport function addNewListener ({ actionType, callback }) {\n    return middlewareListener.addNew({\n        on: actionType,\n        callback\n    });\n}\n","import React from 'react';\nimport { useStore } from 'react-redux';\nimport { useRouteMatch } from 'react-router-dom';\nimport AsyncComponent from '@redhat-cloud-services/frontend-components/AsyncComponent';\n\nconst ComplianceTab = () => {\n    const { params } = useRouteMatch('/:inventoryId');\n    return <AsyncComponent\n        appName=\"compliance\"\n        module=\"./SystemDetail\"\n        store={useStore()}\n        customItnl\n        intlProps={{\n            locale: navigator.language.slice(0, 2)\n        }}\n        inventoryId={ params.inventoryId }\n        remediationsEnabled\n    />;\n};\n\nexport default ComplianceTab;\n","import React, { useContext } from 'react';\nimport { useRouteMatch } from 'react-router-dom';\nimport { RegistryContext } from '../../store';\nimport AsyncComponent from '@redhat-cloud-services/frontend-components/AsyncComponent';\n\nconst VulnerabilityTab = () => {\n    const { params } = useRouteMatch('/:inventoryId');\n    const { getRegistry } = useContext(RegistryContext);\n\n    return <AsyncComponent\n        appName=\"vulnerability\"\n        module=\"./SystemDetail\"\n        getRegistry={getRegistry}\n        customItnlProvider\n        entity={ { id: params.inventoryId } }\n    />;\n};\n\nexport default VulnerabilityTab;\n","import React from 'react';\nimport { useStore } from 'react-redux';\nimport AsyncComponent from '@redhat-cloud-services/frontend-components/AsyncComponent';\n\nconst AdvisorTab = () => {\n    return <AsyncComponent\n        appName=\"advisor\"\n        module=\"./SystemDetail\"\n        store={useStore()}\n        customItnl\n        intlProps={{\n            locale: navigator.language.slice(0, 2)\n        }}\n    />;\n};\n\nexport default AdvisorTab;\n","import React, { useContext } from 'react';\nimport { RegistryContext } from '../../store';\nimport AsyncComponent from '@redhat-cloud-services/frontend-components/AsyncComponent';\n\nconst PatchTab = () => {\n    const { getRegistry } = useContext(RegistryContext);\n\n    return <AsyncComponent\n        appName=\"patch\"\n        module=\"./SystemDetail\"\n        getRegistry={getRegistry}\n    />;\n};\n\nexport default PatchTab;\n","import React, { useContext } from 'react';\nimport { useRouteMatch } from 'react-router-dom';\nimport { RegistryContext } from '../../store';\nimport AsyncComponent from '@redhat-cloud-services/frontend-components/AsyncComponent';\n\nconst RosTab = () => {\n    const { params } = useRouteMatch('/:inventoryId');\n    const { getRegistry } = useContext(RegistryContext);\n\n    return <AsyncComponent\n        appName=\"ros\"\n        module=\"./SystemDetail\"\n        getRegistry={ getRegistry }\n        inventoryId={ params.inventoryId }\n    />;\n};\n\nexport default RosTab;\n","/* eslint-disable camelcase */\nimport { SYSTEM_ISSUE_TYPES } from './action-types';\n\nexport function advisor(state, { payload }) {\n    return {\n        ...state,\n        systemIssues: {\n            ...state?.systemIssues,\n            advisor: {\n                isLoaded: true,\n                criticalCount: payload?.filter(item => item?.total_risk >= 4)\n            }\n        }\n    };\n}\n\nexport function cve(state, { payload }) {\n    return {\n        ...state,\n        systemIssues: {\n            ...state?.systemIssues,\n            cve: {\n                isLoaded: true,\n                critical: {\n                    count: payload?.critical?.meta?.total_items || 0\n                },\n                moderate: {\n                    count: payload?.moderate?.meta?.total_items || 0\n                },\n                important: {\n                    count: payload?.important?.meta?.total_items || 0\n                },\n                low: {\n                    count: payload?.low?.meta?.total_items || 0\n                }\n            }\n        }\n    };\n}\n\nexport function patch(state, { payload }) {\n    return {\n        ...state,\n        systemIssues: {\n            ...state?.systemIssues,\n            patch: {\n                isLoaded: true,\n                bug: {\n                    count: payload?.data?.attributes?.rhba_count || 0\n                },\n                enhancement: {\n                    count: payload?.data?.attributes?.rhea_count || 0\n                },\n                security: {\n                    count: payload?.data?.attributes?.rhsa_count || 0\n                }\n            }\n        }\n    };\n}\n\nexport function compliance(state, { payload }) {\n    return {\n        ...state,\n        systemIssues: {\n            ...state?.systemIssues,\n            compliance: {\n                isLoaded: true,\n                profiles: payload?.data?.system?.profiles\n            }\n        }\n    };\n}\n\nexport function isPending(state, type) {\n    return {\n        ...state,\n        systemIssues: {\n            ...state?.systemIssues,\n            ...type && { [type]: { isLoaded: false } }\n        }\n    };\n}\n\nexport default {\n    [SYSTEM_ISSUE_TYPES.LOAD_ADVISOR_RECOMMENDATIONS_PENDING]: (state) => isPending(state, 'advisor'),\n    [SYSTEM_ISSUE_TYPES.LOAD_APPLICABLE_CVES_PENDING]: (state) => isPending(state, 'cve'),\n    [SYSTEM_ISSUE_TYPES.LOAD_APPLICABLE_ADVISORIES_PENDING]: (state) => isPending(state, 'patch'),\n    [SYSTEM_ISSUE_TYPES.LOAD_COMPLIANCE_POLICIES_PENDING]: (state) => isPending(state, 'compliance'),\n    [SYSTEM_ISSUE_TYPES.LOAD_ADVISOR_RECOMMENDATIONS_FULFILLED]: advisor,\n    [SYSTEM_ISSUE_TYPES.LOAD_APPLICABLE_CVES_FULFILLED]: cve,\n    [SYSTEM_ISSUE_TYPES.LOAD_APPLICABLE_ADVISORIES_FULFILLED]: patch,\n    [SYSTEM_ISSUE_TYPES.LOAD_COMPLIANCE_POLICIES_FULFILLED]: compliance\n};\n","import { ACTION_TYPES, APPLICATION_SELECTED, TOGGLE_TAG_MODAL, TOGGLE_DRAWER } from './action-types';\nimport { showTags, toggleTagModalReducer } from './entities';\nimport systemIssuesReducer from './systemIssues';\nexport const entityDefaultState = { loaded: false };\n\nfunction entityDetailPending(state) {\n    return {\n        ...state,\n        loaded: false\n    };\n}\n\nfunction entityDetailLoaded(state, { payload }) {\n    return {\n        ...state,\n        loaded: true,\n        entity: payload.results[0]\n    };\n}\n\nfunction onApplicationSelected(state, { payload }) {\n    return {\n        ...state,\n        activeApp: payload\n    };\n}\n\nfunction toggleDrawer(state, { payload }) {\n    return  {\n        ...state,\n        isToggleOpened: payload?.isOpened\n    };\n}\n\nfunction showTagsPending(state) {\n    return {\n        ...state,\n        tagModalLoaded: false\n    };\n}\n\nfunction updateAnsibleName(state, { meta }, useOrigValue) {\n    const value = useOrigValue ? meta?.origValue : meta?.value;\n    return {\n        ...state,\n        ...state.rows && {\n            rows: state.rows.map((row) => row.id === meta?.id ? ({\n                ...row,\n                // eslint-disable-next-line camelcase\n                ansible_host: value\n            }) : row)\n        },\n        ...state.entity && {\n            entity: {\n                ...state.entity,\n                // eslint-disable-next-line camelcase\n                ansible_host: value\n            }\n        }\n    };\n}\n\nexport function updateEntity(state, { meta }, useOrigValue) {\n    const value = useOrigValue ? meta?.origValue : meta?.value;\n    return {\n        ...state,\n        ...state.rows && {\n            rows: state.rows.map((row) => row.id === meta?.id ? ({\n                ...row,\n                // eslint-disable-next-line camelcase\n                display_name: value\n            }) : row)\n        },\n        ...state.entity && {\n            entity: {\n                ...state.entity,\n                // eslint-disable-next-line camelcase\n                display_name: value\n            }\n        }\n    };\n}\n\nexport default {\n    [ACTION_TYPES.LOAD_ENTITIES_PENDING]: () => entityDefaultState,\n    [ACTION_TYPES.LOAD_ENTITY_PENDING]: entityDetailPending,\n    [ACTION_TYPES.LOAD_ENTITY_FULFILLED]: entityDetailLoaded,\n    [APPLICATION_SELECTED]: onApplicationSelected,\n    [ACTION_TYPES.LOAD_TAGS]: showTags,\n    [ACTION_TYPES.LOAD_TAGS_PENDING]: showTagsPending,\n    [ACTION_TYPES.LOAD_TAGS_FULFILLED]: showTags,\n    [TOGGLE_TAG_MODAL]: toggleTagModalReducer,\n    [TOGGLE_DRAWER]: toggleDrawer,\n    [ACTION_TYPES.UPDATE_DISPLAY_NAME_PENDING]: updateEntity,\n    [ACTION_TYPES.SET_ANSIBLE_HOST_PENDING]: updateAnsibleName,\n    [ACTION_TYPES.UPDATE_DISPLAY_NAME_ERROR]: (state, payload) => updateEntity(state, payload, true),\n    [ACTION_TYPES.SET_ANSIBLE_HOST_ERROR]: (state, payload) => updateAnsibleName(state, payload, true),\n    ...systemIssuesReducer\n};\n","import {\n    INVENTORY_ACTION_TYPES,\n    ACTION_TYPES,\n    SELECT_ENTITY,\n    SET_INVENTORY_FILTER,\n    SET_PAGINATION\n} from './action-types';\nimport systemProfileStore from './systemProfileStore';\nimport {\n    ComplianceTab,\n    VulnerabilityTab,\n    AdvisorTab,\n    GeneralInformationTab,\n    PatchTab,\n    RosTab\n} from '../components/SystemDetails';\nimport { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport { mergeArraysByKey } from '@redhat-cloud-services/frontend-components-utilities/helpers';\nimport { notificationsReducer } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport entitiesReducer, { defaultState as entitiesDefault } from './entities';\nimport entityDetailsReducer, { entityDefaultState as entityDefault, updateEntity } from './entityDetails';\n\nexport { entitiesReducer, entityDetailsReducer };\n\nconst defaultState = { loaded: false, selected: new Map() };\n\nfunction entitiesLoaded(state, { payload }) {\n    return {\n        ...state,\n        rows: mergeArraysByKey([state.rows, payload.results]),\n        entities: mergeArraysByKey([state.entities, payload.results])\n    };\n}\n\nfunction entityLoaded(state) {\n    return {\n        ...state,\n        loaded: true,\n        activeApps: [\n            { title: 'General information', name: 'general_information', component: GeneralInformationTab },\n            { title: 'Advisor', name: 'advisor', component: AdvisorTab },\n            {\n                title: 'Vulnerability',\n                name: 'vulnerabilities',\n                component: VulnerabilityTab\n            },\n            {\n                title: 'Compliance',\n                name: 'compliance',\n                component: ComplianceTab\n            },\n            {\n                title: 'Patch',\n                name: 'patch',\n                component: PatchTab\n            },\n            {\n                title: 'Resource Optimization',\n                name: 'ros',\n                isVisible: false,\n                component: RosTab\n            }\n        ].filter(Boolean)\n    };\n}\n\nfunction entitySelected(state, { payload }) {\n    const selected = state.selected || (new Map());\n    if (payload.selected) {\n        if (payload.id === 0) {\n            state.rows.forEach(row => selected.set(row.id, row));\n        } else {\n            const selectedRow = state.rows && state.rows.find(({ id }) => id === payload.id);\n            selected.set(payload.id, { ...selectedRow || {}, id: payload.id });\n        }\n    } else {\n        if (payload.id === 0) {\n            state.rows.forEach(row => selected.delete(row.id));\n        } else if (payload.id === -1) {\n            selected.clear();\n        } else {\n            selected.delete(payload.id);\n        }\n    }\n\n    return {\n        ...state,\n        selected: new Map(selected)\n    };\n}\n\nfunction resourceOptTabVisibility(state, { payload }) {\n    return {\n        ...state,\n        activeApps: state.activeApps?.map((entity) => entity.name === 'ros' ? ({\n            ...entity,\n            isVisible: payload\n        }) : entity\n        )\n    };\n}\n\nfunction entityDeleted(state, { meta }) {\n    const selected = state.selected || (new Map());\n    meta.systems.forEach(id => selected.delete(id));\n\n    return {\n        ...state,\n        selected: new Map(selected)\n    };\n}\n\nfunction onEntitiesLoaded(state, { payload, meta }) {\n    if (meta?.lastDateRequest < state?.lastDateRequest) {\n        return state;\n    }\n\n    return {\n        ...state,\n        rows: mergeArraysByKey([state.rows, payload.results.map(result => {\n            return {\n                ...result,\n                selected: state.selected && state.selected.has(result.id)\n            };\n        })])\n    };\n}\n\nfunction onSetFilter(state, { payload }) {\n    return {\n        ...state,\n        activeFilters: payload.filtersList\n    };\n}\n\nfunction onSetPagination(state, { payload }) {\n    const perPage = parseInt(payload.perPage, 10);\n    const page = parseInt(payload.page, 10);\n    return {\n        ...state,\n        perPage: isNaN(perPage) ? 50 : perPage,\n        page: isNaN(page) ? 1 : page\n    };\n}\n\nlet reducers = {\n    notifications: notificationsReducer,\n    systemProfileStore\n};\n\nexport const tableReducer = applyReducerHash(\n    {\n        [ACTION_TYPES.GET_ENTITIES_FULFILLED]: entitiesLoaded,\n        [INVENTORY_ACTION_TYPES.LOAD_ENTITIES_FULFILLED]: onEntitiesLoaded,\n        [`${ACTION_TYPES.REMOVE_ENTITY}_FULFILLED`]: entityDeleted,\n        [SELECT_ENTITY]: entitySelected,\n        FILTER_SELECT: (state) => ({ ...state, selected: {} }),\n        [SET_INVENTORY_FILTER]: onSetFilter,\n        [SET_PAGINATION]: onSetPagination,\n        [ACTION_TYPES.UPDATE_DISPLAY_NAME_FULFILLED]: updateEntity\n    },\n    defaultState\n);\n\nexport const entitesDetailReducer = () => applyReducerHash(\n    {\n        [INVENTORY_ACTION_TYPES.LOAD_ENTITY_FULFILLED]: entityLoaded,\n        [INVENTORY_ACTION_TYPES.LOAD_SYSTEM_PROFILE_FULFILLED]: resourceOptTabVisibility\n    },\n    defaultState\n);\n\nexport function mergeWithEntities(additionalReducers = (state) => state, defaultState = {}) {\n    return ({\n        entities: (state, payload) => ({\n            ...additionalReducers({\n                ...applyReducerHash({\n                    ...entitiesReducer\n                }, { ...entitiesDefault, ...defaultState })(state, payload)\n            }, payload)\n        })\n    });\n}\n\nexport function mergeWithDetail(additionalReducers = (state) => state, defaultState = {}) {\n    return ({\n        entityDetails: (state, payload) => ({\n            ...additionalReducers({\n                ...applyReducerHash({\n                    ...entityDetailsReducer\n                }, { ...entityDefault, ...defaultState })(state, payload)\n            }, payload)\n        })\n    });\n}\n\nexport default reducers;\n","import { SYSTEM_ISSUE_TYPES } from './action-types';\nimport {\n    cves,\n    compliance,\n    advisor,\n    patch\n} from '../api';\n\nexport const getAdvisorData = (systemId) => ({\n    type: SYSTEM_ISSUE_TYPES.LOAD_ADVISOR_RECOMMENDATIONS,\n    payload: advisor(systemId)\n});\n\nexport const getVulnData = (systemId) => ({\n    type: SYSTEM_ISSUE_TYPES.LOAD_APPLICABLE_CVES,\n    payload: cves(systemId)\n});\n\nexport const getPatchData = (systemId) => ({\n    type: SYSTEM_ISSUE_TYPES.LOAD_APPLICABLE_ADVISORIES,\n    payload: patch(systemId)\n});\n\nexport const getComplianceData = (systemId) => ({\n    type: SYSTEM_ISSUE_TYPES.LOAD_COMPLIANCE_POLICIES,\n    payload: compliance(systemId)\n});\n"],"names":["DeleteModal","systemToRemove","handleModalToggle","isModalOpen","currentSytems","onConfirm","systemLabel","Array","isArray","length","display_name","variant","title","className","ouiaId","isOpen","onClose","appendTo","document","getElementsByClassName","body","hasGutter","size","isFilled","location","host","onClick","ActiveSystemProp","PropTypes","id","displayName","propTypes","defaultProps","maxWidth","content","OperatingSystemFormatter","operatingSystem","name","version","major","minor","TagWithDialog","count","loadTags","systemId","e","stopPropagation","onTagClick","connect","dispatch","toggleTagModal","undefined","TagsModal","filterTagsBy","onToggleModal","onApply","getTags","useDispatch","useState","filterBy","setFilterBy","selected","setSelected","perPage","page","statePagination","setStatePagination","showTagDialog","useSelector","entities","entityDetails","pagination","activeSystemTag","entity","allTagsPagination","shallowEqual","loaded","tagModalLoaded","tags","activeTags","filter","tag","Object","values","some","val","includes","slice","allTags","reduce","acc","flatten","map","tagsCount","allTagsTotal","useEffect","fetchTags","fetchAllTags","debouncedFetch","useCallback","debounce","tableProps","canSelectAll","rows","key","value","namespace","find","cells","width","toggleModal","filters","label","placeholder","filterValues","onChange","_e","onUpdateData","columns","transforms","cellWidth","onSelect","bulkSelect","customFilters","RenderWrapper","Component","cmp","isRbacEnabled","inventoryRef","store","props","hasAccess","usePermissionsWithContext","ref","customRender","TEXT_FILTER","TEXTUAL_CHIP","TAG_CHIP","STALE_CHIP","REGISTERED_CHIP","OS_CHIP","RHCD_FILTER_KEY","staleness","registered","idName","idValue","InventoryContext","createContext","defaultFilters","staleFilter","rhcdOptions","filterToGroup","valuesKey","accGroup","group","curr","isSelected","item","meta","tagKey","arrayToSelection","reduceFilters","oneFilter","textFilter","tagFilters","foundKey","keys","loadSystems","options","showTags","getEntities","limitedItems","items","per_page","config","hasItems","sortBy","orderDirection","direction","toUpperCase","activeFilters","orderBy","itemsPage","loadEntities","reloadWrapper","event","callback","payload","then","data","isEmpty","check","generateFilter","status","source","tagsFilter","filterbyName","rhcdFilter","registeredWithFilter","osFilter","Boolean","useWritePermissions","INVENTORY_WRITE_PERMISSIONS","useGetRegistry","useContext","RegistryContext","getRegistry","allStaleFilters","subtractWeeks","numOfWeeks","date","Date","setDate","getDate","verifyCollectorStaleness","reporterStaleness","stalenessDate","stale_timestamp","currentDateTime","twoWeeksPeriod","oneWeeksPeriod","verifyCulledInsightsClient","perReporterStaleness","puptoo","INVENTORY_API_BASE","hosts","HostsApi","instance","TagsApi","systemProfile","SystemProfileApi","getEntitySystemProfile","apiHostGetHostSystemProfileById","mapData","facts","rawFacts","flatMap","oneFact","os_release","release","fqdn","mapTags","results","apiHostGetHostTags","row","catch","constructTags","category","tagValue","calculateSystemProfile","osFilterValues","majorOsVersion","operating_system","RHEL","eq","system_profile","filtersReducer","hostnameOrId","controller","fields","apiHostGetHostById","cancelToken","token","query","result","mergeArraysByKey","console","error","apiHostGetHostList","search","getAllTags","apiTagGetTags","getOperatingSystems","params","apiSystemProfileGetOperatingSystem","systemIssuesInstance","cves","Promise","all","impact","low","moderate","important","critical","patch","advisor","compliance","operationName","variables","InnerButton","link","href","window","permissionsCache","EditButtonUnknownPermissions","EditButtonWrapper","writePermissions","insights","chrome","isProd","InfoTable","index","SortByDirection","opened","expandable","onSort","setState","_event","state","restFilter","deleteAll","deleted","onDeleteFilter","this","collapsibleProps","onCollapse","activeRows","filterRows","mappedRows","prepareRows","child","parent","Fragment","PrimaryToolbar","itemCount","onSetPage","onUpdatePagination","onPerPageSelect","filterConfig","generateFilters","setFilter","activeFiltersConfig","chips","onDelete","Table","TableVariant","TableHeader","TableBody","TextContent","Text","component","TextVariants","TableToolbar","isFooter","Pagination","type","SystemStatusCardCore","detailLoaded","hasState","hasRegistered","hasLastCheckIn","hasRHC","systemStatus","LoadingCard","isLoading","stale","DateFormat","created","updated","rhc_client_id","handleClick","SystemStatusCard","systemProfileStore","TextInputModal","onCancel","onSubmit","ariaLabel","modalOuiaId","cancelOuiaId","confirmOuiaId","inputOuiaId","Modal","actions","Button","TextInput","noDetail","widget","pathname","substr","rowClick","onRowClick","isMetaKey","ctrlKey","metaKey","which","preventDefault","makeActions","asyncActions","asyncInventory","systemIssues","ACTION_TYPES","keyBy","k","INVENTORY_ACTION_TYPES","SYSTEM_ISSUE_TYPES","CLEAR_NOTIFICATIONS","SELECT_ENTITY","SET_INVENTORY_FILTER","SET_PAGINATION","SET_DISPLAY_NAME","SET_ANSIBLE_HOST","UPDATE_ENTITIES","CHANGE_SORT","FILTER_ENTITIES","APPLICATION_SELECTED","SHOW_ENTITIES","FILTER_SELECT","ENTITIES_LOADING","CLEAR_FILTERS","TOGGLE_TAG_MODAL","CONFIG_CHANGED","TOGGLE_DRAWER","defaultState","tagsLoaded","allTagsLoaded","operatingSystems","operatingSystemsLoaded","invConfig","defaultColumns","sortKey","renderFunc","TitleColumn","isStatic","dataLabel","_id","culled","culled_timestamp","staleWarn","stale_warning_timestamp","per_reporter_staleness","CullingInformation","staleWarning","render","msg","extraTitle","toLocaleString","entitiesLoaded","total","lastDateRequest","loadingRejected","toggleTagModalReducer","lastDateRequestTags","entries","groupBy","additionalTagsCount","entry","versionStringified","action","active","lastIndexOf","splice","indexOf","forEach","subItem","concat","middlewareListener","init","MiddlewareListener","middleware","ReducerRegistry","getMiddleware","promise","notificationsMiddleware","errorDescriptionKey","useRouteMatch","AsyncComponent","appName","module","useStore","customItnl","intlProps","locale","navigator","language","inventoryId","remediationsEnabled","customItnlProvider","isPending","isLoaded","criticalCount","total_risk","cve","total_items","bug","attributes","rhba_count","enhancement","rhea_count","security","rhsa_count","profiles","system","entityDefaultState","updateAnsibleName","useOrigValue","origValue","ansible_host","updateEntity","activeApp","isToggleOpened","isOpened","systemIssuesReducer","Map","entityLoaded","activeApps","GeneralInformationTab","AdvisorTab","VulnerabilityTab","ComplianceTab","PatchTab","isVisible","RosTab","resourceOptTabVisibility","reducers","notifications","notificationsReducer","tableReducer","applyReducerHash","has","systems","delete","set","selectedRow","clear","filtersList","parseInt","isNaN","entitesDetailReducer","mergeWithEntities","additionalReducers","entitiesReducer","entitiesDefault","mergeWithDetail","entityDetailsReducer","entityDefault","getAdvisorData","getVulnData","getPatchData","getComplianceData"],"sourceRoot":""}