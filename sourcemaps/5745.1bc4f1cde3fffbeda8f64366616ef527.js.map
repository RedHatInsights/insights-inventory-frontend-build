{"version":3,"file":"js/5745.1654006601968.5e6fb6e13cb058e2892f.js","mappings":"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","sources":["webpack:///./src/Utilities/OperatingSystemFormatter.js","webpack:///./src/components/GeneralInfo/EditButton/EditButton.js","webpack:///./src/components/GeneralInfo/InfoTable/InfoTable.js","webpack:///./src/components/GeneralInfo/SystemStatusCard/SystemStatusCard.js","webpack:///./src/components/GeneralInfo/DataCollectorsCard/DataCollectorsCard.js","webpack:///./src/components/GeneralInfo/GeneralInformation/GeneralInformation.js","webpack:///./src/components/GeneralInfo/TextInputModal/TextInputModal.js","webpack:///./src/store/systemProfileStore.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst OperatingSystemFormatter = ({ operatingSystem }) => {\n    if (operatingSystem?.name === 'RHEL') {\n        const version = (operatingSystem.major && operatingSystem.minor !== null)\n        && `${operatingSystem.major}.${operatingSystem?.minor}` || null;\n\n        return <span>\n            RHEL {version}\n        </span>;\n    }\n\n    return <span>\n        {operatingSystem?.name || 'Not available'}\n    </span>;\n};\n\nOperatingSystemFormatter.propTypes = {\n    operatingSystem: PropTypes.shape({\n        name: PropTypes.string,\n        major: PropTypes.number,\n        minor: PropTypes.number\n    })\n};\n\nexport default OperatingSystemFormatter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { usePermissions } from '@redhat-cloud-services/frontend-components-utilities/RBACHook';\n\nimport { PencilAltIcon } from '@patternfly/react-icons';\n\nconst InnerButton = ({ link, onClick }) => (\n    <a\n        className=\"ins-c-inventory__detail--action\"\n        href={ `${window.location.href}/${link}` }\n        onClick={ onClick }\n    >\n        <PencilAltIcon />\n    </a>\n);\n\nInnerButton.propTypes = {\n    link: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired\n};\n\nlet permissionsCache = undefined;\n\nconst EditButtonUnknownPermissions = (props) => {\n    const { hasAccess } = usePermissions('inventory', [\n        'inventory:*:*',\n        'inventory:hosts:write',\n        'inventory:*:write'\n    ]);\n\n    if (hasAccess) {\n        permissionsCache = hasAccess;\n    }\n\n    if (!hasAccess) {\n        return null;\n    }\n\n    return <InnerButton {...props}/>;\n};\n\nEditButtonUnknownPermissions.propTypes = {\n    link: PropTypes.string.isRequired,\n    onClick: PropTypes.func.isRequired\n};\n\nconst EditButtonWrapper = ({ writePermissions, ...props }) => {\n    if (insights.chrome.isProd || writePermissions || permissionsCache) {\n        return <InnerButton {...props} />;\n    }\n\n    if (typeof writePermissions !== 'boolean') {\n        return <EditButtonUnknownPermissions {...props} />;\n    }\n\n    return null;\n};\n\nEditButtonWrapper.propTypes = {\n    writePermissions: PropTypes.bool\n};\n\nexport default EditButtonWrapper;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { TextContent, Text, TextVariants, Pagination } from '@patternfly/react-core';\nimport PrimaryToolbar from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport TableToolbar from '@redhat-cloud-services/frontend-components/TableToolbar';\nimport { Table, TableHeader, TableBody, TableVariant, SortByDirection } from '@patternfly/react-table';\nimport flatMap from 'lodash/flatMap';\nimport { prepareRows, filterRows, generateFilters, onDeleteFilter } from '../../../constants';\nclass InfoTable extends Component {\n    state = {\n        sortBy: { index: 0, direction: SortByDirection.asc },\n        opened: [],\n        pagination: {\n            page: 1,\n            perPage: 10\n        },\n        activeFilters: {}\n    };\n\n    onSort = (event, index, direction) => {\n        const { expandable } = this.props;\n        this.props.onSort(event, expandable ? index - 1 : index, direction);\n        this.setState({\n            sortBy: {\n                index,\n                direction\n            }\n        });\n    }\n\n    onCollapse = (_event, index, isOpen) => {\n        const { opened } = this.state;\n        opened[index] = isOpen;\n        this.setState({\n            opened\n        });\n    }\n\n    onUpdatePagination = ({ page, perPage }) => {\n        this.setState({ pagination: { ...this.state.pagination, page, perPage } });\n    }\n\n    setFilter = (key, value, label) => {\n        const { activeFilters } = this.state;\n        // eslint-disable-next-line no-unused-vars\n        const { [key]: currFilter, ...restFilter } = activeFilters;\n        this.setState({\n            activeFilters: {\n                ...restFilter,\n                ...value.length !== 0 && {\n                    [key]: { key, value, label }\n                }\n            },\n            pagination: { ...this.state.pagination, page: 1 }\n        });\n    }\n\n    onDeleteFilter = (_e, [deleted], deleteAll) => {\n        this.setState({\n            activeFilters: onDeleteFilter(\n                deleted,\n                deleteAll,\n                this.state.activeFilters\n            ),\n            pagination: { ...this.state.pagination, page: 1 }\n        });\n    }\n\n    render() {\n        const { cells, rows, expandable, filters } = this.props;\n        const { sortBy, opened, pagination, activeFilters } = this.state;\n        const collapsibleProps = expandable ? { onCollapse: this.onCollapse } : {};\n        const activeRows = filterRows(rows, activeFilters);\n        const mappedRows = expandable ? flatMap(\n            prepareRows(activeRows, pagination),\n            ({ child, ...row }, key) => [\n                {\n                    ...row,\n                    isOpen: opened[key * 2] || false\n                },\n                {\n                    cells: [{ title: child }],\n                    parent: key * 2\n                }\n            ]) : prepareRows(activeRows, pagination);\n        return (\n            <Fragment>\n                <PrimaryToolbar pagination={{\n                    ...pagination,\n                    itemCount: activeRows.length,\n                    onSetPage: (_e, page) => this.onUpdatePagination({ ...pagination, page }),\n                    onPerPageSelect: (_e, perPage) => this.onUpdatePagination({ ...pagination, page: 1, perPage })\n                }}\n                {...filters && {\n                    filterConfig: {\n                        items: generateFilters(cells, filters, activeFilters, this.setFilter)\n                    }\n                } }\n                activeFiltersConfig={{\n                    filters: Object.values(activeFilters).map(filter => ({\n                        ...filter,\n                        category: filter.label,\n                        chips: Array.isArray(filter.value) ? filter.value.map(item => ({ name: item })) : [{ name: filter.value }]\n                    })),\n                    onDelete: this.onDeleteFilter\n                }}\n                />\n                {\n                    cells.length !== 1 ? <Table\n                        aria-label=\"General information dialog table\"\n                        variant={ TableVariant.compact }\n                        cells={ cells }\n                        rows={ mappedRows }\n                        sortBy={ {\n                            ...sortBy,\n                            index: expandable && sortBy.index === 0 ? 1 : sortBy.index\n                        } }\n                        onSort={ this.onSort }\n                        { ...collapsibleProps }\n                    >\n                        <TableHeader />\n                        <TableBody />\n                    </Table> :\n                        <TextContent>\n                            {\n                                prepareRows(activeRows, pagination)\n                                .map((row, key) => (\n                                    <Text component={ TextVariants.small } key={ key }>\n                                        { row.title || row }\n                                    </Text>\n                                )) }\n                        </TextContent>\n                }\n                <TableToolbar isFooter className=\"ins-c-inventory__table--toolbar\">\n                    <Pagination\n                        {...pagination}\n                        itemCount={activeRows.length}\n                        variant=\"bottom\"\n                        onSetPage={(_e, page) => this.onUpdatePagination({ ...pagination, page })}\n                        onPerPageSelect={(_e, perPage) => this.onUpdatePagination({ ...pagination, page: 1, perPage })}\n                    />\n                </TableToolbar>\n            </Fragment>\n\n        );\n    }\n}\n\nInfoTable.propTypes = {\n    rows: PropTypes.array,\n    cells: PropTypes.array,\n    onSort: PropTypes.func,\n    expandable: PropTypes.bool,\n    filters: PropTypes.arrayOf(PropTypes.shape({\n        index: PropTypes.number,\n        title: PropTypes.string,\n        type: PropTypes.oneOf(['text', 'checkbox', 'radio', 'group']),\n        options: PropTypes.arrayOf(PropTypes.shape({\n            value: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n            label: PropTypes.node\n        }))\n    }))\n};\nInfoTable.defaultProps = {\n    cells: [],\n    rows: [],\n    onSort: () => undefined,\n    sortBy: {},\n    expandable: false\n};\n\nexport default InfoTable;\n","/* eslint-disable camelcase */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport LoadingCard from '../LoadingCard';\nimport DateFormat from '@redhat-cloud-services/frontend-components/DateFormat';\nimport { systemStatus } from '../selectors';\n\nconst SystemStatusCard = ({\n    detailLoaded,\n    hasState,\n    hasRegistered,\n    hasLastCheckIn,\n    hasRHC,\n    entity,\n    systemProfile,\n    systemStatus\n}) => (\n    <LoadingCard\n        title=\"System status\"\n        isLoading={ !detailLoaded }\n        items={\n            [\n                ...hasState ? [{\n                    title: 'Current state',\n                    value: systemStatus.stale ? 'Stale' : 'Active'\n                }] : [],\n                ...hasRegistered ? [{ title: 'Registered', value: entity && (\n                    <DateFormat date={entity.created} type=\"exact\" />\n                ) }] : [],\n                ...hasLastCheckIn ? [{ title: 'Last upload', value: entity && (\n                    <DateFormat date={ entity.updated } type=\"exact\" />\n                ) }] : [],\n                ...hasRHC ? [{\n                    title: 'RHC',\n                    value: systemProfile?.rhc_client_id ? 'Connected' : 'Not available'\n                }] : []\n            ]\n        }\n    />);\n\nSystemStatusCard.propTypes = {\n    detailLoaded: PropTypes.bool,\n    entity: PropTypes.shape({\n        updated: PropTypes.string,\n        created: PropTypes.string\n    }),\n    systemProfile: PropTypes.shape({\n        rhc_client_id: PropTypes.string\n    }),\n    systemStatus: PropTypes.object,\n    handleClick: PropTypes.func,\n    hasState: PropTypes.bool,\n    hasLastCheckIn: PropTypes.bool,\n    hasRegistered: PropTypes.bool,\n    hasRHC: PropTypes.bool\n};\nSystemStatusCard.defaultProps = {\n    detailLoaded: false,\n    systemStatus: {},\n    handleClick: () => undefined,\n    hasState: true,\n    hasLastCheckIn: true,\n    hasRegistered: true,\n    hasRHC: true\n};\n\nexport default connect(({\n    entityDetails: {\n        entity\n    },\n    systemProfileStore: {\n        systemProfile\n    }\n}) => ({\n    entity,\n    systemProfile,\n    detailLoaded: systemProfile?.loaded,\n    systemStatus: systemStatus(entity)\n}))(SystemStatusCard);\n","/* eslint-disable camelcase */\nimport React, { useState, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport LoadingCard from '../LoadingCard';\nimport DateFormat from '@redhat-cloud-services/frontend-components/DateFormat';\nimport { TableComposable, Thead, Tr, Th, Tbody, Td, TableVariant, ExpandableRowContent } from '@patternfly/react-table';\nimport { Flex, FlexItem } from '@patternfly/react-core';\nimport { getDefaultCollectors } from '../selectors/selectors';\n\nconst DataCollectorsCard = ({\n    detailLoaded,\n    collectors,\n    entity,\n    dataMapper\n}) => {\n    const [expandedNames, setExpandedNames] = useState([]);\n    const setExpanded = useCallback((collector, isExpanding = true) => setExpandedNames(prevExpanded => {\n        const otherExpandedNames = prevExpanded.filter(r => r !== collector.name);\n        return isExpanding ? [...otherExpandedNames, collector.name] : otherExpandedNames;\n    }), []);\n    const isExpanded = (collector) => expandedNames.includes(collector.name);\n    const data = collectors ?? getDefaultCollectors(entity);\n    return (<LoadingCard\n        title=\"Data collectors\"\n        isLoading={ !detailLoaded }\n    >\n        <TableComposable\n            aria-label=\"Data collectors\"\n            variant={TableVariant.compact}\n            borders={false}\n        >\n            <Thead>\n                <Tr className=\"ins-c__no-border\">\n                    <Th />\n                    <Th>Name</Th>\n                    <Th>Status</Th>\n                    <Th>Last upload</Th>\n                </Tr>\n            </Thead>\n            {dataMapper ? dataMapper(data, isExpanded, setExpanded) : data.map((collector, rowIndex) => (\n                <Tbody key={collector.name} isExpanded={isExpanded(collector)}>\n                    <Tr>\n                        {collector.details.name ?\n                            <Td\n                                expand={\n                                    collector.details\n                                        ? {\n                                            rowIndex,\n                                            isExpanded: isExpanded(collector),\n                                            onToggle: () => setExpanded(collector, !isExpanded(collector))\n                                        }\n                                        : undefined\n                                }\n                                style={{ paddingLeft: 0 }}\n                            /> : <Td />}\n                        <Td dataLabel=\"Name\">{collector.name}</Td>\n                        <Td dataLabel=\"Status\">{collector.status ? 'Active' : 'N/A'}</Td>\n                        <Td dataLabel=\"Last upload\">\n                            {collector.updated ?\n                                <DateFormat date={ collector.updated } type=\"exact\" /> :\n                                'N/A'\n                            }</Td>\n                    </Tr>\n                    {collector.details && collector.details.name && (\n                        <Tr isExpanded={isExpanded(collector)}>\n                            <Td />\n                            <Td colSpan={3}>\n                                <ExpandableRowContent>\n                                    <Flex>\n                                        <FlexItem className=\"ins-c__flex-row-margin\">\n                                            {`${collector.details.name}:`}\n                                        </FlexItem>\n                                        <FlexItem grow={{ default: 'grow' }}>\n                                            {collector.details.id ?? 'N/A'}\n                                        </FlexItem>\n                                    </Flex>\n                                </ExpandableRowContent>\n                            </Td>\n                        </Tr>\n                    )}\n                </Tbody>))}\n        </TableComposable>\n    </LoadingCard>);\n};\n\nDataCollectorsCard.propTypes = {\n    detailLoaded: PropTypes.bool,\n    collectors: PropTypes.array,\n    dataMapper: PropTypes.func,\n    entity: PropTypes.shape({\n        per_reporter_staleness: PropTypes.object\n    })\n};\nDataCollectorsCard.defaultProps = {\n    detailLoaded: false\n};\n\nexport default connect(({\n    entityDetails: {\n        entity\n    },\n    systemProfileStore: {\n        systemProfile\n    }\n}) => ({\n    entity,\n    systemProfile,\n    detailLoaded: systemProfile?.loaded,\n    defaultCollectors: getDefaultCollectors(entity)\n}))(DataCollectorsCard);\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport {\n    Grid,\n    GridItem,\n    Modal\n} from '@patternfly/react-core';\nimport { SortByDirection } from '@patternfly/react-table';\n\nimport { systemProfile } from '../../../store/actions';\nimport InfoTable from '../InfoTable';\nimport OperatingSystemCard from '../OperatingSystemCard';\nimport SystemCard from '../SystemCard';\nimport BiosCard from '../BiosCard';\nimport InfrastructureCard from '../InfrastructureCard';\nimport ConfigurationCard from '../ConfigurationCard';\nimport SystemStatusCard from '../SystemStatusCard';\nimport DataCollectorsCard from '../DataCollectorsCard/DataCollectorsCard';\nimport { Provider } from 'react-redux';\nimport './general-information.scss';\n\nclass GeneralInformation extends Component {\n    state = {\n        isModalOpen: false,\n        modalTitle: '',\n        modalVariant: 'small'\n    };\n\n    onSort = (_event, index, direction, customRows) => {\n        const { rows } = this.state;\n        const sorted = (customRows || rows).sort((a, b) => {\n            const firstRow = a.cells || a;\n            const secondRow = b.cells || b;\n            const aSortBy = ('' + (firstRow[index].sortValue || firstRow[index])).toLocaleLowerCase();\n            const bSortBy = ('' + (secondRow[index].sortValue || secondRow[index])).toLocaleLowerCase();\n            return (aSortBy > bSortBy) ? -1 : 1;\n        });\n        this.setState({\n            rows: direction === SortByDirection.asc ? sorted : sorted.reverse()\n        });\n    }\n\n    handleModalToggle = (modalTitle = '', { cells, rows, expandable, filters } = {}, modalVariant = 'small') => {\n        rows && this.onSort(undefined, expandable ? 1 : 0, SortByDirection.asc, rows);\n        this.setState(({ isModalOpen }) => ({\n            isModalOpen: !isModalOpen,\n            modalTitle,\n            cells,\n            expandable,\n            filters,\n            modalVariant\n        }));\n    };\n\n    componentDidMount() {\n        this.props.loadSystemDetail && this.props.loadSystemDetail(this.props.entity.id);\n    };\n\n    render() {\n        const { isModalOpen, modalTitle, cells, rows, expandable, filters, modalVariant } = this.state;\n        const {\n            store,\n            writePermissions,\n            SystemCardWrapper,\n            OperatingSystemCardWrapper,\n            BiosCardWrapper,\n            InfrastructureCardWrapper,\n            ConfigurationCardWrapper,\n            SystemStatusCardWrapper,\n            DataCollectorsCardWrapper,\n            CollectionCardWrapper,\n            children\n        } = this.props;\n        const Wrapper = store ? Provider : Fragment;\n        return (\n            <Wrapper {...(store && { store })}>\n                <div className=\"ins-c-general-information\">\n                    <Grid sm={12} md={6} hasGutter>\n                        {SystemCardWrapper && <GridItem>\n                            <SystemCardWrapper handleClick={ this.handleModalToggle } writePermissions={writePermissions} />\n                        </GridItem>}\n                        {OperatingSystemCardWrapper && <GridItem>\n                            <OperatingSystemCardWrapper handleClick={ this.handleModalToggle } />\n                        </GridItem>}\n                        {InfrastructureCardWrapper && <GridItem>\n                            <InfrastructureCardWrapper handleClick={ this.handleModalToggle } />\n                        </GridItem>}\n                        {BiosCardWrapper && <GridItem>\n                            <BiosCardWrapper handleClick={ this.handleModalToggle } />\n                        </GridItem>}\n                        {SystemStatusCardWrapper && <GridItem>\n                            <SystemStatusCardWrapper handleClick={ this.handleModalToggle } />\n                        </GridItem>}\n                        {ConfigurationCardWrapper && <GridItem>\n                            <ConfigurationCardWrapper handleClick={ this.handleModalToggle } />\n                        </GridItem>}\n                        {DataCollectorsCardWrapper && <GridItem>\n                            <DataCollectorsCardWrapper handleClick={ this.handleModalToggle } />\n                        </GridItem>}\n                        {CollectionCardWrapper && <GridItem>\n                            <CollectionCardWrapper handleClick={ this.handleModalToggle } />\n                        </GridItem>}\n                        {children}\n                        <Modal\n                            title={ modalTitle || '' }\n                            aria-label={`${modalTitle || ''} modal`}\n                            isOpen={ isModalOpen }\n                            onClose={ () => this.handleModalToggle() }\n                            className=\"ins-c-inventory__detail--dialog\"\n                            variant={ modalVariant }\n                        >\n                            <InfoTable\n                                cells={ cells }\n                                rows={ rows }\n                                expandable={ expandable }\n                                onSort={ this.onSort }\n                                filters={ filters }\n                            />\n                        </Modal>\n                    </Grid>\n                </div>\n            </Wrapper>\n        );\n    }\n}\n\nGeneralInformation.propTypes = {\n    entity: PropTypes.shape({\n        id: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    }),\n    loadSystemDetail: PropTypes.func,\n    store: PropTypes.any,\n    writePermissions: PropTypes.bool,\n    SystemCardWrapper: PropTypes.oneOfType([PropTypes.node, PropTypes.bool]),\n    OperatingSystemCardWrapper: PropTypes.oneOfType([PropTypes.node, PropTypes.bool]),\n    BiosCardWrapper: PropTypes.oneOfType([PropTypes.node, PropTypes.bool]),\n    InfrastructureCardWrapper: PropTypes.oneOfType([PropTypes.node, PropTypes.bool]),\n    ConfigurationCardWrapper: PropTypes.oneOfType([PropTypes.node, PropTypes.bool]),\n    SystemStatusCardWrapper: PropTypes.oneOfType([PropTypes.node, PropTypes.bool]),\n    DataCollectorsCardWrapper: PropTypes.oneOfType([PropTypes.node, PropTypes.bool]),\n    CollectionCardWrapper: PropTypes.oneOfType([PropTypes.node, PropTypes.bool]),\n    children: PropTypes.node\n};\nGeneralInformation.defaultProps = {\n    entity: {},\n    SystemCardWrapper: SystemCard,\n    OperatingSystemCardWrapper: OperatingSystemCard,\n    BiosCardWrapper: BiosCard,\n    InfrastructureCardWrapper: InfrastructureCard,\n    ConfigurationCardWrapper: ConfigurationCard,\n    SystemStatusCardWrapper: SystemStatusCard,\n    DataCollectorsCardWrapper: DataCollectorsCard,\n    CollectionCardWrapper: false\n};\n\nconst mapStateToProps = ({\n    entityDetails: {\n        entity\n    }\n}) => ({\n    entity\n});\nconst mapDispatchToProps = (dispatch) => ({\n    loadSystemDetail: (itemId) => dispatch(systemProfile(itemId))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GeneralInformation);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n    Button,\n    Modal,\n    TextInput\n} from '@patternfly/react-core';\n\nexport default class TextInputModal extends Component {\n    constructor (props) {\n        super(props);\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps (props, state) {\n        if (!props.isOpen) {\n            return { value: undefined };\n        }\n\n        if (state.value !== undefined) {\n            return null;\n        }\n\n        return {\n            value: props.value || ''\n        };\n    };\n\n    render () {\n        const {\n            title, isOpen, onCancel, onSubmit, ariaLabel, modalOuiaId, cancelOuiaId, confirmOuiaId, inputOuiaId\n        } = this.props;\n        const { value } = this.state;\n\n        return (\n            <Modal\n                variant=\"small\"\n                title={ title }\n                className=\"ins-c-inventory__detail--edit\"\n                aria-label={ ariaLabel ? `${ariaLabel} - modal` : 'input modal' }\n                ouiaId={ modalOuiaId }\n                isOpen={ isOpen }\n                onClose={ event => onCancel(event) }\n                actions={ [\n                    <Button key=\"cancel\" data-action=\"cancel\" variant=\"secondary\" onClick={ onCancel } ouiaId={ cancelOuiaId }>\n                        Cancel\n                    </Button>,\n                    <Button\n                        key=\"confirm\"\n                        data-action=\"confirm\"\n                        variant=\"primary\"\n                        onClick={ () => onSubmit(this.state.value) }\n                        ouiaId={ confirmOuiaId }\n                    >\n                        Save\n                    </Button>\n                ] }\n            >\n                <TextInput\n                    value={ value }\n                    type=\"text\"\n                    ouiaId={ inputOuiaId }\n                    onChange={ value => this.setState({ value }) }\n                    aria-label={ ariaLabel  }\n                />\n            </Modal>\n        );\n    }\n}\n\nTextInputModal.propTypes = {\n    title: PropTypes.string,\n    isOpen: PropTypes.bool,\n    onCancel: PropTypes.func,\n    onSubmit: PropTypes.func,\n    ariaLabel: PropTypes.string,\n    modalOuiaId: PropTypes.string,\n    cancelOuiaId: PropTypes.string,\n    confirmOuiaId: PropTypes.string,\n    inputOuiaId: PropTypes.string,\n    value: PropTypes.string\n};\n\nTextInputModal.defaultProps = {\n    onCancel: () => undefined,\n    onSubmit: () => undefined,\n    isOpen: false,\n    title: '',\n    ariaLabel: 'input text'\n};\n","import { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport { ACTION_TYPES } from './action-types';\n\nexport const defaultState = { loaded: false };\n\nexport const sizes = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n\n// Kudos to https://stackoverflow.com/a/18650828/2560321\nexport const formatBytes = (bytes) => {\n    if (bytes === 0 || isNaN(Number(bytes))) {\n        return '0 B';\n    }\n\n    const index = Math.floor(Math.log(bytes) / Math.log(1024));\n    return `${parseFloat((bytes / Math.pow(1024, index)).toFixed(2))} ${sizes[index]}`;\n};\n\nexport function systemProfilePending(state) {\n    return {\n        ...state,\n        systemProfile: {\n            loaded: false\n        }\n    };\n}\n\nexport function calculateRepos(repos) {\n    return repos && repos.reduce((acc, curr) => ({\n        ...acc,\n        ...curr.enabled ? {\n            enabled: [...acc.enabled, curr]\n        } : {\n            disabled: [...acc.disabled, curr]\n        }\n    }), { enabled: [], disabled: [] });\n}\n\nexport function calculateInterfaces(interfaces) {\n    return interfaces && interfaces.reduce((acc, curr) => ({\n        interfaces: [...acc.interfaces, curr],\n        ipv4: [...acc.ipv4, ...curr.ipv4_addresses || []].filter(Boolean),\n        ipv6: [...acc.ipv6, ...curr.ipv6_addresses || []].filter(Boolean)\n    }), { interfaces: [], ipv4: [], ipv6: [] });\n}\n\nexport function onSystemProfile(state, { payload: { results } }) {\n    const systemProfile = (results && results[0] && results[0].system_profile) || {};\n    const cloudProviderObj = (results && results[0] && (typeof results[0].system_profile.cloud_provider !== 'undefined'))\n                        && results[0].system_profile.cloud_provider;\n    return {\n        ...state,\n        disabledApps: [\n            ...(cloudProviderObj === 'aws' || cloudProviderObj === 'azure') ? [] : ['ros']\n        ],\n        systemProfile: {\n            loaded: true,\n            ...systemProfile,\n            ramSize: systemProfile.system_memory_bytes && formatBytes(systemProfile.system_memory_bytes),\n            repositories: calculateRepos(systemProfile.yum_repos),\n            network: calculateInterfaces(systemProfile.network_interfaces)\n        }\n    };\n}\n\nexport default applyReducerHash(\n    {\n        [ACTION_TYPES.LOAD_SYSTEM_PROFILE_FULFILLED]: onSystemProfile,\n        [ACTION_TYPES.LOAD_SYSTEM_PROFILE_PENDING]: systemProfilePending\n    },\n    {\n        systemProfile: defaultState\n    }\n);\n"],"names":["OperatingSystemFormatter","operatingSystem","name","version","major","minor","propTypes","PropTypes","InnerButton","link","onClick","className","href","window","location","permissionsCache","undefined","EditButtonUnknownPermissions","props","hasAccess","usePermissions","EditButtonWrapper","writePermissions","insights","chrome","isProd","InfoTable","sortBy","index","direction","SortByDirection","opened","pagination","page","perPage","activeFilters","event","expandable","onSort","setState","_event","isOpen","state","key","value","label","restFilter","length","_e","deleteAll","deleted","onDeleteFilter","this","cells","rows","filters","collapsibleProps","onCollapse","activeRows","filterRows","mappedRows","flatMap","prepareRows","child","title","parent","Fragment","PrimaryToolbar","itemCount","onSetPage","onUpdatePagination","onPerPageSelect","filterConfig","items","generateFilters","setFilter","activeFiltersConfig","Object","values","map","filter","category","chips","Array","isArray","item","onDelete","Table","variant","TableVariant","TableHeader","TableBody","TextContent","row","Text","component","TextVariants","TableToolbar","isFooter","Pagination","Component","type","options","defaultProps","SystemStatusCard","detailLoaded","hasState","hasRegistered","hasLastCheckIn","hasRHC","entity","systemProfile","systemStatus","LoadingCard","isLoading","stale","DateFormat","date","created","updated","rhc_client_id","handleClick","connect","entityDetails","systemProfileStore","loaded","DataCollectorsCard","collectors","dataMapper","useState","expandedNames","setExpandedNames","setExpanded","useCallback","collector","isExpanding","prevExpanded","otherExpandedNames","r","isExpanded","includes","data","getDefaultCollectors","TableComposable","borders","Thead","Tr","Th","rowIndex","Tbody","details","Td","expand","onToggle","style","paddingLeft","dataLabel","status","colSpan","ExpandableRowContent","Flex","FlexItem","grow","default","id","per_reporter_staleness","defaultCollectors","GeneralInformation","isModalOpen","modalTitle","modalVariant","customRows","sorted","sort","a","b","firstRow","secondRow","sortValue","toLocaleLowerCase","reverse","loadSystemDetail","store","SystemCardWrapper","OperatingSystemCardWrapper","BiosCardWrapper","InfrastructureCardWrapper","ConfigurationCardWrapper","SystemStatusCardWrapper","DataCollectorsCardWrapper","CollectionCardWrapper","children","Wrapper","Provider","Grid","sm","md","hasGutter","GridItem","handleModalToggle","Modal","onClose","SystemCard","OperatingSystemCard","BiosCard","InfrastructureCard","ConfigurationCard","dispatch","itemId","TextInputModal","onCancel","onSubmit","ariaLabel","modalOuiaId","cancelOuiaId","confirmOuiaId","inputOuiaId","ouiaId","actions","Button","TextInput","onChange","sizes","formatBytes","bytes","isNaN","Number","Math","floor","log","parseFloat","pow","toFixed","applyReducerHash","ACTION_TYPES","interfaces","repos","results","payload","system_profile","cloudProviderObj","cloud_provider","disabledApps","ramSize","system_memory_bytes","repositories","yum_repos","reduce","acc","curr","enabled","disabled","network","network_interfaces","ipv4","ipv4_addresses","Boolean","ipv6","ipv6_addresses"],"sourceRoot":""}