{"version":3,"file":"js/2884.b1d0db2ba8799ed485b3.js","mappings":";wKAIO,MAAMA,EAA8BC,IACvC,IAAI,SAAEC,EAAW,KAAI,UAAEC,EAAY,IAAOF,EAAIG,GAAQ,IAAAC,QAAOJ,EAAI,CAAC,WAAY,cAC9E,OAAQ,gBAAoB,MAAOK,OAAOC,OAAO,CAAEJ,WAAW,OAAI,IAAOK,oBAAqBL,IAAcC,GAAQF,EAAU,EAElIF,EAA2BS,YAAc,6GCNlC,MAAMC,EAAuB,CAClCC,KAAM,iBACNC,OAAQ,IACRC,MAAO,IACPC,QAAS,qRACTC,QAAS,EACTC,QAAS,GAGEC,GAAiB,QAAWP,GAEzC,mDCbO,MAKP,EALwC,CACtC,KAAQ,kCACR,MAAS,UACT,IAAO,oECDTQ,EAAQ,GAA2B,CACjC,KAAQ,kCACR,MAAS,UACT,IAAO,wCAEYA,EAAQ,4MCPtB,MAKP,EAHW,8HCDX,snGAAAC,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,sQAoBA,IAAMC,EAAiB,SAACC,GAAM,YAAM,CAClCC,OAAQ,CACN,CACEC,UAAWC,EAAAA,EAAeC,WAC1Bd,KAAM,kBACNe,MACEL,EAAOM,OAAS,EACd,kBAACC,EAAA,EAAI,KACH,gCAASP,EAAOM,QAAgB,+CAIlC,kBAACC,EAAA,EAAI,KACH,gCAAkB,QAAlB,EAASP,EAAO,UAAE,aAAT,EAAWV,MAAc,uCAI1C,CACEY,UAAWC,EAAAA,EAAeK,SAC1BlB,KAAM,eACNe,MAAO,kDACPI,SAAU,CAAC,CAAEC,KAAMC,EAAAA,EAAeC,aAGvC,EAYKC,EAAmB,SAAH,GAKhB,IAJJC,EAAW,EAAXA,YACAC,EAAc,EAAdA,eACAC,EAAU,EAAVA,WACAC,EAAQ,EAARA,SAEMC,GAAWC,EAAAA,EAAAA,eACjB,GAA0CC,EAAAA,EAAAA,eAASC,GAAU,eAAtDC,EAAa,KAAEC,EAAgB,KAChCC,GAAkBF,GAAiB,IAAIG,OAC3C,YAAa,OAAgC,IAArB,EAArBC,UAA2C,IAEhD,GAAkCN,EAAAA,EAAAA,WAAS,GAAK,eAAzCO,EAAS,KAAEC,EAAY,KA4C9B,OA1CAC,EAAAA,EAAAA,YAAU,WAER,IAAIC,GAAS,EAEPC,EAAoB,mCAAG,qGACCC,EAAAA,EAAAA,IAAef,GAAS,OAA9CK,EAAgB,EAAH,KAEdQ,IACHP,EAAiBD,EAAcW,SAC/BL,GAAa,IAGf,2CACD,kBATyB,mCAa1B,OAFAG,IAEO,WACLD,GAAS,CACX,CACF,GAAG,IAsBIH,EACL,kBAACO,EAAA,EAAQ,KACP,kBAACC,EAAA,EAAQ,KACP,kBAACC,EAAA,EAAO,CACN,aAAW,4BACX,iBAAe,iBAIlBZ,EAqCH,kBAACa,EAAA,GAAK,QACJvB,YAAaA,EACbwB,WAAY,kBAAMvB,GAAe,EAAM,EACvCwB,SArEsB,WAAM,QACxBC,EAAiB,CACrBC,UAAW,CACTC,MAAO,UACPC,YACE1B,EAASX,OAAS,EAAC,UACZW,EAASX,OAAM,6BACfgB,SAAkB,QAAL,EAAbA,EAAgB,UAAE,WAAL,EAAb,EAAoBhC,KAAI,mCAEnCsD,QAAS,CACPF,MAAO,QACPC,YACE1B,EAASX,OAAS,EAAC,2BACKW,EAASX,OAAM,4CACTgB,SAAkB,QAAL,EAAbA,EAAgB,UAAE,WAAL,EAAb,EAAoBhC,SAGxDuD,EAAAA,EAAAA,GAAa3B,GAAU,kBAAM4B,EAAAA,EAAAA,IAAiB7B,EAAS,GAAEuB,EAC3D,EAoDIxB,WAAYA,GAnHM,WAAH,IAAIhB,EAAS,UAAH,6CAAG,GAAE,MAAM,CACxC0C,MAAO1C,EAAOM,OAAS,EAAI,iBAAmB,gBAC9CyC,iBAAkB,kBAChB,kBAAC,KAAuB,CAACC,MAAOC,EAAAA,EAAaC,OAAS,EAExDC,QAAS,SACTC,YAAa,SACbC,OAAQtD,EAAeC,GACxB,CA4GSsD,CAAgBhC,KAzCtB,kBAAC,IAAO,CACN6B,QAAQ,QACRT,MACEpB,EAAchB,OAAS,EACnB,oCACA,mCAENyC,iBAAkB,kBAChB,kBAAC,KAAqB,CAACC,MAAOO,GAAqB,EAErDC,OAAQ1C,EACR2C,QAAS,kBAAM1C,GAAe,EAAM,EACpC2C,QAAS,CACP,kBAACC,EAAA,GAAM,CACLC,IAAI,QACJT,QAAQ,UACRU,QAAS,kBAAM9C,GAAe,EAAM,GACrC,WAKFO,EAAchB,OAAS,EACtB,kBAACC,EAAA,EAAI,KAAC,6GAKN,kBAACA,EAAA,EAAI,KAAC,yDACmD,IACvD,gCAASe,EAAc,GAAGhC,MAAgB,8CAcpD,EAEAuB,EAAiBiD,UAAY,CAC3B7C,SAAU8C,IAAAA,QAAkBA,IAAAA,QAAkBC,WAC9ClD,YAAaiD,IAAAA,KACbhD,eAAgBgD,IAAAA,KAChB/C,WAAY+C,IAAAA,MAEd,gOC7KA,snGAAAjE,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,sQAUA,IAmBMmE,EAAmB,SAAH,GAKhB,IAJJnD,EAAW,EAAXA,YACAC,EAAc,EAAdA,eACAmD,EAAU,EAAVA,WACAlD,EAAU,EAAVA,WAEQmD,EAAaD,EAAbC,GAAI7E,EAAS4E,EAAT5E,KACN4B,GAAWC,EAAAA,EAAAA,eAiBXkC,GAASe,EAAAA,EAAAA,UAAQ,WACrB,IA5CuBC,EA4CjBC,EAAK,mCAAG,WAAOpB,GAAK,kFACFqB,EAAAA,EAAAA,IAAkBrB,GAAM,OAAjC,IACG,IADA,EAAH,KACO,qBACZ,4BAA2B,qCAG5B7B,GAAS,2CACjB,gBAPU,sCAWX,OAvDuBgD,GAsDbG,EAAAA,EAAAA,GAAuBF,EAAO,IAAK,CAAEG,kBAAkB,IAtDf,CACpDxE,OAAQ,CACN,CACEC,UAAWC,EAAAA,EAAeuE,WAC1BpF,KAAM,OACNe,MAAO,OACPsE,WACE,kFACFX,YAAY,EACZvD,SAAU,CACR4D,EACA,CAAE3D,KAAMC,EAAAA,EAAeC,UACvB,CAAEF,KAAMC,EAAAA,EAAeiE,WAAYC,UAAW,IAC9CC,EAAAA,KA2CN,GAAG,IAEH,OACE,kBAAC,IAAK,CACJhE,YAAaA,EACbwB,WAAY,kBAAMvB,GAAe,EAAM,EACvC2B,MAAM,eACNU,YAAY,OACZC,OAAQA,EACR0B,cAAeb,EACf3B,SAtCsB,SAACyC,GACzB,IAAMxC,EAAiB,CACrBC,UAAW,CACTC,MAAO,UACPC,YAAa,GAAF,OAAKrD,EAAI,gCAAwB0F,EAAO1F,KAAI,kBAEzDsD,QAAS,CAAEF,MAAO,QAASC,YAAa,4BAE1CE,EAAAA,EAAAA,GACE3B,GACA,kBAAM+D,EAAAA,EAAAA,IAAgBd,EAAI,CAAE7E,KAAM0F,EAAO1F,MAAO,GAChDkD,EAEJ,EA0BIxB,WAAYA,GAGlB,EAEAiD,EAAiBH,UAAY,CAC3BI,WAAYH,IAAAA,MAAgB,CAC1BI,GAAIJ,IAAAA,OACJzE,KAAMyE,IAAAA,SAERjD,YAAaiD,IAAAA,KACbhD,eAAgBgD,IAAAA,KAChB/C,WAAY+C,IAAAA,MAGd,2BC7FA,IAAImB,EAAiB,EAAQ,OACzBC,EAAc,EAAQ,OACtBC,EAAW,EAAQ,MACnBC,EAAoB,EAAQ,OAuB5BC,EAAaF,GAAS,SAASG,EAAOP,GACxC,OAAOK,EAAkBE,GACrBL,EAAeK,EAAOJ,EAAYH,EAAQ,EAAGK,GAAmB,IAChE,EACN,IAEAG,EAAO3F,QAAUyF","sources":["webpack:///./node_modules/@patternfly/react-core/dist/esm/components/EmptyState/EmptyStateSecondaryActions.js","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/plus-circle-icon.js","webpack:///./node_modules/@patternfly/react-tokens/dist/esm/global_warning_color_100.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_palette_black_600.js","webpack:///./node_modules/@patternfly/react-tokens/dist/esm/global_danger_color_100.js","webpack:///./src/components/InventoryGroups/Modals/DeleteGroupModal.js","webpack:///./src/components/InventoryGroups/Modals/RenameGroupModal.js","webpack:///./node_modules/lodash/difference.js"],"sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/EmptyState/empty-state';\nexport const EmptyStateSecondaryActions = (_a) => {\n    var { children = null, className = '' } = _a, props = __rest(_a, [\"children\", \"className\"]);\n    return (React.createElement(\"div\", Object.assign({ className: css(styles.emptyStateSecondary, className) }, props), children));\n};\nEmptyStateSecondaryActions.displayName = 'EmptyStateSecondaryActions';\n//# sourceMappingURL=EmptyStateSecondaryActions.js.map","import { createIcon } from '../createIcon';\n\nexport const PlusCircleIconConfig = {\n  name: 'PlusCircleIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm144 276c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92h-92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const PlusCircleIcon = createIcon(PlusCircleIconConfig);\n\nexport default PlusCircleIcon;","export const global_warning_color_100 = {\n  \"name\": \"--pf-global--warning-color--100\",\n  \"value\": \"#f0ab00\",\n  \"var\": \"var(--pf-global--warning-color--100)\"\n};\nexport default global_warning_color_100;","\"use strict\";\nexports.__esModule = true;\nexports.global_palette_black_600 = {\n  \"name\": \"--pf-global--palette--black-600\",\n  \"value\": \"#6a6e73\",\n  \"var\": \"var(--pf-global--palette--black-600)\"\n};\nexports[\"default\"] = exports.global_palette_black_600;","export const global_danger_color_100 = {\n  \"name\": \"--pf-global--danger-color--100\",\n  \"value\": \"#c9190b\",\n  \"var\": \"var(--pf-global--danger-color--100)\"\n};\nexport default global_danger_color_100;","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport Modal from './Modal';\nimport { deleteGroupsById, getGroupsByIds } from '../utils/api';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons/dist/esm/icons/exclamation-triangle-icon';\nimport warningColor from '@patternfly/react-tokens/dist/esm/global_warning_color_100';\nimport dangerColor from '@patternfly/react-tokens/dist/esm/global_danger_color_100';\nimport {\n  Backdrop,\n  Bullseye,\n  Button,\n  Modal as PfModal,\n  Spinner,\n  Text,\n} from '@patternfly/react-core';\nimport apiWithToast from '../utils/apiWithToast';\nimport { useDispatch } from 'react-redux';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\n\nconst generateSchema = (groups) => ({\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'warning-message',\n      label:\n        groups.length > 1 ? (\n          <Text>\n            <strong>{groups.length}</strong> groups and all their data will be\n            deleted.\n          </Text>\n        ) : (\n          <Text>\n            <strong>{groups[0]?.name}</strong> and all its data will be deleted.\n          </Text>\n        ),\n    },\n    {\n      component: componentTypes.CHECKBOX,\n      name: 'confirmation',\n      label: 'I understand that this action cannot be undone.',\n      validate: [{ type: validatorTypes.REQUIRED }],\n    },\n  ],\n});\n\nconst generateContent = (groups = []) => ({\n  title: groups.length > 1 ? 'Delete groups?' : 'Delete group?',\n  titleIconVariant: () => (\n    <ExclamationTriangleIcon color={warningColor.value} />\n  ),\n  variant: 'danger',\n  submitLabel: 'Delete',\n  schema: generateSchema(groups),\n});\n\nconst DeleteGroupModal = ({\n  isModalOpen,\n  setIsModalOpen,\n  reloadData,\n  groupIds,\n}) => {\n  const dispatch = useDispatch();\n  const [fetchedGroups, setFetchedGroups] = useState(undefined);\n  const groupsAreEmpty = (fetchedGroups || []).every(\n    ({ host_count: hostCount }) => hostCount === 0\n  );\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    // check that all groups are empty before deletion\n    let ignore = false;\n\n    const verifyGroupsAreEmpty = async () => {\n      const fetchedGroups = await getGroupsByIds(groupIds);\n\n      if (!ignore) {\n        setFetchedGroups(fetchedGroups.results);\n        setIsLoading(false);\n      }\n\n      // TODO: treat the error case\n    };\n\n    verifyGroupsAreEmpty();\n\n    return () => {\n      ignore = true;\n    };\n  }, []);\n\n  const handleDeleteGroup = () => {\n    const statusMessages = {\n      onSuccess: {\n        title: 'Success',\n        description:\n          groupIds.length > 1\n            ? `${groupIds.length} groups deleted`\n            : `${fetchedGroups?.[0]?.name} has been removed successfully`,\n      },\n      onError: {\n        title: 'Error',\n        description:\n          groupIds.length > 1\n            ? `Failed to delete ${groupIds.length} groups`\n            : `Failed to delete group ${fetchedGroups?.[0]?.name}`,\n      },\n    };\n    apiWithToast(dispatch, () => deleteGroupsById(groupIds), statusMessages);\n  };\n\n  return isLoading ? (\n    <Backdrop>\n      <Bullseye>\n        <Spinner\n          aria-label=\"Loading the modal spinner\"\n          aria-valueText=\"Loading...\"\n        />\n      </Bullseye>\n    </Backdrop>\n  ) : !groupsAreEmpty ? ( // groups must have no systems to be deleted\n    <PfModal\n      variant=\"small\"\n      title={\n        fetchedGroups.length > 1\n          ? 'Cannot delete groups at this time'\n          : 'Cannot delete group at this time'\n      }\n      titleIconVariant={() => (\n        <ExclamationCircleIcon color={dangerColor.value} />\n      )}\n      isOpen={isModalOpen}\n      onClose={() => setIsModalOpen(false)}\n      actions={[\n        <Button\n          key=\"close\"\n          variant=\"primary\"\n          onClick={() => setIsModalOpen(false)}\n        >\n          Close\n        </Button>,\n      ]}\n    >\n      {fetchedGroups.length > 1 ? (\n        <Text>\n          Groups containing systems cannot be deleted. To delete groups, first\n          remove all of the systems from them.\n        </Text>\n      ) : (\n        <Text>\n          Groups containing systems cannot be deleted. To delete{' '}\n          <strong>{fetchedGroups[0].name}</strong>, first remove all of the\n          systems from it.\n        </Text>\n      )}\n    </PfModal>\n  ) : (\n    <Modal\n      isModalOpen={isModalOpen}\n      closeModal={() => setIsModalOpen(false)}\n      onSubmit={handleDeleteGroup}\n      reloadData={reloadData}\n      {...generateContent(fetchedGroups)}\n    />\n  );\n};\n\nDeleteGroupModal.propTypes = {\n  groupIds: PropTypes.arrayOf(PropTypes.string).isRequired,\n  isModalOpen: PropTypes.bool,\n  setIsModalOpen: PropTypes.func,\n  reloadData: PropTypes.func,\n};\nexport default DeleteGroupModal;\n","import React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport Modal from './Modal';\nimport awesomeDebouncePromise from 'awesome-debounce-promise';\nimport { updateGroupById, validateGroupName } from '../utils/api';\nimport { nameValidator } from '../helpers/validate';\nimport apiWithToast from '../utils/apiWithToast';\nimport { useDispatch } from 'react-redux';\n\nconst renameGroupSchema = (namePresenceValidator) => ({\n  fields: [\n    {\n      component: componentTypes.TEXT_FIELD,\n      name: 'name',\n      label: 'Name',\n      helperText:\n        'Can only contain letters, numbers, spaces, hyphens ( - ), and underscores( _ ).',\n      isRequired: true,\n      validate: [\n        namePresenceValidator,\n        { type: validatorTypes.REQUIRED },\n        { type: validatorTypes.MAX_LENGTH, threshold: 50 },\n        nameValidator,\n      ],\n    },\n  ],\n});\n\nconst RenameGroupModal = ({\n  isModalOpen,\n  setIsModalOpen,\n  modalState,\n  reloadData,\n}) => {\n  const { id, name } = modalState;\n  const dispatch = useDispatch();\n\n  const handleRenameModal = (values) => {\n    const statusMessages = {\n      onSuccess: {\n        title: 'Success',\n        description: `${name} has been renamed to ${values.name} successfully`,\n      },\n      onError: { title: 'Error', description: 'Failed to rename group' },\n    };\n    apiWithToast(\n      dispatch,\n      () => updateGroupById(id, { name: values.name }),\n      statusMessages\n    );\n  };\n\n  const schema = useMemo(() => {\n    const check = async (value) => {\n      const results = await validateGroupName(value);\n      if (results === true) {\n        throw 'Group name already exists';\n      }\n\n      return undefined;\n    };\n\n    // eslint-disable-next-line new-cap\n    const d = awesomeDebouncePromise(check, 500, { onlyResolvesLast: false });\n    return renameGroupSchema(d);\n  }, []);\n\n  return (\n    <Modal\n      isModalOpen={isModalOpen}\n      closeModal={() => setIsModalOpen(false)}\n      title=\"Rename group\"\n      submitLabel=\"Save\"\n      schema={schema}\n      initialValues={modalState}\n      onSubmit={handleRenameModal}\n      reloadData={reloadData}\n    />\n  );\n};\n\nRenameGroupModal.propTypes = {\n  modalState: PropTypes.shape({\n    id: PropTypes.string,\n    name: PropTypes.string,\n  }),\n  isModalOpen: PropTypes.bool,\n  setIsModalOpen: PropTypes.func,\n  reloadData: PropTypes.func,\n};\n\nexport default RenameGroupModal;\n","var baseDifference = require('./_baseDifference'),\n    baseFlatten = require('./_baseFlatten'),\n    baseRest = require('./_baseRest'),\n    isArrayLikeObject = require('./isArrayLikeObject');\n\n/**\n * Creates an array of `array` values not included in the other given arrays\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons. The order and references of result values are\n * determined by the first array.\n *\n * **Note:** Unlike `_.pullAll`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {...Array} [values] The values to exclude.\n * @returns {Array} Returns the new array of filtered values.\n * @see _.without, _.xor\n * @example\n *\n * _.difference([2, 1], [2, 3]);\n * // => [1]\n */\nvar difference = baseRest(function(array, values) {\n  return isArrayLikeObject(array)\n    ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n    : [];\n});\n\nmodule.exports = difference;\n"],"names":["EmptyStateSecondaryActions","_a","children","className","props","__rest","Object","assign","emptyStateSecondary","displayName","PlusCircleIconConfig","name","height","width","svgPath","yOffset","xOffset","PlusCircleIcon","exports","i","generateSchema","groups","fields","component","componentTypes","PLAIN_TEXT","label","length","Text","CHECKBOX","validate","type","validatorTypes","REQUIRED","DeleteGroupModal","isModalOpen","setIsModalOpen","reloadData","groupIds","dispatch","useDispatch","useState","undefined","fetchedGroups","setFetchedGroups","groupsAreEmpty","every","host_count","isLoading","setIsLoading","useEffect","ignore","verifyGroupsAreEmpty","getGroupsByIds","results","Backdrop","Bullseye","Spinner","Modal","closeModal","onSubmit","statusMessages","onSuccess","title","description","onError","apiWithToast","deleteGroupsById","titleIconVariant","color","warningColor","value","variant","submitLabel","schema","generateContent","dangerColor","isOpen","onClose","actions","Button","key","onClick","propTypes","PropTypes","isRequired","RenameGroupModal","modalState","id","useMemo","namePresenceValidator","check","validateGroupName","awesomeDebouncePromise","onlyResolvesLast","TEXT_FIELD","helperText","MAX_LENGTH","threshold","nameValidator","initialValues","values","updateGroupById","baseDifference","baseFlatten","baseRest","isArrayLikeObject","difference","array","module"],"sourceRoot":""}