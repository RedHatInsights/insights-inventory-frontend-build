{"version":3,"file":"js/2520.1654006601968.5e6fb6e13cb058e2892f.js","mappings":"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","sources":["webpack:///./src/Utilities/DeleteModal.js","webpack:///./src/Utilities/TagWithDialog.js","webpack:///./src/Utilities/Wrapper.js","webpack:///./src/Utilities/TagsModal.js","webpack:///./src/components/GeneralInfo/LoadingCard/LoadingCard.js","webpack:///./src/constants.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    ClipboardCopy,\n    Modal,\n    Split,\n    SplitItem,\n    Stack,\n    StackItem,\n    Level,\n    LevelItem,\n    Button\n} from '@patternfly/react-core';\n\nimport ExclamationTriangleIcon from  '@patternfly/react-icons/dist/js/icons/exclamation-triangle-icon';\n\nconst DeleteModal = ({ handleModalToggle, isModalOpen, currentSytems, onConfirm }) => {\n    let systemToRemove;\n    let systemLabel = 'system';\n    if (Array.isArray(currentSytems)) {\n        systemToRemove = currentSytems.length === 1 ? currentSytems[0].display_name : `${currentSytems.length} systems`;\n        systemLabel = currentSytems.length === 1 ? systemLabel : 'systems';\n    } else {\n        systemToRemove = currentSytems.display_name;\n    }\n\n    return <Modal\n        variant=\"small\"\n        title=\"Remove from inventory\"\n        className=\"ins-c-inventory__table--remove\"\n        ouiaId=\"inventory-delete-modal\"\n        isOpen={isModalOpen}\n        onClose={() => handleModalToggle(false)}\n        appendTo={document.getElementsByClassName('inventory')[0] || document.body}\n    >\n        <Split hasGutter>\n            <SplitItem><ExclamationTriangleIcon size=\"xl\" className=\"ins-m-alert\" /></SplitItem>\n            <SplitItem isFilled>\n                <Stack hasGutter>\n                    <StackItem>\n                        {systemToRemove} will be removed from\n                                    all {location.host} applications and services. You need to re-register\n                        the {systemLabel} to add it back to your inventory.\n                    </StackItem>\n                    <StackItem>\n                        To disable the daily upload for this {systemLabel}, use the following command:\n                    </StackItem>\n                    <StackItem>\n                        <ClipboardCopy>insights-client --unregister</ClipboardCopy>\n                    </StackItem>\n                </Stack>\n            </SplitItem>\n        </Split>\n        <Level hasGutter>\n            <LevelItem>\n                <Button\n                    variant=\"danger\"\n                    ouiaId=\"confirm-inventory-delete\"\n                    onClick={onConfirm}\n                >\n                    Remove\n                </Button>\n                <Button\n                    variant=\"link\"\n                    ouiaId=\"cancel-inventory-delete\"\n                    onClick={() => handleModalToggle(false)}\n                >\n                    Cancel\n                </Button>\n            </LevelItem>\n        </Level>\n    </Modal>;\n};\n\nconst ActiveSystemProp = PropTypes.shape({\n    id: PropTypes.string,\n    displayName: PropTypes.string\n});\n\nDeleteModal.propTypes = {\n    isModalOpen: PropTypes.bool,\n    currentSytems: PropTypes.oneOfType([ActiveSystemProp, PropTypes.arrayOf(ActiveSystemProp)]),\n    handleModalToggle: PropTypes.func,\n    onConfirm: PropTypes.func\n};\n\nDeleteModal.defaultProps = {\n    isModalOpen: false,\n    currentSytems: {},\n    handleModalToggle: () => undefined,\n    onConfirm: () => undefined\n};\n\nexport default DeleteModal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { TagCount } from '@redhat-cloud-services/frontend-components/TagCount';\nimport { loadTags, toggleTagModal } from '../store/actions';\n\nconst TagWithDialog = ({ count, loadTags, systemId }) => (\n    <span\n        onClick={(e) => e.stopPropagation()}\n        className=\"ins-c-inventory__list-tags\"\n        data-ouia-component-id={`${systemId}-tag-button`}\n    >\n        <TagCount count={count} onTagClick={ () => loadTags(systemId, count) } />\n    </span>\n);\n\nTagWithDialog.propTypes = {\n    count: PropTypes.number,\n    loadTags: PropTypes.func,\n    systemId: PropTypes.string\n};\n\nconst dispatchToProps = (dispatch) => ({\n    loadTags: (systemId, count) => {\n        if (systemId) {\n            dispatch(toggleTagModal(true));\n            dispatch(loadTags(systemId, undefined, undefined, count));\n        }\n    }\n});\n\nexport default connect(() => ({}), dispatchToProps)(TagWithDialog);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { usePermissions } from '@redhat-cloud-services/frontend-components-utilities/RBACHook';\nimport { Spinner } from '@patternfly/react-core';\n\nconst RenderWrapper = ({ cmp: Component, hideLoader, isRbacEnabled, inventoryRef, store, ...props }) => {\n    const { hasAccess, isLoading } = usePermissions('inventory', [\n        'inventory:*:*',\n        'inventory:*:read',\n        'inventory:hosts:read'\n    ], true);\n    return (\n        (isLoading && !hideLoader) ?\n            <Spinner /> :\n            <Component\n                {...props}\n                { ...inventoryRef && {\n                    ref: inventoryRef\n                }}\n                hasAccess={isRbacEnabled ? hasAccess : true}\n                store={ store }\n            />\n    );\n};\n\nRenderWrapper.propTypes = {\n    cmp: PropTypes.any,\n    inventoryRef: PropTypes.any,\n    store: PropTypes.object,\n    customRender: PropTypes.bool,\n    isRbacEnabled: PropTypes.bool,\n    hideLoader: PropTypes.bool\n};\n\nexport default RenderWrapper;\n","import React, { useState, useCallback, useEffect } from 'react';\nimport { useSelector, useDispatch, shallowEqual } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { toggleTagModal, fetchAllTags } from '../store/actions';\nimport { TagModal } from '@redhat-cloud-services/frontend-components/TagModal';\nimport { cellWidth } from '@patternfly/react-table';\nimport debounce from 'lodash/debounce';\nimport flatten from 'lodash/flatten';\n\nconst TagsModal = ({\n    customFilters,\n    filterTagsBy,\n    onToggleModal,\n    onApply,\n    getTags\n}) => {\n    const dispatch = useDispatch();\n    const [filterBy, setFilterBy] = useState('');\n    const [selected, setSelected] = useState([]);\n    const [statePagination, setStatePagination] = useState({\n        perPage: 10,\n        page: 1\n    });\n\n    const showTagDialog = useSelector(({ entities, entityDetails }) => (entities || entityDetails)?.showTagDialog);\n\n    const pagination = useSelector(({ entities, entityDetails }) => {\n        if (entities?.activeSystemTag || entityDetails?.entity) {\n            return statePagination;\n        }\n\n        return entities?.allTagsPagination || statePagination;\n    }, shallowEqual);\n\n    const loaded = useSelector(({ entities, entityDetails }) => entities?.tagModalLoaded || entityDetails?.tagModalLoaded);\n\n    const activeSystemTag = useSelector(({ entities, entityDetails }) => entities?.activeSystemTag || entityDetails?.entity);\n    const tags = useSelector(({ entities, entityDetails }) => {\n        const activeTags = entities?.activeSystemTag?.tags || entityDetails?.entity?.tags;\n        if (activeTags) {\n            return activeTags?.filter(\n                (tag) => Object.values(tag).some((val) => val?.includes(filterBy))\n            ).slice(statePagination?.perPage * (statePagination?.page - 1), statePagination?.perPage * statePagination?.page);\n        }\n\n        return entities?.allTags?.reduce((acc, { tags }) => ([\n            ...acc,\n            ...flatten(tags.map(({ tag }) => tag))\n        ]), []);\n    });\n    const filters = useSelector(({ entities, entityDetails }) => (entities || entityDetails)?.activeFilters);\n    const tagsCount = useSelector(({ entities, entityDetails }) => {\n        const activeTags = (entities?.activeSystemTag?.tags || entityDetails?.entity?.tags)?.filter(\n            (tag) => Object.values(tag).some((val) => val?.includes(filterBy))\n        );\n        return activeTags ? activeTags.length : entities?.allTagsTotal;\n    });\n\n    useEffect(() => {\n        setFilterBy(filterTagsBy);\n    }, [filterTagsBy]);\n\n    const fetchTags = (pagination, filterBy) => {\n        if (!activeSystemTag) {\n            dispatch(fetchAllTags(filterBy, { ...customFilters, pagination, filters }, getTags));\n        } else {\n            setStatePagination(() => pagination);\n        }\n    };\n\n    const debouncedFetch = useCallback(debounce(fetchTags, 800), [activeSystemTag]);\n\n    return (\n        <TagModal\n            className=\"ins-c-inventory__tags-modal\"\n            tableProps={{\n                canSelectAll: false\n            }}\n            {...loaded && {\n                loaded,\n                pagination: {\n                    ...pagination,\n                    count: tagsCount\n                },\n                rows: tags?.map(({ key, value, namespace }) => ({\n                    id: `${namespace}/${key}=${value}`,\n                    selected: selected.find(({ id }) => id === `${namespace}/${key}=${value}`),\n                    cells: [key, value, namespace]\n                })) || []\n            }}\n            loaded={ loaded }\n            width=\"auto\"\n            isOpen={ showTagDialog }\n            toggleModal={() => {\n                setSelected([]);\n                setFilterBy('');\n                onToggleModal();\n                dispatch(toggleTagModal(false));\n            }}\n            filters={[\n                {\n                    label: 'Tags filter',\n                    placeholder: 'Filter tags',\n                    value: 'tags-filter',\n                    filterValues: {\n                        value: filterBy,\n                        onChange: (_e, value) => {\n                            debouncedFetch(pagination, value);\n                            setFilterBy(value);\n                        }\n                    }\n                }\n            ]}\n            onUpdateData={ (pagination) => fetchTags(pagination, filterBy) }\n            columns={ [\n                { title: 'Name' },\n                { title: 'Value', transforms: [cellWidth(30)] },\n                { title: 'Tag source', transforms: [cellWidth(30)] }\n            ] }\n            {...!activeSystemTag && {\n                onSelect: (selected) => setSelected(selected),\n                selected,\n                onApply: () => onApply && onApply(selected)\n            }}\n            bulkSelect={{ id: 'bulk-select-tags' }}\n            title={ activeSystemTag ?\n                `${activeSystemTag.display_name} (${tagsCount})` :\n                `All tags in inventory (${tagsCount})`\n            }\n        />\n    );\n};\n\nTagsModal.propTypes = {\n    onApply: PropTypes.func,\n    onToggleModal: PropTypes.func,\n    filterTagsBy: PropTypes.string,\n    customFilters: PropTypes.shape({\n        tags: PropTypes.oneOfType([\n            PropTypes.object,\n            PropTypes.arrayOf(PropTypes.string)\n        ])\n    }),\n    getTags: PropTypes.func\n};\n\nTagsModal.defaultProps = {\n    filterTagsBy: '',\n    onToggleModal: () => undefined\n};\n\nexport default TagsModal;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    Stack,\n    StackItem,\n    TextContent,\n    Text,\n    TextList,\n    TextVariants,\n    TextListItemVariants,\n    TextListVariants,\n    TextListItem\n} from '@patternfly/react-core';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components/Skeleton';\n\nconst valueToText = (value, singular, plural) => {\n    if ((value || value === 0) && singular) {\n        return value === 1 ? `1 ${singular}` : `${value} ${plural || `${singular}s`}`;\n    }\n\n    if (value === 0) {\n        return 'None';\n    }\n\n    return value || 'Not available';\n};\n\nexport const Clickable = ({ item: { onClick, value, target, plural, singular } }) => (\n    <a\n        onClick={ event => {\n            event.preventDefault();\n            onClick(event, { value, target });\n        } }\n        href={ `${window.location.href}/${target}` }\n    >\n        { valueToText(value, singular, plural) }\n    </a>\n);\n\nClickable.propTypes = {\n    item: PropTypes.shape({\n        value: PropTypes.node,\n        target: PropTypes.string,\n        onClick: PropTypes.func,\n        plural: PropTypes.string,\n        singular: PropTypes.string\n    })\n};\n\nClickable.defaultProps = {\n    item: {}\n};\n\nconst LoadingCard = ({ title, isLoading, items, children }) => {\n    return (\n        <Stack hasGutter>\n            <StackItem>\n                <TextContent>\n                    <Text component={ TextVariants.h1 }>\n                        { title }\n                    </Text>\n                </TextContent>\n            </StackItem>\n            <StackItem isFilled>\n                {items.length ?\n                    (<TextContent>\n                        <TextList component={ TextListVariants.dl }>\n                            { items.map((item, key) => (\n                                <Fragment key={ key }>\n                                    <TextListItem component={ TextListItemVariants.dt }>\n                                        { item.title }\n                                    </TextListItem>\n                                    <TextListItem component={ TextListItemVariants.dd }>\n                                        { isLoading && <Skeleton size={ item.size || SkeletonSize.sm } /> }\n                                        { !isLoading && (\n                                            item.onClick && item.value ?\n                                                <Clickable item={ item }/> :\n                                                valueToText(item.value, item.singular, item.plural)\n                                        ) }\n                                    </TextListItem>\n                                </Fragment>\n                            )) }\n                        </TextList>\n                    </TextContent>) : null}\n                {children}\n            </StackItem>\n        </Stack>\n    );\n};\n\nLoadingCard.propTypes = {\n    title: PropTypes.node.isRequired,\n    isLoading: PropTypes.bool,\n    items: PropTypes.arrayOf(PropTypes.shape({\n        title: PropTypes.node,\n        value: PropTypes.node,\n        onClick: PropTypes.func,\n        size: PropTypes.oneOf(Object.values(SkeletonSize)),\n        plural: PropTypes.string,\n        singular: PropTypes.string\n    })),\n    children: PropTypes.node\n};\n\nLoadingCard.defaultProps = {\n    isLoading: true,\n    items: []\n};\n\nexport default LoadingCard;\n","import PropTypes from 'prop-types';\n\nexport const tagsMapper = (acc, curr) => {\n    let [namespace, keyValue] = curr.split('/');\n    if (!keyValue) {\n        keyValue = namespace;\n        namespace = null;\n    }\n\n    const [key, value = null] = keyValue.split('=');\n    const currTagKey = acc.findIndex(({ category }) => category === namespace);\n    const currTag = acc[currTagKey] || {\n        category: namespace,\n        key: namespace,\n        type: 'tags',\n        values: []\n    };\n    currTag.values.push({\n        name: `${key}${value ? `=${value}` : ''}`,\n        key: `${key}${value ? `=${value}` : ''}`,\n        tagKey: key,\n        value,\n        group: {\n            label: namespace,\n            value: namespace,\n            type: 'checkbox'\n        }\n    });\n    if (!acc[currTagKey]) {\n        acc.push(currTag);\n    }\n\n    return acc;\n};\n\nexport const prepareRows = (rows = [], pagination = {}) => (\n    rows\n    .slice((pagination.page - 1) * pagination.perPage, pagination.page * pagination.perPage)\n);\n\nexport const isDate = (date) => {\n    return !(isNaN(date) && isNaN(Date.parse(date)));\n};\n\nexport const filterRows = (rows = [], activeFilters = {}) => (\n    rows\n    .filter(row => (\n        Object.values(activeFilters).length === 0 ||\n        Object.values(activeFilters)\n        .every(\n            filter => {\n                const rowValue = row[filter.key] && (row[filter.key].sortValue || row[filter.key]);\n                return rowValue && (\n                    Array.isArray(filter.value) ?\n                        filter.value.includes(rowValue) :\n                        rowValue.toLocaleLowerCase().indexOf(filter.value.toLocaleLowerCase()) !== -1\n                );\n            }\n        )\n    ))\n);\n\nexport const generateFilters = (cells = [], filters = [], activeFilters = {}, onChange = () => undefined) => (\n    filters.map((filter, key) => {\n        const activeKey = filter.index || key;\n        const activeLabel = cells[activeKey] && (cells[activeKey].title || cells[activeKey]);\n\n        return ({\n            value: String(activeKey),\n            label: activeLabel,\n            type: filter.type || 'text',\n            filterValues: {\n                id: filter.id || `${activeLabel}-${activeKey}`,\n                onChange: (_e, newFilter) => onChange(activeKey, newFilter, activeLabel),\n                value: activeFilters[activeKey] && activeFilters[activeKey].value,\n                ...filter.options && { items: filter.options }\n            }\n        });\n    })\n);\n\nexport const onDeleteFilter = (deleted = {}, deleteAll = false, activeFilters = {}) => {\n    if (deleteAll) {\n        return {};\n    } else {\n        const { [deleted.key]: workingItem, ...filtersRest } = activeFilters;\n        const newValue = workingItem && Array.isArray(workingItem.value) &&\n            workingItem.value.filter(item => !deleted.chips.find(({ name }) => name === item));\n        const newFilter = workingItem && Array.isArray(workingItem.value) && newValue && newValue.length > 0 ? {\n            [deleted.key]: {\n                ...workingItem,\n                value: newValue\n            }\n        } : {};\n        return {\n            ...filtersRest,\n            ...newFilter\n        };\n    }\n};\n\nexport const extraShape = PropTypes.shape({\n    title: PropTypes.node,\n    value: PropTypes.node,\n    singular: PropTypes.node,\n    plural: PropTypes.node,\n    onClick: PropTypes.func\n});\n"],"names":["DeleteModal","systemToRemove","handleModalToggle","isModalOpen","currentSytems","onConfirm","systemLabel","Array","isArray","length","display_name","variant","title","className","ouiaId","isOpen","onClose","appendTo","document","getElementsByClassName","body","hasGutter","size","isFilled","location","host","onClick","ActiveSystemProp","PropTypes","id","displayName","propTypes","defaultProps","TagWithDialog","count","loadTags","systemId","e","stopPropagation","onTagClick","connect","dispatch","toggleTagModal","undefined","RenderWrapper","Component","cmp","hideLoader","isRbacEnabled","inventoryRef","store","props","usePermissions","hasAccess","isLoading","ref","customRender","TagsModal","customFilters","filterTagsBy","onToggleModal","onApply","getTags","useDispatch","useState","filterBy","setFilterBy","selected","setSelected","perPage","page","statePagination","setStatePagination","showTagDialog","useSelector","entities","entityDetails","pagination","activeSystemTag","entity","allTagsPagination","shallowEqual","loaded","tagModalLoaded","tags","activeTags","filter","tag","Object","values","some","val","includes","slice","allTags","reduce","acc","flatten","map","filters","activeFilters","tagsCount","allTagsTotal","useEffect","fetchTags","fetchAllTags","debouncedFetch","useCallback","debounce","TagModal","tableProps","canSelectAll","rows","key","value","namespace","find","cells","width","toggleModal","label","placeholder","filterValues","onChange","_e","onUpdateData","columns","transforms","cellWidth","onSelect","bulkSelect","valueToText","singular","plural","Clickable","item","target","event","preventDefault","href","window","LoadingCard","items","children","Stack","StackItem","TextContent","Text","component","TextVariants","TextList","TextListVariants","Fragment","TextListItem","T","TextListItemVariants","Skeleton","SkeletonSize","tagsMapper","curr","split","keyValue","currTagKey","findIndex","category","currTag","type","push","name","tagKey","group","prepareRows","isDate","date","isNaN","Date","parse","filterRows","row","every","rowValue","sortValue","toLocaleLowerCase","indexOf","generateFilters","activeKey","index","activeLabel","String","newFilter","options","onDeleteFilter","deleted","deleteAll","workingItem","filtersRest","newValue","chips","extraShape"],"sourceRoot":""}