{"version":3,"sources":["webpack:///./src/AppEntry.js"],"names":["InventoryApp","registry","init","value","getRegistry","Provider","store","getStore","basename","getBaseName","window","location","pathname","propTypes","useLogger","PropTypes","defaultProps"],"mappings":"yQASMA,G,SAAe,WACjB,IAAMC,GAAmCC,UACzC,OAAO,kBAAC,cAAD,CAA0BC,MAAO,CACpCC,YAAa,kBAAMH,KAEnB,kBAAC,EAAAI,SAAD,CAAUC,MAAOL,EAASM,YACtB,kBAAC,gBAAD,CAAQC,UAAUC,QAAYC,OAAOC,SAASC,WAC1C,kBAAC,IAAD,WAMhBZ,EAAaa,UAAY,CACrBC,UAAWC,UAGff,EAAagB,aAAe,CACxBF,WAAW,GAGf","file":"js/412.d22374194f8d5140f0ce.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { init, RegistryContext } from './store';\nimport App from './App';\nimport { getBaseName } from '@redhat-cloud-services/frontend-components-utilities/helpers';\nimport logger from 'redux-logger';\n\nconst InventoryApp = () => {\n    const registry = IS_DEV ? init(logger) : init();\n    return <RegistryContext.Provider value={{\n        getRegistry: () => registry\n    }}>\n        <Provider store={registry.getStore()}>\n            <Router basename={getBaseName(window.location.pathname)}>\n                <App />\n            </Router>\n        </Provider>\n    </RegistryContext.Provider>;\n};\n\nInventoryApp.propTypes = {\n    useLogger: PropTypes.bool\n};\n\nInventoryApp.defaultProps = {\n    useLogger: false\n};\n\nexport default InventoryApp;\n"],"sourceRoot":""}