{"version":3,"file":"js/154.937fec6667c18fae1b46.js","mappings":"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","sources":["webpack:///./src/components/InventoryDetailDrawer/BasicInfo.js","webpack:///./src/components/InventoryDetailDrawer/SystemIssues.js","webpack:///./src/components/InventoryDetail/DetailWrapper.js","webpack:///./src/modules/AsyncInventory.js","webpack:///./src/store/reducers.js","webpack:///./src/store/systemProfileStore.js"],"sourcesContent":["/* eslint-disable react/display-name */\n/* eslint-disable camelcase */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Chip, ChipGroup, Title, Split, SplitItem, Stack, StackItem } from '@patternfly/react-core';\nimport { useSelector } from 'react-redux';\n\nconst BasicInfo = ({ hideInvLink, showTags }) => {\n    const displayName = useSelector(({ entityDetails: { entity } }) => entity?.display_name);\n    const systemId = useSelector(({ entityDetails: { entity } }) => entity?.id);\n    const tags = useSelector(({ entityDetails: { entity } }) => entity?.tags);\n    return <Stack hasGutter>\n        <StackItem>\n            <Split>\n                <SplitItem isFilled>\n                    <Title headingLevel=\"h3\" size='xl'>{ displayName }</Title>\n                </SplitItem>\n                {!hideInvLink && <SplitItem>\n                    <a className='ins-c-entity-detail__inv-link' href={`./insights/inventory/${systemId}`}>Open in Inventory</a>\n                </SplitItem>}\n            </Split>\n        </StackItem>\n        {\n            showTags &&\n            <StackItem>\n                <Split hasGutter>\n                    <SplitItem>\n                        Tags:\n                    </SplitItem>\n                    <SplitItem>\n                        <ChipGroup>\n                            {tags?.length !== 0 ? tags?.map((item, key) => (\n                                <Chip key={key} isReadOnly>\n                                    {item?.namespace && `${item?.namespace}/`}\n                                    {item?.key}\n                                    {item?.value && `=${item?.value}`}\n                                </Chip>\n                            )) : 'No tags'}\n                        </ChipGroup>\n                    </SplitItem>\n                </Split>\n            </StackItem>\n        }\n    </Stack>;\n};\n\nBasicInfo.propTypes = {\n    hideInvLink: PropTypes.bool,\n    showTags: PropTypes.bool\n};\n\nBasicInfo.defaultProps = {\n    hideInvLink: false,\n    showTags: false\n};\n\nexport default BasicInfo;\n","/* eslint-disable react/prop-types */\n/* eslint-disable react/display-name */\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAdvisorData, getComplianceData, getPatchData, getVulnData } from '../../store/actions';\nimport { Title, Level, LevelItem,  Stack, StackItem } from '@patternfly/react-core';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components/Skeleton';\nimport BugIcon from '@patternfly/react-icons/dist/js/icons/bug-icon';\nimport EnhancementIcon from '@patternfly/react-icons/dist/js/icons/enhancement-icon';\nimport SecurityIcon from '@patternfly/react-icons/dist/js/icons/security-icon';\n\nconst SystemIssues = ({ isOpened }) => {\n    const dispatch = useDispatch();\n    const systemId = useSelector(({ entityDetails: { entity } }) => entity?.id);\n    const advisor = useSelector(({ entityDetails: { systemIssues } }) => systemIssues?.advisor);\n    const compliance = useSelector(({ entityDetails: { systemIssues } }) => systemIssues?.compliance);\n    const cve = useSelector(({ entityDetails: { systemIssues } }) => systemIssues?.cve);\n    const patch = useSelector(({ entityDetails: { systemIssues } }) => systemIssues?.patch);\n    useEffect(() => {\n        if (systemId && isOpened) {\n            dispatch(getAdvisorData(systemId));\n            dispatch(getComplianceData(systemId));\n            dispatch(getPatchData(systemId));\n            dispatch(getVulnData(systemId));\n        }\n    }, [systemId, isOpened]);\n\n    return <Stack hasGutter className=\"ins-c-inventory__drawer-system-issues\">\n        <StackItem>\n            <Title headingLevel=\"h4\" size='lg'>Top system issues</Title>\n        </StackItem>\n        <StackItem>\n            <Level>\n                <LevelItem>\n                    <Stack hasGutter>\n                        <StackItem className=\"ins-c-inventory__drawer--title\">\n                            Applicable CVEs\n                        </StackItem>\n                        <StackItem>\n                            {\n                                cve?.isLoaded ?\n                                    <Level hasGutter className=\"ins-c-inventory__drawer-cve\">\n                                        <LevelItem className=\"ins-m-critical\">\n                                            <a href={`/insights/vulnerability/systems/${systemId}?impact=7`}>\n                                                {cve?.critical?.count || 0} critical\n                                            </a>\n                                        </LevelItem>\n                                        <LevelItem className=\"ins-m-important\">\n                                            <a href={`/insights/vulnerability/systems/${systemId}?impact=5`}>\n                                                {cve?.important?.count || 0} important\n                                            </a>\n                                        </LevelItem>\n                                        <LevelItem className=\"ins-m-moderate\">\n                                            <a href={`/insights/vulnerability/systems/${systemId}?impact=4`}>\n                                                {cve?.moderate?.count || 0} moderate\n                                            </a>\n                                        </LevelItem>\n                                        <LevelItem className=\"ins-m-low\">\n                                            <a href={`/insights/vulnerability/systems/${systemId}?impact=2`}>\n                                                {cve?.low?.count || 0} low\n                                            </a>\n                                        </LevelItem>\n                                    </Level> :\n                                    <Skeleton size={ SkeletonSize.md } />\n                            }\n                        </StackItem>\n                    </Stack>\n                </LevelItem>\n                <LevelItem>\n                    <Stack hasGutter>\n                        <StackItem className=\"ins-c-inventory__drawer--title\">\n                            Applicable advisories\n                        </StackItem>\n                        <StackItem>\n                            {\n                                patch?.isLoaded ?\n                                    <Level hasGutter className=\"ins-c-inventory__drawer-patch\">\n                                        <LevelItem>\n                                            <a href={`/insights/patch/systems/${systemId}/?advisory_type=2`}>\n                                                <BugIcon /> {patch?.bug?.count}\n                                            </a>\n                                        </LevelItem>\n                                        <LevelItem className=\"ins-m-moderate\">\n                                            <a href={`/insights/patch/systems/${systemId}/?advisory_type=3`}>\n                                                <SecurityIcon /> {patch?.security?.count}\n                                            </a>\n                                        </LevelItem>\n                                        <LevelItem>\n                                            <a href={`/insights/patch/systems/${systemId}/?advisory_type=1`}>\n                                                <EnhancementIcon /> {patch?.enhancement?.count}\n                                            </a>\n                                        </LevelItem>\n                                    </Level> :\n                                    <Skeleton size={ SkeletonSize.md } />\n                            }\n                        </StackItem>\n                    </Stack>\n                </LevelItem>\n            </Level>\n        </StackItem>\n        <StackItem>\n            {\n                advisor?.isLoaded ?\n                    <span>\n                        <span className=\"ins-m-critical\">\n                            {advisor?.criticalCount?.length || 0} critical\n                        </span> recommendations in <a href={`./insights/advisor/systems/${systemId}`}>Advisor</a>\n                    </span> :\n                    <Skeleton size={ SkeletonSize.md } />\n            }\n        </StackItem>\n        {\n            compliance?.isLoaded ?\n                (compliance?.profiles &&\n                    <span>\n                        System above compliance threshold for <a\n                            href={'./insights/compliance/reports/'}\n                        >\n                            {compliance?.profiles?.length} {compliance?.profiles?.length > 1 ? 'policies' : 'policy'}\n                        </a>\n                    </span>\n                ) :\n                <Skeleton size={ SkeletonSize.md } />\n        }\n    </Stack>;\n};\n\nSystemIssues.propTypes = {\n    isOpened: PropTypes.bool\n};\n\nexport default SystemIssues;\n","import React, { useEffect } from 'react';\nimport {\n    Drawer,\n    DrawerPanelContent,\n    DrawerContent,\n    DrawerContentBody,\n    DrawerPanelBody,\n    DrawerActions,\n    DrawerHead,\n    DrawerCloseButton,\n    Stack,\n    StackItem\n} from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch, useStore } from 'react-redux';\nimport { toggleDrawer, loadEntity } from '../../store/actions';\nimport { BasicInfo, SystemIssues } from '../InventoryDetailDrawer';\nimport FactsInfo from './FactsInfo';\n\nconst DetailWrapper = ({ children, hideInvLink, showTags, Wrapper, className, hasAccess, appName, inventoryId, ...props }) => {\n    const dispatch = useDispatch();\n    const store = useStore();\n    const entity = useSelector(({ entityDetails }) => entityDetails?.entity);\n    const isExpanded = useSelector(({ entityDetails }) => entityDetails?.isToggleOpened);\n    const loaded = useSelector(({ entityDetails }) => entityDetails?.loaded);\n\n    useEffect(() => {\n        if (inventoryId && !entity || !(entity?.id === inventoryId)) {\n            dispatch(loadEntity(inventoryId, { hasItems: true }, { showTags }));\n        }\n    }, [entity, inventoryId]);\n\n    return <Drawer\n        className={`ins-c-inventory__drawer ${className || ''}`}\n        isExpanded={isExpanded}\n        onExpand={() => dispatch(toggleDrawer(true))}\n        {...props}\n    >\n        <DrawerContent\n            panelContent={\n                <DrawerPanelContent>\n                    <DrawerHead>\n                        <BasicInfo hideInvLink={ hideInvLink } showTags={ showTags } />\n                        <DrawerActions>\n                            <DrawerCloseButton onClick={() =>  dispatch(toggleDrawer(false))} />\n                        </DrawerActions>\n                    </DrawerHead>\n                    <DrawerPanelBody>\n                        <Stack className=\"ins-c-inventory__drawer--content\">\n                            <StackItem>\n                                <SystemIssues isOpened={isExpanded} />\n                            </StackItem>\n                            <StackItem isFilled className=\"ins-c-inventory__drawer--facts\">\n                                <FactsInfo entity={entity} loaded={loaded} />\n                                {\n                                    isExpanded &&\n                                    loaded &&\n                                    Wrapper &&\n                                    <Wrapper\n                                        store={store}\n                                        appName={appName}\n                                    />\n                                }\n                            </StackItem>\n                        </Stack>\n                    </DrawerPanelBody>\n                </DrawerPanelContent>\n            }\n        >\n            <DrawerContentBody>\n                {children}\n            </DrawerContentBody>\n        </DrawerContent>\n    </Drawer>;\n};\n\nDetailWrapper.propTypes = {\n    children: PropTypes.any,\n    hideInvLink: PropTypes.bool,\n    showTags: PropTypes.bool,\n    appName: PropTypes.oneOf([\n        'general_information',\n        'advisor',\n        'insights',\n        'compliance',\n        'vulnerabilities',\n        'patch'\n    ]),\n    className: PropTypes.string,\n    Wrapper: PropTypes.elementType,\n    hasAccess: PropTypes.bool,\n    inventoryId: PropTypes.string.isRequired\n};\n\nDetailWrapper.defaultProps = {\n    appName: 'general_information'\n};\n\nexport default DetailWrapper;\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Provider } from 'react-redux';\nimport { Router } from 'react-router-dom';\nimport { RBACProvider } from '@redhat-cloud-services/frontend-components/RBACProvider';\n\nimport * as storeMod from '../store/redux';\nimport * as utils from '../Utilities/index';\nimport * as apiMod from '../api/index';\nimport RenderWrapper from '../Utilities/Wrapper';\nconst { mergeWithDetail, ...rest } = storeMod;\n\nconst AsyncInventory = ({ component, onLoad, store, history, innerRef, ...props }) => {\n    useEffect(() => {\n        onLoad?.({\n            ...rest,\n            ...utils,\n            api: apiMod,\n            mergeWithDetail\n        });\n    }, []);\n\n    return (\n        <RBACProvider appName=\"inventory\">\n            <Provider store={store}>\n                <Router history={history}>\n                    <RenderWrapper\n                        { ...props }\n                        isRbacEnabled\n                        inventoryRef={ innerRef }\n                        store={ store }\n                        cmp={ component } />\n                </Router>\n            </Provider>\n        </RBACProvider>\n    );\n};\n\nAsyncInventory.propTypes = {\n    store: PropTypes.object,\n    onLoad: PropTypes.func,\n    component: PropTypes.elementType.isRequired,\n    history: PropTypes.object,\n    innerRef: PropTypes.shape({\n        current: PropTypes.any\n    })\n};\n\nAsyncInventory.defaultProps = {\n    onLoad: () => undefined\n};\n\nexport default AsyncInventory;\n","import {\n    INVENTORY_ACTION_TYPES,\n    ACTION_TYPES,\n    SELECT_ENTITY,\n    SET_INVENTORY_FILTER,\n    SET_PAGINATION\n} from './action-types';\nimport systemProfileStore from './systemProfileStore';\nimport { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport { mergeArraysByKey } from '@redhat-cloud-services/frontend-components-utilities/helpers';\nimport { notificationsReducer } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport entitiesReducer, { defaultState as entitiesDefault } from './entities';\nimport entityDetailsReducer, { entityDefaultState as entityDefault, updateEntity } from './entityDetails';\nimport groups from './groups';\nimport groupDetail from './groupDetail';\n\nexport { entitiesReducer, entityDetailsReducer };\n\nconst defaultState = { loaded: false, selected: new Map() };\n\nfunction entitiesLoaded(state, { payload }) {\n    return {\n        ...state,\n        rows: mergeArraysByKey([state.rows, payload.results]),\n        entities: mergeArraysByKey([state.entities, payload.results])\n    };\n}\n\nfunction entityLoaded(state) {\n    return {\n        ...state,\n        loaded: true\n    };\n}\n\nfunction entitySelected(state, { payload }) {\n    const selected = state.selected || (new Map());\n    if (payload.selected) {\n        if (Array.isArray(payload.id)) {\n            payload.id.forEach(item => {\n                selected.set(item.id, item);\n            });\n        }\n        else if (payload.id === 0) {\n            state.rows.forEach(row => selected.set(row.id, row));\n        } else {\n            const selectedRow = state.rows && state.rows.find(({ id }) => id === payload.id);\n            selected.set(payload.id, { ...selectedRow || {}, id: payload.id });\n        }\n    } else {\n        if (payload.id === 0) {\n            state.rows.forEach(row => selected.delete(row.id));\n        } else if (payload.id === -1) {\n            selected.clear();\n        } else {\n            selected.delete(payload.id);\n        }\n    }\n\n    return {\n        ...state,\n        selected: new Map(selected)\n    };\n}\n\nfunction entityDeleted(state, { meta }) {\n    const selected = state.selected || (new Map());\n    meta.systems.forEach(id => selected.delete(id));\n\n    return {\n        ...state,\n        selected: new Map(selected)\n    };\n}\n\nfunction onEntitiesLoaded(state, { payload, meta }) {\n    if (meta?.lastDateRequest < state?.lastDateRequest) {\n        return state;\n    }\n\n    return {\n        ...state,\n        rows: mergeArraysByKey([state.rows, payload.results.map(result => {\n            return {\n                ...result,\n                selected: state.selected && state.selected.has(result.id)\n            };\n        })])\n    };\n}\n\nfunction onSetFilter(state, { payload }) {\n    return {\n        ...state,\n        activeFilters: payload.filtersList\n    };\n}\n\nfunction onSetPagination(state, { payload }) {\n    const perPage = parseInt(payload.perPage, 10);\n    const page = parseInt(payload.page, 10);\n    return {\n        ...state,\n        perPage: isNaN(perPage) ? 50 : perPage,\n        page: isNaN(page) ? 1 : page\n    };\n}\n\nlet reducers = {\n    notifications: notificationsReducer,\n    systemProfileStore,\n    groups,\n    groupDetail\n};\n\nexport const tableReducer = applyReducerHash(\n    {\n        [ACTION_TYPES.GET_ENTITIES_FULFILLED]: entitiesLoaded,\n        [INVENTORY_ACTION_TYPES.LOAD_ENTITIES_FULFILLED]: onEntitiesLoaded,\n        [`${ACTION_TYPES.REMOVE_ENTITY}_FULFILLED`]: entityDeleted,\n        [SELECT_ENTITY]: entitySelected,\n        FILTER_SELECT: (state) => ({ ...state, selected: {} }),\n        [SET_INVENTORY_FILTER]: onSetFilter,\n        [SET_PAGINATION]: onSetPagination,\n        [ACTION_TYPES.UPDATE_DISPLAY_NAME_FULFILLED]: updateEntity\n    },\n    defaultState\n);\n\nexport const entitesDetailReducer = () => applyReducerHash(\n    {\n        [INVENTORY_ACTION_TYPES.LOAD_ENTITY_FULFILLED]: entityLoaded\n    },\n    defaultState\n);\n\nexport function mergeWithEntities(additionalReducers = (state) => state, defaultState = {}) {\n    return ({\n        entities: (state, payload) => ({\n            ...additionalReducers({\n                ...applyReducerHash({\n                    ...entitiesReducer\n                }, { ...entitiesDefault, ...defaultState })(state, payload)\n            }, payload)\n        })\n    });\n}\n\nexport function mergeWithDetail(additionalReducers = (state) => state, defaultState = {}) {\n    return ({\n        entityDetails: (state, payload) => ({\n            ...additionalReducers({\n                ...applyReducerHash({\n                    ...entityDetailsReducer\n                }, { ...entityDefault, ...defaultState })(state, payload)\n            }, payload)\n        })\n    });\n}\n\nexport default reducers;\n","import { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport { ACTION_TYPES } from './action-types';\n\nexport const defaultState = { loaded: false };\n\nexport const sizes = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n\n// Kudos to https://stackoverflow.com/a/18650828/2560321\nexport const formatBytes = (bytes) => {\n    if (bytes === 0 || isNaN(Number(bytes))) {\n        return '0 B';\n    }\n\n    const index = Math.floor(Math.log(bytes) / Math.log(1024));\n    return `${parseFloat((bytes / Math.pow(1024, index)).toFixed(2))} ${sizes[index]}`;\n};\n\nexport function systemProfilePending(state) {\n    return {\n        ...state,\n        systemProfile: {\n            loaded: false\n        }\n    };\n}\n\nexport function calculateRepos(repos) {\n    return repos && repos.reduce((acc, curr) => ({\n        ...acc,\n        ...curr.enabled ? {\n            enabled: [...acc.enabled, curr]\n        } : {\n            disabled: [...acc.disabled, curr]\n        }\n    }), { enabled: [], disabled: [] });\n}\n\nexport function calculateInterfaces(interfaces) {\n    return interfaces && interfaces.reduce((acc, curr) => ({\n        interfaces: [...acc.interfaces, curr],\n        ipv4: [...acc.ipv4, ...curr.ipv4_addresses || []].filter(Boolean),\n        ipv6: [...acc.ipv6, ...curr.ipv6_addresses || []].filter(Boolean)\n    }), { interfaces: [], ipv4: [], ipv6: [] });\n}\n\nexport function onSystemProfile(state, { payload: { results } }) {\n    const systemProfile = (results && results[0] && results[0].system_profile) || {};\n    const cloudProviderObj = (results && results[0] && (typeof results[0].system_profile.cloud_provider !== 'undefined'))\n                        && results[0].system_profile.cloud_provider;\n    return {\n        ...state,\n        disabledApps: [\n            ...(cloudProviderObj === 'aws' || cloudProviderObj === 'azure') ? [] : ['ros']\n        ],\n        systemProfile: {\n            loaded: true,\n            ...systemProfile,\n            ramSize: systemProfile.system_memory_bytes && formatBytes(systemProfile.system_memory_bytes),\n            repositories: calculateRepos(systemProfile.yum_repos),\n            network: calculateInterfaces(systemProfile.network_interfaces)\n        }\n    };\n}\n\nexport default applyReducerHash(\n    {\n        [ACTION_TYPES.LOAD_SYSTEM_PROFILE_FULFILLED]: onSystemProfile,\n        [ACTION_TYPES.LOAD_SYSTEM_PROFILE_PENDING]: systemProfilePending\n    },\n    {\n        systemProfile: defaultState\n    }\n);\n"],"names":["BasicInfo","hideInvLink","showTags","displayName","useSelector","entity","entityDetails","display_name","systemId","id","tags","Stack","hasGutter","StackItem","Split","SplitItem","isFilled","Title","headingLevel","size","className","href","ChipGroup","length","map","item","key","Chip","isReadOnly","namespace","value","propTypes","PropTypes","defaultProps","SystemIssues","isOpened","dispatch","useDispatch","advisor","systemIssues","compliance","cve","patch","useEffect","getAdvisorData","getComplianceData","getPatchData","getVulnData","Level","LevelItem","isLoaded","critical","count","important","moderate","low","Skeleton","SkeletonSize","bug","security","enhancement","criticalCount","profiles","DetailWrapper","children","Wrapper","appName","hasAccess","inventoryId","props","store","useStore","isExpanded","isToggleOpened","loaded","loadEntity","hasItems","Drawer","onExpand","toggleDrawer","DrawerContent","panelContent","DrawerPanelContent","DrawerHead","DrawerActions","DrawerCloseButton","onClick","DrawerPanelBody","FactsInfo","DrawerContentBody","mergeWithDetail","storeMod","rest","AsyncInventory","component","onLoad","history","innerRef","utils","api","apiMod","RBACProvider","Provider","Router","isRbacEnabled","inventoryRef","cmp","current","defaultState","selected","Map","entityLoaded","state","reducers","notifications","notificationsReducer","systemProfileStore","groups","groupDetail","tableReducer","applyReducerHash","ACTION_TYPES","payload","rows","mergeArraysByKey","results","entities","INVENTORY_ACTION_TYPES","meta","lastDateRequest","result","has","systems","forEach","delete","SELECT_ENTITY","Array","isArray","set","row","selectedRow","find","clear","SET_INVENTORY_FILTER","activeFilters","filtersList","SET_PAGINATION","perPage","parseInt","page","isNaN","updateEntity","entitesDetailReducer","mergeWithEntities","additionalReducers","entitiesReducer","entitiesDefault","entityDetailsReducer","entityDefault","sizes","formatBytes","bytes","Number","index","Math","floor","log","parseFloat","pow","toFixed","systemProfilePending","systemProfile","calculateRepos","repos","reduce","acc","curr","enabled","disabled","calculateInterfaces","interfaces","ipv4","ipv4_addresses","filter","Boolean","ipv6","ipv6_addresses","onSystemProfile","system_profile","cloudProviderObj","cloud_provider","disabledApps","ramSize","system_memory_bytes","repositories","yum_repos","network","network_interfaces"],"sourceRoot":""}