{"version":3,"file":"js/3161.1658935282869.7d468cc007f6ec4bdbe3.js","mappings":"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","sources":["webpack:///./src/Utilities/DeleteModal.js","webpack:///./src/Utilities/TagWithDialog.js","webpack:///./src/Utilities/Wrapper.js","webpack:///./src/Utilities/constants.js","webpack:///./src/Utilities/TagsModal.js","webpack:///./src/api/api.js","webpack:///./src/api/systemIssues.js","webpack:///./src/store/action-types.js","webpack:///./src/store/inventory-actions.js","webpack:///./src/store/system-issues-actions.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    ClipboardCopy,\n    Modal,\n    Split,\n    SplitItem,\n    Stack,\n    StackItem,\n    Level,\n    LevelItem,\n    Button\n} from '@patternfly/react-core';\n\nimport ExclamationTriangleIcon from  '@patternfly/react-icons/dist/js/icons/exclamation-triangle-icon';\n\nconst DeleteModal = ({ handleModalToggle, isModalOpen, currentSytems, onConfirm }) => {\n    let systemToRemove;\n    let systemLabel = 'system';\n    if (Array.isArray(currentSytems)) {\n        systemToRemove = currentSytems.length === 1 ? currentSytems[0].display_name : `${currentSytems.length} systems`;\n        systemLabel = currentSytems.length === 1 ? systemLabel : 'systems';\n    } else {\n        systemToRemove = currentSytems.display_name;\n    }\n\n    return <Modal\n        variant=\"small\"\n        title=\"Remove from inventory\"\n        className=\"ins-c-inventory__table--remove\"\n        ouiaId=\"inventory-delete-modal\"\n        isOpen={isModalOpen}\n        onClose={() => handleModalToggle(false)}\n        appendTo={document.getElementsByClassName('inventory')[0] || document.body}\n    >\n        <Split hasGutter>\n            <SplitItem><ExclamationTriangleIcon size=\"xl\" className=\"ins-m-alert\" /></SplitItem>\n            <SplitItem isFilled>\n                <Stack hasGutter>\n                    <StackItem>\n                        {systemToRemove} will be removed from\n                                    all {location.host} applications and services. You need to re-register\n                        the {systemLabel} to add it back to your inventory.\n                    </StackItem>\n                    <StackItem>\n                        To disable the daily upload for this {systemLabel}, use the following command:\n                    </StackItem>\n                    <StackItem>\n                        <ClipboardCopy>insights-client --unregister</ClipboardCopy>\n                    </StackItem>\n                </Stack>\n            </SplitItem>\n        </Split>\n        <Level hasGutter>\n            <LevelItem>\n                <Button\n                    variant=\"danger\"\n                    ouiaId=\"confirm-inventory-delete\"\n                    onClick={onConfirm}\n                >\n                    Remove\n                </Button>\n                <Button\n                    variant=\"link\"\n                    ouiaId=\"cancel-inventory-delete\"\n                    onClick={() => handleModalToggle(false)}\n                >\n                    Cancel\n                </Button>\n            </LevelItem>\n        </Level>\n    </Modal>;\n};\n\nconst ActiveSystemProp = PropTypes.shape({\n    id: PropTypes.string,\n    displayName: PropTypes.string\n});\n\nDeleteModal.propTypes = {\n    isModalOpen: PropTypes.bool,\n    currentSytems: PropTypes.oneOfType([ActiveSystemProp, PropTypes.arrayOf(ActiveSystemProp)]),\n    handleModalToggle: PropTypes.func,\n    onConfirm: PropTypes.func\n};\n\nDeleteModal.defaultProps = {\n    isModalOpen: false,\n    currentSytems: {},\n    handleModalToggle: () => undefined,\n    onConfirm: () => undefined\n};\n\nexport default DeleteModal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { TagCount } from '@redhat-cloud-services/frontend-components/TagCount';\nimport { loadTags, toggleTagModal } from '../store/actions';\n\nconst TagWithDialog = ({ count, loadTags, systemId }) => (\n    <span\n        onClick={(e) => e.stopPropagation()}\n        className=\"ins-c-inventory__list-tags\"\n        data-ouia-component-id={`${systemId}-tag-button`}\n    >\n        <TagCount count={count} onTagClick={ () => loadTags(systemId, count) } />\n    </span>\n);\n\nTagWithDialog.propTypes = {\n    count: PropTypes.number,\n    loadTags: PropTypes.func,\n    systemId: PropTypes.string\n};\n\nconst dispatchToProps = (dispatch) => ({\n    loadTags: (systemId, count) => {\n        if (systemId) {\n            dispatch(toggleTagModal(true));\n            dispatch(loadTags(systemId, undefined, undefined, count));\n        }\n    }\n});\n\nexport default connect(() => ({}), dispatchToProps)(TagWithDialog);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { usePermissions } from '@redhat-cloud-services/frontend-components-utilities/RBACHook';\nimport { Spinner } from '@patternfly/react-core';\n\nconst RenderWrapper = ({ cmp: Component, hideLoader, isRbacEnabled, inventoryRef, store, ...props }) => {\n    const { hasAccess, isLoading } = usePermissions('inventory', [\n        'inventory:*:*',\n        'inventory:*:read',\n        'inventory:hosts:read'\n    ], true);\n    return (\n        (isLoading && !hideLoader) ?\n            <Spinner /> :\n            <Component\n                {...props}\n                { ...inventoryRef && {\n                    ref: inventoryRef\n                }}\n                hasAccess={isRbacEnabled ? hasAccess : true}\n                store={ store }\n            />\n    );\n};\n\nRenderWrapper.propTypes = {\n    cmp: PropTypes.any,\n    inventoryRef: PropTypes.any,\n    store: PropTypes.object,\n    customRender: PropTypes.bool,\n    isRbacEnabled: PropTypes.bool,\n    hideLoader: PropTypes.bool\n};\n\nexport default RenderWrapper;\n","import { createContext } from 'react';\nimport { loadEntities } from '../store/actions';\nexport const TEXT_FILTER = 'hostname_or_id';\nexport const TEXTUAL_CHIP = 'textual';\nexport const TAG_CHIP = 'tags';\nexport const STALE_CHIP = 'staleness';\nexport const REGISTERED_CHIP = 'registered_with';\nexport const OS_CHIP = 'operating_system';\nexport const staleness = [\n    { label: 'Fresh', value: 'fresh' },\n    { label: 'Stale', value: 'stale' },\n    { label: 'Stale warning', value: 'stale_warning' }\n];\nexport const registered = [\n    { label: 'insights-client', value: 'puptoo', idName: 'Insights id', idValue: 'insights_id' },\n    { label: 'subscription-manager', value: 'rhsm-conduit',\n        idName: 'Subscription manager id', idValue: 'subscription_manager_id' },\n    { label: 'Satellite/Discovery', value: 'yupana' },\n    { label: 'insights-client not connected', value: '!puptoo' }\n];\nexport const InventoryContext = createContext({});\nexport const defaultFilters = {\n    staleFilter: ['fresh', 'stale']\n};\n\nexport const operatingSystems = [\n    {\n        label: 'RHEL 9.0',\n        value: '9.0'\n    },\n    {\n        label: 'RHEL 8.6',\n        value: '8.6'\n    },\n    {\n        label: 'RHEL 8.5',\n        value: '8.5'\n    },\n    {\n        label: 'RHEL 8.4',\n        value: '8.4'\n    },\n    {\n        label: 'RHEL 8.3',\n        value: '8.3'\n    },\n    {\n        label: 'RHEL 8.2',\n        value: '8.2'\n    },\n    {\n        label: 'RHEL 8.1',\n        value: '8.1'\n    },\n    {\n        label: 'RHEL 8.0',\n        value: '8.0'\n    },\n    {\n        label: 'RHEL 7.9',\n        value: '7.9'\n    },\n    {\n        label: 'RHEL 7.8',\n        value: '7.8'\n    },\n    {\n        label: 'RHEL 7.7',\n        value: '7.7'\n    },\n    {\n        label: 'RHEL 7.6',\n        value: '7.6'\n    },\n    {\n        label: 'RHEL 7.5',\n        value: '7.5'\n    },\n    {\n        label: 'RHEL 7.4',\n        value: '7.4'\n    },\n    {\n        label: 'RHEL 7.3',\n        value: '7.3'\n    },\n    {\n        label: 'RHEL 7.2',\n        value: '7.2'\n    },\n    {\n        label: 'RHEL 7.1',\n        value: '7.1'\n    },\n    {\n        label: 'RHEL 7.0',\n        value: '7.0'\n    },\n    {\n        label: 'RHEL 6.10',\n        value: '6.10'\n    },\n    {\n        label: 'RHEL 6.9',\n        value: '6.9'\n    },\n    {\n        label: 'RHEL 6.8',\n        value: '6.8'\n    },\n    {\n        label: 'RHEL 6.7',\n        value: '6.7'\n    },\n    {\n        label: 'RHEL 6.6',\n        value: '6.6'\n    },\n    {\n        label: 'RHEL 6.5',\n        value: '6.5'\n    },\n    {\n        label: 'RHEL 6.4',\n        value: '6.4'\n    },\n    {\n        label: 'RHEL 6.3',\n        value: '6.3'\n    },\n    {\n        label: 'RHEL 6.2',\n        value: '6.2'\n    },\n    {\n        label: 'RHEL 6.1',\n        value: '6.1'\n    },\n    {\n        label: 'RHEL 6.0',\n        value: '6.0'\n    }\n];\n\nexport function filterToGroup(filter = [], valuesKey = 'values') {\n    return filter.reduce((accGroup, group) => ({\n        ...accGroup,\n        [group.key]: group[valuesKey].reduce((acc, curr) => ({ ...acc, [curr.key]: {\n            isSelected: true,\n            group: curr.group,\n            item: {\n                meta: {\n                    tag: {\n                        key: curr.tagKey,\n                        value: curr.value\n                    }\n                }\n            }\n        } }), {})\n    }), {});\n}\n\nexport const arrayToSelection = (selected) => selected.reduce((acc, { cells: [key, value, namespace] }) => ({\n    ...acc,\n    [namespace]: {\n        ...acc[namespace?.title || namespace],\n        [key?.title || key]: {\n            isSelected: true,\n            group: { value: namespace?.title || namespace, label: namespace?.title || namespace },\n            item: {\n                value: key?.title || key,\n                meta: { tag: { key: key?.title || key, value: value?.title || value } }\n            }\n        }\n    }\n}), {});\n\nexport function reduceFilters(filters = []) {\n    return filters.reduce((acc, oneFilter) => {\n        if (oneFilter.value === TEXT_FILTER) {\n            return { ...acc, textFilter: oneFilter.filter };\n        } else if ('tagFilters' in oneFilter) {\n            return {\n                ...acc,\n                tagFilters: filterToGroup(oneFilter.tagFilters)\n            };\n        }\n\n        const foundKey = ['staleFilter', 'registeredWithFilter', 'osFilter', '']\n        .find(item => Object.keys(oneFilter).includes(item));\n\n        return {\n            ...acc,\n            ...foundKey && { [foundKey]: oneFilter[foundKey] }\n        };\n    }, {\n        textFilter: '',\n        tagFilters: {},\n        ...defaultFilters\n    });\n}\n\nexport const loadSystems = (options, showTags, getEntities) => {\n    const limitedItems = options?.items?.length > options.per_page ? options?.items?.slice(\n        (options?.page - 1) * options.per_page, options?.page * options.per_page\n    ) : options?.items;\n\n    const config = {\n        ...options.hasItems && {\n            sortBy: options?.sortBy?.key,\n            orderDirection: options?.sortBy?.direction?.toUpperCase()\n        },\n        ...options,\n        filters: options?.filters || options?.activeFilters,\n        orderBy: options?.orderBy || options?.sortBy?.key,\n        orderDirection: options?.orderDirection?.toUpperCase() || options?.sortBy?.direction?.toUpperCase(),\n        ...limitedItems?.length > 0 && {\n            itemsPage: options?.page,\n            page: 1\n        }\n    };\n\n    return loadEntities(limitedItems, config, { showTags }, getEntities);\n};\n\nexport const reloadWrapper = (event, callback) => {\n    event.payload.then(data => {\n        callback();\n        return data;\n    });\n\n    return event;\n};\n\nexport const isEmpty = (check) => !check || check?.length === 0;\n\nexport const generateFilter = (status, source, tagsFilter, filterbyName, operatingSystem) => ([\n    !isEmpty(status) && {\n        staleFilter: Array.isArray(status) ? status : [status]\n    },\n    !isEmpty(tagsFilter) && {\n        tagFilters: Array.isArray(tagsFilter) ? tagsFilter : [tagsFilter]\n    },\n    !isEmpty(source) && {\n        registeredWithFilter: Array.isArray(source) ? source : [source]\n    },\n    !isEmpty(filterbyName) && {\n        value: 'hostname_or_id',\n        filter: Array.isArray(filterbyName) ? filterbyName[0] : filterbyName\n    },\n    (!isEmpty(status) || !isEmpty(tagsFilter) || !isEmpty(filterbyName)) && isEmpty(source) && {\n        registeredWithFilter: []\n    },\n    (!isEmpty(source) || !isEmpty(tagsFilter) || !isEmpty(filterbyName)) && isEmpty(status) && {\n        staleFilter: []\n    },\n    !isEmpty(operatingSystem) && {\n        osFilter: Array.isArray(operatingSystem) ? operatingSystem : [operatingSystem]\n    }\n].filter(Boolean));\n","import React, { useState, useCallback, useEffect } from 'react';\nimport { useSelector, useDispatch, shallowEqual } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { toggleTagModal, fetchAllTags } from '../store/actions';\nimport { TagModal } from '@redhat-cloud-services/frontend-components/TagModal';\nimport { cellWidth } from '@patternfly/react-table';\nimport debounce from 'lodash/debounce';\nimport flatten from 'lodash/flatten';\n\nconst TagsModal = ({\n    customFilters,\n    filterTagsBy,\n    onToggleModal,\n    onApply,\n    getTags\n}) => {\n    const dispatch = useDispatch();\n    const [filterBy, setFilterBy] = useState('');\n    const [selected, setSelected] = useState([]);\n    const [statePagination, setStatePagination] = useState({\n        perPage: 10,\n        page: 1\n    });\n\n    const showTagDialog = useSelector(({ entities, entityDetails }) => (entities || entityDetails)?.showTagDialog);\n\n    const pagination = useSelector(({ entities, entityDetails }) => {\n        if (entities?.activeSystemTag || entityDetails?.entity) {\n            return statePagination;\n        }\n\n        return entities?.allTagsPagination || statePagination;\n    }, shallowEqual);\n\n    const loaded = useSelector(({ entities, entityDetails }) => entities?.tagModalLoaded || entityDetails?.tagModalLoaded);\n\n    const activeSystemTag = useSelector(({ entities, entityDetails }) => entities?.activeSystemTag || entityDetails?.entity);\n    const tags = useSelector(({ entities, entityDetails }) => {\n        const activeTags = entities?.activeSystemTag?.tags || entityDetails?.entity?.tags;\n        if (activeTags) {\n            return activeTags?.filter(\n                (tag) => Object.values(tag).some((val) => val?.includes(filterBy))\n            ).slice(statePagination?.perPage * (statePagination?.page - 1), statePagination?.perPage * statePagination?.page);\n        }\n\n        return entities?.allTags?.reduce((acc, { tags }) => ([\n            ...acc,\n            ...flatten(tags.map(({ tag }) => tag))\n        ]), []);\n    });\n    const filters = useSelector(({ entities, entityDetails }) => (entities || entityDetails)?.activeFilters);\n    const tagsCount = useSelector(({ entities, entityDetails }) => {\n        const activeTags = (entities?.activeSystemTag?.tags || entityDetails?.entity?.tags)?.filter(\n            (tag) => Object.values(tag).some((val) => val?.includes(filterBy))\n        );\n        return activeTags ? activeTags.length : entities?.allTagsTotal;\n    });\n\n    useEffect(() => {\n        setFilterBy(filterTagsBy);\n    }, [filterTagsBy]);\n\n    const fetchTags = (pagination, filterBy) => {\n        if (!activeSystemTag) {\n            dispatch(fetchAllTags(filterBy, { ...customFilters, pagination, filters }, getTags));\n        } else {\n            setStatePagination(() => pagination);\n        }\n    };\n\n    const debouncedFetch = useCallback(debounce(fetchTags, 800), [activeSystemTag]);\n\n    return (\n        <TagModal\n            className=\"ins-c-inventory__tags-modal\"\n            tableProps={{\n                canSelectAll: false\n            }}\n            {...loaded && {\n                loaded,\n                pagination: {\n                    ...pagination,\n                    count: tagsCount\n                },\n                rows: tags?.map(({ key, value, namespace }) => ({\n                    id: `${namespace}/${key}=${value}`,\n                    selected: selected.find(({ id }) => id === `${namespace}/${key}=${value}`),\n                    cells: [key, value, namespace]\n                })) || []\n            }}\n            loaded={ loaded }\n            width=\"auto\"\n            isOpen={ showTagDialog }\n            toggleModal={() => {\n                setSelected([]);\n                setFilterBy('');\n                onToggleModal();\n                dispatch(toggleTagModal(false));\n            }}\n            filters={[\n                {\n                    label: 'Tags filter',\n                    placeholder: 'Filter tags',\n                    value: 'tags-filter',\n                    filterValues: {\n                        value: filterBy,\n                        onChange: (_e, value) => {\n                            debouncedFetch(pagination, value);\n                            setFilterBy(value);\n                        }\n                    }\n                }\n            ]}\n            onUpdateData={ (pagination) => fetchTags(pagination, filterBy) }\n            columns={ [\n                { title: 'Name' },\n                { title: 'Value', transforms: [cellWidth(30)] },\n                { title: 'Tag source', transforms: [cellWidth(30)] }\n            ] }\n            {...!activeSystemTag && {\n                onSelect: (selected) => setSelected(selected),\n                selected,\n                onApply: () => onApply && onApply(selected)\n            }}\n            bulkSelect={{ id: 'bulk-select-tags' }}\n            title={ activeSystemTag ?\n                `${activeSystemTag.display_name} (${tagsCount})` :\n                `All tags in inventory (${tagsCount})`\n            }\n        />\n    );\n};\n\nTagsModal.propTypes = {\n    onApply: PropTypes.func,\n    onToggleModal: PropTypes.func,\n    filterTagsBy: PropTypes.string,\n    customFilters: PropTypes.shape({\n        tags: PropTypes.oneOfType([\n            PropTypes.object,\n            PropTypes.arrayOf(PropTypes.string)\n        ])\n    }),\n    getTags: PropTypes.func\n};\n\nTagsModal.defaultProps = {\n    filterTagsBy: '',\n    onToggleModal: () => undefined\n};\n\nexport default TagsModal;\n","import 'abortcontroller-polyfill/dist/polyfill-patch-fetch';\nexport const INVENTORY_API_BASE = '/api/inventory/v1';\nimport flatMap from 'lodash/flatMap';\n\nimport instance from '@redhat-cloud-services/frontend-components-utilities/interceptors';\nimport { generateFilter, mergeArraysByKey } from '@redhat-cloud-services/frontend-components-utilities/helpers';\nimport { HostsApi, TagsApi } from '@redhat-cloud-services/host-inventory-client';\nimport { defaultFilters } from '../Utilities/constants';\n\nexport { instance };\nexport const hosts = new HostsApi(undefined, INVENTORY_API_BASE, instance);\nexport const tags = new TagsApi(undefined, INVENTORY_API_BASE, instance);\n\nexport const getEntitySystemProfile = (item) => hosts.apiHostGetHostSystemProfileById([item]);\n\n/* eslint camelcase: off */\nexport const mapData = ({ facts = {}, ...oneResult }) => ({\n    ...oneResult,\n    rawFacts: facts,\n    facts: {\n        ...facts.reduce?.((acc, curr) => ({ ...acc, [curr.namespace]: curr.facts }), {}),\n        ...flatMap(facts, (oneFact => Object.values(oneFact)))\n        .map(item => typeof item !== 'string' ? ({\n            ...item,\n            // eslint-disable-next-line camelcase\n            os_release: item.os_release || item.release,\n            // eslint-disable-next-line camelcase\n            display_name: item.display_name || item.fqdn || item.id\n        }) : item)\n        .reduce(\n            (acc, curr) => ({ ...acc, ...(typeof curr !== 'string') ? curr : {} }), {}\n        )\n    }\n});\n\nexport const mapTags = (data = { results: [] }, { orderBy, orderDirection } = {}) => {\n    if (data.results.length > 0) {\n        return hosts.apiHostGetHostTags(data.results.map(({ id }) => id), data.per_page, 1, orderBy, orderDirection)\n        .then(({ results: tags }) => ({\n            ...data,\n            results: data.results.map(row => ({ ...row, tags: tags[row.id] || [] }))\n        }))\n        .catch(() => ({\n            ...data,\n            results: data.results.map(row => ({\n                ...row,\n                tags: []\n            }))\n        }));\n    }\n\n    return data;\n};\n\nexport const constructTags = (tagFilters) => {\n    return flatMap(\n        tagFilters,\n        ({ values, category: namespace }) => values.map(({ value: tagValue, tagKey }) => (\n            `${namespace ? `${namespace}/` : ''}${tagKey}${tagValue ? `=${tagValue}` : ''}`\n        ))\n    ) || '';\n};\n\nexport const calculateSystemProfile = (osFilter) => {\n    let systemProfile = {};\n    const osFilterValues = Array.isArray(osFilter) ? osFilter : Object.values(osFilter || {})\n    .flatMap((majorOsVersion) => Object.keys(majorOsVersion));\n\n    if (osFilterValues?.length > 0) {\n        systemProfile.operating_system = {\n            RHEL: {\n                version: {\n                    eq: osFilterValues\n                }\n            }\n        };\n    }\n\n    return generateFilter({ system_profile: systemProfile });\n};\n\nexport const filtersReducer = (acc, filter = {}) => ({\n    ...acc,\n    ...filter.value === 'hostname_or_id' && { hostnameOrId: filter.filter },\n    ...'tagFilters' in filter && { tagFilters: filter.tagFilters },\n    ...'staleFilter' in filter && { staleFilter: filter.staleFilter },\n    ...'registeredWithFilter' in filter && { registeredWithFilter: filter.registeredWithFilter },\n    ...'osFilter' in filter && { osFilter: filter.osFilter }\n});\n\nexport async function getEntities(items, {\n    controller,\n    hasItems,\n    filters,\n    per_page: perPage,\n    page,\n    orderBy,\n    orderDirection,\n    fields = { system_profile: ['operating_system'] },\n    ...options\n}, showTags) {\n    if (hasItems && items.length > 0) {\n        let data = await hosts.apiHostGetHostById(\n            items,\n            undefined,\n            undefined,\n            undefined,\n            undefined,\n            undefined,\n            { cancelToken: controller && controller.token }\n        );\n\n        if (fields && Object.keys(fields).length) {\n            try {\n                const result = await hosts.apiHostGetHostSystemProfileById(\n                    items,\n                    undefined,\n                    undefined,\n                    undefined,\n                    undefined,\n                    undefined,\n                    undefined,\n                    {\n                        cancelToken: controller && controller.token,\n                        query: generateFilter(fields, 'fields')\n                    }\n                );\n\n                data = {\n                    ...data,\n                    results: mergeArraysByKey([\n                        data?.results,\n                        result?.results || []\n                    ], 'id')\n                };\n            } catch (e) {\n                console.error(e); // eslint-disable-line\n            }\n        }\n\n        data = showTags ? await mapTags(data) : data;\n\n        data = {\n            ...data,\n            filters,\n            results: data.results.map(result => mapData({\n                ...result,\n                display_name: result.display_name || result.fqdn || result.id\n            }))\n        };\n\n        return data;\n    } else if (!hasItems) {\n        return hosts.apiHostGetHostList(\n            undefined,\n            undefined,\n            filters.hostnameOrId,\n            undefined,\n            undefined,\n            perPage,\n            page,\n            orderBy,\n            orderDirection,\n            filters.staleFilter,\n            [\n                ...constructTags(filters.tagFilters),\n                ...options.tags || []\n            ],\n            filters?.registeredWithFilter,\n            undefined,\n            undefined,\n            {\n                cancelToken: controller && controller.token,\n                query: {\n                    ...(options.filter && Object.keys(options.filter).length && generateFilter(options.filter)),\n                    ...(calculateSystemProfile(filters.osFilter)),\n                    ...(fields && Object.keys(fields).length && generateFilter(fields, 'fields'))\n                }\n            }\n        )\n        .then((data) => showTags ? mapTags(data, { orderBy, orderDirection }) : data)\n        .then(({ results = [], ...data } = {}) => ({\n            ...data,\n            filters,\n            results: results.map(result => mapData({\n                ...result,\n                display_name: result.display_name || result.fqdn || result.id\n            }))\n        }));\n    }\n\n    return {\n        page,\n        per_page: perPage,\n        results: []\n    };\n}\n\nexport function getTags(systemId, search, { pagination } = { pagination: {} }) {\n    return hosts.apiHostGetHostTags(\n        systemId,\n        pagination.perPage || 10,\n        pagination.page || 1,\n        undefined,\n        undefined,\n        search\n    );\n}\n\nexport function getAllTags(search, { filters, pagination, ...options } = { pagination: {} }) {\n    const {\n        tagFilters,\n        staleFilter,\n        registeredWithFilter,\n        osFilter,\n        hostnameOrId\n    } = filters ? filters.reduce(filtersReducer, defaultFilters) : defaultFilters;\n    return tags.apiTagGetTags(\n        [\n            ...tagFilters ? constructTags(tagFilters) : [],\n            ...options.tags || []\n        ],\n        'tag',\n        'ASC',\n        (pagination && pagination.perPage) || 10,\n        (pagination && pagination.page) || 1,\n        staleFilter,\n        search || hostnameOrId,\n        registeredWithFilter,\n        undefined,\n        {\n            query: {\n                ...(calculateSystemProfile(osFilter))\n            }\n        }\n    );\n}\n","import instance from '@redhat-cloud-services/frontend-components-utilities/interceptors';\nexport const systemIssuesInstance = instance;\n\nexport const cves = async (systemId) => {\n    try {\n        const [low, moderate, important, critical] = await Promise.all([2, 4, 5, 7].map((impact) => (\n            instance.get(\n                `/api/vulnerability//v1/systems/${systemId}/cves?page=1&page_size=1&impact=${impact}`\n            )\n        )));\n        return { low, moderate, important, critical };\n    } catch (_e) {\n        return {};\n    }\n};\n\nexport const patch = async (systemId) => {\n    try {\n        return await instance.get(`/api/patch/v1/systems/${systemId}`);\n    } catch (_e) {\n        return {};\n    }\n};\n\nexport const advisor = async (systemId) => {\n    try {\n        return await instance.get(`/api/insights/v1/system/${systemId}/reports/`);\n    } catch (_e) {\n        return {};\n    }\n};\n\nexport const compliance = async (systemId) => {\n    const query = `query System($systemId: String!) {\n        system(id: $systemId) {\n            id\n            name\n            profiles {\n                id\n                name\n                refId\n                compliant\n                rulesFailed\n                rulesPassed\n                lastScanned\n                score\n                __typename\n            }\n            __typename\n        }\n    }`;\n    try {\n        return await instance.post('/api/compliance/graphql', {\n            operationName: 'System',\n            query,\n            variables: {\n                systemId\n            }\n        });\n    } catch (_e) {\n        return {};\n    }\n};\n","import keyBy from 'lodash/keyBy';\n\nconst makeActions = (actions) => {\n    return actions?.reduce?.((acc, curr) => ({\n        ...acc,\n        [curr]: curr,\n        [`${curr}_PENDING`]: `${curr}_PENDING`,\n        [`${curr}_FULFILLED`]: `${curr}_FULFILLED`,\n        [`${curr}_REJECTED`]: `${curr}_REJECTED`\n    }), {});\n};\n\nconst actions = [\n    'ALERT_ADD',\n    'ALERT_DISMISS',\n    'REMOVE_ENTITY'\n];\n\nexport const asyncActions = [\n    'GET_ENTITIES',\n    'GET_ENTITY',\n    'UPDATE_DISPLAY_NAME',\n    'LOAD_WRITE_PERMISSIONS',\n    'LOAD_SYSTEM_PROFILE',\n    'SET_ANSIBLE_HOST'\n];\n\nexport const asyncInventory = [\n    'LOAD_ENTITIES',\n    'LOAD_ENTITY',\n    'REMOVE_ENTITY',\n    'LOAD_SYSTEM_PROFILE',\n    'SET_DISPLAY_NAME',\n    'SET_ANSIBLE_HOST',\n    'LOAD_TAGS',\n    'ALL_TAGS'\n];\n\nexport const systemIssues = [\n    'LOAD_ADVISOR_RECOMMENDATIONS',\n    'LOAD_APPLICABLE_CVES',\n    'LOAD_APPLICABLE_ADVISORIES',\n    'LOAD_COMPLIANCE_POLICIES'\n];\n\nexport const ACTION_TYPES = { ...keyBy(actions, k => k), ...makeActions(asyncActions), ...makeActions(asyncInventory) };\nexport const INVENTORY_ACTION_TYPES = makeActions(asyncInventory);\nexport const SYSTEM_ISSUE_TYPES = makeActions(systemIssues);\n\nexport const CLEAR_NOTIFICATIONS = '@@INSIGHTS-CORE/NOTIFICATIONS/CLEAR_NOTIFICATIONS';\nexport const SELECT_ENTITY = 'SELECT_ENTITY';\nexport const SET_INVENTORY_FILTER = 'SET_INVENTORY_FILTER';\nexport const SET_PAGINATION = 'SET_PAGINATION';\nexport const SET_DISPLAY_NAME = 'SET_DISPLAY_NAME';\nexport const SET_ANSIBLE_HOST = 'SET_ANSIBLE_HOST';\n\nexport const UPDATE_ENTITIES = 'UPDATE_ENTITIES';\nexport const CHANGE_SORT = 'CHANGE_SORT';\nexport const FILTER_ENTITIES = 'FILTER_ENTITIES';\nexport const APPLICATION_SELECTED = 'APPLICATION_SELECTED';\nexport const SHOW_ENTITIES = 'SHOW_ENTITIES';\nexport const FILTER_SELECT = 'FILTER_SELECT';\nexport const ENTITIES_LOADING = 'ENTITIES_LOADING';\nexport const CLEAR_FILTERS = 'CLEAR_FILTERS';\nexport const TOGGLE_TAG_MODAL = 'TOGGLE_TAG_MODAL';\nexport const CONFIG_CHANGED = 'CONFIG_CHANGED';\nexport const TOGGLE_DRAWER = 'TOGGLE_INVENTORY_DRAWER';\n","import {\n    ACTION_TYPES,\n    SELECT_ENTITY,\n    CHANGE_SORT,\n    FILTER_ENTITIES,\n    APPLICATION_SELECTED,\n    FILTER_SELECT,\n    UPDATE_ENTITIES,\n    ENTITIES_LOADING,\n    CLEAR_FILTERS,\n    TOGGLE_TAG_MODAL,\n    CONFIG_CHANGED,\n    TOGGLE_DRAWER\n} from './action-types';\nimport {\n    getEntities as defaultGetEntities,\n    getEntitySystemProfile,\n    hosts,\n    getAllTags as defaultGetAllTags,\n    getTags,\n    filtersReducer\n} from '../api';\nimport { defaultFilters } from '../Utilities/constants';\n\nexport const loadEntities = (items = [], { filters, ...config }, { showTags } = {}, getEntities = defaultGetEntities) => {\n    const itemIds = items.reduce((acc, curr) => (\n        [\n            ...acc,\n            curr && typeof curr === 'string' ? curr : curr.id\n        ]\n    ), []).filter(Boolean);\n\n    const isFilterDisabled = (name) => config.hideFilters?.[name] ||\n    (config.hideFilters?.all && config.hideFilters?.[name] !== false);\n\n    const updatedFilters = filters ? filters.reduce(filtersReducer, {\n        ...defaultFilters,\n        ...filters.length === 0 && { registeredWithFilter: [] },\n        ...(isFilterDisabled('stale') && { staleFilter: undefined }),\n        ...(isFilterDisabled('registeredWith') && { registeredWithFilter: undefined }),\n        ...(isFilterDisabled('operating_system') && { osFilter: undefined })\n    }) : { ...defaultFilters,\n        ...(isFilterDisabled('stale') && { staleFilter: undefined }),\n        ...(isFilterDisabled('registeredWith') && { registeredWithFilter: undefined }),\n        ...(isFilterDisabled('operating_system') && { osFilter: undefined })\n    };\n\n    const orderBy = config.orderBy || 'updated';\n    const orderDirection = config.orderDirection || 'DESC';\n\n    const lastDateRequest = Date.now();\n\n    return {\n        type: ACTION_TYPES.LOAD_ENTITIES,\n        payload: getEntities(itemIds, {\n            filters: updatedFilters,\n            ...config,\n            orderBy,\n            orderDirection\n        }, showTags, defaultGetEntities).then(({ results, ...data }) => ({\n            ...data,\n            filters,\n            sortBy: { key: orderBy, direction: orderDirection },\n            results: items.length > 0 ? items.map((item) => ({\n                ...item.id ? item : { id: item },\n                ...results.find(({ id }) => id === item || id === item.id) || {}\n            })) : results,\n            page: config.page || (data?.page),\n            // eslint-disable-next-line camelcase\n            per_page: config.per_page || (data?.per_page),\n            hideFilters: config.hideFilters\n        })),\n        meta: {\n            showTags,\n            lastDateRequest\n        }\n    };\n};\n\nexport const updateEntities = (items = []) => ({\n    type: UPDATE_ENTITIES,\n    payload: {\n        results: items\n    }\n});\n\nexport const filterSelect = (selectedItem) => ({\n    type: FILTER_SELECT,\n    payload: selectedItem\n});\n\nexport const loadEntity = (id, config, { showTags }) => ({\n    type: ACTION_TYPES.LOAD_ENTITY,\n    payload: defaultGetEntities(id, config, showTags),\n    meta: {\n        showTags\n    }\n});\n\nexport const selectEntity = (id, selected) => ({\n    type: SELECT_ENTITY,\n    payload: { id, selected }\n});\n\nexport const setSort = (data) => ({\n    type: CHANGE_SORT,\n    payload: data\n});\n\nexport const filterEntities = (key, filterString) => ({\n    type: FILTER_ENTITIES,\n    payload: { key, filterString }\n});\n\nexport const detailSelect = (appName) => ({\n    type: APPLICATION_SELECTED,\n    payload: { appName }\n});\n\nexport const entitiesLoading = (isLoading = true) => ({\n    type: ENTITIES_LOADING,\n    payload: { isLoading }\n});\n\nexport const clearFilters = () => ({\n    type: CLEAR_FILTERS\n});\n\nexport const systemProfile = (itemId) => ({\n    type: ACTION_TYPES.LOAD_SYSTEM_PROFILE,\n    payload: getEntitySystemProfile(itemId, {})\n});\n\nexport const editDisplayName = (id, value) => ({\n    type: ACTION_TYPES.SET_DISPLAY_NAME,\n    payload: hosts.apiHostPatchHost(id, { display_name: value }), // eslint-disable-line camelcase\n    meta: {\n        notifications: {\n            fulfilled: {\n                variant: 'success',\n                title: 'Display name has been updated',\n                dismissable: true\n            }\n        }\n    }\n});\n\nexport const editAnsibleHost = (id, value) => ({\n    type: ACTION_TYPES.SET_ANSIBLE_HOST,\n    payload: hosts.apiHostPatchHost(id, { ansible_host: value }), // eslint-disable-line camelcase\n    meta: {\n        notifications: {\n            fulfilled: {\n                variant: 'success',\n                title: 'Ansible hostname has been updated',\n                dismissable: true\n            }\n        }\n    }\n});\n\nexport const loadTags = (systemId, search, options, count) => ({\n    type: ACTION_TYPES.LOAD_TAGS,\n    payload: getTags(systemId, search, options),\n    meta: {\n        tagsCount: count,\n        systemId\n    }\n});\n\nexport const toggleTagModal = (isOpen) => ({\n    type: TOGGLE_TAG_MODAL,\n    payload: { isOpen }\n});\n\nexport const fetchAllTags = (search, options, getTags = defaultGetAllTags) => ({\n    type: ACTION_TYPES.ALL_TAGS,\n    payload: getTags(search, options),\n    meta: { lastDateRequestTags: Date.now() }\n});\n\nexport const deleteEntity = (systems, displayName) => ({\n    type: ACTION_TYPES.REMOVE_ENTITY,\n    payload: hosts.apiHostDeleteById(systems),\n    meta: {\n        notifications: {\n            fulfilled: {\n                variant: 'success',\n                title: 'Delete operation finished',\n                description: `${displayName} has been successfully removed.`,\n                dismissable: true\n            }\n        },\n        systems\n    }\n});\n\nexport const configChanged = (config) => ({\n    type: CONFIG_CHANGED,\n    payload: config\n});\n\nexport const toggleDrawer = (isOpened) => ({\n    type: TOGGLE_DRAWER,\n    payload: { isOpened }\n});\n","import { SYSTEM_ISSUE_TYPES } from './action-types';\nimport {\n    cves,\n    compliance,\n    advisor,\n    patch\n} from '../api';\n\nexport const getAdvisorData = (systemId) => ({\n    type: SYSTEM_ISSUE_TYPES.LOAD_ADVISOR_RECOMMENDATIONS,\n    payload: advisor(systemId)\n});\n\nexport const getVulnData = (systemId) => ({\n    type: SYSTEM_ISSUE_TYPES.LOAD_APPLICABLE_CVES,\n    payload: cves(systemId)\n});\n\nexport const getPatchData = (systemId) => ({\n    type: SYSTEM_ISSUE_TYPES.LOAD_APPLICABLE_ADVISORIES,\n    payload: patch(systemId)\n});\n\nexport const getComplianceData = (systemId) => ({\n    type: SYSTEM_ISSUE_TYPES.LOAD_COMPLIANCE_POLICIES,\n    payload: compliance(systemId)\n});\n"],"names":["DeleteModal","systemToRemove","handleModalToggle","isModalOpen","currentSytems","onConfirm","systemLabel","Array","isArray","length","display_name","variant","title","className","ouiaId","isOpen","onClose","appendTo","document","getElementsByClassName","body","hasGutter","size","isFilled","location","host","onClick","ActiveSystemProp","PropTypes","id","displayName","propTypes","defaultProps","TagWithDialog","count","loadTags","systemId","e","stopPropagation","onTagClick","connect","dispatch","toggleTagModal","undefined","RenderWrapper","Component","cmp","hideLoader","isRbacEnabled","inventoryRef","store","props","usePermissions","hasAccess","isLoading","ref","customRender","TEXT_FILTER","TEXTUAL_CHIP","TAG_CHIP","STALE_CHIP","REGISTERED_CHIP","OS_CHIP","staleness","label","value","registered","idName","idValue","InventoryContext","createContext","defaultFilters","staleFilter","operatingSystems","filterToGroup","filter","valuesKey","reduce","accGroup","group","key","acc","curr","isSelected","item","meta","tag","tagKey","arrayToSelection","selected","cells","namespace","reduceFilters","filters","oneFilter","textFilter","tagFilters","foundKey","find","Object","keys","includes","loadSystems","options","showTags","getEntities","limitedItems","items","per_page","slice","page","config","hasItems","sortBy","orderDirection","direction","toUpperCase","activeFilters","orderBy","itemsPage","loadEntities","reloadWrapper","event","callback","payload","then","data","isEmpty","check","generateFilter","status","source","tagsFilter","filterbyName","operatingSystem","registeredWithFilter","osFilter","Boolean","TagsModal","customFilters","filterTagsBy","onToggleModal","onApply","getTags","useDispatch","useState","filterBy","setFilterBy","setSelected","perPage","statePagination","setStatePagination","showTagDialog","useSelector","entities","entityDetails","pagination","activeSystemTag","entity","allTagsPagination","shallowEqual","loaded","tagModalLoaded","tags","activeTags","values","some","val","allTags","flatten","map","tagsCount","allTagsTotal","useEffect","fetchTags","fetchAllTags","debouncedFetch","useCallback","debounce","TagModal","tableProps","canSelectAll","rows","width","toggleModal","placeholder","filterValues","onChange","_e","onUpdateData","columns","transforms","cellWidth","onSelect","bulkSelect","INVENTORY_API_BASE","hosts","HostsApi","instance","TagsApi","getEntitySystemProfile","apiHostGetHostSystemProfileById","mapData","facts","rawFacts","flatMap","oneFact","os_release","release","fqdn","mapTags","results","apiHostGetHostTags","row","catch","constructTags","category","tagValue","calculateSystemProfile","systemProfile","osFilterValues","majorOsVersion","operating_system","RHEL","version","eq","system_profile","filtersReducer","hostnameOrId","controller","fields","apiHostGetHostById","cancelToken","token","query","result","mergeArraysByKey","console","error","apiHostGetHostList","search","getAllTags","apiTagGetTags","systemIssuesInstance","cves","Promise","all","impact","low","moderate","important","critical","patch","advisor","compliance","operationName","variables","makeActions","actions","asyncActions","asyncInventory","systemIssues","ACTION_TYPES","keyBy","k","INVENTORY_ACTION_TYPES","SYSTEM_ISSUE_TYPES","CLEAR_NOTIFICATIONS","SELECT_ENTITY","SET_INVENTORY_FILTER","SET_PAGINATION","SET_DISPLAY_NAME","SET_ANSIBLE_HOST","UPDATE_ENTITIES","CHANGE_SORT","FILTER_ENTITIES","APPLICATION_SELECTED","SHOW_ENTITIES","FILTER_SELECT","ENTITIES_LOADING","CLEAR_FILTERS","TOGGLE_TAG_MODAL","CONFIG_CHANGED","TOGGLE_DRAWER","defaultGetEntities","itemIds","isFilterDisabled","name","hideFilters","updatedFilters","lastDateRequest","Date","now","type","updateEntities","filterSelect","selectedItem","loadEntity","selectEntity","setSort","filterEntities","filterString","detailSelect","appName","entitiesLoading","clearFilters","defaultGetAllTags","lastDateRequestTags","configChanged","toggleDrawer","isOpened","getAdvisorData","getVulnData","getPatchData","getComplianceData"],"sourceRoot":""}