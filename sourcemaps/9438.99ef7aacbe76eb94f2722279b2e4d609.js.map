{"version":3,"file":"js/9438.8e82755579245b6318ea.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/outlined-arrow-alt-circle-down-icon.js","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/outlined-arrow-alt-circle-up-icon.js","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/outlined-question-circle-icon.js","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/pencil-alt-icon.js","webpack:///./src/components/GeneralInfo/EditButton/EditButton.js","webpack:///./src/components/GeneralInfo/SystemCard/SystemCard.js","webpack:///./src/components/GeneralInfo/TextInputModal/TextInputModal.js","webpack:///./src/components/GeneralInfo/dataMapper/dataMapper.js"],"sourcesContent":["import { createIcon } from '../createIcon';\n\nexport const OutlinedArrowAltCircleDownIconConfig = {\n  name: 'OutlinedArrowAltCircleDownIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm0 448c-110.5 0-200-89.5-200-200S145.5 56 256 56s200 89.5 200 200-89.5 200-200 200zm-32-316v116h-67c-10.7 0-16 12.9-8.5 20.5l99 99c4.7 4.7 12.3 4.7 17 0l99-99c7.6-7.6 2.2-20.5-8.5-20.5h-67V140c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const OutlinedArrowAltCircleDownIcon = createIcon(OutlinedArrowAltCircleDownIconConfig);\n\nexport default OutlinedArrowAltCircleDownIcon;","import { createIcon } from '../createIcon';\n\nexport const OutlinedArrowAltCircleUpIconConfig = {\n  name: 'OutlinedArrowAltCircleUpIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M256 504c137 0 248-111 248-248S393 8 256 8 8 119 8 256s111 248 248 248zm0-448c110.5 0 200 89.5 200 200s-89.5 200-200 200S56 366.5 56 256 145.5 56 256 56zm20 328h-40c-6.6 0-12-5.4-12-12V256h-67c-10.7 0-16-12.9-8.5-20.5l99-99c4.7-4.7 12.3-4.7 17 0l99 99c7.6 7.6 2.2 20.5-8.5 20.5h-67v116c0 6.6-5.4 12-12 12z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const OutlinedArrowAltCircleUpIcon = createIcon(OutlinedArrowAltCircleUpIconConfig);\n\nexport default OutlinedArrowAltCircleUpIcon;","import { createIcon } from '../createIcon';\n\nexport const OutlinedQuestionCircleIconConfig = {\n  name: 'OutlinedQuestionCircleIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M256 8C119.043 8 8 119.083 8 256c0 136.997 111.043 248 248 248s248-111.003 248-248C504 119.083 392.957 8 256 8zm0 448c-110.532 0-200-89.431-200-200 0-110.495 89.472-200 200-200 110.491 0 200 89.471 200 200 0 110.53-89.431 200-200 200zm107.244-255.2c0 67.052-72.421 68.084-72.421 92.863V300c0 6.627-5.373 12-12 12h-45.647c-6.627 0-12-5.373-12-12v-8.659c0-35.745 27.1-50.034 47.579-61.516 17.561-9.845 28.324-16.541 28.324-29.579 0-17.246-21.999-28.693-39.784-28.693-23.189 0-33.894 10.977-48.942 29.969-4.057 5.12-11.46 6.071-16.666 2.124l-27.824-21.098c-5.107-3.872-6.251-11.066-2.644-16.363C184.846 131.491 214.94 112 261.794 112c49.071 0 101.45 38.304 101.45 88.8zM298 368c0 23.159-18.841 42-42 42s-42-18.841-42-42 18.841-42 42-42 42 18.841 42 42z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const OutlinedQuestionCircleIcon = createIcon(OutlinedQuestionCircleIconConfig);\n\nexport default OutlinedQuestionCircleIcon;","import { createIcon } from '../createIcon';\n\nexport const PencilAltIconConfig = {\n  name: 'PencilAltIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M497.9 142.1l-46.1 46.1c-4.7 4.7-12.3 4.7-17 0l-111-111c-4.7-4.7-4.7-12.3 0-17l46.1-46.1c18.7-18.7 49.1-18.7 67.9 0l60.1 60.1c18.8 18.7 18.8 49.1 0 67.9zM284.2 99.8L21.6 362.4.4 483.9c-2.9 16.4 11.4 30.6 27.8 27.8l121.5-21.3 262.6-262.6c4.7-4.7 4.7-12.3 0-17l-111-111c-4.8-4.7-12.4-4.7-17.1 0zM124.1 339.9c-5.5-5.5-5.5-14.3 0-19.8l154-154c5.5-5.5 14.3-5.5 19.8 0s5.5 14.3 0 19.8l-154 154c-5.5 5.5-14.3 5.5-19.8 0zM88 424h48v36.3l-64.5 11.3-31.1-31.1L51.7 376H88v48z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const PencilAltIcon = createIcon(PencilAltIconConfig);\n\nexport default PencilAltIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { usePermissionsWithContext } from '@redhat-cloud-services/frontend-components-utilities/RBACHook';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\n\nimport { PencilAltIcon } from '@patternfly/react-icons';\nimport {\n  NO_MODIFY_HOST_TOOLTIP_MESSAGE,\n  REQUIRED_PERMISSION_TO_MODIFY_HOST_IN_GROUP,\n} from '../../../constants';\nimport { useSelector } from 'react-redux';\nimport { Button, Tooltip } from '@patternfly/react-core';\n\nconst InnerButton = ({ link, onClick }) => (\n  <Button\n    component=\"a\"\n    href={`${window.location.href}/${link}`}\n    onClick={onClick}\n    className=\"ins-c-inventory__detail--action\"\n    aria-label=\"Edit\"\n    variant=\"link\"\n  >\n    <PencilAltIcon />\n  </Button>\n);\n\nInnerButton.propTypes = {\n  link: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nconst EditButtonUnknownPermissions = (props) => {\n  const entity = useSelector(({ entityDetails }) => entityDetails?.entity);\n\n  const { hasAccess: canEditHost } = usePermissionsWithContext([\n    REQUIRED_PERMISSION_TO_MODIFY_HOST_IN_GROUP(\n      entity?.groups?.[0]?.id ?? null // null stands for ungroupped hosts\n    ),\n  ]);\n\n  if (!canEditHost) {\n    return (\n      <Tooltip content={NO_MODIFY_HOST_TOOLTIP_MESSAGE}>\n        <Button isAriaDisabled aria-label=\"Edit\" variant=\"plain\">\n          <PencilAltIcon />\n        </Button>\n      </Tooltip>\n    );\n  }\n\n  return <InnerButton {...props} />;\n};\n\nEditButtonUnknownPermissions.propTypes = {\n  link: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nconst EditButtonWrapper = ({ writePermissions, ...props }) => {\n  const { isProd } = useChrome();\n\n  if (isProd?.() || writePermissions) {\n    return <InnerButton {...props} />;\n  }\n\n  if (typeof writePermissions !== 'boolean') {\n    return <EditButtonUnknownPermissions {...props} />;\n  }\n\n  return (\n    <Tooltip content={NO_MODIFY_HOST_TOOLTIP_MESSAGE}>\n      <Button isAriaDisabled aria-label=\"Edit\" variant=\"plain\">\n        <PencilAltIcon />\n      </Button>\n    </Tooltip>\n  );\n};\n\nEditButtonWrapper.propTypes = {\n  writePermissions: PropTypes.bool,\n};\n\nexport default EditButtonWrapper;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport LoadingCard from '../LoadingCard';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport { propertiesSelector } from '../selectors';\nimport { editAnsibleHost, editDisplayName } from '../../../store/actions';\nimport TextInputModal from '../TextInputModal';\nimport { Button, Popover } from '@patternfly/react-core';\nimport EditButton from '../EditButton';\nimport { generalMapper } from '../dataMapper';\nimport { extraShape } from '../../../constants';\n\nconst TitleWithPopover = ({ title, content }) => (\n  <React.Fragment>\n    <span>{title}</span>\n    <Popover\n      headerContent={<div>{title}</div>}\n      bodyContent={<div>{content}</div>}\n    >\n      <Button\n        variant=\"plain\"\n        aria-label={`Action for ${title}`}\n        className=\"ins-active-general_information__popover-icon\"\n      >\n        <OutlinedQuestionCircleIcon />\n      </Button>\n    </Popover>\n  </React.Fragment>\n);\n\nclass SystemCardCore extends Component {\n  state = {\n    isDisplayNameModalOpen: false,\n    isAnsibleHostModalOpen: false,\n  };\n\n  onCancel = () => {\n    this.setState({\n      isDisplayNameModalOpen: false,\n      isAnsibleHostModalOpen: false,\n    });\n  };\n\n  onSubmit = (fn, origValue) => (value) => {\n    const { entity } = this.props;\n    fn(entity.id, value, origValue);\n    this.onCancel();\n  };\n\n  onShowDisplayModal = (event) => {\n    event.preventDefault();\n    this.setState({\n      isDisplayNameModalOpen: true,\n    });\n  };\n\n  onShowAnsibleModal = (event) => {\n    event.preventDefault();\n    this.setState({\n      isAnsibleHostModalOpen: true,\n    });\n  };\n\n  getAnsibleHost = () => {\n    const { entity } = this.props;\n    return entity.ansible_host || entity.fqdn || entity.id;\n  };\n\n  render() {\n    const {\n      detailLoaded,\n      entity,\n      properties,\n      setDisplayName,\n      setAnsibleHost,\n      writePermissions,\n      handleClick,\n      hasHostName,\n      hasDisplayName,\n      hasAnsibleHostname,\n      hasSAP,\n      hasSystemPurpose,\n      hasCPUs,\n      hasSockets,\n      hasCores,\n      hasCPUFlags,\n      hasRAM,\n      extra,\n    } = this.props;\n    const { isDisplayNameModalOpen, isAnsibleHostModalOpen } = this.state;\n    return (\n      <Fragment>\n        <LoadingCard\n          title=\"System properties\"\n          isLoading={!detailLoaded}\n          items={[\n            ...(hasHostName\n              ? [\n                  {\n                    title: (\n                      <TitleWithPopover\n                        title=\"Host name\"\n                        content=\"Name imported from the system.\"\n                      />\n                    ),\n                    value: entity.fqdn,\n                    size: 'md',\n                    customClass: 'sentry-mask data-hj-suppress',\n                  },\n                ]\n              : []),\n            ...(hasDisplayName\n              ? [\n                  {\n                    title: (\n                      <TitleWithPopover\n                        title=\"Display name\"\n                        content=\"System name displayed in an inventory list.\"\n                      />\n                    ),\n                    value: (\n                      <Fragment>\n                        {entity.display_name}\n                        <EditButton\n                          writePermissions={writePermissions}\n                          link=\"display_name\"\n                          onClick={this.onShowDisplayModal}\n                        />\n                      </Fragment>\n                    ),\n                    size: 'md',\n                    customClass: 'sentry-mask data-hj-suppress',\n                  },\n                ]\n              : []),\n            ...(hasAnsibleHostname\n              ? [\n                  {\n                    title: (\n                      <TitleWithPopover\n                        title=\"Ansible hostname\"\n                        content=\"Hostname that is used in playbooks by Remediations.\"\n                      />\n                    ),\n                    value: (\n                      <Fragment>\n                        {this.getAnsibleHost()}\n                        <EditButton\n                          writePermissions={writePermissions}\n                          link=\"ansible_name\"\n                          onClick={this.onShowAnsibleModal}\n                        />\n                      </Fragment>\n                    ),\n                    size: 'md',\n                    customClass: 'sentry-mask data-hj-suppress',\n                  },\n                ]\n              : []),\n            ...(hasSAP\n              ? [\n                  {\n                    title: 'SAP',\n                    value: properties.sapIds?.length,\n                    singular: 'identifier',\n                    target: 'sap_sids',\n                    onClick: () => {\n                      handleClick(\n                        'SAP IDs (SID)',\n                        generalMapper(properties.sapIds, 'SID')\n                      );\n                    },\n                  },\n                ]\n              : []),\n            ...(hasSystemPurpose\n              ? [{ title: 'System purpose', value: properties.systemPurpose }]\n              : []),\n            ...(hasCPUs\n              ? [{ title: 'Number of CPUs', value: properties.cpuNumber }]\n              : []),\n            ...(hasSockets\n              ? [{ title: 'Sockets', value: properties.sockets }]\n              : []),\n            ...(hasCores\n              ? [\n                  {\n                    title: 'Cores per socket',\n                    value: properties.coresPerSocket,\n                  },\n                ]\n              : []),\n            ...(hasCPUFlags\n              ? [\n                  {\n                    title: 'CPU flags',\n                    value: properties?.cpuFlags?.length,\n                    singular: 'flag',\n                    target: 'flag',\n                    onClick: () =>\n                      handleClick(\n                        'CPU flags',\n                        generalMapper(properties.cpuFlags, 'flag name')\n                      ),\n                  },\n                ]\n              : []),\n            ...(hasRAM ? [{ title: 'RAM', value: properties.ramSize }] : []),\n            ...extra.map(({ onClick, ...item }) => ({\n              ...item,\n              ...(onClick && { onClick: (e) => onClick(e, handleClick) }),\n            })),\n          ]}\n        />\n        <TextInputModal\n          isOpen={isDisplayNameModalOpen}\n          title=\"Edit display name\"\n          value={entity && entity.display_name}\n          ariaLabel=\"Host inventory display name\"\n          modalOuiaId=\"edit-display-name-modal\"\n          cancelOuiaId=\"cancel-edit-display-name\"\n          confirmOuiaId=\"confirm-edit-display-name\"\n          inputOuiaId=\"input-edit-display-name\"\n          onCancel={this.onCancel}\n          onSubmit={this.onSubmit(\n            setDisplayName,\n            entity && entity.display_name\n          )}\n          className=\"sentry-mask data-hj-suppress\"\n        />\n        <TextInputModal\n          isOpen={isAnsibleHostModalOpen}\n          title=\"Edit Ansible host\"\n          value={entity && this.getAnsibleHost()}\n          ariaLabel=\"Ansible host\"\n          modalOuiaId=\"edit-ansible-name-modal\"\n          cancelOuiaId=\"cancel-edit-ansible-name\"\n          confirmOuiaId=\"confirm-edit-ansible-name\"\n          inputOuiaId=\"input-edit-ansible-name\"\n          onCancel={this.onCancel}\n          onSubmit={this.onSubmit(\n            setAnsibleHost,\n            entity && this.getAnsibleHost()\n          )}\n          className=\"sentry-mask data-hj-suppress\"\n        />\n      </Fragment>\n    );\n  }\n}\n\nSystemCardCore.propTypes = {\n  detailLoaded: PropTypes.bool,\n  entity: PropTypes.shape({\n    // eslint-disable-next-line camelcase\n    display_name: PropTypes.string,\n    // eslint-disable-next-line camelcase\n    ansible_host: PropTypes.string,\n    fqdn: PropTypes.string,\n    id: PropTypes.string,\n  }),\n  properties: PropTypes.shape({\n    cpuNumber: PropTypes.number,\n    sockets: PropTypes.number,\n    coresPerSocket: PropTypes.number,\n    ramSize: PropTypes.string,\n    storage: PropTypes.arrayOf(\n      PropTypes.shape({\n        device: PropTypes.string,\n        // eslint-disable-next-line camelcase\n        mount_point: PropTypes.string,\n        options: PropTypes.shape({}),\n        type: PropTypes.string,\n      })\n    ),\n    sapIds: PropTypes.arrayOf(PropTypes.string),\n    systemPurpose: PropTypes.string,\n    cpuFlags: PropTypes.array,\n  }),\n  setDisplayName: PropTypes.func,\n  setAnsibleHost: PropTypes.func,\n  writePermissions: PropTypes.bool,\n  handleClick: PropTypes.func,\n  hasHostName: PropTypes.bool,\n  hasDisplayName: PropTypes.bool,\n  hasAnsibleHostname: PropTypes.bool,\n  hasSAP: PropTypes.bool,\n  hasSystemPurpose: PropTypes.bool,\n  hasCPUs: PropTypes.bool,\n  hasSockets: PropTypes.bool,\n  hasCores: PropTypes.bool,\n  hasCPUFlags: PropTypes.bool,\n  hasRAM: PropTypes.bool,\n  extra: PropTypes.arrayOf(extraShape),\n};\nSystemCardCore.defaultProps = {\n  detailLoaded: false,\n  entity: {},\n  properties: {},\n  hasHostName: true,\n  hasDisplayName: true,\n  hasAnsibleHostname: true,\n  hasSAP: true,\n  hasSystemPurpose: true,\n  hasCPUs: true,\n  hasSockets: true,\n  hasCores: true,\n  hasCPUFlags: true,\n  hasRAM: true,\n  extra: [],\n};\n\nTitleWithPopover.propTypes = {\n  title: PropTypes.string.isRequired,\n  content: PropTypes.string.isRequired,\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setDisplayName: (id, value, origValue) => {\n      dispatch(editDisplayName(id, value, origValue));\n    },\n\n    setAnsibleHost: (id, value, origValue) => {\n      dispatch(editAnsibleHost(id, value, origValue));\n    },\n  };\n}\n\nexport const SystemCard = connect(\n  ({ entityDetails: { entity }, systemProfileStore: { systemProfile } }) => ({\n    entity,\n    detailLoaded: systemProfile && systemProfile.loaded,\n    properties: propertiesSelector(systemProfile, entity),\n  }),\n  mapDispatchToProps\n)(SystemCardCore);\n\nSystemCard.propTypes = SystemCardCore.propTypes;\nSystemCard.defaultProps = SystemCardCore.defaultProps;\n\nexport default SystemCard;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Button, Modal, TextInput } from '@patternfly/react-core';\n\nexport default class TextInputModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (!props.isOpen) {\n      return { value: undefined };\n    }\n\n    if (state.value !== undefined) {\n      return null;\n    }\n\n    return {\n      value: props.value || '',\n    };\n  }\n\n  render() {\n    const {\n      title,\n      isOpen,\n      onCancel,\n      onSubmit,\n      ariaLabel,\n      modalOuiaId,\n      cancelOuiaId,\n      confirmOuiaId,\n      inputOuiaId,\n    } = this.props;\n    const { value } = this.state;\n\n    return (\n      <Modal\n        variant=\"small\"\n        title={title}\n        className=\"ins-c-inventory__detail--edit\"\n        aria-label={ariaLabel ? `${ariaLabel} - modal` : 'input modal'}\n        ouiaId={modalOuiaId}\n        isOpen={isOpen}\n        onClose={(event) => onCancel(event)}\n        actions={[\n          <Button\n            key=\"confirm\"\n            data-action=\"confirm\"\n            variant=\"primary\"\n            onClick={() => onSubmit(this.state.value)}\n            ouiaId={confirmOuiaId}\n            isDisabled={this.props.value === this.state.value}\n          >\n            Save\n          </Button>,\n          <Button\n            key=\"cancel\"\n            data-action=\"cancel\"\n            variant=\"link\"\n            onClick={onCancel}\n            ouiaId={cancelOuiaId}\n          >\n            Cancel\n          </Button>,\n        ]}\n      >\n        <TextInput\n          value={value}\n          type=\"text\"\n          ouiaId={inputOuiaId}\n          onChange={(value) => this.setState({ value })}\n          aria-label={ariaLabel}\n        />\n      </Modal>\n    );\n  }\n}\n\nTextInputModal.propTypes = {\n  title: PropTypes.string,\n  isOpen: PropTypes.bool,\n  onCancel: PropTypes.func,\n  onSubmit: PropTypes.func,\n  ariaLabel: PropTypes.string,\n  modalOuiaId: PropTypes.string,\n  cancelOuiaId: PropTypes.string,\n  confirmOuiaId: PropTypes.string,\n  inputOuiaId: PropTypes.string,\n  value: PropTypes.string,\n};\n\nTextInputModal.defaultProps = {\n  onCancel: () => undefined,\n  onSubmit: () => undefined,\n  isOpen: false,\n  title: '',\n  ariaLabel: 'input text',\n};\n","/* eslint-disable camelcase */\n\nimport React from 'react';\nimport {\n  CheckCircleIcon,\n  OutlinedArrowAltCircleDownIcon,\n  OutlinedArrowAltCircleUpIcon,\n  OutlinedQuestionCircleIcon,\n  TimesIcon,\n} from '@patternfly/react-icons';\nimport { sortable } from '@patternfly/react-table';\nimport { Tooltip } from '@patternfly/react-core';\n\nexport const statusHelper = {\n  UP: (\n    <Tooltip content=\"Service is running\">\n      <OutlinedArrowAltCircleUpIcon className=\"ins-c-inventory__detail--up\" />\n    </Tooltip>\n  ),\n  DOWN: (\n    <Tooltip content=\"Service has stopped\">\n      <OutlinedArrowAltCircleDownIcon className=\"ins-c-inventory__detail--down\" />\n    </Tooltip>\n  ),\n};\n\nexport const enabledHelper = {\n  true: (\n    <Tooltip content=\"Source enabled\">\n      <CheckCircleIcon className=\"ins-c-inventory__detail--enabled\" />\n    </Tooltip>\n  ),\n  false: (\n    <Tooltip content=\"Source disabled\">\n      <TimesIcon className=\"ins-c-inventory__detail--disabled\" />\n    </Tooltip>\n  ),\n};\n\nexport const diskMapper = (devices = []) => ({\n  cells: [\n    {\n      title: 'Device',\n      transforms: [sortable],\n    },\n    {\n      title: 'Label',\n      transforms: [sortable],\n    },\n    {\n      title: 'Mount point',\n      transforms: [sortable],\n    },\n    {\n      title: 'Type',\n      transforms: [sortable],\n    },\n  ],\n  rows: devices.map(({ device, label, mountpoint, options, mounttype }) => {\n    const calculatedOptions = (options && options.options) || options;\n    return {\n      isOpen: false,\n      child: (\n        <div>\n          {calculatedOptions &&\n            Object.entries(calculatedOptions.value || calculatedOptions)\n              .map(([oneKey, option]) => `${oneKey}=${option.value || option}`)\n              .join(',  ')}\n        </div>\n      ),\n      cells: [\n        (device && device.value) || device,\n        label,\n        (mountpoint && mountpoint.value) || mountpoint,\n        (mounttype && mounttype.value) || mounttype,\n      ],\n    };\n  }),\n  expandable: true,\n});\n\nexport const productsMapper = (products = []) => ({\n  cells: [\n    {\n      title: 'Name',\n      transforms: [sortable],\n    },\n    'Status',\n  ],\n  rows: products.map((product) => [\n    product.name,\n    {\n      title: statusHelper[product.status] || (\n        <Tooltip content=\"Unknown service status\">\n          <OutlinedQuestionCircleIcon className=\"ins-c-inventory__detail--unknown\" />\n        </Tooltip>\n      ),\n    },\n  ]),\n});\n\nexport const interfaceMapper = (data = []) => ({\n  cells: [\n    {\n      title: 'MAC address',\n      transforms: [sortable],\n    },\n    {\n      title: 'MTU',\n      transforms: [sortable],\n    },\n    {\n      title: 'Name',\n      transforms: [sortable],\n    },\n    'State',\n    {\n      title: 'Type',\n      transforms: [sortable],\n    },\n  ],\n  rows: data.map((item) => [\n    item.mac_address,\n    item.mtu,\n    item.name,\n    {\n      title: statusHelper[item.state] || (\n        <Tooltip content=\"Unknown service status\">\n          <OutlinedQuestionCircleIcon className=\"ins-c-inventory__detail--unknown\" />\n        </Tooltip>\n      ),\n    },\n    item.type,\n  ]),\n});\n\nexport const repositoriesMapper = (\n  { enabled, disabled } = { enabled: [], disabled: [] }\n) => ({\n  cells: [\n    {\n      title: 'Name',\n      transforms: [sortable],\n    },\n    {\n      title: 'Enabled',\n      transforms: [sortable],\n    },\n    {\n      title: 'GPG check',\n      transforms: [sortable],\n    },\n  ],\n  rows: [...enabled, ...disabled].map((repository) => [\n    {\n      title: repository.name,\n      sortValue: repository.name,\n    },\n    {\n      title: enabledHelper[Boolean(repository.enabled)],\n      sortValue: `${repository.enabled}`,\n    },\n    {\n      title: enabledHelper[Boolean(repository.gpgcheck)],\n      sortValue: `${repository.gpgcheck}`,\n    },\n  ]),\n  filters: [\n    { type: 'textual' },\n    {\n      type: 'checkbox',\n      options: [\n        { label: 'Is enabled', value: 'true' },\n        { label: 'Not enabled', value: 'false' },\n      ],\n    },\n    {\n      type: 'checkbox',\n      options: [\n        { label: 'Is enabled', value: 'true' },\n        { label: 'Not enabled', value: 'false' },\n      ],\n    },\n  ],\n});\n\nexport const generalMapper = (data = [], title = '') => ({\n  cells: [\n    {\n      title,\n      transforms: [sortable],\n    },\n  ],\n  rows: data.map((item) => [item]),\n  filters: [{ type: 'textual' }],\n});\n"],"names":["OutlinedArrowAltCircleDownIconConfig","name","height","width","svgPath","yOffset","xOffset","OutlinedArrowAltCircleDownIcon","OutlinedArrowAltCircleUpIconConfig","OutlinedArrowAltCircleUpIcon","OutlinedQuestionCircleIconConfig","OutlinedQuestionCircleIcon","PencilAltIconConfig","PencilAltIcon","InnerButton","link","onClick","Button","component","href","window","location","className","variant","propTypes","PropTypes","isRequired","EditButtonUnknownPermissions","props","entity","useSelector","entityDetails","usePermissionsWithContext","REQUIRED_PERMISSION_TO_MODIFY_HOST_IN_GROUP","groups","id","hasAccess","Tooltip","content","NO_MODIFY_HOST_TOOLTIP_MESSAGE","isAriaDisabled","EditButtonWrapper","writePermissions","isProd","useChrome","TitleWithPopover","title","Popover","headerContent","bodyContent","SystemCardCore","isDisplayNameModalOpen","isAnsibleHostModalOpen","setState","fn","origValue","value","onCancel","event","preventDefault","ansible_host","fqdn","this","detailLoaded","properties","setDisplayName","setAnsibleHost","handleClick","hasHostName","hasDisplayName","hasAnsibleHostname","hasSAP","hasSystemPurpose","hasCPUs","hasSockets","hasCores","hasCPUFlags","hasRAM","extra","state","Fragment","LoadingCard","isLoading","items","size","customClass","display_name","EditButton","onShowDisplayModal","getAnsibleHost","onShowAnsibleModal","sapIds","length","singular","target","generalMapper","systemPurpose","cpuNumber","sockets","coresPerSocket","cpuFlags","ramSize","map","e","TextInputModal","isOpen","ariaLabel","modalOuiaId","cancelOuiaId","confirmOuiaId","inputOuiaId","onSubmit","Component","storage","device","mount_point","options","type","extraShape","defaultProps","SystemCard","connect","systemProfile","systemProfileStore","loaded","propertiesSelector","dispatch","editDisplayName","editAnsibleHost","ouiaId","onClose","actions","key","isDisabled","onChange","undefined","statusHelper","UP","DOWN","enabledHelper","true","false","diskMapper","devices","cells","transforms","sortable","rows","label","mountpoint","mounttype","calculatedOptions","child","Object","entries","oneKey","option","join","expandable","productsMapper","products","product","status","interfaceMapper","data","item","mac_address","mtu","repositoriesMapper","enabled","disabled","repository","sortValue","Boolean","gpgcheck","filters"],"sourceRoot":""}